ФЕДЕРАЛЬНОЕ АГЕНТСТВО ПО ОБРАЗОВАНИЮ
ГОСУДАРСТВЕННОЕ ОБРАЗОВАТЕЛЬНОЕ
УЧРЕЖДЕНИЕ
ВЫСШЕГО ПРОФЕССИОНАЛЬНОГО ОБРАЗОВАНИЯ
«ВОРОНЕЖСКИЙ ГОСУДАРСТВЕННЫЙ
УНИВЕРСИТЕТ»
ЭЛЕМЕНТЫ ТЕОРИИ ЧИСЕЛ
И КРИПТОЗАЩИТА
Учебное пособие
Составители:
Б. Н. Воронков,
А. С. Щеголеватых
Издательско-полиграфический центр
Воронежского государственного университета
2008
2
Утверждено научно-методическим советом факультета прикладной мате-
матики, информатики и механики 27 февраля 2008 г., протокол № 6
Рецензент канд. физ.-мат. наук, доц. К. П. Лазарев
Учебное пособие подготовлено на кафедре технической кибернетики и ав-
томатического регулирования факультета прикладной математики, инфор-
матики и механики Воронежского государственного университета.
Рекомендуется для студентов 4-го курса дневного отделения и 4-го курса
вечернего отделения.
Для специальности 010501 — Прикладная математика и информатика
3
СОДЕРЖАНИЕ
Предисловие…………………………………………....……….. 5
1. Основные понятия и определения……………………………….. 6
2. Элементы теории чисел и модулярная арифметика…………….. 10
2.1. Малая теорема Ферма. Теорема Эйлера …………………... 15
2.2. Квадратичные вычеты и закон взаимности.……………….. 21
2.3. Вычисление обратных по модулю величин………………... 24
2.4. Сравнение арифметических операций по их трудоемкости...... 26
2.5. Нахождение простых чисел…………………………………. 32
3. Формальное определение криптосистемы……………………..... 35
4. Криптосистема Эль Гамаля……………………………………..... 36
5. Криптосистема RSA (R. Rivest, A. Shamir, L. Adleman)……...… 37
6. Методы распределения криптографических ключей…….……... 43
6.1. Распределение секретных ключей с обеспечением
конфиденциальности и аутентификации…………………...….... 48
7. Криптография с использованием эллиптических кривых…….... 52
7.1. Аналог обмена ключами по схеме Диффи-Хеллмана ……... 59
7.2. Протокол обмена ключами по схеме Месси-Омуры…..….. 60
7.3. Протокол распределения ключей
Менезеса-Кью-Ванстона (MQV-протокол)…………………… 61
7.4. Протокол Эль Гамаля для криптосистемы
с использованием эллиптических кривых…....................……... 62
7.5. Обоснование протоколов с использованием
модулярной арифметики……………………………………......... 63
8. Цифровая подпись………………………………………..……….. 65
8.1. Стандарт DSS, алгоритм DSA………………………………. 65
8.2. Обобщенная схема цифровой подписи Эль Гамаля……….. 67
8.3. Схема цифровой подписи Эль Гамаля с возвратом сооб-
щения……………………………………………………...………. 68
4
8.4. Цифровая подпись с использованием точек
эллиптической кривой………………….……………………...... 69
9. Модели атаки нарушителя………………………………………... 70
10. Модель несанкционированной подмены передаваемой
информации…………………...……………………………………… 71
Библиография…………………………………………………… 87
5
Предисловие
Для современного этапа научно-технического развития характерен
стремительный рост потоков передаваемой информации. В связи с этим
возникает острая необходимость в совершенствовании традиционных те-
лекоммуникационных систем и создании новых, более совершенных, спо-
собных увеличить быстродействие используемых технических устройств,
повысить безопасность и обеспечить экономичность самого процесса об-
мена информацией.
Информация превратилась в объект, на защиту которого направлены
основные усилия и ресурсы многомиллионной армии математиков, про-
граммистов, радиофизиков и инженеров. Методы защиты информации ди-
намически развиваются, усложняются и постепенно оформляются в от-
дельную отрасль информационно-комммуникационных технологий.
Криптографию и защиту сетей в настоящее время следует рассмат-
ривать как вполне сформировавшиеся дисциплины, на основе которых мо-
гут разрабатываться или уже созданы реальные законченные приложения,
обеспечивающие сетевую защиту.
Математической основой большинства современных методов защи-
ты информации является алгебраическая теория чисел. Поэтому в данном
пособии приведены основы теории чисел и показана ее связь с созданием
защищенных коммуникационных сетей и устройств обработки информации.
6
1. Основные понятия и определения
Источники основных понятий и определений :
ГОСТ Р 50922-96 Защита информации: термины и определения. Гос-
стандарт России.
ГОСТ Р 51583-00 Защита информации. Порядок создания автоматизи-
рованных систем в защищенном исполнении. Общие положения. Госстан-
дарт России.
ГОСТ Р 51624-00 Защита информации. Автоматизированные системы
в защищенном исполнении. Общие требования. Госстандарт России.
ОСТ 45.127-99. Система обеспечения информационной безопасности
Взаимоувязанной сети связи Российской Федерации. Термины и определения.
Информация — сведения о лицах, предметах, фактах, событиях, яв-
лениях и процессах независимо от формы их представления.
Сообщение — информация, представленная в определенной форме.
Формы представления разнообразны: письменный текст, речь, музыка,
графическое изображение, электромагнитное поле, взаимное расположе-
ние предметов в пространстве и т. д.
Дискретные сообщения — сообщения, вырабатываемые дискрет-
ными источниками, среди которых выделяются источники цифровой ин-
формации.
Дискретная информация — информация, зафиксированная в дис-
кретном сообщении.
Для передачи сообщений от источника к получателю необходим ка-
кой-либо переносчик, обладающий достаточной устойчивостью своих па-
раметров в пространстве и во времени, чтобы имелась возможность его
обнаружения на приемной стороне.
Сигнал — переносчик, параметры которого находятся в однозначном
информационном соответствии с сообщением.
Канал связи — физическая среда между источником и получателем
информации совместно с совокупностью технических устройств и субъек-
тов, обеспечивающих передачу сообщений от источника информации к
получателю.
Информационная безопасность — состояние информации, инфор-
мационных ресурсов и информационных систем, при которой, с требуемой
вероятностью, обеспечивается защита информации.
Информационные ресурсы — документы, массивы документов (ар-
хивы, фонды), программы для ЭВМ, базы данных, существующие отдель-
но или в составе информационных систем.
Защита информации — деятельность, направленная на предотвра-
щение утечки защищаемой информации, несанкционированных и непред-
намеренных воздействий на защищаемую информацию. Или по-
другому — совокупность технических и организационных мер, обеспечи-
вающих информационную безопасность.
7
Информационная система — информационно упорядоченная сово-
купность документов и информационных технологий, в том числе с ис-
пользованием средств вычислительной техники и связи, реализующих ин-
формационные процессы.
Закрытая информация содержит государственную, коммерческую
или иную тайну.
Секретная информация содержит государственную тайну.
Конфиденциальная информация — служебная, профессиональная,
промышленная, коммерческая или иная информация, правовой режим ко-
торой устанавливается ее собственниками на основе законов о коммерче-
ской, профессиональной тайне, государственной службе и других законо-
дательных актов.
Защищаемая информация — информация, являющаяся предметом
собственности и подлежащая защите в соответствии с требованиями пра-
вовых документов или требованиями, устанавливаемыми собственниками
информации.
Утечка информации — неконтролируемое распространение защи-
щаемой информации.
Утечки трех видов:
а) разглашение,
б) несанкционированный доступ к информации,
в) разведка.
Уничтожение информации — утрата информации при невозмож-
ности ее восстановления.
Блокировка информации — невозможность ее использования при
сохранности.
Модификация информации — изменение ее содержания по сравне-
нию с первоначальной.
Цена информации — полезность информации для участников ин-
формационного рынка.
Ценность информации — полезность информации для ее владельца
(пользователя).
Угрозы информации:
а) нарушение конфиденциальности — потеря ценности информации
при ее раскрытии;
б) нарушение целостности — потеря ценности информации при ее
модификации или уничтожении;
в) нарушение доступности — потеря ценности информации при не-
возможности ее оперативного использования;
г) нарушение устойчивости к ошибкам — потеря ценности информа-
ции при сбоях в информационных системах.
8
Эффективность защиты информации — мера соответствия уров-
ня информационной безопасности требованиям при заданном ресурсе на ее
защиту.
Политика безопасности — набор документированных норм, пра-
вил и практических приемов, регулирующих управление, защиту и распре-
деление информации ограниченного доступа.
Структурная схема системы связи представлена на рис. 1.
Рис. 1. Общая структурная схема системы связи: 1 — источник информации;
2 — передатчик; 3 — приемник; 4 — адресат (получатель); 5 — источник шума и помех.
Телекоммуникационная система — система связи, в которой пере-
нос информации осуществляется сигналами, однозначно отображающими
сообщения, при этом сообщение является формой представления инфор-
мации и задает закон изменения, т.е. модуляции тех или иных информаци-
онных признаков сигнала (амплитуды, фазы, частоты).
Криптография (наука о шифровании) — раздел прикладной матема-
тики, в котором изучаются модели, методы, алгоритмы, программные и
аппаратные средства преобразования информации (шифрования) в целях
сокрытия ее содержания, предотвращения, видоизменения или несанкцио-
нированного использования.
Криптосистема — система, реализованная программно, аппаратно
или программно-аппаратно и осуществляющая криптографическое преоб-
разование информации.
Криптоанализ (наука о дешифрации) — раздел прикладной матема-
тики, в котором изучаются модели, методы, алгоритмы, программные и
аппаратные средства анализа криптосистемы или ее входных и выходных
сигналов с целью извлечения конфиденциальных параметров, включая от-
крытый текст.
Совокупность криптографии и криптоанализа образует новую нау-
ку — криптологию
1 2
5
3 4
Канал (среда)
9
Текст — набор элементов алфавита имеющий определенный логи-
ческий смысл. Открытый текст (ОТ) — исходное, шифруемое сообщение.
Ключ — информация, необходимая для беспрепятственного шифро-
вания или расшифрования текстов.
Обычно ключ — последовательность символов того же алфавита, в
котором набрано сообщение. Пространство ключей — набор всевозмож-
ных значений ключа.
Дешифрование — нахождение ключа или открытого текста на осно-
ве шифрованного текста.
Расшифрование — нахождение открытого текста на основе извест-
ного ключа и шифра.
Криптостойкость –— характеристика шифра, определяющая его
стойкость к дешифрации. Часто криптостойкость измеряется количеством
операций, необходимых для перебора всех возможных ключей, или интер-
валом времени, необходимого для дешифрования (MIPS-годы).
MIPS (Million Instructions Per Second) — миллион инструкций в
секунду.
Криптограмма — шифрованный текст (ШТ).
Основная идея шифрования — скрытие смысла передаваемого со-
общения.
Выделяют два класса криптосистем:
● симметричные (одноключевые) криптосистемы;
● асимметричные (двухключевые) криптосистемы.
Методы симметричного шифрования: 1. Перестановки. 2. Подстановки.
3. Гаммирование. 4. Аналитическое преобразование шифруемых данных.
Под гаммированием понимают процесс наложения по определенному
закону гаммы шифра на открытые данные. Гамма шифра — это псевдослу-
чайная последовательность, выработанная по заданному алгоритму для за-
шифрования открытого текста и расшифрования зашифрованных данных.
Рис. 2. Структурная схема передачи шифрованных сообщений: 1 — отправи-
тель; 2 — устройство шифрования; 3 — устройство расшифрования; 4 — получатель;
5 — перехватчик (злоумышленник); 6 –– канал связи; 7 –– генератор ключей.
1 2
5
6 3 4
7
10
Алфавит — конечное множество используемых для шифрования
знаков.
Z33 — 32-буквенный русский алфавит и пробел.
Z256 — расширенный ASCII (American Standard Code for Information
Interchange – Американский стандарт кодирования для обмена информаци-
ей (KOИ8)).
Z2 — {0;1}.
Иногда смешивают два понятия: шифрование и кодирование. Для
шифрования надо знать открытый текст, алгоритм шифрования и секрет-
ный ключ. При кодировании нет ничего секретного, есть только замена
символов открытого текста или слов на заранее определенные символы.
Методы кодирования направлены на то, чтобы представить открытый
текст в более удобном виде для передачи по телекоммуникационным кана-
лам, уменьшения длины сообщения (архивация), повышения помехоустой-
чивости (обнаружение и исправление ошибок) и т. д. В принципе кодиро-
вание, конечно же, можно рассматривать как шифр замены, для которого
«набор» возможных ключей состоит только из одного ключа (например,
буква «а» в азбуке Морзе всегда кодируется знаком « · » – и это не являет-
ся секретом).
2. Элементы теории чисел и модулярная арифметика [1; 7; 10]
При разработке алгоритмов шифрования используется ряд понятий
теории чисел и модулярной арифметики.
Теория чисел, или высшая арифметика, изучает свойства целых чисел.
Как наука она оформилась, начиная с открытий П. Ферма. Под целыми
числами понимают числа …, -4, -3, -2, -1, 0, 1, 2, 3, 4, … Особое место сре-
ди целых чисел занимают натуральные числа – целые положительные
числа 1, 2, 3, 4, …
Высшая арифметика — дедуктивная наука, основанная на законах
арифметики. Целые числа образуют бесконечный ряд (множество) Z, где
выполняются основные арифметические операции: сложение, вычитание и
умножение. Частное от деления целых чисел не всегда является целым
числом. Поэтому множество целых чисел образует кольцо.
Мы назовём одно число a делителем другого числа b, если
b = a ⋅ c для некоторого числа c . Примем обозначение a /b, означающее,
что a делит b нацело, или a является делителем b. Если число a не явля-
ется делителем другого числа b, то используем обозначение: a не делит b.
Натуральное число p называется простым, если p > 1 и не имеет
положительных делителей, отличных от 1 и p. Натуральное число N назы-
вается составным, если N > 1 и имеет, по крайней мере, один положи-
тельный делитель, отличный от 1 и N.
11
Основная теорема арифметики. Всякое натуральное число N, кро-
ме 1, можно представить как произведение простых множителей
N = p1 · p2 · p3 · p4 · … · pn, n > 1, (2.1)
причем единственным образом, с точностью до порядка следования со-
множителей.
Среди простых сомножителей разложения (2.1) могут быть и рав-
ные. Если обозначить различные из них p1, p2,…, pk и допустить, что они
встречаются в разложении соответственно α1,α2 ,...,αk раз, то разложе-
ние (2.1) преобразуется к виду
k
N p p pk= α1 ⋅ α2 ⋅...⋅ α
1 2
и называется каноническим разложением.
Общий делитель нескольких целых чисел — это число, на которое
делятся все данные числа без остатка. Наибольший из делителей называет-
ся наибольшим общим делителем (НОД). Форма записи НОД такая:
(a,b) = c , где c — НОД чисел a и b.
Единица не является ни простым, ни составным числом, так как ина-
че не удастся доказать основную теорему арифметики.
Взаимно простые числа — это два или несколько целых чисел, наи-
больший общий делитель которых равен единице, т.е. (a,b) = 1, при этом
для любых неотрицательных чисел m и n справедливо: (am,bn ) =1.
Находят НОД обычно разложением чисел на простые множители с
последующим нахождением произведения одинаковых сомножителей.
Процесс разложения чисел на простые множители часто занимает слиш-
ком много времени. Однако для пары целых чисел можно использовать ал-
горитм Эвклида, который можно представить следующим образом.
Алгоритм Эвклида. Пусть a и b будут целыми числами и b > 0 (так
как (a, b) = (–a, –b), это не умаляет общности). Мы используем повторно
свойство делимости следующим образом (пример для a = 390 и b = 170
приведён справа от главного изложения).
a = bq1 + r2, 0 ≤ r2 < b; 390 = 170 · 2 + 50;
b = r2q2 + r3, 0 ≤ r3 < r2; 170 = 50 · 3 + 2;
r2 = r3q3 + r4, 0 ≤ r4 < r3; 50 = 20 · 2 + 10;
. . . . . .
rn-2 = br n-1q n-1 + rn, 0 ≤ rn< rn-1;
rn-1 = rnqn, 20 = 10 · 2,
где qi,— частное, а ri — остаток от деления (все ≥ 0).
Остатки r 2, r 3, . . . постоянно уменьшаются, так что в конце концов
они должны стать равными нулю. Очевидно, что (a, b) = (a, b) = ( r2, b) =
12
= (r2, r3) = . . . = (rn-1, rn ) = rn, так как в действительности rn | rn-1.
Отсюда НОД a и b является последним ненулевым остатком в вышеопи-
санном процессе повторного деления.
Следовательно, наибольший общий делитель (390, 170) = 10. Заме-
тим, что это было получено без разложения на множители каких-либо чисел.
На сегодняшний день алгоритм Эвклида, несмотря на более чем
2000-летнюю историю, остается наиболее эффективным алгоритмом из из-
вестных.
Наименьшим общим кратным (НОК) отличных от нуля чисел N1,
N2, …, Nn называют наименьшее положительное число, кратное всем этим
числам. НОК обозначают [N1, N2, …, Nn]. Очевидно
( , )
[ , ]
a b
a b a b ⋅
= . НОК
взаимно простых чисел равно их произведению.
Фи-функция Эйлера ϕ (n) определяет число целых положительных
чисел, не превосходящих n и взаимно простых с n .
⎪ ⎪ ⎪
⎩
⎪ ⎪ ⎪
⎨
⎧
− =
− =
− =
=
=
Π Π
= =
−
−
k
i
k
i
i k i
p i p i n p i
p p n p
p n p
n
n
1 1
1
( ), .
( ), ;
( 1), ;
1, 1;
( )
α α 1 α
ϕ α α α
Здесь p и i p — простые числа, α и i
α — натуральные числа.
Свойства фи-функции Эйлера:
1. Мультипликативность:
ϕ (a ⋅b) =ϕ (a) ⋅ϕ (b) при (a,b) = 1.
2. Сумма значений фи-функции Эйлера от всех положительных де-
лителей d числа n равна n :
Σ =
d n
ϕ (d) n.
Сравнения. Вычеты. Классы вычетов
Пусть n — натуральное число. Если два целых числа a и b при де-
лении на n дают один и тот же остаток, то они называются сравнимыми
по модулю n . Отношение сравнимости было введено Карлом Фридри-
хом Гауссом и записывается как
a ≡ b (mod n) .
Читается: a сравнимо с b по модулю n . Все четные (нечетные) чис-
ла сравнимы по модулю два. 30 ≡16 ≡ −5 ≡ 23(mod 7) , так как
13
(−5) ≡ 2(mod 7) ≡ 9 ≡16 ≡ 23 ≡ 30.
Из соотношения a ≡ b (mod n) следует отношение делимости
n (a − b) , т.е. разность сравнимых по модулю n чисел кратна мо-
дулю n и, следовательно, сравнима с нулем по данному модулю. Из ра-
венства a = b следует сравнение a ≡ b по любому модулю.
У равенств и сравнений имеется много общих свойств:
1) симметрия: a ≡ b⇒b ≡ a;
2) транзитивность: a ≡ b, c ≡ d ⇒a ≡ c ;
3) обе части сравнения можно почленно складывать и вычитать:
a ≡ b, c ≡ d ⇒a ± c ≡ b ± d ;
4) обе части сравнения можно почленно умножать:
a ≡ b, c ≡ d ⇒a ⋅c ≡ b⋅ d .
Замечание. Все сравнения в пунктах 1) — 4) осуществляются по од-
ному и тому же модулю.
Специфические свойства сравнений:
5) обе части сравнения можно разделить на общий делитель, если он
взаимно прост с модулем
a ⋅b ≡ (b ⋅ d)(mod n)⇒a ≡ d(mod n) при (b, n) =1;
12 = 6⋅ 2 ≡ (2⋅3)(mod3)⇒6 ≡ 3(mod3), но при a = 4, b = 3
4 не сравнимо с 2 по модулю 3, так как (3,3) = 3 ≠ 1;
6) обе части сравнения и модуль можно умножить на одно и то же
натуральное число, а также разделить на любой их общий положительный
делитель:
a ≡ b(mod n)⇒a ⋅ d ≡ (b ⋅ d)(mod n ⋅ d);
7 ≡ 4(mod3)⇒14 ≡ 8(mod 6) ;
)
( , )
( )(mod ) (mod
b n
a ⋅b ≡ b ⋅ d n ⇒a ≡ d n ;
20 ≡ 32(mod 6)⇒10 ≡16(mod3);
7) если сравнение имеет место по нескольким модулям, то оно имеет
место по модулю, равному общему наименьшему кратному этих модулей:
(mod[ , ])
(mod )
(mod )
1 2
2
1 a b n n
a b n
a b n
≡
⎭ ⎬ ⎫
≡
≡
;
14 2(mod12)
14 2(mod 4)
14 2(mod6)
≡
⎭ ⎬ ⎫
≡
≡
;
8) если сравнение имеет место по mod n, то оно имеет место и по
модулю d , равному любому делителю числа n :
14
a ≡ b(mod n); a ≡ b(mod d) , если d n ;
⎩ ⎨ ⎧
≡ ≡
≡
≡ ⇒
14 2 0(mod 2);
14 2(mod3);
14 2(mod6)
9) общий делитель одной части сравнения и модуля является также
делителем второй части сравнения :
a ≡ b(mod n), a = a1 ⋅ d , n = n1 ⋅ d ⇒b = b1 ⋅ d ;
15 ≡ 9(mod 6), 3 15, 3 6⇒3 9 .
Для сравнений справедливы основные законы арифметики:
(a ± b)modm ≡ [amodm ± bmodm]modm (ассоциативность);
(a ⋅ b)modm ≡ [amodm⋅ bmodm]modm (коммутативность);
[с ⋅ (a ± b)]modm ≡ [с ⋅ amodm± с ⋅bmodm]modm (дистрибу-
тивность).
Все целые числа, которые при делении на n дают один и тот же ос-
таток r , объединяют в один класс, обозначая его Zi . Очевидно, что при
делении на n возможны n остатков:
0,1, 2, 3, ... , (n −1) .
Следовательно, все целые числа можно разбить на n классов:
Z0 , Z1, Z2 , Z3, ... , Zn−1,
которые называются классами вычетов по модулю n . Каждый класс Zi
содержит бесконечное количество сравнимых между собой целых чисел,
объединенных одним соотношением
N = nq + r ; r < n; q = −∞,...,− 2,−1,0,1,2,...,∞.
Замечание. Различные классы вычетов по модулю n не содержат
общих элементов и, таким образом, являются непересекающимися класса-
ми. Например, при n = 2 все целые числа разбиваются на два непересе-
кающихся класса: четные и нечетные числа. Числа одного и того же класса
называются вычетами этого класса.
Полной системой вычетов по модулю n называют набор чисел, со-
держащий по одному вычету из каждого класса. В качестве «представите-
ля» класса можно взять любой вычет класса. Однако чаще всего пользуют-
ся наименьшими неотрицательными вычетами, когда в формуле
N = nq + r число q = 0 . В этом случае полная система вычетов по моду-
лю n составляется из остатков r : 0,1, 2, 3, ... , (n −1) .
Приведенной системой вычетов по модулю n называют набор чи-
сел из полной системы вычетов, которые являются взаимно простыми с
модулем n .
15
Так как фи-функция Эйлера ϕ (n) определяет число целых положи-
тельных чисел, не превосходящих n и взаимно простых с n , то можно
сказать, что количество чисел в приведенном наборе вычетов по модулю n
равняется фи-функции Эйлера ϕ (n) ;
10) слагаемое, стоящее в какой-либо части сравнения, можно перено-
сить в другую часть, переменив его знак на обратный;
11) к каждой части сравнения можно прибавить любое число, крат-
ное модулю;
12) обе части сравнения можно возвести в одну и ту же степень.
Если модуль класса вычетов представляет собой простое число, то
множество вычетов по этому модулю образует конечное поле (поле Галуа).
Полем называется коммутативное кольцо, в котором у каждого не-
нулевого элемента есть обратный. Поскольку произведение двух ненуле-
вых элементов поля снова является ненулевым элементом (вследствие от-
сутствия в поле делителей нуля), операция умножения ассоциативна, име-
ется нейтральный для операции умножения элемент 1 и каждый ненулевой
элемент а имеет обратный элемент a−1, то множество отличных от нуля
элементов поля образует абелеву группу по умножению. Эта группа назы-
вается мультипликативной группой поля.
Ненулевые элементы кольца вычетов Zm тогда и только тогда обра-
зуют группу относительно операции умножения по модулю m, когда m —
простое число. Следовательно, для простого числа р кольцо Zp является
полем. Это конечное поле принято обозначать GF( p) . Его элементы
{0, 1,…, (p – 1)} — это всевозможные остатки от деления целых чисел на
р, а алгебраические действия с ними — сложение и умножение по модулю р.
Характеристикой поля называется такое наименьшее положитель-
ное число k, для которого k ⋅ a ≡ 0(mod p) , ∀а∈GP( p) . Если такого
элемента не существует, то считается, что характеристика поля равна нулю.
Каждое поле Галуа содержит единственное наименьшее подполе,
число элементов которого равно простому числу. Следовательно, характе-
ристика каждого поля Галуа является простым числом.
Для конечного поля справедлива малая теорема П. Ферма.
2.1. Малая теорема Ферма. Теорема Эйлера
Малая теорема Ферма. Пусть р — простое число, а — некоторое це-
лое число. Тогда ap ≡ a (mod p). Если p не делит a, тогда ap-1 ≡ 1 (mod p).
Доказательство. Предположим сначала, что p не делит a , так что
(а, р) = 1, и рассмотрим р – 1 чисел а, 2а, 3а, . . . , (р – 1)а. Ни одно из них
не кратно p ( p | ja означает, что p | j, так как р — простое число и p не де-
16
лит a). Также не найдётся двух чисел, которые конгруэнтны (сравнимы)
по модулю р, так как ja ≡ ka (mod p) означает j ≡ k (mod p). Следовательно,
по модулю р эти р – 1 чисел различны и не равны нулю. Итак, числа 1, 2, 3,
. . . , р – 1 должны располагаться в соответствующем порядке. Перемножая
их, мы получим
a p−1 ⋅1⋅2⋅3...( p −1) = a ⋅2a ⋅3a...( p −1)a ≡ (1⋅2⋅3...( p −1))(mod p).
Числа 2, 3, . . . , р – 1 все являются взаимно простыми с р и могут
быть последовательно сокращены один за другим из этого сравнения. От-
сюда следует, что ap–1 ≡ 1 (mod p). Умножение на а даёт ap ≡ a (mod p).
Если, с другой стороны, р | a, тогда р и а оба ≡ 0 (mod p), а из это-
го следует, что ap ≡ a (mod p).
Обобщением малой теоремы Ферма является теорема Эйлера для со-
ставного модуля.
Теорема Эйлера. Пусть n > 0 и предположим, что (a, n) = 1. Тогда
aϕ(n) ≡ 1 (mod n), где ϕ (n) — фи-функция Эйлера.
Доказательство. Пусть r1, r2, . . . , rk (k = ϕ (n) ) будут целыми чис-
лами Z ∈1, n и взаимно простыми с n. Рассмотрим a r1, a r2, . . . , a rk .
Из представленных членов не найдётся двух, которые сравнимы по mod n
(a ri ≡ a rj, что означает ri ≡ rj (mod n), так как (a, n) = 1) и все они вза-
имно простые ((a, n) = ( ri , n) = 1, что означает (a ri , n) = 1). Следова-
тельно, среди них существуют ϕ (n) таких, что их наименьшие положи-
тельные вычеты по модулю n должны быть точно числами r1, r2, . . . , rk
в соответствующем порядке. Отсюда
r1 r2 . . . rk ≡ ( ar1 a r2 . . . a rk )(mod n),
так что, сокращая ri, так как они взаимно простые с n, мы получим иско-
мое сравнение 1 ≡ a k (mod n).
Функция ϕ (n) является мультипликативной, т.е. если (m, n) = 1,
тогда ϕ (mn) =ϕ (m)ϕ (n). Принято, что ϕ (1) =1 и ϕ (2) =1.
Полезной для практического применения модулярной арифметики
является китайская теорема об остатках, утверждающая, что можно
восстановить целое число из определенного диапазона чисел по множеству
его остатков от деления на числа из некоторого набора попарно взаимно
простых чисел.
Для нахождения делителей составных чисел используется вероятно-
стный алгоритм Полларда, который рассмотрим для двух случаев.
17
ρ-метод факторизации Полларда. Пусть f(x) = x2 + 1 и запишем
f2(x) = f(f(x)), f3(x) = f(f2(x)) и т. д. Пусть ak =f k(1). (Следовательно, а1
= 2, а2 = 5, аk+1 = ak 2 + 1). Конечно, вместо этого f можно использовать
другие полиномы. Предположим, что мы хотим представить N в виде со-
множителей, т.е. найти простое число р (возможно наименьшее простое
число), для которого p | N. Конечно, последовательность {ak}, взятая по
модулю р или по модулю N в конце концов будет повторяться, и ожидает-
ся, что это повторение будет происходить быстрее по модулю p, чем по
модулю N. (Действительно, повторение будет реальной возможностью, ес-
ли количество членов превзойдёт p ). Следовательно, мы надеемся, что
ai ≡ aj (mod p) для j > i и j не достаточно большое. Заметим, что тогда
at ≡ aj-i+t (mod p) для всех t ≥ i. Конечно, мы не можем решить задачу на-
хождения ai mod p, пока мы не знаем, что собой представляет р, но мы
можем решить задачу нахождения ai по модулю N , мы просто запишем
p | ((aj – ai) mod N, N).
(Чтобы не связываться с aj – ai , требуется, чтобы эта разность быст-
ро становилась очень большой).
Проделаем простое усовершенствование: так как i < j, то существует
целое число t, для которого i < t ≤ j и (j - i) | t. (Это становится понятным,
если задать вопрос, почему должно существовать целое число k, для кото-
рого i /(j – i) < k ≤ j /(j – i), и тогда используйте t = k(j – i)). Более того,
at = ak(i-i ) ≡ a(k+1)(j-1) ≡ a(k+2)(j-1) ≡ . . . ≡ a2k(j-1) ≡ a2t (mod p), т.е. вместо
контроля i и j мы должны рассмотреть at и a2t для t = 1, 2, 3, . . . Таким об-
разом, метод заключается в следующем:
Зададим x = a1 = 2, y = a2 = 5.
Заменим х на f (x), y на f (f (y)); таким образом, теперь x = a2 , y =
a4. Найдём (x – y, N).
Повторим: теперь х = a3, у = a6. Найдём (x – y, N).
Продолжаем до тех пор, пока (x – y, N) не станет равным 1 или N.
Конечно, х и у сокращаются по модулю N на каждой стадии, используя
x:= (x – N) · INT(x / N), и т. д. Заметим, что вышеприведённый метод
значительно лучше, чем сохранение ai в массиве, даже учитывая, что ai
вычисляется дважды. При этом удаётся избежать проблемы, связанной с
большими массивами чисел повышенной точности.
(р – 1) метод факторизации Полларда. Одной из версий этого ме-
тода будет следующая. Предположим, что р — простое число, а k такое,
18
что (р – 1) | k! Это означает, что все простые сомножители числа (р – 1)
будут меньше k . Теорема Ферма утверждает, что 2k! ≡ 1 (mod p).
Предположим, что мы хотим разложить на множители данное целое
число N. Возьмём малое целое число, скажем, 2 и вычислим последова-
тельно
21, 22, 26, 224, . . . , 2k! (все по модулю N),
где k является разумно большим (но не слишком большим!). Если р —
простой множитель N, тогда, естественно, р является множителем числа
(〈2 k! – 1〉N, N) и НОД будет скорее р, чем N. (Обозначение 〈х〉N принято
для наименьшего положительного вычета x по модулю N). Этот метод
можно проверить на числах, которые являются произведением двух про-
стых чисел. Заметим, что для успеха вычислений мы должны потребовать,
чтобы все простые множители искомого фактора р были бы ≤ k.
Китайская теорема об остатках. Пусть m1, m2, . . . , mr — поло-
жительные числа, причем, каждая пара взаимно простая: (mi, mj) = 1 для
i ≠ j. Тогда система сравнений
x ≡ a1 (mod m1), x ≡ a2 (mod m2), . . . , x ≡ aк (mod mк)
имеет единственное решение — сравнение по модулю произведения m1 m2
. . . mr.
Доказательство. Существование решения может быть доказано ин-
дукцией или следующим образом. Пусть ki для i = 1, . . . , r будет произ-
ведением всех положительных чисел m за исключением mi. Конечно, (ki,
mi) = 1, так что ki имеет обратное число ni по модулю mi. Тогда
x = a1 k1 n1 + a2 k2 n2 + . . . + ar kr nr
есть искомое решение. Например, m1 является сомножителем n2, . . . , nr и
k1 n1 ≡ 1 (mod m1), Отсюда x ≡ a1 (mod m1). Таким же образом доказы-
ваются другие сравнения.
Порядком числа а по модулю n, если (a, n) = 1, называется наи-
меньшее целое k > 0 такое, что ak ≡ 1 (mod n). Это записывается как k =
ordn a и произносится, что а имеет порядок k по модулю n. Естественно,
что ordn a ≤ ϕ (n) . Заметим, что если (a, n) > 1 и k > 0, то невозможно
для ak быть сравнимым с 1 (mod n). Если а имеет порядок k mod n, тогда
в некоторых книгах используют выражение “а является показателем k по
модулю n”.
Предположим (a, n) = 1. Тогда ak ≡ 1 (mod n), если ordn a | k. От-
сюда получим, что степень а, которая сравнима с 1, не только ≥ ordn a , но
19
точно кратна этому порядку. В особенности это нужно помнить, когда
ordn a | ϕ (n) и если р — простое число, то ordn a | (p – 1).
Доказательство. Предположим, что аk ≡ 1, где k > 0 и пусть
k = q ordn a + r, где 0 ≤ r ≤ ordn a . Тогда, по модулю n,
1 ≡ ak = (aordna )q ar ≡ ar .
Отсюда и из определения порядка следует, что r = 0 как число наи-
меньшей положительной степени а, которое сравнимо с единицей.
Число а, для которого (a, n) = 1 и ordn a = ϕ (n) называется при-
митивным корнем по модулю n. Таким образом, если модуль n делится
на два различных простых нечётных числа, то для него не существует
примитивного корня.
Определим основные свойства примитивных корней. Если предпо-
ложить, что g является примитивным корнем по модулю n, то выполняют-
ся следующие свойства:
а) для любых целых чисел r и s,
g r ≡ g s (mod n) ⇔ r ≡ s (mod ϕ (n) );
б) ϕ (n) , числа 1, g, g2, . . . , g ϕ(n) - 1 — все являются различными
по модулю n. Они, следовательно, по модулю n точно являются числами,
взаимно простыми с n; положительные вычеты являются точно положи-
тельными целыми числами ≤ (n – 1) и взаимно простыми с n.
Доказательство
а) предположим, что r ≥ s. Тогда g r-s g s ≡ gs (mod n), и так как
(g, n) = 1, то можно сократить g s из обеих частей, чтобы получить g r–s ≡
1 (mod n). Таким образом, ϕ (n) = ord n g | (r – s), что даёт искомый ре-
зультат. Обратное утверждение также действительно;
б) это действительно применение пункта (а); так как нет двух степе-
ней 0, 1, 2, . . . , ϕ (n) – 1, которые могли быть сравнимыми по модулю
ϕ (n) .
В теоретико-групповом смысле пункт (б) прямо утверждает, что
примитивный корень является генератором циклической группы, состоя-
щей из вычетов по модулю n, которые взаимно просты с n.
Теорема. Предположим, что а является примитивным корнем по
модулю 2k для некоторого k ≥ 3. Тогда а является также примитивным
корнем по модулю 2k–1. Следовательно, не существуют примитивные кор-
ни по модулю 2k для k ≥ 3.
20
Доказательство. Очевидно, что а является нечётным числом. Мы
имеем 2 1(mod 2 1) 2 ≡ − k− k а , согласно теореме Эйлера, так как
ϕ (2k−1) = 2k−2 . Предположим, что в действительности порядок а по мо-
дулю 2k-1 меньше, чем 2k-2. Следовательно, степень числа 2 будет меньше,
чем (k – 2) :
2r ≡ 1(mod2k −1) а для некоторого r (0 ≤ r ≤ k – 3). Последовательное
возведение в квадрат показывает, что 2 1(mod2 1) 3 ≡ − k − k а .
Запишем выражение а k b 2k 2 1 3 = − −
для целого числа b. Тогда
2 3 2 1 2 − = − + а k k b
и, перемножая их между собой, получим
1 0(mod2 ) 2k 2 k а − ≡ −
. Однако это противоречит предположению, что а
является примитивным корнем по модулю 2k. Это показывает, что порядок
а равняется ϕ (2k−1) = 2k−2 , что и требовалось доказать.
Дискретный логарифм — это функция, обратная возведению в сте-
пень в арифметике классов вычетов.
Известно [5], что для простого числа р степени числа а с показате-
лями от 1 до (р – 1) порождают все целые числа в ряду от 1 до (р – 1) в
точности по одному разу. Любое целое число b можно представить в форме
b ≡ r(mod p), где 1 ≤ r ≤ ( p −1)
в классах вычетов. Отсюда вытекает, что для любого целого числа и любо-
го первообразного корня а простого числа р можно найти ровно один по-
казатель степени i, для которого
b ≡ аi (mod p) , где 1 ≤ i ≤ ( p −1) .
Значение показателя степени i, называют индексом числа b по моду-
лю р при основании а, или дискретным логарифмом.
Для дискретного логарифма принята форма записи indа, р (b) и
справедливы следующие выражения:
indа, р (1) = 0 , поскольку а0 mod p = 1mod p = 1;
indа, р (а) = 1, поскольку а1 mod p = аmod p .
21
2.2. Квадратичные вычеты и закон взаимности
Простые числа р, которые появляются при разложении в непрерыв-
ную дробь числа n , имеют особые свойства: для каждого такого р суще-
ствует х, для которого х2 ≡ n (mod p).
Определение. Пусть р является нечётным простым числом, а число
n не делится на p. Тогда n называется квадратичным вычетом по моду-
лю р, если n ≡ x2 (mod p) для некоторого х (записывается nRp), или квад-
ратичным невычетом по модулю р, если не существует таких х (записы-
вается nNp). Мы также будем использовать символ Лежандра ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
n
. Он
определяется так: для p, не делящего n, будет ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
n
= + 1, если nRp, и
⎟ ⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
n
= –1, если nNp. Конечно, ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛
р
n2
= 1 для любого n, ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
1
= 1 для любого
р. Случаем р = 2 пренебрегаем, так как он неинтересен (для каждого не-
чётного числа выполняется n ≡ 12 (mod 2)). Для выбранного простого
числа р мы можем найти n, для которого принадлежность к nRp определя-
ется возведением в квадрат по очереди чисел х = 1, 2, . . . , р – 1. Напри-
мер, для р = 5 получим 1R5, 4R5, в то же время, 2N5, 3N5.
Критерий Эйлера для квадратичных вычетов. Если g является
примитивным корнем по модулю p, где р — нечётное простое число, и
пусть p не делит n, причем n ≡ gk (mod p) для некоторого k. Тогда, если
k является чётным ⇔ n(p-1)/2 ≡ 1 (mod p) ⇔ nRp.
k является нечётным ⇔ n(p-1)/2 ≡ –1 (mod p) ⇔ nNp.
Основные свойства символа Лежандра:
а) альтернативное утверждение критерия Эйлера :
⎟ ⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
n
≡ n(p-1) / 2 (mod p) (здесь р является простым числом и p не де-
лит n);
б) если р является простым числом и p не делит n, то
, ⎟ ⎟
⎠
⎞
⎜ ⎜
⎝
⎛
= ⎟ ⎟
⎠
⎞
⎜ ⎜
⎝
⎛
⎟ ⎟
⎠
⎞
⎜ ⎜
⎝
⎛
p
nm
p
m
p
n
т.е.
nmRp ⇔ (nRp и mRp) или (nNp и mNp);
22
в) если р является простым числом и p не делит n, то
⎟ ⎟⎠
⎞
⎜ ⎜
⎝
⎛ +
= ⎟ ⎟
⎠
⎞
⎜ ⎜
⎝
⎛
p
n kp
p
n
для любого целого k.
Закон квадратичной взаимности. Если р и q являются различными
нечётными простыми числами, тогда ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
q
p
= ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
q
, если оба не являются
сравнимыми с 3 (mod 4). Это эквивалентно утверждению
⎟ ⎟⎠
⎞
⎜ ⎜
⎝
⎛
q
p
⎟ ⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
q
= (–1)(р-1)(q-1)/4 .
Доказательство. В плоской системе координат х и у отметим целые
числа 1, 2,..., ( ) 1
2
1 p − вдоль оси х и числа 1, 2, . . . , ( ) 1
2
1 p − вдоль оси
у и образуем прямоугольник с вершинами (0, 0), (p / 2, 0), (p / 2, q / 2),
(0, q/2). Прямоугольник внутри себя содержит точки сетки
( ) 1
2
1 p − ( 1)
2
1 q − , обе координаты которых являются целыми числами.
Рассмотрим диагональ прямоугольника, которая описывается уравнением
y = xq / p для 0 ≤ х ≤ р/2 и 0 ≤ у ≤ q / 2, и поэтому не может содержать
никаких других точек решётки.
Линия х =k (1 ≤ k ≤ ( ) 1
2
1 p − содержит точки решётки (k, 1), (k,
2), . . . , (k, ⎥⎦
⎤
⎢⎣
⎡
p
kq ), расположенные ниже диагонали. Таким образом, обо-
значая через М общее число точек решётки, получим ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
q = (–1)M .
Аналогично, если N представляет собой количество точек, располо-
женных выше диагонали, тогда ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
q
p
= (–1)N. Отсюда ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
q
p
⎟ ⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
q
= (–1)N+M,
а так как N + M = ( ) 1
2
1 p − ( 1)
2
1 q − , то последний результат завершает
доказательство.
Квадратичный закон взаимности обнаруживает простое и в то же
время замечательное взаимоотношение между разрешимостью сравнений
х2 ≡ n (mod p) и х2 ≡ p (mod n).
23
Вычислим, например, ⎟
⎟⎠
⎞
⎜ ⎜
⎝
⎛
p
1711
для некоторых простых чисел р.
Для р = 3 получим ⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
⎛
3
1
3
1711
, так как 1711 ≡ 1 (mod 3), а это
есть 1.
Аналогично, для р = 5: 1.
5
1
5
1711 = ⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
⎛
Затем
⎟⎠
⎞
⎜⎝
= −⎛ ⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
⎛
3
7
7
3
7
1711
, исходя из закона взаимности,
⎟⎠
⎞
⎜⎝
⎛
7
1711 = 1.
3
1 = − ⎟⎠
⎞
⎜⎝
− ⎛
⎟⎠
⎞
⎜⎝
⎛
⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
⎛
11
3
11
2
11
6
11
1711
= ⎟⎠
⎞
⎜⎝
− ⎛
11
3
⎟⎠
⎞
⎜⎝
= +⎛
3
11
, исходя из
закона взаимности, ⎟⎠
⎞
⎜⎝
⎛
11
1711 1.
3
2 = − ⎟⎠
⎞
⎜⎝
= ⎛
Обобщением символа Лежандра является символ Якоби, который де-
лает вычисление ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛
p
n
значительно проще, так что отпадает необходи-
мость в разложении n на сомножители.
Определение символа Якоби. Пусть k является нечётным числом,
большим нуля, а (n, k) = 1 и предположим, что k является произведением
(необязательно различных) простых чисел: k = p1 p2 . . . pr, тогда
...
1 2
n n n n
k р р pr
⎜⎛ ⎟⎞ ⎜⎛ ⎟⎞ ⎛ ⎞ ⎛⎜ ⎞⎟ ⎜ ⎟ ⎜ ⎟ ⎜ ⎟ ⎜⎜ ⎟⎟ ⎜ ⎟ ⎜ ⎟ ⎜⎜ ⎟⎟ ⎝ ⎠ ⎜⎜ ⎟⎟ ⎜⎜ ⎟⎟ ⎜ ⎟ ⎝ ⎠ ⎝ ⎠ ⎝ ⎠
= .
Заметим, что все эти символы Лежандра определены, так как нет pi,
которое может разделить n (k и n являются взаимно простыми). Таким об-
разом, 1 ± = ⎟⎠
⎞
⎜⎝
⎛
k
n
, и если так случится, что k будет простым числом, тогда
символы Якоби и Лежандра совпадут. Заметим также, что если nRk, тогда
определённо 1 = ⎟
⎟⎠
⎞
⎜ ⎜⎝ ⎛
рi
n
для каждого i и, следовательно, 1 = ⎟⎠
⎞
⎜⎝
⎛
k
n
. Однако
обратная теорема не верна, как это видно из следующего
24
( 1)( 1) 1,
5
2
3
2
15
2 = − − = ⎟⎠
⎞
⎜⎝
⎛
⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
⎛
в то время как х2 ≡ 2 (mod 15) не имеет решений.
Это позволяет символ Якоби рассматривать менее полезным, чем
символ Лежандра, но символ Якоби описывает несколько критических
свойств символа Лежандра. Они, действительно, очень полезны.
Основные свойства символа Якоби:
а) если k является нечётным числом и > 0, а (k, n) = (k, m) =1, тогда
⎟⎠
⎞
⎜⎝
= ⎛ ⎟⎠
⎞
⎜⎝
⎛
⎟⎠
⎞
⎜⎝
⎛
k
nm
k
m
k
n
;
б) если k является нечётным положительным целым числом, а
(k, n) =1, тогда ⎟⎠
⎞
⎜⎝
⎛ +
= ⎟⎠
⎞
⎜⎝
⎛
k
n ik
k
n
для любого целого числа i.
Доказательство следует немедленно из определения символа Якоби
совместно с соответствующими свойствами символа Лежандра.
2.3. Вычисление обратных по модулю величин [2; 4; 10]
Определение. Целое число а является обратным числу b по модулю
n, если выполняется сравнение: ab ≡ 1 (mod n).
Теорема. Для целых а и n существует b такое, что ab ≡ 1 (mod n),
если и только если (a, n) = 1. Когда b существует, оно также будет взаим-
но простым с b и единственным по модулю n. Последнее утверждение оз-
начает: если ab′ ≡ 1 (mod n), тогда b ≡ b′ (mod n).
Доказательство. Если ab ≡ 1(mod n), тогда ab = 1 + k n, так что
некоторый общий множитель а и n должен делить 1, что даёт (a, n) = 1
(аналогично (b, m) = 1). Обратно, если (а, n) = 1, тогда, используя алго-
ритм Евклида, найдём такие целые числа b и k, что ab + n k = 1. Для это-
го b
ab ≡ 1 (mod n).
Для нахождения числа а необходимо решить сравнение
a ⋅ х ≡ 1 (mod n).
Это эквивалентно нахождению таких значений целых чисел х и k, что
а ⋅ х = n ⋅ k +1.
Существует три основных способа нахождения числа а, обратного
числу b по модулю n:
25
1. Проверять путем поочередной подстановки чисел натурального
ряда в формулу, пока не будет найдено число а, удовлетворяющее
сравнению ab ≡ 1 (mod n).
2. Используя фи-функцию Эйлера ϕ (n) , можно вычислить
а ≡ b−1 ≡ bϕ (n)−1(mod n) .
3. С помощью расширенного алгоритма Евклида.
В этом случае при решении сравнения a⋅ х ≡ 1 mod n алгоритм
Евклида позволяет найти ( 1) 1(mod )
а 1Q n k
k
−
≡ − − , где Qk −1 — знамена-
тель предпоследней подходящей дроби разложения
n
а
в непрерывную
дробь.
Непрерывная дробь имеет вид:
{ }k q q q q
n
а , , ,..., 0 1 2 = ,
где qi — частное в цепочке следующих равенств:
а = nq0 + r1, 0 < r1 < n ,
n = r1q1 + r2 , 0 < r2 < r1 ,
r1 = r2q2 + r3, 0 < r3 < r2,
..........................................
rk −2 = rk −1qk −1 + rk , 0 < rk < rk −1,
rk −1 = rлqk + 0,
где ri — остатки от деления.
Поскольку остатки от деления ri в алгоритме Евклида представляют
собой строго убывающую последовательность натуральных чисел, то
обеспечивается сходимость представленного алгоритма. При этом получа-
ется, что rk — общий делитель чисел а и n. Любой общий делитель чисел
а и n делит и rk . Таким образом, rk =( а, n).
Последовательности { } Рm и { } Qm числителей и знаменателей под-
ходящих дробей в непрерывной дроби определяются рекуррентно:
Р–2 = 0, Р–1 = 1, Рm = qmPm–1+Pm–2 для m ≥ 0,
Q–2 =1, Q–1 = 0, Qm = qmQm–1 +Qm–2 для m ≥ 0.
Для решения более сложных сравнений
a ⋅ x ≡ b(mod n), b ≠ 1
26
используют следующий прием. Сначала решают сравнение
a⋅ у ≡ 1 (mod n), т.е. определяют у ≡ а−1(mod n), а затем находят
х ≡ а−1b(mod n) ≡ у ⋅b(mod n).
2.4. Сравнение арифметических операций по их трудоемкости
В современных шифрующих устройствах обычно имеют дело с
большим объемом информации, записанной в цифровом виде, т.е. в виде
знаков какой-нибудь выбранной системы счисления. В процессе перера-
ботки информации приходится выполнять те или иные операции: логиче-
ские, арифметические, функциональные и др. При этом возникает задача
выбора эффективных приемов их выполнения и оценки эффективности ис-
пользуемых методов.
Из арифметических операций над целыми числами простейшими яв-
ляются сложение, вычитание, умножение, возведение в степень. При этом
следует учитывать выбранную систему счисления: позиционную, непози-
ционную и др.
Широко применяемые для выполнения арифметических операций
способы на основе позиционной системы счисления (ПСС) изучены доста-
точно полно. Вместе с тем повышение требований к основным характери-
стикам вычислительных средств стимулирует поиск новых форм шифро-
вания, а следовательно, новых форм выполнения арифметических опера-
ций. Большое внимание уделяется кодам с параллельной структурой (не-
позиционным арифметическим кодам). Поэтому особое внимание уделяет-
ся модулярным система счисления, обладающим максимальным уровнем
внутреннего параллелизма.
Информация в виде позиционного двоичного кода представляет со-
бой набор из k разрядов для представления любого целого числа х между 0
и 2k −1, а именно,
Σ=
= −
k
j
j
x d j
1
2 1 , (2.1)
где двоичные коэффициенты dj являются разрядами числа
x = (dkdk −1...d2d1) по основанию 2. Веса 2 j −1в этом представлении яв-
ляются целыми степенями по этому числовому основанию (j = 1, 2, …, k).
Рассмотрим теперь использование ряда весов w1,w2 ,...,wn для
представления n—разрядного числа x = (ckck −1...c2c1) в том же виде, а
именно:
27
Σ=
=
n
j
x c jwj
1
. (2.2)
Для данных положительных целых чисел порядка s (где s ≤ n), выбе-
рем веса j
s
wj = w ( ) , чтобы обеспечить
⎪⎭
⎪⎬ ⎫
= + + + <
= ≤ ≤
− − −
−
w w w w s j
w j s
j j j j s
j
j
... ,
2 ,1
1 2
1
. (2.3)
Для s = 2, например, получим весовую последовательность: w1=1,
w1 = 2, w1 = 3, w1 = 5, w1 = 8, w1 = 13 и т. д. Эта последовательность
является известными числами Фибоначчи.
Эта конструкция получается по индукции, т.е. итеративно, и генери-
рует представление х сначала наиболее значимым разрядом с дальнейшим
понижением веса последующих разрядов. Пусть yn = x, тогда образуем по-
следовательно числа yn−1, yn−2 ,..., y1 в соответствии с алгоритмом
y j −1 = y j − c jwj , (2.4)
где сj = 1, если wj ≤ y j < wj+1 .
Иными словами, число х последовательно уменьшается с помощью
некоторых коэффициентов последовательности wn ,wn−1,...,w1 , взятых в
порядке понижения их веса, пока не достигнем отрицательного результата.
Если вес wj в настоящее время вычитается из текущей разности, тогда сj = 1;
в противоположном случае сj = 0. Например, если s = 2, n = 6 и х = 19,
тогда эта конструкция получается из весовой последовательности 13, 8, 5,
3, 2, 1 (выписанной ранее), представление 1910 = (1010012) получается
следующим образом:
19 – 13 = 6 с6 = 1
6 – 8 < 0 с5 = 0
6 – 5 = 1 с4 = 1
1 – 3 < 0 с3 = 0
1 – 2 < 0 с2 = 0
1 – 1 = 0 с1 = 1.
Заметим, что та же самая конструкция является одной из часто ис-
пользуемых для представления десятичного числа х в двоичном виде. Для
того же самого примера 1910 = (100112)
19 – 16 = 3 d5 = 1
3 – 8 < 0 d4 = 0
3 – 4 < 0 d3 = 0
28
3 – 2 = 1 d2 = 1
1 – 1 = 0 d1 = 1.
Арифметические операции можно выполнить и с помощью кодов
Фибоначчи. Для выполнения арифметических операций необходимо выра-
зить каждый вес кода Фибоначчи wj как k-значное двоичное число. Для
х = 19 в двоичной системе счисления (s = 2) эти процессы имеют вид
Кодирование:
16 8 4 2 1 13 8 5 3 2 1
19 = 1 0 0 1 1
6 w = 13 = 0 1 1 0 1
0 0 1 1 0 = 6
4 w = 5 = 0 0 1 0 1
0 0 0 0 1 = 1
1 w = 1 = 0 0 0 0 1
0 0 0 0 1 1 0 1 0 0 1 = 19
Декодирование:
13 8 5 3 2 1 16 8 4 2 1
1 0 1 0 0 1 0 0 0 0 0
0 1 1 0 1
0 1 1 0 1
0 0 1 0 1
1 0 0 1 0
0 0 0 0 1
1 0 0 1 12 = 1910.
Арифметические операции, выполняемые в весовой системе Фибо-
наччи, могут быть выполнены для двух случаев, которые обратимы: (2.2)
— для кодирования, а (2.4) — для декодирования. Однако добавление дво-
ичных чисел с весом Фибоначчи не будет таким простым. В системе с ве-
совыми коэффициентами по степеням 2 переполнение в цифровой позиции
j (вес которой соответствует 2 j–1) добавляет количество 2 ⋅ 2 j−1 = 2 j к
сумме; это переполнение добавляется перемещением 1 к левой позиции,
позиции цифры j+1 (чей вес равен 2 j). В системе весов Фибоначчи опре-
деление (2.3) может быть выражено как
⎭ ⎬ ⎫
= + <
= ≤ ≤
+ −
+
w w w s j
w w j s
j j j s
j j
2 ,
2 ,1 ,
1
1 , (2.5)
29
показывая, что количество 2w j, добавленное от переполнения в цифровой
позиции j, должно теперь перемещено не только слева от позиции (j + 1),
но также справа (если эта позиция снимается при представлении) от пози-
ции цифры (j – s).
Двойной перенос серьезно усложняет схему параллельного сумма-
тора, а двойное направление при преобразовании из параллельной записи в
простую последовательную форму делает сумматор практически неосуще-
ствимым. Более того, результат такого суммирования по Фибоначчи необ-
ходимо скорректировать для очистки слева всех единичных строк длиннее,
чем s – 1. Следовательно, двоичная арифметика, как следует из описания,
обладает предпочтением.
Существует ли процедура преобразования кодирования или декоди-
рования, где кодированные разряды могут генерироваться синхронно по
времени с приемом цифр от источника последовательного кода? Исследо-
вания двоичных весов, эквивалентных весам Фибоначчи и весовым экви-
валентам Фибоначчи по степеням 2, показывают, что ни наиболее важные,
ни наименее важные разряды результирующего слова не могут быть из-
вестны до получения закодированного слова и соответствующим образом
преобразованного. Таким образом, схема, которая выполняет преобразова-
ние, должна иметь возможность осуществлять сдвиг влево и вправо внутри
длины полученного слова. Упрощение кодера к чисто последовательной и
непрерывной форме операций (как в обычном двоичном сумматоре) явля-
ется, следовательно, в своей основе неосуществимым. Обе процедуры пре-
образования кодов, описанные ранее, требуют, чтобы двоичное весовое
представление n весов Фибоначчи было бы доступно в течение общепри-
нятого процесса. Таким образом, эти веса должны быть или сохранены в
памяти с произвольной выборкой, или сгенерированы с помощью локаль-
ных схем. Рекуррентные соотношения (2.3) и (2.5) показывают, что каж-
дый из этих весов может быть просто сгенерирован из предыдущих значе-
ний, требующих хранения только s последовательных весов, не зависимо
от того, насколько большим может быть n.
Считаем соотношение между параметрами k и n, достаточными для
выполнения условия ( 1)
2 3( , ) 1+
≤ = +m
n
k N m n w ; т.е. следует выбрать n та-
ким, что
< 2 ≤ n+1
k
wn w .
За исключением достаточно малых значений m = s – 1, даже очень
длинные коды требуют не более n – k избыточных разрядов.
В криптологии часто приходится выполнять операции с многознач-
ными числами. Обычный прием умножения двух 2n-значных чисел легко
сводится к четырем умножениям n-значных чисел. Метод А.А. Карацубы
30
позволяет обойтись тремя умножениями n-значных чисел. Если записать
2n-значное число в виде
Аn + 10n ⋅Bn,
то легко установить тождество (Аn + 10n ⋅Bn)(Cn + 10n ⋅Dn) = =Аn Cn
(10n + 1) + (Dn – Cn)⋅( Аn – Bn)⋅10n + Bn ⋅Dn⋅(102n +10n ), которое дока-
зывает утверждение.
В дальнейшем этот метод был усовершенствован.
Алгоритм Хэда (опубликованный в 1980 г.) представляет собой более
тонкий путь выполнения умножения без представления чисел, больших,
чем 2m. Для повышенной точности это даёт возможность уверенно опери-
ровать с числами, такими как 1018. Алгоритм Хэда может быть включён в
виде подпрограммы в степенной алгоритм.
Пусть нужно умножить х и у по модулю m, где 0 ≤ х ≤ m, 0 ≤ y ≤ m.
Метод проходит несколько стадий, и мы исключим некоторые детали,
проверяемые в качестве упражнений.
Пусть m ≥ 2, T = ⎡ m +
⎣ ⎢
⎤
⎦ ⎥
1
2
, t = T 2 – m. Тогда –T ≤ t ≤ T и T 2 ≤ 2m.
Доказательство. Из определения T мы имеем
2
m − 1 < T
2
≤ m + 1 (2.6)
и, возводя эти неравенства в квадрат, получим
m –
4
m + 1 < T2 ≤ m +
4
m + 1 . (2.7)
Сложение левых частей неравенств (2.6) и (2.7) даёт m – 1
4
< T2 + T,
а так как правая часть представляет собой целое число, мы получим
Т2 + Т ≥ m, что является долей искомого результата.
Вторая часть получается, если сложить правую часть неравенства
(2.7) с левой частью неравенства (2.6), умножив на (–1), мы получим
T2 – T < m + 3
4
, что даёт T2 – T ≤ m. Наконец, T2 ≤ 2 m просто следует
из правой части выражения (2.7).
Пусть x = aT + b, где 0 ≤ b < T. Тогда 0 ≤ а ≤ Т. Пусть y = c T + d,
где 0 ≤ d < T. Тогда 0 ≤ с ≤ Т.
Доказательство. Очевидно, что а ≥ 0. Если а > T, тогда x = aT +
+b ≥ aT ≥ (T + 1) T ≥ m. Это является противоречием. Другая половина
доказывается аналогично.
31
1. Определим z ≡ (ad + bc) (mod m), где 0 ≤ z < m. Тогда ad ≤ m,
bc ≤ m и ху ≡ (act + zT + bd) (mod m).
2. Пусть ac = eT + f, где 0 ≤ f < T. Тогда 0 ≤ е ≤ Т и xy ≡ ((et +
+z)T + ft + bd) (mod m).
3. Пусть v ≡ (z + et) (mod m), 0 ≤ v ≤ m.
4. Пусть v = gT + h, где 0 ≤ h < T. Тогда 0 ≤ g ≤ T и xy ≡ (hT + (f +
+ g)t + bd) (mod m).
Представленные результаты просто проверить в такой последова-
тельности ( все сравнения по модулю m):
a, b, c, d, z, e, f; v; g; h; j ≡ (f + g) t, k ≡ j + bd; xy ≡ hT + k,
включая числа размером не более 4m.
Для нахождения целых чисел в классах вычетов можно воспользо-
ваться китайской теоремой об остатках
В кольце вычетов по модулю определены такие операции как сложе-
ние, вычитание, умножение, поэтому их выполнение осуществляется в со-
ответствии с законами модулярной арифметики. Например, операцию мо-
дулярного вычитания чисел α и β можно осуществить в соответствии с
выражением
(α – β) mod m = [α + (m – β)]mod m,
т.е. сводится к операции модулярного сложения.
Вычислительный процесс в модулярной системе счисления (МСС)
отличает малоразрядность остатков, что позволяет использовать таблич-
ный метод для реализации арифметических операций. В этом случае ос-
татки от деления операндов на модули системы счисления представляются
однопозиционным кодом, и операции базового набора (сложение, вычита-
ние и умножение) выполняются за один такт.
Под табличной реализацией функции двух входных переменных
х = f(α, β) понимается создание такой таблицы, в которой каждой комби-
нации операндов α и β соответствует единственное значение выходной
переменной х (результата). При этом каждой паре операндов α и β соот-
ветствует определенный логический элемент табличного вычислителя, вы-
ходной сигнал которого шифруется в двоичные числа результата опера-
ции, соответствующие таблицам Кэли для модулярных операций базового
набора. Недостатком табличного метода является существенный рост ап-
паратурных затрат при увеличении разрядности операндов.
Преобразования, требующие определенных видов арифметических
вычислений, могут быть выполнены более просто в одной системе счисле-
ния, чем в другой. Следовательно, выбираемые кодер и декодер могут вы-
полняться на основе различных алгоритмов преобразования.
32
2.5. Нахождение простых чисел
Простые числа выделяются с помощью тестирования какого либо
выбранного целого числа на простоту.
Традиционными являются три метода получения простых чисел в
возрастающем порядке: пробного деления, умножения для сокращения со-
ставных чисел и отсева (решета Эратосфена).
Простоту целого числа можно определять на основе теста Миллера,
теста Пепина, малой теоремы Ферма, теоремы Вильсона и использования
чисел Мерсенна.
Тест Миллера по основанию b. Если n нечётное положительное це-
лое число > 1, а b будет взаимно простым с n при условии выполнения
следующей процедуры:
Шаг 1: Пусть k = n – 1, 〈bk〉 = r. Если r = 1, то продолжаем, в
противном случае, n не выдерживает теста.
Пока k является чётным и r = 1, повторять следующее:
Шаг 2: Заменить k на k/2 и заменить r на новое значение 〈bk〉.
Когда k при проверке оказывается нечётным числом или r, не рав-
ным 1, то:
если r = 1 или n – 1, тогда n проходит тест,
если r ≠ 1 и r ≠ n – 1, тогда n не проходит тест.
Таким образом, как следует из проведенного выше обсуждения, если
n — простое число и n не делит b (так что (b, n) = 1), тогда n всегда прой-
дёт тест Миллера по основанию b.
Решающим условием будет то, что х2 ≡ 1 (mod n), что предполагает
х ≡ ±1 (mod n), когда n является простым числом, так что не может поя-
виться вычета другого, кроме ±1 (т.е. 1 или n – 1), а тест Миллера не смо-
жет его отбросить. Конечно, шаг 1 точно соответствует малой теореме
Ферма. Зарегистрируем этот факт следующим образом:
если тест Миллера даёт отрицательный результат по основанию b,
тогда n — составное число.
Для чисел Ферма вида = 22 +1 n
Fn часто используется тест Пе-
пина на простоту. Предположим, что n ≥ 2 и k ≥ 2. Тогда, записывая F
вместо Fn, получим, что следующие выражения эквивалентны:
а) F является простым числом и ⎟⎠
⎞
⎜⎝
⎛
F
k = –1;
б) k(F-1)/2 ≡ –1 (mod F).
33
Теорема Вильсона. Целое число р > 1 является простым, если и
только если (р –1)! ≡ – 1 (mod p).
Доказательство. Предположим, что р — простое число большее 2.
Мы должны умножить между собой все числа 1, 2, . . . , р – 1 и найти вы-
чет по модулю р. Каждое из этих чисел х имеет обратное y по mod p, т.е.,
xy ≡ 1 (mod p). Далее мы должны все время сокращать y mod p, так что у
станет одним из чисел 1, 2, . . . , р – 1. В этом случае имеем x = y ⇔ x2 ≡
1 (mod p) ⇔ x ≡ ±1 (mod p), так как р – простое число. Другие числа
разделены на пары, причем произведение каждой пары равно 1 mod p,
так что 1 · 2 · 3 . . . (р – 1) ≡ –1 (mod p). Результат также верен и для р = 2!
С другой стороны, предположим, , что n — составное число, напри-
мер, n = ab, где a > 1 и b > 1, а (n – 1)! ≡ –1 (mod n). Тогда получаем
противоречие. Очевидно, что a | (n – 1)! для всех 1 < a < n. Но мы знаем,
что a | n, так что их совпадение означает, что выражение a | (–1) является
ложным.
Хотя теорема Вильсона в принципе даёт возможность тестировать на
простоту, но для использования она достаточно малоэффективна, так как
для этого требуется умножение на все числа 2, 3, . . . . р – 1 по модулю p.
Это получается медленнее, чем проверка р на принадлежность к простым
числам путём пробного деления на простые числа ≤ p.
Числа Мерсенна имеют вид M(m) = 2m – 1, где m — натуральное
число, большее единицы.
Совершенным числом считается такое целое n > 1, что сумма его
делителей, включая 1, но исключая само число n, равно самому n.
Существует связь между совершенными числами и простыми чис-
лами Мерсенна.
Если известно разложение числа на простые множители, то можно
указать все делители этого числа, а также найти их сумму, которую обо-
значим через σ(n), где n — само число. При этом для совершенных чисел
справедлива формула σ(n) = 2n.
Прежде чем выявить связь между совершенными числами и просты-
ми числами Мерсенна, полезно описать метод, позволяющий определить,
является ли число вида M(m) = 2m – 1 действительно простым.
Теорема. Пусть р будет нечётным простым числом, а q будет про-
стым числом. Предположим, что q | (2q – 1). Тогда q имеет вид 1 + 2kp
для целого числа k. Все делители 2р – 1, простые или составные, будут
иметь такой же вид.
34
Доказательство. Исходя из малой теоремы Ферма, q | (2q – 1), так
что q | (2q – 1, 2р – 1) = 2(q--1,р) – 1. Отсюда (q – 1, p) = p вероятнее, чем
равенство 1. Это приводит к (q – 1) = rp, но р является нечётным, а
(q – 1) является чётным, так что r должно быть чётным числом, скажем,
r = 2k. Из последнего утверждения следует, так как если q1 ≡ 1 и q2 ≡
≡ 1 (mod 2p), тогда q1 · q2 ≡ 1 (mod 2p).
Для примера выберем р = 31, что означает, что любой делитель чис-
ла (231 – 1) должен иметь вид (1 + 62k), так что простота числа 231 – 1
может быть проверена быстро путём пробного деления на числа этого спе-
циального вида.
Теорема о чётных совершенных числах. Если n является чётным
совершенным числом, тогда существует m такое, что 2m – 1 является про-
стым числом, а n = 2m-1 (2m – 1).
Доказательство. Предположим, что n является чётным совершен-
ным числом и представимо как n = 2s t, где t является нечётным числом.
Тогда
2s+1t = 2n = σ(n) = σ(2s)σ(t) = (2s+1 – 1)σ(t),
так что 2s+1 | σ(t). Возьмем, скажем, σ(t)= 2s+1q. Продолжим далее, чтобы
показать, что q = 1.
Предположим, что q > 1, так что t = (2s+1 – 1)q, Тогда q является
собственным множителем t, a t имеет различные множители 1, q, t (и, воз-
можно, другие), обеспечивая σ(t) ≥ 1 + q + t, С другой стороны,
σ(t) = 2s+1q = (2s+1 – 1)q + q = t + q.
Это противоречие доказывает, что q = 1, обеспечивая t = 2s+1 – 1, и
σ(t) = 1 + t. Последнее уравнение показывает, что t — простое число, так
что n = 2s(2s+1 – 1), где второй сомножитель является простым.
Таким образом, существует тесная связь между чётными совершен-
ными числами и простыми числами Мерсенна. Значения m, при которых
число становится простым, сами все являются простыми. Приведем не-
сколько первых простых чисел Мерсенна при m = 2, 3, 5, 7, 13, 17, 19,
31, 61, 89, 107, 127,521, 607, 1279, 2203, 2281, 3217, 4253, . . .
При разложении составного числа на нечетные простые множители
часто используют числа Кармайкла.
Числом Кармайкла называется составное число n, которое удовле-
творяет сравнению bn-1 ≡ 1 (mod n) для всех b, являющихся взаимно про-
стыми с n (в честь Р. Д. Кармайкла, который предложил их в 1912 г.).
Конечно, давая определение, мы не доказали, что такие числа суще-
ствуют, но приведём пример. Пусть n = 561 = 3 · 11 · 17. Таким образом,
35
(b, 561) = 1 означает, что (b, 3) = (b, 11) = (b, 17) = 1. Используя ма-
лую теорему Ферма,
b2 ≡ 1 (mod 3) предполагает, что b 560 = (b2)280 ≡ 1 (mod 3);
b10 ≡ 1 (mod 11) означает, что b560 = (b10)56 ≡ 1 (mod 11);
b16 ≡ 1 (mod 17) означает, что b560 = (b16)35 ≡ 1 (mod 17).
Так как 3, 11 и 17 являются тремя различными простыми числами, то
это означает, что b560 ≡ 1 (mod 561).
Теорема. Пусть n = q1 q2 . . . qk, где qi — различные простые числа
и k ≥ 2. Предположим, что для каждого i, (qi – 1) | (n – 1). Тогда n будет
числом Кармайкла.
Заметим, что простые числа должны быть нечётными, так как, если
q1 = 2, тогда n — чётное, а q2 , будучи нечётным, не удовлетворяет усло-
вию (q2 – 1) | (n – 1).
3. Формальное определение криптосистемы
Наряду с определением, приведенным ранее, криптосистемой назы-
вают совокупность ΣA= {X ,K,Y, E,D} множеств, для которых выпол-
няются следующие свойства [5] :
1) для любых x∈ X и k ∈K выполняется равенство
Dk (Ek (x)) = x ;
2) ∪
k K
Y Ek X
∈
= ( ) .
Здесь: X , Y, K — конечные множества возможных открытых тек-
стов, шифрованных текстов и ключей соответственно;
Ek :X →Y — правило зашифрования на ключе k ∈K ; множество
{Ek :k ∈K} = E , а множество {Ek (x) : x∈ X} = Ek (X ) ;
Dk :Ek (X )→ X — правило расшифрования на ключе k ∈K , и
D = {Dk :k ∈K};
Обычно предполагают, что если k ∈K представляется в виде
k = (ko; ks ) , где ko – открытый ключ для зашифрования информации, а
ks — секретный ключ для расшифрования (причем ks ≠ ko ), то Ek пони-
мается как функция Eko , а Dk — как функция Dks .
Условие 1 отвечает требованию однозначности расшифрования
(принцип обратимости).
Условие 2 означает, что любой элемент y∈Y может быть представ-
лен в виде y = Ek (x) для подходящих x∈ X и k ∈K . Отметим также,
36
что в общем случае утверждение «для любых k ∈K и y∈Ek (X ) выпол-
няется равенство Ek (Dk ( y)) = y » является неверным.
Совокупность множеств ΣA — алгебраическая модель шифра.
4. Криптосистема Эль Гамаля [3—5]
Определение. Целое x, удовлетворяющее сравнению ax ≡ b(mod n),
называется дискретным логарифмом числа b по модулю n и по основа-
нию a .
Криптосистема Эль Гамаля была предложена в 1985 году американ-
цем арабского происхождения Тахер Эль Гамалем. Данная система бази-
руется на сложности решения задачи дискретного логарифмирования, то
есть определении числа x при известных параметрах a , b и n
в сравнении ax ≡ b(mod n).
В соответствии с алгебраической моделью шифра
Σ = A {X ,K,Y, E,D} шифрсистема Эль Гамаля определяется следующим
образом.
Обозначим: Z p = {0;1;2;...;( p −1)} — множество чисел, представ-
ляющее собой полную систему вычетов для некоторого простого числа p ;
*
Z p — множество обратимых элементов совокупности Z p ; *
X = Z p ,
* *
Y = Z p × Z p , K {( p ,α , β ,δ ) :α β (mod p )} = δ ≡ , где p — дос-
таточно большое простое число (~ 10308 или ~ 21024 ); α — большое це-
лое число (~ 10154 или ~ 2512 ); δ — случайное целое число из интерва-
ла 1≤δ ≤ ( p − 2).
k = (ko ; ks ) ; ko = ( p,α ,β ) — открытый ключ; ks = (δ ) — секрет-
ный ключ.
Правило зашифрования определяется следующей формулой:
E (M) (C1; C2 ) ko = , где M — открытый текст; (C1; C2 ) — шифр.
C1 ≡ α r (mod p ) ; C 2 ≡ (M ⋅ β r )(mod p) ; r — рандомиза-
тор — случайное целое число из интервала 1≤ r ≤ ( p − 2), необходимое
для реализации схемы вероятностного шифрования, при которой зашиф-
рование одинаковых блоков открытого текста будет давать различные
шифрованные тексты (открытый текст и ключ не определяют шифрован-
ный текст однозначно).
37
Правило расшифрования:
D C C C C p k s ( , ) ( ( ) ) mod 1
1 2 2 1
= ⋅ δ − .
Замечание. При расшифровании используется секретный ключ δ и не
используется рандомизатор r .
Доказательство корректности алгоритма Эль Гамаля
Требуется доказать выполнимость условия обратимости:
D C C M k s ( 1 , 2 ) = .
Действительно [5] : D (C1 , C 2 ) = {[( M ⋅ r ) mod p ] ⋅
k s β
⋅{[(α rδ mod p)−1]mod p}}mod p = [M ⋅α rδ ⋅ (α rδ )−1 ]mod p = M .
Здесь учтено, что M < p и [α rδ ⋅ (α rδ )−1]mod p =1.
Необходимость использования различных значений рандомизатора r
для различных открытых текстов M и M* подтверждается тем, что в
противном случае соответствующие шифрованные тексты
(C1;C2 ) E (M) ko = и ( ; *) ( *)
2
*
C1 C E M ko = связаны соотношением
* 1 * 1
2 ( 2 ) ( )C ⋅ C − = M ⋅ M − , т.е. открытый текст M* может быть вычислен
по известному M.
Так как криптостойкость системы Эль Гамаля определяется сложно-
стью решения задачи дискретного логарифмирования в совокупности *
Z p ,
то следует учесть, что в настоящее время эта задача неразрешима при p ,
содержащем примерно 300 десятичных цифр. Рекомендуется также, чтобы
число ( p −1) содержало большой простой делитель.
Вероятностный характер шифрования может быть отнесен к достоин-
ствам системы Эль Гамаля, такие схемы обладают, как правило, большей
криптостойкостью, чем детерминированные алгоритмы.
Недостатком системы является удвоение длины шифрованного текста
по отношению к открытому тексту.
5. Криптосистема RSA (R. Rivest, A. Shamir, L. Adleman)
Наиболее широкое признание и применение в современном мире по-
лучила схема шифрования с открытым ключом RSA, аббревиатура которо-
го исходит от фамилий авторов Р. Л. Ривеста, А. Шамира и Л. М. Адлема-
на. Основой надёжности этого метода является огромная трудность факто-
ризации очень больших целых чисел. Метод также требует использования
очень больших простых чисел (150-значных и более), которые практически
находятся вероятностными методами, подобными изложенным ранее.
38
Основы создания криптосистемы RSA, рассматриваемой далее, берут
своё начало из экспоненциального шифрования [10]. Они были открыты С.
Полигом и М. Хэллманом [9;10]. Идея довольно проста. Выбирается про-
стое число р и ключ кодирования е, который является взаимно простым с
ϕ ( p) = p −1. Блок открытого текста, который предполагается зашифро-
вать, сначала преобразуется в числовую форму (один из методов осущест-
вления этого приведён ниже), а потом разбивается на подблоки цифр, ко-
торые, если рассматривать их как обычные числа, будут < р.
Предположим, например, что р = 37 781, а подблоки цифр сообще-
ния в числовом виде выглядят как
8069 6578 8584 8332.
Чтобы зашифровать это послание, заменим каждое четырёхзначное
число Mi (существующее «открытым текстом» в виде четырёхзначных чи-
сел) на Ci ≡ Mi
e (mod p), 0 < Ci < p. Таким образом, выбирая е = 367 (ко-
торое является взаимно простым числом с р – 1 = 37 780 = 22 · 5 ·1889),
зашифрованной формой будет
37059 12498 22955 20254
(т. е. 8069367 ≡ 37 059 (mod p)).
Как может быть это послание расшифровано, т.е. возвращено к пер-
воначальной цифровой форме и, далее, к обычному языку? Пусть d (ключ
расшифрования) будет таким, что de ≡ 1 (mod( p – 1)). То есть d просто
представляет собой инверсию е по модулю (p – 1), так как (е, р – 1) = 1, и
которая может быть вычислена методами определения обратных по моду-
лю величин . В представленном случае d = 3603. Теперь
Ci
d = (Mi
e) d = Mi
ed = (Mi
ed-1)·Mi = Mi mod p
согласно малой теореме Ферма, так как (p – 1) | (ed – 1). Таким образом,
возводя каждое (пятизначное) зашифрованное число в степень d и приводя
по mod p, мы раскроем первоначальное (четырёхзначное) число. То есть
(37 0593603) mod p = 8069 и т. д.
Чтобы использовать этот метод для отправки секретных посланий
между двумя людьми А и В, которые оба желают знать р (вся шифрация
производится по модулю p), А необходимо выбрать шифровальный ключ
е, в то время как В должен произвести соответствующую расшифровку
ключом d. Конечно, В может выбрать другой шифровальный ключ е′ для
отправки посланий А, так как А знает соответствующий ключ расшифров-
ки d′, для которого d′e′ ≡ 1 (mod (p – 1)).
Раскрытие этого шифра достаточно сложно, даже если р известно и
если соответствующие открытый текст M и зашифрованный текст С из-
вестны, так что C ≡ Me (mod p) . Проблема заключается в том, что не су-
39
ществует простого способа определения е из такого сравнения, когда р
представляет большое простое число.
Если простое число р и ключ шифрования (экспоненциального) е яв-
ляются оба раскрытыми в экспоненциальном шифровании, тогда, конечно,
всё потеряно (или найдено): ключ расшифрования может быть просто най-
ден как инверсия е по модулю р – 1. Метод криптографии с открытым
ключом является искусным способом посылки секретных сообщений меж-
ду двумя (или другим каким-либо числом) людьми, даже когда ключи
шифрования открыты (отсюда название), потому что нахождение ключей
для расшифрования является вычислительно трудной задачей.
Сама идея достаточно проста. Если два абонента сети, которых обо-
значим А и В, соответственно, хотят установить скрытую связь, каждый
выбирает два больших простых числа: pR, qR и pG, qG. Пусть nR = pR qR ,
nG = pG qG. Числа nR и nG могут быть известны окружающим, так как ис-
пользуемые простые числа достаточно большие. Каждый выбирает ключ
шифрования: еR и еG, каждый из которых будет взаимно простым с ϕ (nR ),
ϕ (nG ), соответственно. (Заметим, что ϕ ( pq) = ( p −1)(q −1) , когда p и q
являются простыми). Эти шифровальные ключи могут также быть извест-
ны окружающим. Каждый человек, знающий свои р, q и е, может просто
рассчитать инверсию d для е по модулю ϕ (n) . Но посторонний человек,
знающий только n и е, имеет незначительный шанс вычислить d без дей-
ствительного разложения на простые сомножители n, а А реально не в со-
стоянии вычислить dG, а В не сможет определить dR.
Когда А захочет послать сообщение В, он преобразует его обычным
способом в числовые блоки. Он также использует шифровальный ключ В
еG (который, как все шифровальные ключи, общеизвестен), чтобы зашиф-
ровать каждый блок Р в соответствии с правилом шифрования EG:
( ) (mod G )
е
ЕG Р Р n ≡ G .
Заметим, что, выполнив это шифрование, А будет не в состоянии
расшифровать его снова, так как он не знает dG. Однако В будет находить-
ся не в таком безнадёжном положении: зная оба dG и nG, он сможет рас-
шифровать с помощью правила расшифрования:
( ) (mod G )
d
DG С С n ≡ G .
Таким образом, DG (ЕG(Р)) ≡ Р (mod nG) на основе тех же самых
аргументов, какие были использованы в случае экспоненциального шиф-
рования.
Конечно, когда В пожелает отправить послание R, он использует
правило шифрования
40
( ) (mod R )
е
ЕR Р Р n ≡ R ,
а А расшифрует согласно правилу расшифровки ( ) (mod R )
d
DR С С n ≡ R .
Снова DR (ЕR(Р)) ≡ Р (mod nR). Вспомните, что А знает ER, EG и
DR, в то время, как В знает ER, EG и DG .
Важной частью написанного послания является подпись, чью инди-
видуальность подтверждает получатель тем, что сообщение действительно
получено от персоны, которую затребовал отправитель. Удивительно, что
возможно послать подпись, используя также открытый метод RSA шифро-
вания. Предположим, что nR < nG (конечно, оба А и В знают об этом) и то,
что А желает послать подпись В, т. е. последовательность символов в кон-
це послания, которую В должен сделать, чтобы раскрыть смысл послания,
которое могло бы прийти только от А. Предположим, что в действительно-
сти подпись представляет собой один блок открытого текста Р. Тогда А
зашифровывает его с помощью представления DR(P) в меньших блоках
перед дальнейшим шифрованием его как S. В конце этого сообщения А то-
гда посылает подпись S. Когда получатель В расшифрует конец послания,
используя ключ расшифрования dG , получается настоящая тарабарщина,
а именно:
DG (S) = DG (EG(DR(P))) = DR (P)
(конечно, DR(P) является числом). Бессмыслица получится, когда В будет
стремиться превратить эти числа в слова. Предполагая, что это является
подписью, он для этого используетЕR , которое раскрывает В; когда оно
переводится в слова, то приобретает смысл. Заметим, что только отправи-
тель А знает DR, так что только он может послать специфическую тара-
барщину DR в конце послания.
Доказательство корректности алгоритма RSA [5]
Определение. Пусть n = p ⋅ q , где p и q — простые числа. Пусть
X = Y = Zn –– множество открытых текстов, которое по объему сов-
падает с множеством шифрованных текстов и равняется полной сис-
теме вычетов по модулю n.
Предположим, что ключевое пространство имеет вид
K = {(n, p,q,e,d) : e,d ∈Zn , n = p ⋅ q, e ⋅ d ≡1(modϕ (n))}, где
ϕ (⋅) — функция Эйлера, (e,ϕ (n)) =1. Представим ключ k ∈K в виде
k = (ko; ks ) , где ko = (n,e) — открытый ключ; ks = (d) — секретный
ключ.
41
Правила зашифрования и расшифрования в системе RSA определим
следующим образом для x∈ X и y∈Y :
y E x xe n
ko = ( ) = mod ; D y yd n
ks ( ) = mod .
Пусть, в соответствии с определением криптосистемы RSA, n = p ⋅ q ,
(e ⋅ d)modϕ (n) =1, (5.1)
ϕ (n) = ( p −1) ⋅ (q −1) ,
y E x xe n
ko = ( ) = mod , D y yd n x
ks
( ) = mod = . (5.2)
Для любого целого числа x и простого p по малой теореме Ферма
x p ≡ x(mod p). (5.3)
Из (5.3) следует, что x p − x ≡ 0(mod p) , или
x ⋅ (x p−1 −1) ≡ 0(mod p). (5.4)
Если (x, p) = p, то p | x , следовательно, x ≡ 0(mod p). Отсюда
следует (5.4).
Если (x, p) =1, то по малой теореме Ферма x p−1 ≡1(mod p). Отсю-
да также следует (5.4).
Из соотношения (5.1) следует e ⋅ d = k ⋅ϕ (n) +1, k > 0 целое. Отсю-
да и из (5.3) получаем следующую цепочку равенств и сравнений:
yd = (xe )d = xed = xk ⋅ϕ (n)+1 = xk ⋅( p−1)⋅(q−1)+1 =
= xk ⋅ p⋅(q−1) ⋅ x−k ⋅q+k +1 = (x p )k ⋅(q−1) ⋅ x−k ⋅q+k +1 ≡ (5.5)
≡ xk ⋅(q−1) ⋅ x−k ⋅q+k +1 ≡ x(mod p) .
Таким образом, yd ≡ x(mod p) . Аналогично yd ≡ x(mod q) . (5.6)
Чтобы доказать сравнение yd ≡ x(mod n) , используем следующую лем-
му.
Лемма. Пусть a,b, c — натуральные числа, причем (a,b) =1, т.е. a и
b –– взаимно простые. Тогда: 1) если b|(a ⋅ c), то b|c ;
2) если a |c , и b|c , то (a ⋅b) |c .
В нашем случае a = p, b = q, ( p, q) =1, c = xe⋅d − x .
p |( xe⋅d − x ), q |( xe⋅d − x ), n = p ⋅ q |( xe⋅d − x ).
То есть yd ≡ x(mod n) для всех x , включая те, для которых (x, n) ≠ 1.
Тремя возможными подходами к криптоанализу алгоритма RSA яв-
ляются следующие:
1) простой перебор, который предполагает проверку всех возможных
личных ключей;
42
2) математический анализ. Существует несколько подходов такого
рода, но все они, по сути, эквивалентны нахождению множителей
произведения двух простых чисел;
3) анализ временных затрат, который опирается на анализ времени
выполнения алгоритма расшифрования.
Защита против простого перебора в случае RSA остается той же, что
и для других криптосистем, — использование большого пространства клю-
чей. С этой точки зрения, чем больше разрядность е и d, тем надежнее за-
щита. Однако из-за сложности вычислений, как при генерировании клю-
чей, так и при шифровании/расшифровании: чем большим оказывается
размер ключа, тем медленнее работает криптосистема.
Математический анализ обеспечивает три различных подхода к
криптоанализу RSA:
1) разложение n на два простых его множителя. Это позволит вы-
числить ϕ (n) = ( p −1)(q −1) , на основании чего можно будет
определить d = e−1 modϕ (n);
2) определение непосредственно ϕ (n) без предварительного опре-
деления p и q . Это также позволит определить
d = e−1 modϕ (n);
3) определение непосредственно d без предварительного определе-
ния ϕ (n) .
Чтобы избежать выбора значений n, которые могут быть разложены
на множители с малыми затратами, предлагается следующие ограничения
относительно p и q:
1) значения p и q должны различаться по длине на несколько раз-
рядов;
2) как ( p −1), так и (q −1) должны содержать в своих разложениях
достаточно большой простой множитель;
3) НОД ( p −1,q −1) должен быть достаточно малым.
Кроме того, доказано, что если e < n и 4
1
d < n , то d определяется
достаточно легко.
Анализ временных затрат, необходимых для расшифровки сообще-
ния компьютеру, может указывать на размер используемого ключа. Хотя
анализ временных затрат оказывается серьёзной угрозой, против него
имеются простые контрмеры, такие как:
1) постоянное время возведения в степень. Этого можно добиться
увеличением этого времени до определенного уровня, одинаково-
го для всех случаев;
2) случайные задержки;
43
3) маскировка. Умножение шифрованного текста на случайное число
перед тем, как выполнять возведение в степень.
В некоторых продуктах RSA Data Security предлагается возможность
использования функции маскировки. В них операция М = Сd mod n с
личным ключом выполняется следующим образом:
1) генерируется секретное случайное число r в диапазоне от 0 до n – 1;
2) вычисляется С′ ≡ Сre (mod n) , где е является открытым значени-
ем показателя степени;
3) вычисляется М′ ≡ (С′)d (mod n) для обычной реализации RSA;
4) вычисляется М ≡ М′r −1 mod n . В этом сравнении r −1 представ-
ляет собой мультипликативное обратное значение r mod n . Ре-
зультат будет корректным, если выполнится равенство
red mod n = rmod n .
При использовании маскировки общая производительность продукта
RSA Data Security снижается на 2...10 %.
6. Методы распределения криптографических ключей
Для распределения ключей используют несколько методов, которые
можно сгруппировать в следующие классы [8; 11; 12] :
1) публичное объявление;
2) публично доступный каталог;
3) авторитетный источник открытых ключей;
4) сертификаты открытых ключей.
Публичное объявление открытых ключей. Любая участвующая в
обмене данными сторона может предоставить свой открытый ключ по
средствам коммуникаций для всех пользователей.
Этот подход удобен, но он имеет одно слабое место: такое публичное
объявление может выдать любой человек. Это значит, что любой человек
может представиться пользователем А и послать открытый ключ другому
пользователю сети или предложить такой открытый ключ для всеобщего
пользования. Пока откроется этот подлог, фальсификатор сможет прочи-
тать все шифрованные сообщения, пришедшие за это время на имя А, и
сможет использовать открытый ключ для аутентификации (проверки и
подтверждения подлинности).
Публично доступный каталог. Более высокую степень защиты
можно обеспечить с помощью создания и обслуживания некоторого пуб-
лично доступного динамического каталога открытых ключей. Ответствен-
ность за сопровождение и распространение публичного каталога должен
нести некоторый надежный центр или организация.
44
Такая схема включает следующие элементы:
1) уполномоченный объект поддерживает каталог с записями, вклю-
чающими имя и открытый ключ для каждого участника;
2) каждый участник регистрирует свой открытый ключ с помощью
объекта, уполномоченного вести каталог. Такая регистрация
должна вестись либо при личной явке участника, либо по защи-
щенным коммуникационным каналам;
3) любой участник может заменить существующий ключ новым в
любой момент или из-за того, что открытый ключ был где-то уже
использован для пересылки достаточно большого объема данных
или из-за компрометации ключа;
4) периодически объект, уполномоченный вести каталог, публикует
весь каталог или дополнения к нему;
5) участники могут иметь также доступ к каталогу в его электронной
версии. Для этого обязательно требуется канал связи между уча-
стниками обмена данными и объектом, уполномоченным вести
каталог, предполагающий использование средств аутентификации.
Эта схема более защищена, чем индивидуальные публичные объяв-
ления, но и она уязвима. Если нарушителю удастся получить или вычис-
лить личный ключ объекта, уполномоченного вести каталог, нарушитель
сможет авторитетно выдавать фальсифицированные открытые ключи и,
следовательно, выступать от имени любого участника обмена данными и
читать сообщения, предназначенные любому участнику. Того же результа-
та нарушитель может достичь с помощью изменения записей, хранящихся
в каталоге.
Авторитетный источник открытых ключей. Эта схема предпола-
гает наличие некоторого центрального объекта, уполномоченного поддер-
живать динамический каталог открытых ключей всех участников обмена
данными. Кроме того, каждому из участников достоверно известен откры-
тый ключ центра, но только центр знает соответствующий личный ключ.
При этом выполняются следующие действия:
1) инициатор А посылает сообщение с меткой даты/времени
авторитетному источнику открытых ключей с запросом о те-
кущем открытом ключе участника В;
2) авторитетный источник отвечает сообщением, которое шиф-
руется с использованием личного ключа авторитетного ис-
точника. Это сообщение инициатор А может расшифровать,
используя открытый ключ авторитетного источника. Это со-
общение должно включать следующее:
— открытый ключ участника В, который участник А может
использовать для шифрования сообщений, предназначен-
ных для получателя В;
45
— оригинальный запрос, чтобы сторона А имела возмож-
ность сопоставить ответ с ранее отправленным запросом и
убедиться, что запрос не был изменен на пути к авторитет-
ному источнику;
— оригинальную метку даты/времени, чтобы отправитель
А мог удостовериться, что это сообщение не является од-
ним из старых сообщений от авторитетного источника, со-
держащим ключ, отличный от текущего открытого ключа
адресата В;
3) инициатор А сохраняет открытый ключ участника В и ис-
пользует его для шифрования сообщения, направляемого
получателю В и содержащего идентификатор отправителя А
и оказию, которая выступает в качестве уникальной метки
данного сообщения;
4) респондент В получает открытый ключ участника А от авто-
ритетного источника точно таким же способом, каким от-
правитель А получил открытый ключ получателя В;
5) респондент В посылает сообщение инициатору А, шифро-
ванное с помощью ключа В и содержащее оказию отправи-
теля А, а также новую оказию, сгенерированную участником
В, что убеждает, что отправителем полученного сообщения
был В;
6) инициатор А возвращает оказию, шифрованную с помощью
открытого ключа участника В, чтобы тот мог убедиться, что
отправителем ответа является А.
Итак, требуется отправить 6 сообщений, однако отсылать первые 4
требуется нечасто, так как обе стороны могут сохранить открытые ключи
друг друга для дальнейшего использования, что обычно называют кэширо-
ванием. Периодически пользователь должен запрашивать свежие экземп-
ляры открытых ключей своих адресатов, чтобы иметь гарантированную
возможность безопасного обмена данными. Авторитетный источник явля-
ется узким местом системы, поскольку пользователь должен апеллировать
к авторитетному источнику при необходимости получить открытый ключ
для каждого нового адресата, с которым этот пользователь намерен вести
переписку. Каталог имен и открытых ключей, поддерживаемый авторитет-
ным источником, остается уязвимым в отношении несанкционированного
вмешательства.
Сертификаты открытых ключей. Сертификаты могут использо-
ваться участниками для обмена ключами без контакта с авторитетным ис-
точником открытых ключей и должны обеспечивать способ обмена такой
же надежный, как способ получения ключей непосредственно от автори-
тетного источника открытых ключей. Каждый сертификат содержит от-
крытый ключ и другую информацию, создается авторитетным источником
46
сертификатов и выдается участнику вместе с соответствующим личным
ключом. Один участник передает информацию о своем ключе другому с
помощью передачи своего сертификата. Другие участники могут прове-
рить, был ли сертификат создан авторитетным источником. К описанной
схеме выдвигаются следующие требования:
1) любой участник должен иметь возможность прочитать сертифи-
кат, чтобы определить имя и открытый ключ владельца сертифи-
ката;
2) любой участник должен иметь возможность проверить, что сер-
тификат исходит из авторитетного источника сертификатов и не
является подделкой;
3) только авторитетный источник сертификатов должен иметь воз-
можность создавать и изменять сертификаты.
Схема использования сертификатов следующая. Каждый участник
обращается к авторитетному источнику сертификатов, предоставляя от-
крытый ключ и запрашивая для себя сертификат. Запрос должен предпола-
гать либо личное обращение, либо некоторую защищенную форму связи.
Для участника А авторитетный источник обеспечивает сертификат вида
А KRавт [ , А, В ] С = Е T ID KU ,
где авт KR — личный ключ, используемый авторитетным источником;
В KU — открытый ключ участника В; А ID — идентификатор участника А;
Т — дата/время отправления. Участник А может переслать этот сертифи-
кат любому другому участнику, который прочтет и примет сертификат:
[ ] [ [ , , ]] ( , , ) KUавт А KUавт KRавт А А А А D С = D Е Т ID KU = Т ID KU ,
где авт KU — открытый ключ авторитетного источника; А KU — открытый
ключ участника А.
Так как сертификат можно прочитать только с помощью открытого
ключа авторитетного источника сертификатов, это дает гарантию того, что
сертификат пришел именно от авторитетного источника. Элементы IDА и
KUА сообщают получателю имя и открытый ключ владельца сертифика-
та. Метка даты/времени Т определяет срок действия сертификата. Метка
даты/времени должна быть защищена от следующей последовательности
действий. Нарушитель узнает личный ключ А. По этой причине А генери-
рует новую пару ключей (личный и открытый) и обращается к авторитет-
ному источнику сертификатов за новым сертификатом. Тем временем на-
рушитель воспроизводит сообщение со старым сертификатом и отсылает
его В. Если В будет шифровать сообщения, используя старый скомпроме-
тированный ключ, нарушитель сможет прочитать это сообщение.
В этом смысле ситуация остается рискованной до тех пор, пока воз-
можные системы не будут информированы о том, что старая система уже
47
не действительна. Таким образом, метка даты/времени указывает на дли-
тельность срока действия сертификата.
После распределения открытых ключей становится реальной органи-
зация защищенной связи, не допускающей возможности перехвата или ис-
кажения сообщений. Однако в условиях применения шифрования с откры-
тым ключом скорость передачи данных оказывается относительно медлен-
ной, что часто неприемлемо для пользователей. Поэтому прибегают часто
к простой схеме распределения секретных ключей, которую предложил
Меркль.
Сущность предложенной схемы заключается в следующем. Если
инициатор А намерен обменяться данными с пользователем В, то предла-
гается следующая процедура:
1) сторона А генерирует пару (открытый/личный) ключей
( А KU , А KR ) и передает сообщение стороне В, содержащее А KU и
идентификатор отправителя А А ID ;
2) получатель В генерирует секретный ключ К и передает этот ключ
инициатору сообщения А зашифрованным с помощью открытого
ключа инициатора А;
3) пользователь А вычисляет KRА [ KUА [ S ]] D E К , чтобы восстановить
секретный ключ. Поскольку только пользователь А может рас-
шифровать это сообщение, только два участника обмена А и В бу-
дут знать значение А К ;
4) участник А уничтожает ключ А KR , а участник В — ключ А KU .
Теперь обе стороны А и В могут использовать связь, защищенную
традиционным шифрованием с сеансовым ключом А К . По окончании об-
мена данными и А и В уничтожают А К . Несмотря на простоту, этот прото-
кол весьма привлекателен. Никаких ключей не существует перед началом
связи и никаких ключей не остается после завершения связи. Поэтому риск
компрометации ключей минимален. В то же время связь оказывается за-
щищенной.
Этот протокол уязвим в отношении активных атак. Если нарушитель
Е имеет возможность внедрения в канал связи, то он может скомпромети-
ровать связь без того, чтобы быть обнаруженным, следующим образом:
1) участник А генерирует пару открытый/личный ключи ( А KU , А KR )
и передает сообщение адресату В, содержащее А KU и идентифи-
катор участника А А ID ;
2) нарушитель Е перехватывает сообщение, создает собственную па-
ру открытый/личный ключи (KUЕ ,KRЕ ) и передает сообщение
адресату В, содержащее KUЕ , IDА ;
3) В генерирует секретный ключ КS и передает [ ] ЕKU КS Е ;
48
4) нарушитель Е перехватывает это сообщение и узнает КS , вычис-
ляя DKR [EKU [КS ]] Е Е ;
5) нарушитель передает участнику А сообщение [ ] ЕKU КS А .
В результате оба участника А и В будут знать КS , но не будут по-
дозревать, что КS также известен нарушителю Е. Поэтому стороны А и В
могут начать обмен сообщениями, используя КS . Нарушитель Е больше
не будет активно вмешиваться в канал связи, а просто будет перехватывать
сообщения. Зная КS , нарушитель может расшифровать любое сообщение,
а участники А и В не будут подозревать о существовании проблемы. Та-
ким образом, простой протокол оказывается полезным только в случае пас-
сивного перехвата сообщений.
6.1. Распределение секретных ключей
с обеспечением конфиденциальности и аутентификации
Схема, представленная на рисунке 3, обеспечивает защиту как от ак-
тивной, так и пассивной атаки.
[ [ ]] ЕKU N IDА В 1
[ [ ]] Е N1 N2 KU А
[ ] Е N2 KUВ
[ [ ]] ЕKU ЕKR КS В А
Рис. 3. Распределение секретных ключей
с помощью шифрования с открытым ключом
Будем исходить из того, что А и В уже обменялись открытыми клю-
чами по одной из схем, описанных выше. Далее предполагается выполнить
следующие действия:
1) сторона А использует открытый ключ В для пересылки стороне В
шифрованного сообщения, содержащего идентификатор участни-
ка А ( IDА ) и оказию (N1), используемую для идентификации
данной транзакции;
2) пользователь В посылает сообщение пользователю А, зашифро-
ванное с помощью KUА, содержащее полученную от него оказию
(N1) и новую оказию (N2 ), сгенерированную пользователем В.
Отправитель Получатель
49
Присутствие N1 в сообщении убеждает участника А в том, что
респондентом является сторона В;
3) сторона А возвращает N2 , шифруя сообщение открытым ключом
стороны В, гарантируя В, что респондентом является сторона А;
4) участник А выбирает секретный ключ КS и посылает участнику В
сообщение [ [ ]] М ЕKU ЕKR КS В А = . Шифрование этого сообщения
открытым ключом стороны В гарантирует, что только участник В
сможет прочитать его, а шифрование личным ключом участника
А, — что только участник А мог послать его;
5) сторона В вычисляет D [Е [М]] KU А KRВ , чтобы восстановить сек-
ретный ключ.
Первые три действия этой схемы соответствуют последним трем
действиям при распределении открытых ключей авторитетным источни-
ком. В результате при обмене секретными ключами эта схема гарантирует
как конфиденциальность, так и аутентификацию.
Гибридная схема. Еще одна схема использования шифрования с от-
крытым ключом при распределении секретных ключей представляет гиб-
ридный подход, применяемый на мэйнфреймах фирмы IBM. Эта схема
предполагает участие центра распределения ключей (ЦРК), с которым ка-
ждый пользователь использует свой главный секретный ключ и распреде-
ление секретных сеансовых ключей, шифруемых главным ключом. В ос-
нове такого трехуровнего подхода лежит следующая логика:
— скорость выполнения процедуры. Этой логике соответствует мно-
го приложений, особенно ориентированных на передачу транзакций, где
сеансовые ключи должны меняться очень часто. Распределение сеансовых
ключей с помощью схемы с открытым ключом могло бы сделать произво-
дительность системы слишком низкой из-за относительно высоких требо-
ваний к вычислительным ресурсам при шифровании и расшифровании по
данной схеме. В случае трехуровневой иерархии шифрование с открытым
ключом применяется лишь иногда, чтобы изменить главный ключ, разде-
ляемый пользователем и ЦРК;
— обратная совместимость. Гибридную схему можно легко реали-
зовать в виде расширения уже имеющейся схемы, предполагающей ис-
пользование ЦРК с минимальными изменениями предусмотренной проце-
дуры и программного обеспечения.
Добавление уровня шифрования с открытым ключом обеспечивает
защищенное и эффективное средство распределения главных ключей. Это
является преимуществом в конфигурации, когда один ЦРК обслуживает
большое число пользователей, находящихся на значительном удалении
друг от друга.
50
Один из первых алгоритмов распределения ключей на основе асим-
метричного шифрования, предложенный Диффи и Хеллманом, нацелен на
обеспечение двум пользователям защищенной возможности сообщить
друг другу ключ, чтобы они могли обеспечить шифрование сообщений.
Сам по себе алгоритм ограничивается обменом ключей.
Эффективность алгоритма Диффи — Хеллмана опирается на труд-
ность вычисления дискретных логарифмов.
Обмен ключами по схеме Диффи — Хеллмана происходит следую-
щим образом. В этой схеме имеются два открытых числа : простое число q
и целое α , являющееся первообразным корнем q. Предположим, что поль-
зователи А и В намерены обменяться ключами. Пользователь А выбирает
случайное целое число Х А < q и вычисляет Y Х А (mod q)
А ≡α . Точно
также пользователь В независимо выбирает случайное целое число
ХВ < q и вычисляет Y ХВ (mod q)
В ≡α . Каждая сторона сохраняет зна-
чение Х в тайне и делает значение Y свободно доступным другой стороне.
Пользователь А вычисляет ключ по формуле К (Y )Х А (mod q)
≡ В , а поль-
зователь В — по формуле К (Y )ХВ (mod q)
≡ А . По этим двум формулам
вычисления дают одинаковые результаты, как следует из вычислений.
( mod ) (mod ) (Y ) (mod ).
( ) (mod ) (mod ) ( ) (mod )
( ) (mod ) ( mod ) (mod )
q q А q
q q q
К Y q q q
А В В
В А В А А В
А В А
Х Х Х
Х Х Х Х Х Х
Х Х Х
В
≡ ≡
≡ ≡ ≡ ≡
≡ ≡ ≡
α
α α α
α
Обе стороны обменялись секретными ключами. Поскольку при этом
Х А и ХВ были только в личном пользовании и поэтому сохранялись в
тайне, нарушителю придется работать только с q, α, ΥА и ΥВ. Таким обра-
зом, нарушителю придется вычислять дискретный логарифм, чтобы опре-
делить ключ ХВ = indα ,q (YВ ) .
После этого он сможет вычислить ключ К точно так же, как это де-
лает пользователь В.
Защищенность обмена ключами по схеме Диффи — Хеллмана опи-
рается на высокую трудность нахождения дискретного логарифма большо-
го простого числа.
Для примера выберем простое число q = 97 с первообразным корнем
α = 5. Пользователи А и В выбирают секретные ключи Х А = 36 и ХВ = 58,
соответственно. Каждый вычисляет открытый ключ:
ΥА = 536≡50 (mod 97), ΥB = 558≡44 (mod 97).
После обмена открытыми ключами каждый из них может вычислить
общий секретный ключ:
51
≡ ( )Х А (mod97) ≡ 4436 ≡ 75(mod97)
К YВ ,
≡ ( )ХВ (mod97) ≡ 5058 ≡ 75(mod97)
К YА .
Имея 44 и 50, нарушителю не удастся с легкостью вычислить 75.
На рисунке 4 представлен простой протокол, в котором применяются
вычисления в соответствии со схемой Диффи — Хеллмана [9]. Предполо-
жим, что пользователь А собирается установить связь с пользователем В и
использовать секретный ключ, чтобы зашифровать сообщения, передавае-
мые с помощью такой связи. Пользователь А может сгенерировать однора-
зовое секретное значение Х А , вычислить значение ΥА и отослать послед-
нее пользователю В. В ответ пользователь В генерирует секретное значе-
ние ХВ , вычисляет ΥB и посылает ΥB пользователю А. Оба пользователя
теперь могут вычислить их общий ключ. Необходимые открытые значения
q и α должны быть известны заранее. Пользователь А может также вы-
брать эти значения на свое усмотрение и включить их в первое сообщение.
Можно рассмотреть другой пример использования алгоритма Диф-
фи — Хеллмана для группы пользователей локальной сети. В этом случае
каждый пользователь должен сгенерировать секретное значение Х А для
долгосрочного применения и вычислить открытое значение ΥА. Все полу-
ченные таким образом открытые значения вместе с открытыми глобаль-
ными значениями q и α сохраняются централизованно в некотором катало-
ге. В любой момент пользователь В может получить доступ у открытому
значению пользователя А, вычислить секретный ключ и использовать его
для пересылки шифрованного сообщения пользователю А.
Пользователь А Пользователь В
ΥА
ΥB
Рис. 4. Обмен ключами по схеме Диффи — Хеллмана
Если централизованный каталог надежен, то эта форма коммуника-
ции обеспечивает как конфиденциальность, так и определенную степень
аутентификации. Поскольку только пользователи А и В могут определять
ключ, другой пользователь не может прочитать сообщение, чем обеспечи-
вается конфиденциальность. Получатель А знает, что только пользователь
Сгенерировать
случайное Х q А < ;
Вычислить
Y Х А q
А ≡α mod
Вычислить
К Y Х А q
В ≡ ( ) mod
Сгенерировать
случайное Х q В < ;
Вычислить
Y Х В q
В ≡α mod
Вычислить
К Y Х В q
А ≡ ( ) mod
52
В мог создать сообщение, используя этот ключ, чем обеспечивается аутен-
тификация. Однако такая схема не защищена от атак на основе воспроиз-
ведения сообщений.
7. Криптография с использованием эллиптических кривых
Большинство продуктов и стандартов криптографии с открытым
ключом основано на алгоритме RSA. Однако в связи с развитием методов
криптоанализа и вычислительной техники число битов ключа, необходи-
мое для надежной защищенности RSA, в последние годы резко возросло,
что обусловило рост загрузки систем в приложениях, использующих RSA.
Это породило множество проблем, особенно для узлов связи, специализи-
рующихся на электронной коммерции, где требуется защита больших
транзакций. В связи с этим появился конкурент RSA — это криптография
на основе эллиптических кривых (ЕСС — Elliptic curve cryptography). Поя-
вились стандарты по криптографии с открытым ключом ЕСС, например,
IEEE P1363.
Привлекательность подхода на основе эллиптических кривых по
сравнению с RSA заключается в том, что с использованием эллиптических
кривых обеспечивается эквивалентная защита при меньшем числе разря-
дов ключа, вследствие чего уменьшается загрузка процессоров приёмо-
передающих устройств.
Свойства эллиптических кривых. Эллиптические кривые описы-
ваются кубическими уравнениями следующего вида:
у 2 + аху + by = x3 + сх2 + dx + g , (7.1)
где a, b, c, d, g являются целыми числами.
Определение эллиптической кривой включает некоторый элемент,
обозначаемый О и называемый несобственным элементом (точкой беско-
нечности, нулевым элементом).
Из определения эллиптической кривой следует, что если три точки
эллиптической кривой лежат на одной прямой линии, то их сумма есть О.
Из этого определения вытекают следующие правила сложения над точками
эллиптической кривой:
1) объект О выступает в роли нулевого элемента при сложении, т.е.
О = – О и для любой точки на эллиптической кривой Р + О = Р;
2) вертикальная линия пересекает эллиптическую кривую в двух точ-
ках с одной и той же абсциссой х. Эта линия пересекает кривую и
в бесконечной точке. Поэтому Р + Р +О = О 1 2 и 1 2 Р = −Р , где
( , ) 1 Р = х у , ( , ) 2 Р = х − у . Точкой со знаком «минус» является точка с
той же координатой х, но с противоположным по знаку координа-
той у;
53
3) чтобы сложить две точки Q и R с разными координатами х, необ-
ходимо провести через эти точки прямую и найти третью точку
пересечения Р1 этой прямой с эллиптической кривой. Существует
только одна точка, если прямая не является касательной к эллип-
тической кривой в какой-либо из точек. В таком случае нужно по-
ложить Р1 = Q или Р1 = R, соответственно. Затем нужно восполь-
зоваться выражением Q + R= – Р1 ;
4) чтобы удвоить точку Q, необходимо провести касательную в точке
Q и найти другую точку пересечения S. Тогда Q + Q = 2Q = – S.
Вышеприведенные свойства сложения подчиняются всем обычным
свойствам сложения, например, коммутативному и ассоциативному зако-
нам. Умножение точки Р эллиптической кривой на положительное число k
также определено: это сумма k копий точки Р. Так, 2Р = Р + Р, 3Р = Р +
+Р + Р и т. д. Следовательно, в случае криптографии с использованием
эллиптических кривых приходится иметь дело с редуцированной формой
эллиптической кривой, которая определяется над конечным полем.
Особый интерес для криптографии представляет объект, называемый
эллиптической группой по модулю р, где р является простым числом. Та-
кая группа определяется следующим образом. Выберем два неотрицатель-
ных целых числа а и b, которые меньше р и удовлетворяют условию (де-
терминанту)
4а3 + 27b2 mod p ≠ 0,
тогда Ер (а,b) обозначает эллиптическую группу по модулю р, элемента-
ми которой являются пары неотрицательных целых чисел (х, у), которые
меньше р и вместе с точкой в бесконечности О удовлетворяют условию
у2 ≡ (х3 + ах + b)(mod p).
Эллиптическая кривая над полем действительных чисел с ненулевым
дискриминантом представляет собой гладкую кривую, в каждой точке ко-
торой можно провести касательную. В случае характеристики 2 существу-
ют две разновидности эллиптических кривых: суперсингулярные и несу-
персингулярные. Суперсингулярные — это эллиптические кривые, для ко-
торых левая часть уравнения (7.1) имеет вид у2 + by . Несуперсингуляр-
ные — это эллиптические кривые, для которых левая часть уравнения (7.1)
имеет вид у2 + аху . Эллиптической кривой соответствует эллиптический
интеграл, не берущийся в элементарных функциях.
Для модуля р=23 рассмотрим эллиптическую кривую
у2 ≡ х3 + х +1. Детерминант (4⋅13 + 27 ⋅12 )mod 23 = 8 ≠ 0 , что удовле-
творяет условиям эллиптической группой по модулю 23.
54
Для эллиптической группы рассматриваются только целые значения
от (0, 0) до (р, р) в квадранте неотрицательных чисел, удовлетворяющих
уравнению по модулю р.
Нахождение точек на эллиптической кривой производится по сле-
дующему алгоритму:
1) для каждого значения х, удовлетворяющего 0 ≤ x < p, вычисляется
(х3 + ах + b)mod p ;
2) для каждого из полученных на предыдущем шаге значений выяс-
няется, имеет ли это значение корень квадратный по модулю р.
Если нет, то во множестве Ер (а,b) нет точек с этим значением х.
Если корень существует, то имеются два значения у, соответст-
вующих операции извлечения квадратного корня (исключение со-
ставляет случай у = 0). Эти значения (х, у) и будут точками
Ер (а,b).
Правила сложения вЕр (а,b) соответствуют геометрическим прие-
мам, которые могут быть записаны следующим образом :
1) Р +О = Р;
2) если Р = (х, у) , то Р + (х, − у) = О . Точка (х, − у) является отрица-
тельным значением точки Р и обозначается (–Р). Точка (х,−у)
лежит на эллиптической кривой и принадлежит Ер (а,b);
3) если Р = (х1, у1) и Q = (х2, у2 ) , где Р ≠ Q, то Р + Q = (х3, у3)
определяется в соответствии с правилами
( 1 2 )(mod )
2
х3 ≡ λ − х − х p ,
у3 ≡ (λ (х1 − х2 ) − у1)(mod p),
где
⎪ ⎪⎩
⎪ ⎪⎨
⎧
⇒ =
+
⇒ ≠
−
−
=
.
2
3
,
1
2
1
2 1
2 1
Р Q
у
х а
Р Q
х х
у у
λ
Для примера рассмотрим следующий случай. Пусть Р = (0,0) на эл-
липтической кривой
у2 + у = х3 − х2 .
Требуется найти 2Р = Р + Р , 3Р= Р + Р + Р.
55
Решение. Преобразуем уравнение эллиптической кривой путем заме-
ны переменных у = у′ −1 2 и х = х′ +1 3 к виду
у′2 = х′3 − х′ 3 + (1 4 − 2 27).
На этой кривой точка Р становится точкой Q = (–1/3, ½). Используя форму-
лы удвоения, получим 2Q = (2 / 3, –½). Далее вычисляем 3Q = (2 / 3, ½).
Заметим, что 3Q = –(2Q), и следовательно, Q является точкой порядка 5,
т.е. 5Q = О. Возвращаясь к исходной кривой, имеем 2Р = (1,−1) ,
3Р = (1,0) = −2Р.
Не трудно показать, что операция сложения точек эллиптической
кривой коммутативна и ассоциативна, т.е. множество точек вместе с точ-
кой бесконечности О образует абелеву группу. Такое доказательство по-
лучают в проективной геометрии с использованием следующего утвер-
ждения:
если три прямые 1 2 3 L , L , L пересекают кубическую кривую в девяти
точках 1 2 9 Р ,Р ,...,Р с возможностью совпадения и пусть ′ ′ ′
1 2 3 L , L , L — три пря-
мые, пересекающие эллиптическую кривую в точках Q1,Q2,...,Q9 , при
этом Рi = Qi ,∀i =1,8, то такжеР9 = Q9 .
Более естественно точка бесконечности определяется в проективных
координатах.
Проективной плоскостью над полем F называется множество классов
эквивалентности троек (X ,Y,Z) , в которых хотя бы один элемент нену-
левой. Эквивалентными считаются тройки, если элементы одной из них
получаются умножением на скаляр другой: (X′,Y′,Z′) ∼(X,Y,Z) , если
для некоторого элемента λ ∈F (λX′,λY′,λZ′) = (X ,Y,Z) , такие классы
эквивалентности называются проективными точками. Проективные точки
с ненулевым элементом Z принадлежат классу эквивалентности, содержа-
щему единственную точку вида (х, у, 1) . Она просто вычисляется
х = X / Z , у = Y / Z . Таким образом, проективная плоскость может быть
определена как множество всех точек (х, у) обычной (аффинной) плоско-
сти с дополнением точек, для которых Z = 0. Эти точки можно предста-
вить как линию в бесконечности и рассматривать эту линию как «гори-
зонт» плоскости. Всякое уравнение G(X,Y) = 0 кривой в аффинной плос-
кости соответствует однородному уравнению G~(X ,Y,Z) = 0 для соответ-
ствующих проективных точек: просто заменим по схеме х = X / Z ,
у = Y / Z и умножим на степень Z, чтобы избавиться от знаменателей.
Например, если применить эту процедуру к аффинному уравнению эллип-
56
тической кривой у2 = х3 + ах + b , то получится проективное уравнение
Y 2Z = X 3 + аXZ2 + bZ3. Это уравнение выполняется для проективной
тройки (X,Y,Z) , Z ≠ 0 тогда и только тогда, когда соответствующая аф-
финная точка (х, у), где х = X / Z , у = Y / Z удовлетворяет уравнению
эллиптической кривой у2 = х3 + ах + b .
Какие еще проективные точки (X,Y,Z) , кроме точек с Z ≠ 0, удов-
летворяют уравнению G~(X ,Y,Z) = 0? Подставляя Z = 0 в уравнение, по-
лучаем Х 3 = 0. Но имеется только один класс эквивалентности троек
(X ,Y,Z) , где оба элемента Х и Z ненулевые — класс, содержащий (0, 1, 0).
Это и есть точка, которую обозначаем О. Это точка пересечения оси у с
линией бесконечности.
Для эллиптической кривой характеристики 2 используются следую-
щее представление:
1) для несуперсингулярного случая используется представление
6
2
2
3
1
у2 + а ху = х + а х + а и формулы при сложении различных то-
чек выглядят так
1 2 2
1 2
1 2
2
1 2
1 2
3 х х а
х х
у у
х х
х у у + + +
+
+
+ ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛
+
+
= ,
( ) 1 2 3 1
1 2
1 2
3 х х х у
х х
у у у + + + ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛
+
+
= ,
а при удвоении
2
6 1
2
х3 = х1 + а / х ,
3 3
1
2 1 1
3 1 х х
х
у х у х + ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛ +
= − + ,
2) для суперсингулярного случая используется представление
4 6
3
3
у2 + а у = х + а х + а и формулы при сложении различных то-
чек выглядят так
1 2
2
1 2
1 2
3 х х
х х
х у у + + ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛
+
+
= ,
( ) 1 3 1 3
1 2
1 2
3 х х у а
х х
у у у + + + ⎟
⎟⎠
⎞
⎜ ⎜⎝
⎛
+
+
= ,
57
а при удвоении
2
3
2
4
4
1
3 а
х х а +
= ,
( ) 1 3 1 3
3
4
2
1
3 х х у а
а
х х а + + +
+
= .
Определим свойства эллиптических кривых над полем Галуа
GF(2n ) . Рассмотрим также суперсингулярные и несуперсингулярные эл-
липтические кривые, основное различие между которыми состоит в том,
что для суперсингулярных кривых известен порядок (количество точек)
соответствующей группы (в данном случае GF(2n ) ).
При нечетном n имеется 3 класса изоморфных суперсингулярных эл-
липтических кривых (при четном n имеется 7 классов), стандартными
представлениями которых являются кривые:
2 3
ε1 : у + у = х ,
у2 + у = х3 + х
ε 2 : ,
: 2 3 1
ε 3 у + у = х + х + .
При нечетном n число точек первой кривой равно 2n +1 и
2n ± 2n+1 +1 для второй и третьей (знак + или – выбирается в зависимо-
сти от кривой и от сравнения по модулю 8). Группы этих кривых при не-
четном n являются циклическими. Указанные значения легко вычисляются
с использованием теоремы Вейля.
Теорема Вейля. Пусть ε — эллиптическая кривая над полем Fq и m ––
порядок ее группы. Тогда для порядка M(n) группы эллиптической кривой
qn εF над любым полем qn F , являющимся расширением поля Fq , справед-
лива формула
M(n) = qn −α n −β n +1,
где α и β — корни квадратного уравнения х2 − tx + q = 0, в котором ко-
эффициент t = q + m +1.
По теореме Хассе [10] выполняется неравенство t2 ≤ 4q и в случае
строгого неравенства корни квадратного уравнения α и β будут ком-
плексными.
В качестве примера найдем порядок группы эллиптической кривой в
случае ε 2 . Рассматривая ε 2 над полем GF(2), получим на ней точки:
(0,0), (0,1), (1,0), (1,1) и нулевой элемент О — всего пять элементов цикли-
58
ческой группы. Таким образом, q = 2, m = 5, t = – 2, откуда находим кор-
ни квадратного уравнения х2 + 2х + 2 = 0: α = −1+ i и β = −1− i
или в тригонометрической записи комплексных чисел
⎟⎠
⎞
⎜⎝
= ⎛ +
4
sin 3
4
2 cos 3
π π
α i ,
⎟⎠
⎞
⎜⎝
= ⎛ +
4
sin 5
4
2 cos 5
π π
β i .
По теореме Вейля получим
4
2 1 2 cos 3
4
sin 5
4
2 cos 5
4
sin 3
4
( ) 2 2 cos 3
1 2
2 2
n
М n n i n n i n
n n
n n n
π
π π π π
= + − +
= ⎟⎠
⎞
⎜⎝
− ⎛ + ⎟⎠
⎞
⎜⎝
= − ⎛ +
,
поскольку
4
sin 3
4
sin 3
4
sin 5
π π π
− = ⎟⎠
⎞
⎜⎝
= ⎛− .
Имеем
2
2
4
cos 3πn = −
, если n ≡ ±1(mod8) и
2
2
4
cos 3πn =
, если
n ≡ ±3(mod8).
Окончательно получаем
М(n) = 2n +1+ 2n+1 , если n ≡ ±1(mod8) ,
М(n) = 2n +1− 2n+1 , если n ≡ ±3(mod8).
Для определения порядка группы эллиптической кривой существуют
другие методы : см. алгоритм Скуфа и др.
Определив порядок группы эллиптической кривой, мы должны еще
убедиться, что в его реальном разложении на простые множители содер-
жатся большие простые числа, чтобы избежать простых случаев вычисле-
ния дискретного логарифма.
Операция сложения на основе эллиптических кривых является ана-
логом операции умножения по модулю простого числа в RSA, а много-
кратное повторное сложение — аналогом возведения в степень. Крипто-
графическую систему на основе эллиптических кривых строят на основе
трудности решения проблемы разложения на множители произведения
двух простых чисел. В одних случаях, например, для аддитивной группы,
заданной на множестве вычетов целых чисел по модулю простого числа
эта проблема легко решается с использованием процедуры на основе алго-
ритма Евклида. В других случаях, например, для мультипликативной
группы на множестве классов вычетов положительных чисел по модулю
59
простого числа субполиномиальные алгоритмы для этой проблемы неиз-
вестны. Для группы точек эллиптической кривой трудность проблемы
дискретного логарифма не уступает сложности этой проблемы в общей по-
становке для произвольной группы. Исключение составляют некоторые
суперсингулярные эллиптические кривые, для которых проблема дискрет-
ного логарифма решается эффективно.
7.1. Аналог обмена ключами по схеме Диффи-Хеллмана
Обмен ключами с использованием эллиптических кривых может
быть выполнен следующим образом. Сначала выбирается большое простое
число p и параметры а и b для эллиптической кривой в уравнении (7.1).
Это задает эллиптическую группу точек Ер (a,b). Затем в Ер (a,b) выби-
рается генерирующая точка G = (х, у). При выборе G важно, чтобы наи-
меньшее значение n, при котором nG = O оказалось очень большим про-
стым числом. Параметры Ер (a,b) и G криптосистемы являются парамет-
рами, известными всем участникам.
Обмен ключами между пользователями А и В можно провести по
следующей схеме:
1) сторона А выбирает целое число nА < n . Это число будет личным
ключом участника А. Затем участник А генерирует открытый
ключ РА = nА ×G. Открытый ключ представляет собой некото-
рую точку из Ер (a,b);
2) сторона В выбирает аналогично личный ключ nВ и вычисляет от-
крытый ключ РВ = nВ ×G;
3) участник А генерирует секретный ключ К = nА × РВ , а участник
В генерирует секретный ключ К = nВ × РА .
Две формулы, полученные в п. 3) дают один и тот же результат, по-
скольку
nА × РВ = nА × (nВ ×G) = nВ × (nА ×G) = nВ × РА .
Чтобы взломать эту схему, нарушитель должен будет вычислить k
по данным G и kG, что представляется трудным делом.
В качестве примера выберем р = 211, 211Е (0, – 4) , что соответствует
эллиптической кривой у2 = х3 − 4 и G = (2,2). Нетрудно сосчитать, что
241G = О. Личным ключом участника А является nА =121, поэтому от-
крытым ключом участника А будет РА =121(2,2) = (115,48) . Личным
ключом участника В будет nВ = 203, поэтому открытым ключом участ-
60
ника В будет РВ = 203(2,2) = (130,203) . Общим секретным ключом яв-
ляется 121(130, 203) = 203 (115, 48) = (161, 169).
В случае криптографии на основе эллиптических кривых секретный
ключ представляет собой пару чисел. Если этот ключ предполагается ис-
пользовать для традиционного шифрования, то из этой пары чисел необхо-
димо сгенерировать одно подходящее значение. Можно, например, ис-
пользовать одну из координат: х или у.
7.2. Протокол обмена ключами по схеме Месси-Омуры
Пусть Е — эллиптическая кривая порядка n, а е — некоторое целое ,
причем, (е,n) = 1, 1< e < n . Используя алгоритм инвертирования, найдем
d ≡ e−1(mod n). (7.2)
Используем то свойство, что законы модулярной арифметики над це-
лыми числами и над точками эллиптической кривой идентичны. Любую
точку Р эллиптической кривой можно вычислить по формулам
Q = eP,
R = dQ.
Очевидно, что Q = P. Протокол Месси-Омуры основан на этой идее,
реализуемой с учетом трудности решения проблемы определения скаляр-
ного множителя, соответствующего данной точке эллиптической кривой
относительно базовой точки, умножаемой на этот скаляр, т.е. на проблеме
дискретного логарифма для эллиптических кривых.
Обмен ключами между пользователями А и В можно провести по
следующей схеме:
1) сторона А выбирает целое число еА < n и вычисляет по формуле
(7.2) dА . Это число еА будет личным ключом шифрования участни-
ка А. Число dА будет личным ключом расшифрования участника А.
Затем участник А помещает свое сообщение m в некоторую точку
Рm эллиптической кривой и умножая на свое секретное значение
еА получает точку (генерирует открытый ключ)
А А m Р = е Р ;
2) сторона В выбирает аналогично еВ и dВ , которые являются лич-
ными ключами шифрования и расшифрования, соответственно, уча-
стника В. Затем участник В, умножая свое секретное значение еВ на
открытый ключ РА получает точку (генерирует открытый ключ)
РВ = еВРА ;
61
3) это значение отсылается участнику А;
4) участник А вычисляет
РО = dАPВ
5) и отсылает полученную точку В;
6) умножая полученную точку на свой секретный ключ расшифро-
вания dВ , участник В получает точку Рm , соответствующую сооб-
щению m участника А:
m В О Р = d P .
Вычисляя РО, участник А снимает действие своего ключа шифрования :
( ) ( ( )) ( ( )) О А В А В А А В А m В А А m В m Р = d P = d е Р = d е е Р = е d е Р = е Р .
Следовательно, участник В получает
( ) В О В А m m d P = d d Р = Р .
Сообщение m может быть использовано в качестве ключа традици-
онной криптосистемы. В данном случае не требуется опубликования ника-
кой информации о параметрах протокола, кроме самой эллиптической
кривой. Платой за это является необходимость трехкратной передачи по
открытым каналам.
7.3. Протокол распределения ключей Менезеса-Кью-Ванстона
(MQV-протокол)
Данный протокол имеет принципиальное отличие от вышеперечис-
ленных. Дело в том, что рассмотренные ранее протоколы не защищены от
атаки так называемого «посредника». Под посредником здесь имеется в
виду криптоаналитик, с самого начала контролирующий открытый канал
связи участников А и В и мешающий их нормальному общению. Посред-
ник способен, перехватывая сообщения, проходящие по открытому каналу,
и посылая участникам А и В свои сообщения, создавать у легитимных
абонентов впечатление нормальной работы протокола, в то время как на
самом деле каждый из участников будет общаться непосредственно с по-
средником.
Для предотвращения действий активного криптоаналитика необхо-
дима аутентификация кратковременных ключей, например, еАР и еВР в
протоколе Месси-Омуры. Для этого используется открытое опубликование
ключей d Р А и d Р В . При этом постороннее лицо не в состоянии стать по-
средником в силу сложности решения проблемы дискретного логарифми-
рования. Протокол организуется таким образом, что кратковременный от-
крытый ключ функционально связывается с долговременным и поэтому
третье лицо не сможет стать посредником связи между двумя абонентами.
Для успеха посреднику необходимо вмешаться в процессы передачи как
долговременных, так и кратковременных ключей и воспрепятствовать воз-
62
можности проверить правильность передачи долговременных ключей ме-
жду участниками А и В.
Использование кратковременного ключа обеспечивает невозмож-
ность использования раскрытого при одной из передач информации для
раскрытия секрета, вырабатываемого при последующих передачах.
Математическое обоснование этого протокола можно получить на
основе модулярной арифметики, хотя имплементация может быть осуще-
ствлена с использованием циклического свойства подгруппы точек эллип-
тической кривой.
В обоих случаях используется двоякая трактовка координат точек
эллиптической кривой: а) как элементов расширения поля, над которым
строится кривая; б) как кодов целых чисел.
В случае использования модулярной арифметики над такими числа-
ми могут выполняться операции сложения и умножения по модулю n по-
рядка эллиптической кривой, в случае использования арифметики эллип-
тической кривой на такие числа могут умножаться точки эллиптической
кривой. В этом случае цикличность определяется порядком подгруппы то-
чек эллиптической кривой, а знание порядка эллиптической кривой или
этой подгруппы не требуется.
Участники А и В располагают точкой Р эллиптической кривой по-
рядка n, над которой осуществляются все вычисления. Кроме того, они
знают долговременные и кратковременные ключи друг друга:
1) ключи участника В известны участнику А
QВ = dВР = (аВ ,bВ ) ,
( , ) В В В В R = k Р = х у ;
2) ключи участника А известны участнику В
( , ) А А А А Q = d Р = а b ,
( , ) А А А А R = k Р = х у .
7.4. Протокол Эль Гамаля для криптосистемы с использованием
эллиптических кривых
В случае криптосистемы RSA использование протокола Эль Гамаля
выглядит следующим образом. Выбирается простое число n и случайные
числа р < n и q < n . Открытым ключом является тройка
(n, p, pq modn = у) , а q используется в качестве секретного ключа.
Для шифрования открытого текста m необходимо вычислить
а ≡ pk (mod n), b(m) ≡ ( уkm)(modn), где k — случайное взаимно про-
стое с n число. Шифртекстом является пара а , b(m). Очевидно, что для
расшифровки требуется вычислить m = (b(m) / aq )mod n.
63
Модификация протокола Эль Гамаля, использующая мультиплика-
тивную группу эллиптической кривой, выглядит следующим образом.
Пусть открытый текст М является точкой эллиптической кривой Е. В слу-
чае если открытый текст представлен в виде набора точек, описанные ни-
же преобразования производятся для каждой точки отдельно.
Абоненты криптосистемы А и В уже совершили обмен частями клю-
ча kАQ и kВQ по протоколу Диффи-Хеллмана. Теперь абонент А, же-
лающий переслать В сообщение М, должен выбрать секретное число l и
отправить другому абоненту пару точек эллиптической кривой
Е = (lQ,M + l(kВQ)). Для расшифровки полученного сообщения абонент
В вычисляет Т = kВ (lQ)(l(kВQ)). Очевидно, что М = М + l(kВQ) −T .
Следует обратить внимание на то, что точка lQ выполняет функцию
суммы шифра и, следовательно, одна и та же точка Q не должна исполь-
зоваться дважды. В случае если она используется дважды, то путем сличе-
ния двух различных шифртекстов возможно не только расшифрование
шифртекста, но и определение секретных компонентов системы.
7.5. Обоснование протоколов с использованием модулярной
арифметики
Распределение ключей.
Протоколом предусматривается три этапа, симметрично выполняе-
мых каждой из сторон.
На первом этапе участники А и В, используя свои секретные данные
kА,dА и kВ, dВ , вычисляют числа
sА = (kА + хАаАdА)mod n ,
sВ = (kВ + хВаВdВ )mod n .
На втором этапе они вычисляют точки эллиптической кривой
UА = RВ + хВаВQВ ,
UВ = RА + хАаАQА.
На третьем этапе они вычисляют точку эллиптической кривой
W = sАUА,
W = sВUВ .
Одно и то же обозначение в левой части формул указывает на то, что
оба результата совпадают, что доказывается таким образом:
64
Для участника А
(( )( )mod ) .
(( )mod )( )
(( )mod )( )
(( )mod )( )
k x a d k x a d n P
k x a d n k x a d P
k x a d n k P x a d P
s U k x a d n R x a Q
А А А А В В В В
А А А А В В В В
А А А А В В В В
А А А А А А В В В В
= + + ⋅
= + + =
= + + =
= + + =
Для участника В
((( )( ))mod ) .
(( )mod )( )
(( )mod )( )
(( )mod )( )
k x a d k x a d n P
k x a d n k x a d P
k x a d n k P x a d P
s U k x a d n R x a Q
В В В В А А А А
В В В В А А А А
В В В В А А А А
В В В В В В А А А А
= + + ⋅
= + + =
= + + =
= + + =
В рассмотренной интерпретации протокола модулярная арифметика
сочетается с арифметикой эллиптических кривых.
Рассмотрим интерпретацию, когда модулярная арифметика не ис-
пользуется и числа sА , sВ заранее не вычисляются.
Участник А может вычислить точку UА эллиптической кривой, вы-
полнив умножение точки QВ на константу аВ и константу хВ , а затем
сложить полученную точку с RВ . Аналогичным образом участник В вы-
числяет точку UВ .
Для получения точки W участники А и В, имея в виду, что надо ум-
ножить полученные точки на константы sА и sВ , могут проделать это по
следующему алгоритму (описывается для стороны А):
1) вычисляется k АUА путем умножения точки эллиптической кри-
вой на константу;
2) определяется хА(аА(dАUА)) путем последовательного пере-
множения соответствующих величин;
3) складываются две точки эллиптической кривой, полученные в
пп. 1) и 2).
По окончании исполнения протокола участники А и В располагают
секретной точкой W эллиптической кривой, координаты которой могут
быть использованы для построения бинарного кода секретного ключа тра-
диционной системы шифрования.
65
8. Цифровая подпись
8.1 Стандарт DSS, алгоритм DSA
В 1991 г. Правительственный национальный институт стандартов и
технологий США утвердил стандарт цифровой подписи DSS (Digital Signature
Standard), основанный на специальном алгоритме цифровой подписи
DSА (Digital Signature Algorithm) для использования в правительственных
и коммерческих организациях. Алгоритм основан на трудности проблемы
дискретного логарифмирования мультипликативной группы конечного поля.
Для инициализации каждый пользователь должен проделать следующее:
1) выбрать простое число q, не менее 150 бит, используя для этого
генератор случайных чисел и тесты на простоту;
2) аналогичным образом выбрать второе простое число р, не менее
500 бит, причем делителем р – 1 является q;
3) выбрать образующий элемент α единственной циклической под-
группы группы ∗
Fр порядка q, которое находится вычислением
α ≡ g( р−1) q (mod p) для случайно выбранного целого числа
g (если в результате вычислений получается целое, отличное от
единицы, то α будет образующим элементом);
4) определить случайное число а∈0,q в качестве секретного ключа
и образовать открытый ключ у ≡α а (mod p) .
Теперь пользователь может подписывать сообщения. Сначала он
применяет к открытому тексту m хэш-функцию, получая целое
h(m)∈0,q . Затем он выбирает случайное целое k ∈0, q и вычисляет
r ≡ (α k mod p)(mod q) . В заключение пользователь находит целое s та-
кое, что s≡ (k–1[h(m) + ar])(mod q) . Подпись этого пользователя m образу-
ется парой чисел (r, s) по модулю q.
Чтобы проверить подпись, противоположная сторона, получив ау-
тентифицированный открытый ключ от первого пользователя ( р,q,α , у) ,
должна выполнить следующие действия :
1) проверить, выполняются ли условия (0 < r < q) и (0 < s < q) , а
если нет, то отклонить подпись;
2) вычислить w≡ s–1(mod q) и h(m) ;
3) найти ( 1 )(mod )
u1 s h q ≡ − и ( )(mod ) u2 ≡ rw q ;
4) вычислить v ≡ ((α u1 уu2 )mod p)(modq) ;
5) принять подпись, если v = r , и отклонить в противоположном
случае.
66
Достоинством рассмотренной схемы является то, что подпись явля-
ется короткой (два числа по 150 бит каждое). С другой стороны, уровень
секретности определяется сложностью проблемы дискретного логарифма.
Алгоритм ESDSA — аналог DSA для эллиптических кривых. Для
простоты будем рассматривать эллиптические кривые над полем Fр .
Пусть Е — эллиптическая кривая, определенная над полем Fр , и
пусть Р — точка простого порядка q кривой Е(Fр ) . Эта кривая и точка на
ней являются системными параметрами. Используемые простые числа р и
q примерно одного порядка. Каждый пользователь выбирает случайное
число а в интервале 1< a < q −1 и вычисляет свой открытый ключ по
формуле Q = aP . Он публикуется при сохранении числа а в качестве сек-
ретного ключа пользователя.
Протокол ESDSA для вычисления цифровой подписи. Чтобы под-
писать свое сообщение, пользователь проделывает следующее:
1) выбирает случайное целое число k ∈1,q −1;
2) вычисляет kP = (x1, y1) и r ≡ x1(mod q) ( х1∈0, p −1 с даль-
нейшим приведением по модулю q). Если r ≡ 0(mod q), то вы-
бирают новое случайное число k ∈1,q −1;
3) определяет k−1modq ;
4) вычисляет s ≡ (k-1[h(m)+ xr])(modq), где h(m) — хэширован-
ное посылаемое сообщение m. Если s = 0, то значения
s−1modq , требуемого по п. 3) для верификации подписи не су-
ществует, откуда необходимо возвращение к п. 1);
5) подписью для сообщения m является пара чисел (r, s) .
ESDSA для верификации подписи. Чтобы проверить подпись источ-
ника сообщения, пользователь проделывает следующее:
1) получает авторизированную копию открытого ключа Q источни-
ка сообщения;
2) проверяет принадлежность чисел (r, s) интервалу (1,q −1);
3) вычисляет w≡ s–1(mod q) и h(m) ;
4) находит ( 1 )(mod )
u1 s h q ≡ − и ( )(mod ) u2 ≡ rw q ;
5) вычисляет (х0, у0 ) = u1P + u2Q, v ≡ х0 (mod q) ;
6) принимает подпись, если v = r , и отклонить в противоположном
случае.
67
Основное различие между ECDSA и DSA состоит в способе образо-
вания r . DSA вычисляет r как случайную степень α k mod p, приведен-
ную по модулю q , которое должно принадлежать интервалу (1,q −1).
ECDSA формирует целое r взятием абсциссы точки kP и приведением ее
по модулю q .
Для получения того же уровня секретности, что и в случае примене-
ния DSA, параметр q должен быть 160-битовым.
Вместо использования Е и Р в качестве глобальных системных па-
раметров, можно фиксировать только поле Fр для всех пользователей и
позволить каждому пользователю выбирать собственную эллиптическую
кривую Е и точку Р∈Е(Fр ) . В этом случае определенное уравнение
кривой Е, координаты точки Р, а также порядок q этой точки Р должны
быть включены в открытый ключ пользователя. Если поле Fр фиксирова-
но, то аппаратная и программная составляющие могут быть построены так,
чтобы оптимизировать вычисления в этом поле. В то же время имеется ог-
ромное число вариантов выбора эллиптической кривой над полем Fр .
8.2. Обобщенная схема цифровой подписи Эль Гамаля
Обобщенная схема электронной подписи Эль Гамаля работает в лю-
бой абелевой группе.
Для работы по данной схеме каждому участнику необходимо:
1) выбрать подходящую циклическую группу G порядка n и её об-
разующий элемент α ;
2) выбрать случайное целое число а∈1, n −1 и вычислить элемент
у =α а mod n ;
3) сформировать открытый ключ (α , у) на основе секретного
ключа а .
Для формирования подписи, сопровождающей документ m, участ-
ник А должен выполнить следующие действия:
1) выбрать случайное секретное число k ∈1, n −1, взаимно простое с
n , (k, n) =1;
2) вычислить элемент r =α k mod n ;
3) найти k −1modn;
4) вычислить хэш-функции h(m) и h(r);
5) найти s = k −1[h(m) − ah(r)]mod n;
68
6) цифровой подписью является пара (r, s) .
Для проверки цифровой подписи участника А на документе m уча-
стник В должен проделать следующие действия:
1) получить авторизированную версию открытого ключа участника
А (α , у) ;
2) вычислить хэш-функции h(m) и h(r);
3) найти v ( уh(r) rs )mod n
1 = ⋅ ;
4) вычислить v h(m) mod n
2 =α ;
5) принять подпись, если v1 = v2 и отклонить ее в противоположном
случае.
Генерация подписи требует вычислений, как в группе G, так и в
группе Zn , в то же время проверка подписи связана с вычислениями
только в группе G.
Рассмотренный алгоритм наиболее удачно может быть реализован
при использовании в качестве группы G последовательность точек эллип-
тической кривой над конечным полем Fq . Проблема дискретного лога-
рифмирования в этой группе гораздо сложнее, чем в мультипликативной
группе конечного поля Fq . Отсюда следует, что q может иметь меньшую
размерность, чем в случае имплементации в группе Fq .
8.3. Схема цифровой подписи Эль Гамаля с возвратом сообщения
Во всех ранее рассмотренных схемах цифровой подписи для верифи-
кации подписи требовалось само сообщение. Описываемая схема не ис-
пользует текст сообщения при верификации подписи, а напротив, выдает
подписанное сообщение при положительном результате верификации. При
этом сообщение перед генерацией подписи должно быть преобразовано
так, чтобы в него была включена избыточная информация.
Пространством сообщений здесь является М = Z∗р , где р — простое
число. В качестве пространства подготовленных к подписанию сообщений
МS используется декартово произведение МS = Z р × Zq , где q — про-
стое число, которое является делителем ( р −1). Пусть R — инъекция из
пространства сообщений М в пространство подписанных сообщений
МS . Например, значение R(m) может быть представлено как
(m,mmodq) . Через R−1 обозначается отображение из образа функции R
69
в ее область определения: R−1 : Im(R)→М . Например,
R−1(m,mmodq) = m.
Алгоритм генерации ключа тот же, что и в алгоритме DSA, с тем от-
личием, что размеры р и q могут быть одного порядка.
Алгоритм генерации подписи на сообщение m следующий:
1) вычисление m = R(m) ;
2) выбор случайного секретного числа k ∈1,q −1 и вычисление
r ≡α −k (mod p);
3) вычисление е ≡ (m~r)(mod p) ;
4) определение s ≡ (ae + k)(mod q);
5) объявление пары (е, s) как подпись сообщения m.
Алгоритм верификации подписи следующий:
1) получение авторизированной копии открытого ключа источника
сообщения;
2) прием сообщения при условиях 0 < е < р и 0 < s < р и отклоне-
ние при невыполнении этих условий;
3) вычисление v ≡ (α s у−е )(mod p)и m~ ≡ (ve)(mod p) ;
4) отклонение подписи при условии, что m~∉MR , и прием при не-
выполнении этого условия;
5) восстановление сообщения по схеме m = R−1(m~).
Доказательство корректности алгоритма.
Алгоритм генерации подписи осуществляется по следующей схеме
v ≡α s у−е ≡α s−ae ≡α k (mod p) .
Таким образом,
vе ≡α km~α −k ≡ m~(mod p) ,
что и требовалось доказать.
8.4. Цифровая подпись с использованием точек эллиптической
кривой
Пусть е = h(m) — значение хэш-функции для документа m, и пусть
Е — точка из группы точек эллиптической кривой, Р — базовая точка от-
крытого ключа, n — порядок этой точки, s –– секретный ключ участника
А, подписывающего документ. Открытым ключом участника А является
точка Q = sP.
Алгоритм генерации подписи следующий:
1) участник А образует случайную строку k и вычисляет
70
R = kP;
2) используя целочисленную абсциссу х точки R, участник А вы-
числяет
с ≡ (х + е)(mod n) ,
d ≡ (k − sc)(mod n).
Пара (с, d) является подписью для документа m, для которого
h(m) = e.
Для проверки того, что h(m) является корректным хэш-значением,
выполняется следующий алгоритм:
1) вычисляется
R′ = dP + cQ;
2) используя абсциссу R′ , вычисляется
е′ ≡ (с − х′)(mod n);
3) совпадение последнего значения с хэш-значением h(m) подтвер-
ждает положительный результат проверки.
9. Модели атаки нарушителя
При определении надежности криптосистемы определяющее значе-
ние имеет набор возможностей, которыми располагает предполагаемый
нарушитель. Чем менее мощными средствами располагает нарушитель,
тем более высокой окажется оценка надежности. Возможности нарушите-
ля (атаки) могут быть описаны в терминах теории исчислений.
Пусть есть две модели возможностей нарушителя такие, что первая
содержит в себе вторую. В этом случае будем говорить, что первая модель
больше второй, т.е. на множестве моделей существует отношение частич-
ного порядка. Упорядоченность моделей нарушителя индуцирует упоря-
доченность системы безопасности.
При анализе надежности систем безопасности возникают две задачи:
1. Проверить безопасность данной системы относительно некоторой
модели нарушителя.
2. Для данной системы найти максимальную модель, относительно
которой она является безопасной (существует доказательство
безопасности).
Для того чтобы эти доказательства имели смысл, система аксиом, за-
даваемая моделью возможностей нарушителя, должна быть непротиворе-
чивой. При моделировании возможностей нарушителя необходимо учиты-
вать следующие его возможности:
1. Вычислительные (тип вычислительной модели, ее производи-
тельность, объем памяти и др.).
71
2. Математические (известные нарушителю алгоритмы решения
возникающих при криптоанализе задач, а также возможности
создавать новые алгоритмы).
3. Технические (инструмент, реализующий атаку).
4. Организационные (дополнительные способы получения инфор-
мации, такие как доступ к открытым текстам, доступ к ключам,
выведенным из употребления и т. п.).
В случае криптосистем на эллиптических кривых специфическими
являются математические возможности нарушителя.
Модель возможностей нарушителя называется вырожденной, если
единственный способ чтения информации нарушителем — чтение уста-
новленным в протоколе порядком, а единственный способ изменения ин-
формации — запись установленным порядком.
Если защищаемая информация упорядочена по уровню секретности,
а пользователи системы — по полномочиям доступа, то в рамках вырож-
денной модели возможностей получается модель безопасности Белла-
Лападулы.
Система называется безопасной по чтению (записи) в смысле Белла-
Лападулы тогда и только тогда, когда полномочия субъекта по чтению (за-
писи) соответствуют уровню секретности информации. Система называет-
ся безопасной в смысле Белла-Лападулы тогда и только тогда, когда она
безопасна по чтению и записи.
Все атаки исчисления, порожденного вырожденной моделью воз-
можностей нарушителя, соответствующей модели безопасности Белла-
Лападулы, описываются на языке логики предикатов первого порядка.
Следствием этого в модели безопасности Белла-Лападулы множест-
во допустимых атак является разрешимым, т.е. для любой атаки может
быть доказана ее выводимость или невыводимость из аксиомы модели
возможностей нарушителя.
В невырожденных моделях порождающие правила предполагают
возможность использования математических методов криптоанализа, по-
зволяющих при помощи вычислений получить некоторую информацию
(например, ключ шифрования) без ее прямого чтения. Для такой модели
система является безопасной тогда и только тогда, когда она является
безопасной в смысле Белла-Лападулы, а сложность вскрытия секретной
информации наилучшим методом превышает пороговую. Такие модели
чаще всего используются при оценке надежности криптосистем.
10. Модель несанкционированной подмены передаваемой информации
Среди возможных способов осуществления несанкционированного
доступа в сеть передачи информации одним из наиболее неприятных явля-
ется подмена истинной информации на ложную. В этом случае, помимо
72
раскрытия содержания «истинной» информации, нарушитель посылает за-
ведомо ложную, которая может иметь неприятные последствия для поль-
зователя данной сети или канала связи.
Пользователь А передает файл у пользователю В, который получает-
ся из открытого текста х путем шифрования его по правилу
у =Φ(х(m)) , (10.1)
где m — ключ шифрования.
Файл содержит информацию (например, пароль), которая должна
быть защищена от разглашения. Нарушитель, не обладающий правом чте-
ния этого файла, может, отслеживая передаваемые данные, получить ко-
пию этого файла в свое распоряжение.
На основе анализа ряда перехваченных данных нарушитель может
определить тот ключ m, который используется в канале связи между поль-
зователями, которых будем называть сторонами А и В. На основе выяв-
ленной связи нарушитель составляет собственное сообщение нужного ему
содержания и передает его в канал связи между сторонами А и В. Напри-
мер, перехватив и задержав сообщение клиента о проведении биржевой
операции, нарушитель отправляет заведомо ложное сообщение брокеру с
указанием о проведении ряда биржевых операций. После падения курса
акций, приобретенных для клиента брокером, клиент отказывается под-
твердить, что он отправлял такое сообщение.
Основные требования к обеспечению безопасности передачи инфор-
мации вытекают из обычных соображений и здравого смысла и могут быть
представлены четырьмя терминами: конфиденциальность, аутентифика-
ция, отсутствие искажений и сохранение целостности. Однако для доста-
точно глубокого понимания используемых при этом гарантирующих безо-
пасность средств требуется значительно больше, чем требует простой
здравый смысл, поскольку механизмы реализации этих требований на
практике могут иметь весьма сложную теоретическую подоплеку.
Рассмотрим двух главных участников рассматриваемого процесса:
владельца А (представителя положительной стороны) и нарушителя (отри-
цательная сторона). Нарушитель стремится получить необходимую ин-
формацию и следит за различием в режиме передачи сообщений. Для пре-
дотвращения утечки информации сторона А предполагает установить в
каждом передатчике информации генератор ключей, от которого он полу-
чает точный дубликат информации, и шифрующее устройство, которое за-
секречивает сообщение х, используя ключ m для получения шифрованного
послания согласно формуле (10.1).
Время от времени сторона А посещает свой офис для изменения
ключей генератора. Допустим, что нарушитель знает х, Φ( ⋅,⋅ ) (но не мо-
73
жет изменить их) и у (которое может изменить), но не знает m. Сторона А
знает у, m и Φ( ⋅,⋅ ).
Если нарушитель попытается послать стороне А ложное сообщение
'o
у , для которого может не быть исходного сообщения х' , удовлетворяю-
щего у =Φ(х' ,m)
о '
, и тогда сторона А обнаружит обман нарушителя. Но
если нарушитель сможет решить уравнение (10.1), то тогда он может ус-
пешно заменить истинное сообщение ложным, но правильно зашифрован-
ным у =Φ(х' ,m)
о '
. Возникает задача получения Φ( ⋅,⋅ )такого, чтобы было
невозможным для нарушителя обмануть сторону А, не будучи обнаружен-
ным.
Эта задача применима и к другим ситуациям (торговые автоматы,
кассовые аппараты и т. д.), и, действительно, первоначально она была по-
ставлена для контроля за производством определенных материалов в инте-
ресах сокращения вооружений.
Задача похожа на обычно встречающуюся в криптографии ситуа-
цию, когда ключ m используется для шифрования открытого текста х в ко-
дированную форму у =Φ(х(m)) . Но существует значительное отличие.
Так как нарушитель уже знает х, то большинство стандартных криптогра-
фических методов позволяет нарушителю раскрыть ключ m.
Чтобы затруднить возможность нарушителю раскрыть ключ, исполь-
зуя уравнение (10.1), сторона А должна сконструировать такую функцию
Φ( ⋅,⋅ ), чтобы (10.1) имело бы несколько решений для m. Тогда наруши-
тель вероятнее всего, выберет неправильный ключ mо и сторона А обна-
ружит, что зашифрованное нарушителем послание '
oу не соответствует
правильному ключу. Как можно ожидать, для обеспечения нескольких ре-
шений уравнения (10.1) сторона А должна использовать большое число К
возможных ключей.
Вероятность быть необнаруженным для нарушителя, пытающегося
заменить истинное послание на ложное, обозначим через ро . Вероятность
ро для оптимальной стратегии нарушителя обозначим '
ор . Покажем, что
р ≥ К−0,5 о . Равенство в этом случае достигается только жестким ограни-
чением числа N возможных посланий х. Более полезные коды должны вы-
бираться, исходя из компромисса между тремя конфликтующими парамет-
рами: малое ро , малый К и большое N. Рассмотрим два таких случая: слу-
чайный код и систематический.
Для анализа указанных случаев мы полагаем, что нарушитель имеет
особое, но неизвестное ложное послание х' для замены истинного х. При-
74
мем, что х равновероятно одному какому-либо значению из N возможных
значений и что нарушитель выбирает ложное послание х' случайно из ос-
тальных N – 1 возможностей. Тогда ро является средней из вероятностей
успеха р (х, у,х' )
о , когда нарушитель замещает х на х' , зная у.
Для подтверждения подлинности (аутентификации) сообщения при-
нята специальная форма построения файла, записываемая как
у =(х; z), (10.2)
т.е. у является соединением незашифрованного текста х и некоторого ко-
личества дополнительных цифр или букв z. Здесь z — некоторая функция
от х и m, которую будем называть аутентификатором.
Хотя уравнение (10.2) является особым случаем (10.1), без сущест-
венной потери общности можно распространить шифрование и на эту осо-
бую форму. Действительно, если некоторые другие Φо(х,m)в уравнении
(10.1) дают хороший код, можно всегда создать код вида (10.2), выбирая
z =Φо(х, у), т.е.
y=Φ(x,m)= [x;Φo(x,m)].
Включение х в виде части у не оказывает существенной помощи на-
рушителю; так как он уже знает х. К тому же известное х не может поме-
шать стороне А в раскрытии обмана нарушителя. Таким образом, новый
код по крайней мере одинаково хорош для А, как и старый код.
Использовать или не использовать код в форме (10.2) — это предмет
договора. Однако уравнение (10.2) имеет специальное свойство, которое
характерно для всех кодов. Оно заключается в том, что различные откры-
тые послания х1 ,х2 не могут быть закодированы в одно и то же у, т.е.
Φ(m1,х1 ) ≠Φ(m2 ,x2 ) (10.3)
выполняется для всех m1 ,m2 , если х1 ≠ х2 . Тогда типовой код можно
представить диаграммой, изображающей открытые послания х как точки в
левом столбце, а зашифрованные послания у — как точки в правом столб-
це. Стрелки, направленные слева направо, будут отображать наименование
ключей 1,...,К , используемых для отображения процесса кодирования ка-
ждого х в у. Согласно выражению (10.3), закодированные послания у де-
лятся на несвязные кластеры, причем каждый кластер содержит все воз-
можные представления каждого х.
Оценим вероятность обмана. Пусть нарушитель успешно обманыва-
ет сторону А с вероятностью ро ≥ К−1 для наугад выбранного ключа mo
при условии, что все ключи К равновероятны. Лучшей стратегией для на-
рушителя будет использование знаний об х и у для ограничения выбора
75
ключей, которые удовлетворяют уравнению (10.1). Обычно нарушитель не
нуждается в выборе при mo = m правильного ключа, так как он получает
удовлетворение, если
Φ(х ,т )=Φ(х' ,m)
о
' . (10.4)
Нарушитель выбирает для mo одно из значений 2, 3, 4, 5 или 6. Если
m= 2, тогда подходят выбранные mo = 2, 4 или 6.
Важной качественной особенностью кода является размерность пуч-
ка линий, переводящих послание х в закодированную форму у на кодовой
диаграмме. А должен стремиться делать эти послания достаточно больши-
ми, чтобы предотвратить угадывание нарушителя с достаточно большой
вероятностью. Однако, если пучки достаточно большие, нарушитель будет
чаще угадывать, так как большинство ключей mo будут удовлетворять
выражению (10.4). Компромисс между двумя крайними размерностями
пучков не позволяет стороне А ограничить нарушителя вероятностью
1
ро = К− . Действительно, теперь покажем, что нарушитель всегда может
использовать стратегию с вероятностью
ро ≥ К−0,5 . (10.5)
Для доказательства формулы (10.5) установим несколько естествен-
ных ограничений на поведение стороны А и нарушителя:
а) нарушитель не пытается обмануть сторону А заменой х на х' = х .
Если допустить, что нарушитель «обманывает» в каком-либо виде с веро-
ятностью ро =1, то, исходя из выражения (10.5), это дает слабый результат;
б) все N посланий х равновероятны. Хотя это требование может быть
ослаблено, некоторые условия, подобные этому, должны быть поставлены.
Для страховки сторона А может использовать одно специальное послание
х1 только в исключительных случаях. В этом случае сторона А может
присвоить всем ключам, имеющим код х1 , одинаковое значение у1 , а
всем другим посланиям — код х' . К различных ключей для шифрования
тогда должны давать вероятность ро < К−0,5 , но сторона А при этом по-
лучит минимум информации от каждого послания;
в) другим ограничением на сторону А может быть случайное ис-
пользование К ключей с равной вероятностью и независимо от х. Исчезает
необходимость этого ограничения на сторону А для доказательства выра-
жения (10.5). Если сторона А использует ключи в каком-либо другом на-
правлении, это только помогает нарушителю увеличить ро ;
76
г) докажем, что (10.5) выполняется, даже если нарушитель выбирает
х' случайно из N – 1 равновероятных посланий, но отличных от х. Это
только усиливает (10.5) за счет возможности использования лучшей стра-
тегии для нарушителя.
Зная, как послания х,х' и ключ m распределены, можно вычислить
совместную вероятность Р(х, у,х' ). Эта вероятность является весом, ис-
пользуемым для усреднения р (х, у,х' )
о в выражении
Σ
х,у,х'
'
о
'
ро = Р(х, у,х )р (х, у,х ), (10.6)
как было указано ранее.
Вероятность р (х, у,х' )
о того, что нарушитель добьется успеха при
замене х' , зная х и у, зависит от того, как нарушитель распорядится
' х у, х, , чтобы создать ложное шифрованное сообщение '
oу . Нарушитель
должен знать функциюΦ( ⋅,⋅ ) и распределение ключей. Исходя из этого, он
может вычислить распределение условной вероятности P(y' | x, y,x' ) пра-
вильно зашифрованного ложного послания у' =Φ(х' ,m). Нарушитель
максимизирует возможность своего успеха при использовании ложного
послания уо , которое максимизирует P(y' | x, y,x' ). Таким образом, на-
рушитель достигает вероятности
p x y x MaxP(y' | x, y,x' )
o ( , , ′) = (10.7)
и максимизирует рo в формуле (10.6). Так как (10.7) оптимально для на-
рушителя, присвоим этому значению ро специальное обозначение ∗
ро .
Найдем связь ∗
ро со средней неопределенностью U, которую имеет
нарушитель относительно шифрованного ложного послания y' . U — это
условная энтропия
− Σ
x,y,x' '
' ' ' ' ' '
,y
U = H(y | x, y,x )= P(x, y,x , y )logP(y | x, y,x ). (10.8)
Если нарушитель выбирает уо , то в соответствии с выражением
(10.6) получим
U
po = ро ∗ ≥ 2− . (10.9)
77
Равенство в уравнении (10.9) справедливо, если и только если воз-
можные шифрованные сообщения y' для всех (x, y,x' ), у которых
P(x, y,x' ) ≠ 0, равновероятны и равны точно 2U .
Доказательство не требует выполнения ограничений (a), (б), (в), (г).
Используем выражение (10.7) для записи Р(у | х, у,х ) p (x, y,x' )
o
' ' ≤ в
выражении (10.8). Суммируя по y' и используя свойство выпуклости
функции − log p , получим
≥ − Σ ≥ − Σ ′
x,y,x' x,y,x'
o
' '
o
U P(x, y,x' )logp (x, y,x ) log P(x, y,x )p (x, y, x ).
Отсюда выражение (10.9) следует из (10.6).
Вывод использует два неравенства. Оба превращаются в равенства,
если равенством становится выражение (10.9).
Р(у | х, у,х )= p (x, y,x' )
o
' ' удовлетворяет всем возможным y' для дан-
ных x, y,x' . Для условия выпуклости необходимо, чтобы все члены
p (x, y,x' )
− log o были равны U.
Теперь установим границу *
po через неопределенность H(m), кото-
рая связана с выбором ключа.
Предположим, что удовлетворяются уравнение (10.7) и ограничения
a), б), в), г). Тогда
–
1
2 2 o o
H(m)
p = р ≥ . (10.10)
Сначала заметим, что y' определяется из выражения y' =Φ(m,x' ) , если
(m,x' ) известны. Тогда y' содержит меньше информации, чем (m,x' ):
U = H(y' | x, y,x' ) ≤ H(m,x' | x, y,x' )= H(m| x, y,x' ). (10.11)
Но условная вероятность для данных x, y,x' зависит только от x, y ,
так что выражение (10.11) превращается в
U ≤ H(m| x, y). (10.12)
Также
H(m) ≥ H(m| x)= H(m, y | x)= H(y | x)+H(m| x, y),
так что условие (10.12) обеспечивает
U ≤ H(m)− H(y | x). (10.13)
Но
U = H(y' | x, y,x' ) ≤ H(y' | x' ).
78
Благодаря ограничению г) x' равновероятно одному из N посланий.
Тогда из условия б) х и x' должны иметь одинаковые распределения, то-
гда H(y' | x' ) ≤ H(y | x) и окончательно
U ≤ H(y | x). (10.14)
Теперь сравним выражения (10.13) и (10.14). Если
H(y | x) H(m)
2
≤ 1 , тогда U H(m)
2
≤ 1 , как следует из (10.13). В остальных
случаях справедливо выражение (10.10).
Граница (10.10) подтверждает формулу (10.9) и фактически сводится
к ней, когда выполняется ограничение (с).
Код, оптимальный для нарушителя, имеет po = K−0,5 , т.е. мини-
мально возможное значение, но использует только N =1+ K0,5 посланий.
Коды с N >> K представляют больший интерес. Рассмотрим, насколько
возможно увеличение соответствующей вероятности po , когда конструи-
руемые коды будут случайными. Теперь N не имеет ограничений на свое
значение и может быть как угодно большим. Главным результатом будет
тот, что для po не требуется значительно превышать
1
K 2
−
.
Случайный код может иметь один свободный параметр А. Каждому
х допускается число возможных видов кодирования, определяемое количе-
ством свободных параметров. Для каждого из К ключей у в выражении
(10.1) выбирается случайным образом в зависимости от количества сво-
бодных параметров. Выбор К производится независимо. При благоприят-
ной возможности одно из возможных значений А не выбирается из К проб.
В этом случае код обеспечивает вероятность po , зависящую от случайно-
го выбора. Определим ожидаемое значение Е(ро ). Особые коды с задан-
ными N и К и имеющие po менее, чем эти прогнозы, действительно су-
ществуют.
Все данные относительно Φ( ⋅,⋅ ), которые необходимы нарушителю
для замены х' на х, содержатся в таблице, показывающей, как шифрован-
ные послания у, у' зависят от ключа m. Рисунок 5 представляет собой
удобную таблицу, представляющую массив из А× А ячеек, где каждая
ячейка, содержащая список всех ключей, определяет пары ( у, у' ). Рисунок
79
5 соответствует паре сообщений, обозначенных х,х' . Пусть v(у, у' ) будет
числом ключей в ячейке ( у, у' ).
Зная у, нарушитель проверяет соответствующий столбец на рисунке
5. Так как К ключей принимаются одинаковыми, то
Σ
1
/
у
1
Р(у' | х, у,х' )= v(у, у' ) v(y, y ). (10.15)
Оптимальная стратегия, с помощью которой нарушитель достигает
границы (10.7), требует выбора уо для максимизации v(у, у' ). На рисунке
5 строка уо пересекает столбец у в ячейке с наибольшим числом ключей.
В таких ячейках должно выполняться условие k >1 в строке у, тогда В
может свободно выбрать одну из k строк случайным образом.
у
— 3, 5 7
у' — 2, 4, 6 —
1 — 8
Рис. 5. Таблица ключей
Е(ро ) теперь может считаться решением задачи распределения
ключей. Представим, что правильным ключом будет ключ 1, и он занимает
ячейку в столбце 1 и строке 1. Распределим оставшиеся К - 1 ключей слу-
чайным образом по А2 ячейкам. Пусть рn,k будут вероятности того, что
ячейка (1, 1) содержит v(1,1)= n ключей таких, что k −1 других ячеек в
столбце 1 содержат n ключей. Более того, все А - k остальных ячеек в
столбце 1 содержат менее, чем n ключей. Тогда
Σ −
n,k
Е(ро )= k рn,k 1 (10.16)
является вероятностью того, что нарушитель выбирает первую строку по уо .
Точная формула для рn,k весьма громоздка. Не составляет труда
смоделировать экспериментальное распределение на компьютере, чтобы
оценить Е(ро ), когда К меньше нескольких сотен. Это было проделано
[11], но только для проверки на возможность более простой аппроксимации.
Когда А велико, то каждый ключ имеет малую вероятность А−2 , от-
носящуюся к ячейке ( у, у' ). После огромного числа независимых испыта-
80
ний, число v(у, у' ) ключей в ячейке имеет приблизительно пуассоновское
распределение со средним
λ=(К −1)А−2 . (10.17)
Соответственно, будем рассматривать числа v(у, у' ) как независи-
мые переменные, имеющие распределение Пуассона со средним λ. Число
v(у, у' ) особое, поэтому начальное распределение получим, размещая
ключ 1 в ячейку (1,1); v(1,1) −1 является переменной Пуассона для этой
ячейки. Аппроксимация Пуассона имеет тот недостаток, что общее число
ключей Σ
' y,y
v(y, y' ) является случайной величиной. Однако среднее число
ключей равно К и весьма высока вероятность того, что при большом чис-
ле ключей К действительное их число практически равно К. Результат ап-
проксимации будет хуже для малого числа К, чем для большого. Аппрок-
симация распределением Пуассона и модель должны давать то же самое
Е(ро ) в пределах нескольких процентов даже для K = 25.
Для упрощения написания выражения рn,k предположим, что bn и
Вn означают вероятности того, что случайная переменная Пуассона имеет
значение n или близко к нему.
b = λne n n!
n / −
Вn = bо +b1 +...+bn ,
тогда
⎟⎠
⎞
⎜⎝ ⎛
−
− −
−
−
−
1
1 1
1
k
р = b b ВА k А
n
k
n,k n 1 n . (10.18)
В выражении (10.18) bn−1— это вероятность того, что ячейка (1,1)
содержит n ключей, А k
n
k
bn В −
−
−
1
1 —это вероятность того, что множество
k −1других ячеек имеет n ключей, но все другие А − k имеют k −1 клю-
чей или менее, а биномиальные коэффициенты вычисляют различные
множества из k −1 ячеек. Теперь подставим (10.18) в (10.16). Суммирова-
нием по k получим
{ } Σ
∞
− −
1
/ 1
n=
А
n
А
Е(ро )= (n λA) Bn В . (10.19)
В таблице 1 приводятся значения Е(ро ), вычисленные по формуле
(10.19). Для фиксированных К широкий минимум Е(ро ) возникает около
81
λ=1. Тогда формула (10.17) показывает, что минимум Е(ро ) располага-
ется около значений А= К0,5 .
Хотя формула (10.12) является приближенным решением задачи, она
является производящей функцией точного решения. Пусть е(К) означает
точное ожидаемое значение po , когда число ключей равно К. В отличие
от е(К), уравнение (10.12) обеспечивает
( ) Σ −
−
−
К
2
2 К
( λA )е(К)
(К )!
λА exp
1
1
,
т.е. сумма членов е(К), взвешенных по вероятности так, что испытания
Пуассона дают К – 1 ключей дополнительно к ключу 1. В принципе, мож-
но умножить сумму в выражении (10.19) на exp(λλ 2 ), разложить в сте-
пенной ряд и представить коэффициент λК −1 как А2(К −1)е(К)/(К −1)!.
Этот результат для е(К) нежелателен, а уравнение (10.12) является доста-
точно точным. В эксперименте по оценке е(64) было проделано 2000 ис-
пытаний для каждого ,1, 4
4
λ= 1 . Дробными значениями испытаний, ко-
торые были для В успешными, являются следующие: 0,31; 0,30; 0,37.
Т а б л и ц а 1
Е(ро ) для случайных конструкций
К λ=1/16 λ=1/4 λ=1 λ=4 λ=16 К0,5
25 0,47 0,44 0,54 0,55 0,2
64 0,46 0,34 0,32 0,38 0,57 0,125
100 0,40 0,29 0,27 0,32 0,46 0,10
256 0,27 0,21 0,19 0,22 0,32 0,06
400 0,23 0,17 0,16 0,18 0,26 0,05
1024 0,15 0,12 0,11 0,12 0,17 0,03
4000 0,087 0,069 0,062 0,068 0,092 0,015
10000 0,062 0,047 0,042 0,046 0,061 0,01
40000 0,036 0,026 0,023 0,024 0,032 0,005
100000 0,025 0,018 0,015 0,016 0,021 0,003
1045576 0,0084 0,0063 0,0054 0,0055 0,0069 0,001
Теперь рассмотрим систематические коды с большим N с помощью
другого обобщения кода — проективной плоскости. В отличие от случай-
ного кодирования, когда N считается свободным параметром, эти коды оп-
ределяют N. Этот недостаток компенсируется за счет малой величины
Е(ро ) и другими достоинствами, которые будут изложены в данном разделе.
82
Для поля Галуа GF(q) можно создать проективное пространство
PG(M,q) размерности М, в котором точки являются классами эквивалент-
ности ненулевых векторов, теперь имеющих М + 1 компонент. Количество
точек определяется по формуле
f(M)=(qМ+1 −1)/(q −1)=1+q+...+qМ . (10.20)
Каждое множество точек, удовлетворяющее системе M – D незави-
симых линейных однородных уравнений является подмножеством
PG(D,q) размерности D, содержащем f(D) точек PА(M, q). Число под-
пространств размерности D в PG(M, q) будет
f(D)f(D ) f( )
g(D,M)= f(M)f(M ) f(M D)
1 ... 0
1 ...
−
− −
. (10.21)
Выберем особое подпространство S размерности М–1, служащее в
качестве «экватора». Идентифицируем файлы х с подпространством S.
S имеет подпространства размерности 0, 1,..., М – 2, и таким образом, мы
можем определить размерность s файлов как другой параметр конструк-
ции. Рассмотрим случай s = 0; иной код может иметь s = 1. Для данных M,
s число различных посланий будет
N = g(s,M −1). (10.22)
Точки, отсутствующие в S, будут ключами. Их число будет
К = f(M)− f(M −1)= qМ . (10.23)
Ключ m (точка) и файл х (размерности s) определяют единственное
пространство размерности (s + 1), которое представляет у. Так как у со-
держит f (s + 1) точек и f (s) из них принадлежат S, то у содержит
f(s+1)− f(s)= qs+1 ключей. Для каждого х число qМ ключей сокраща-
ется до
А= qM −s−1 (10.24)
пучков из
К / А= qs+1
ключей каждый. Для расчетов примем: А= q2 ,К / А= q .
Для нахождения po рассмотрим матрицу, соответствующую особой
паре х,х' . Следует заметить, что qs+1 ключей в выбранном столбце у не
требуют своего распределения в строку. Каждая ячейка в матрице содер-
жит все ключи, относящиеся к пересечению пространств размерности
(s+1) c х,х' . Если х и х' между собой пересекаются х∩ х' в пространст-
83
ве размерности r, то ячейка содержит qr+1 ключей пространств размерности
(r + 1) через х∩ х' . В должен выбрать одну строку из qs+1 / qr+1 = qs−r ;
эта вероятность при правильно выбранном у' равна
' r s
ро(х, у,х )= q − . (10.25)
Теперь (10.6) и (10.25) дают
Σ −
r
r s
po = h(r)q , (10.26)
где h(r) — вероятность того, что случайно выбранный х' пересекает осо-
бый х в пространстве размерности r. В выражении (10.26) диапазоном
суммирования будет 2s+1−М ≤ r ≤ s −1, обеспечивая 2s+1≥ М . Но
если 2s+1<М , то пересечение х∩ х' будет пустым. В этом случае
сумма (10.26) превосходит −1≤ r ≤ s −1.
Теперь покажем, что формула
h(r)= q − (s − r −1,M − s − 2 )g(r,s)/[g(s,M −1)−1] (s r)2 (10.27)
совместно с выражениями (10.21) и (10.26) дает po .
Коэффициент g( r,s )в (10.27) является числом различных подпро-
странств х размерности r. Достаточно показать, что остальные члены вы-
ражения (10.27) дают вероятность того, что произвольно выбранный х'
пересекает х в особом пространстве Н размерности r. Для данного х и под-
пространства Н мы можем найти М базисных векторов ео ,е1 ,...,еМ для S
таких, что ео ,е1 ,...,еr расширяют Н, а ео ,е1 ,...,еs расширяют х. Каждое
х' содержит Н и, таким образом, имеет базис, состоящий из ео ,е1 ,...,еr .
Остальные s – r базисных вектора х' могут иметь следующий вид:
Σ М
j=r+
vi = ξi, jе j
1
, i= r+1,...,s ,
где ео ,е1 ,...,еr отсутствуют. При определении ξi, j нужно не допустить х'
пересечению х в пространстве большей размерности, чем r. Это требова-
ние эквивалентно условию, что частичная сумма
Σ М
j=s+
vi = ξi, jе j
1
0 , i= r+1,...,s ,
из vi была бы линейно независима. Тогда о
vi расширяло бы подпростран-
ство хо размерности (М − s − 2 ) за счет еs+1 ,...,еМ . Коэффициент
84
А(r – s – 1, M – s – 2) в формуле (10.20) является числом путей для вы-
бранных хо . Выбирая Н и хо (и, следовательно, ξi, j для j = s+1,...,М ),
(s − r)2 чисел
ξi, j ; i = r +1,...,s; j = r +1,...,s
могут быть выбраны на
q(s−r)2 путях для полного определения х' . Теперь
числитель (10.27) является числом путей выбора х' для получения
r — размерного пересечения с х, а знаменатель является числом N – 1 по-
сылок (отличных от х), из которых нарушитель выбирает х' .
Теперь q, M и s определяют N,K,A, pо . Таблица 2 дает некоторые
конструкции, полученные выбором q = 2. Значения в таблице 2 выбраны
для М = 2s + 2, так что К / А2 =1, как следует из выражений (10.16) и
(10.17). Для данного К наименьшее значение po всегда достигается при
К / А2 =1. Подобное явление наблюдалось в случайных конструкциях,
имеющих λ=1 (сравните с уравнением (10.17)). В то же время po равня-
ется приближенно 2 ⋅ К−0,5 , что сравнимо с тем, что получено на проек-
тивной плоскости кода.
До настоящего времени нарушитель не контролировал выбор х' . Мы
рассматривали х' как случайную переменную, с которой нарушитель об-
ращался как с данным. Но если предположить, что нарушитель не знает
конкретного х' ; он, по крайней мере, хочет ввести в заблуждение А заме-
ной х на пригодное ложное послание х' . Оптимальной стратегией для на-
рушителя должно быть стремление снова добиться (10.7), но он будет вы-
бирать х' , чтобы максимизировать р (х, у,х' )
о для каждого данного х, у.
Код с малым po , для случайно выбранного х' , в настоящее время
выглядит достаточно убогим. Таблица 3 раскрывает более подробно осо-
бенности кода с q = 2, М = 12, s = 5, приведенного в таблице 2. Этот код
имеет po = 0,0308, как следует из вычислений по формуле (10.23). Но не-
которые ложные послания х' пересекают х в пространстве размерности
r = 4; если нарушитель подставит одно из них, его шанс успеха будет 0,5
(уравнение (10.25)). Код хорош для случайно выбранного х' только благо-
даря тому, что нарушитель обычно имеет посылку х' с r = –1 или 0.
85
Т а б л и ц а 2
Кодовые конструкции при q = 2
Размерность Ключ Вход Вероятность выигрыша
нарушителя
М S K N po
2 0 4 3 0,6666
4 1 16 35 0,400
6 2 64 1,395 0,2222
8 3 256 200787 0,1176
10 4 1024 1,09×108 0,0606
12 5 4096 2,3×1011 0,0308
14 6 16384 2×1015 0,0115
16 7 65536 6×1019 0,0078
18 8 262144 8×1024 0,0039
20 9 1048576 4×1030 0,00195
Т а б л и ц а 3
Конструкция кода с q = 2, М = 12, s = 5
r = dim(x∩ x' ) h(r) р (х, у,х' )
о
-1 0,3979 0,015625
0 0,5773 0,03125
1 0,1204 0,0625
2 0,00432 0,125
3 0,000029 0,25
4 3,4×10-8 0,5
Хороший код для А должен теперь иметь малое значение
р (х, у,х' )
о равномерно, а не в среднем. Систематический код достигает
этого, если q велико. Согласно формуле (10.25), р (х, у,х' ) q
о ≤1/ . К со-
жалению для А увеличение q приводит к снижению N. Тогда нужно искать
компромисс, выбирая q достаточно малым, чтобы получить N достаточно
большим, а чтобы нарушитель имел достаточный шанс на успех, необхо-
димо, чтобы 1/q было достаточно мало. В таблице 4 приведен типовой вы-
бор между N и 1/q. Для таблицы 4 все элементы имеют приблизительно
одинаковый размер ключа К = 216. Таблица 4 показывает обе вероятности
успеха для нарушителя: 1/q, если нарушитель делает r = s – 1 и получает
усредненное значение (10,26), если он выбирает х' случайно. Если нару-
86
шитель игнорирует конструкцию с К / А2 ≠ 1, то средняя вероятность
сильно не меняется. При снижении 1/q от 0,5 до 0,1 уменьшается размер
logN с коэффициентом 3.
Т а б л и ц а 4
Вероятность успеха нарушителя при сохранении размера ключа
приблизительно постоянным
Поле Размерности Биты ключа К / А2 Вероятность
успеха нарушите-
Q М S log2К
Биты
log2N
для
r = s −1
среднее
значение
256 2 0 16 1 8,01 0,0039 0,0039
41 3 1 16,08 41 10,7 0,0244 0,0250
16 4 1 16 1 16,1 0,0625 0,0078
9 5 2 15,9 9 19,2 0,1111 0,0137
7 6 2 16,86 1 25,5 0,1429 0,0058
5 7 3 16,24 5 28,3 0,2000 0,0096
4 8 3 16 1 32,5 0,2500 0,0078
3 10 4 15,9 1 40,5 0,3333 0,0082
2 16 7 16 1 65,9 0,5000 0,0078
87
Библиография
1. Айерлэнд К. Классическое введение в современную теорию чисел /
К. Айерлэнд, М. Роузен. — М. : Мир, 1987. — 416 с.
2. Воронков Б. Н. Методическое пособие по разработке средств защиты
информации в вычислительных сетях / Б. Н. Воронков, В. И. Тупота. —
Воронеж : ЛОП ВГУ, 2000. — 112 с.
3. Иванов В. А. Криптографические методы защиты информации в ком-
пьютерных системах и сетях / В. А. Иванов. — М. : КУДИЦ — ОБРАЗ,
2001. — 368 с.
4. Математические и компьютерные основы криптологии : учеб. пособие /
Ю. С. Харин [и др.]. — Минск : Новое знание, 2003. — 382 с.
5. Основы криптографии : учеб. пособие / А. П. Алферов [и др.]. — М. :
Гелиос АРВ, 2001. — 480 с.
6. Питерсон У. Коды, исправляющие ошибки / У. Питерсон, Э. Уэлдон. —
М. : Мир, 1976. — 594 c.
7. Холл М. Комбинаторика / М. Холл. — М. : Мир, 1970. — 424 c.
8. Bauer R. C. A key distribution protocol using event markers / R. C. Bauer,
T. A. Berson, R. J. Feiertag // ACM Trans. Comput. Syst. — 1983. — Vol. 1,
№ 5. — P. 249 — 255.
9. Diffie W. New directions in cryptography / W. Diffie, M. Hellman // IEEE
Trans. Inf. Theory, 1976. — Vol. 22, № 11. — P. 644 — 654.
10. Giblin P. J. Primes and Programming : An Introduction to Number Theory
with Computing / P. J. Giblin. – Cambridge : Cambridge University Press,
1993. — 237 c.
11. Matyas S. M. Generation, distribution and instalation of criptografic keys /
S. M. Matyas, C. H. Meyer // IBM Syst. J. — 1978. — Vol.17, № 2. —
P. 125 —137.
12. Needham R. M. Using encription for autentification in large networks for computers
/ R. M. Needham, M. D. Schroeder // Commun. ACM. — 1978. —
Vol. 21. — P. 993 — 999.
88
Учебное издание
ЭЛЕМЕНТЫ ТЕОРИИ ЧИСЕЛ И КРИПТОЗАЩИТА
Учебное пособие
Составители:
Воронков Борис Николаевич,
Щеголеватых Александр Сергеевич
Редактор Ю. С. Гудкова
Подписано в печать 30.07.08. Формат 60×84/16. Усл. печ. л. 5,17.
Тираж 50 экз. Заказ 997.
Издательско-полиграфический центр
Воронежского государственного университета.
394000, г. Воронеж, пл. им. Ленина, 10. Тел. 208-298, 598-026 (факс)
http://www.ppc.vsu.ru; e-mail: pp_center@ppc.vsu.ru
Отпечатано в типографии Издательско-полиграфического центра
Воронежского государственного университета.
394000, г. Воронеж, ул. Пушкинская, 3. Тел. 204-133.