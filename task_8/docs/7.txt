Введение в криптографию
Под редакцией В.В.Ященко
Издание четвертое, дополненное
Москва
Издательство МЦНМО
2012
УДК 003.26
ББК 32.973-18.2
В24
Авторский коллектив: В. В. Ященко (редактор, глава 1), Н. П. Вар-
новский (главы 2, 3, приложение В),Ю. В. Нестеренко (глава 4), Г. А. Ка-
батянский (глава 5), П. Н. Девянин, В. Г. Проскурин, А. В. Черемуш-
кин (глава 6), П. А. Гырдымов, А. Ю. Зубов, А. В. Зязин, В. Н. Овчин-
ников (глава 7), М. И. Анохин (приложение Б).
В24 Введение в криптографию / Под общ. ред. В. В. Ященко.  4-е
изд., доп. М.: МЦНМО, 2012.  348 с.
ISBN 978-5-4439-0026-1
В книге впервые на русском языке дается систематическое изложе-
ние научных основ криптографии от простейших примеров и основных
понятий до современных криптографических конструкций. Понимание
принципов криптографии стало для многих потребностью в связи с ши-
роким распространением криптографических средств обеспечения ин-
формационной безопасности. Поэтому книга может быть полезна мас-
совому читателю.
Книга рассчитана на студентов-математиков и специалистов по ин-
формационной безопасности.
ББК 32.973-18.2
ISBN 978-5-4439-0026-1
c

Коллектив авторов, 2012
c

МЦНМО, 2012
Оглавление
Предисловия 5
Глава 1. Основные понятия криптографии 9
§ 1. Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
§ 2. Предмет криптографии . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
§ 3. Математические основы . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
§ 4. Новые направления . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
§ 5. Заключение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
Глава 2. Криптография и теория сложности 27
§ 1. Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
§ 2. Криптография и гипотеза P 6= NP . . . . . . . . . . . . . . . . . . . 30
§ 3. Односторонние функции . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
§ 4. Псевдослучайные генераторы . . . . . . . . . . . . . . . . . . . . . . . 34
§ 5. Доказательства с нулевым разглашением . . . . . . . . . . . . . 37
Глава 3. Криптографические протоколы 44
§ 1. Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
§ 2. Целостность. Протоколы аутентификации и электронной
подписи . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47
§ 3. Неотслеживаемость. Электронные деньги . . . . . . . . . . . . . 63
§ 4. Протоколы типа ¾подбрасывание монеты по телефону¿ . 70
§ 5. Еще раз о разделении секрета . . . . . . . . . . . . . . . . . . . . . . . 75
§ 6. Поиграем в ¾кубики¿. Протоколы голосования . . . . . . . . . 78
§ 7. За пределами стандартных предположений. Конфиденци-
альная передача сообщений . . . . . . . . . . . . . . . . . . . . . . . . . . 84
§ 8. Вместо заключения . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
Глава 4. Алгоритмические проблемы теории чисел 89
§ 1. Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
§ 2. Система шифрования RSA . . . . . . . . . . . . . . . . . . . . . . . . . 91
§ 3. Сложность теоретико-числовых алгоритмов . . . . . . . . . . . 94
§ 4. Как отличить составное число от простого . . . . . . . . . . . . 99
§ 5. Как строить большие простые числа . . . . . . . . . . . . . . . . . 102
4 Оглавление
§ 6. Как проверить большое число на простоту . . . . . . . . . . . . 105
§ 7. Как раскладывают составные числа на множители . . . . . 112
§ 8. Дискретное логарифмирование . . . . . . . . . . . . . . . . . . . . . . 115
§ 9. Заключение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
Глава 5. Математика разделения секрета 123
§ 1. Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
§ 2. Разделение секрета для произвольных структур доступа . 125
§ 3. Линейное разделение секрета. . . . . . . . . . . . . . . . . . . . . . . . 128
§ 4. Идеальное разделение секрета и матроиды . . . . . . . . . . . . 130
Глава 6. Компьютер и криптография 135
§ 1. Вместо введения . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
§ 2. Немного теории . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
§ 3. Как зашифровать файл? . . . . . . . . . . . . . . . . . . . . . . . . . . . 145
§ 4. Поучимся на чужих ошибках . . . . . . . . . . . . . . . . . . . . . . . 158
§ 5. Вместо заключения . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168
Глава 7. Олимпиады по криптографии для школьников 170
§ 1. Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171
§ 2. Шифры замены . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174
§ 3. Шифры перестановки . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187
§ 4. Многоалфавитные шифры замены с периодическим клю-
чом . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195
§ 5. Условия задач олимпиад по математике и криптографии 203
§ 6. Указания и решения . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 218
Приложение А. Отрывок из статьи К. Шеннона ¾Теория
связи в секретных системах¿ 256
Приложение Б. Аннотированный список рекомендованной
литературы 293
Приложение В. Словарь криптографических терминов 299
Алфавитный указатель русскоязычных терминов . . . . . . . . . . . 336
Алфавитный указатель англоязычных терминов . . . . . . . . . . . . 340
Предисловие к четвертому изданию
Настоящее издание можно считать в некотором смысле юбилейным.
Минуло 10 лет со дня выхода книги в свет. За это время она стала
настоящим бестселлером. Вышли 3 издания в МЦНМО, книга была
напечатана также в издательстве ¾Питер¿. Перевод на английский язык
издан Американским математическим обществом.
Основная причина популярности книги, безусловно, состоит в том,
что она остается единственной в своем жанре. Вместе с тем интерес к
проблемам криптографии и, в более широком смысле, к информацион-
ной безопасности с каждым годом возрастает.
С момента выхода предыдущих изданий ситуация с математической
криптографией в стране немного изменилась. Курс лекций ¾Теорети-
ческая криптография¿ теперь читается на Факультете управления и
прикладной математикиМФТИ. Учебные курсы, посвященные этой ма-
тематической дисциплине, появились на матмехе СПбГУ: Э. А. Гирш
¾Сложностная криптография¿ и Ю. Лифшиц ¾Современные задачи
криптографии¿.
В МГУ проводится ежегодная международная конференция ¾Мате-
матика и безопасность информационных технологий¿.
В настоящее издание внесены некоторые добавления и исправления.
В главе по теории чисел описан недавно открытый полиномиальный
алгоритм проверки целых чисел на простоту. Добавлены список лите-
ратуры для дальнейшего чтения с краткими аннотациями и ¾Словарь
криптографических терминов¿.
Март 2012 г. В.Ященко
Предисловие к третьему изданию
В последние годы в жизни общества постоянно возрастает значение
информационной составляющей (информационные ресурсы, информа-
ционные технологии и т. д.) и, как следствие, информационной безопас-
ности. Специалисты в области информационной безопасности необхо-
димы и в государственных структурах, и в научных учреждениях, и в
коммерческих фирмах.
Для развития системы подготовки таких специалистов в 1999–2000 гг.
приняты дополнительные меры: в перечень специальностей высшего
образования включено 6 специальностей блока 070000 (информацион-
ная безопасность), в перечень диссертационных специальностей  меж-
дисциплинарная специальность 051319. В Московском государственном
6 Предисловия
университете им. М.В.Ломоносова с сентября 2000 г. начато обучение
по специализациям ¾Математические методы защиты информации¿ и
¾Программное обеспечение защиты информации¿. Научный фундамент
этих специализаций  криптография  наука о шифрах.
Систематических учебников по криптографии на русском языке по-
ка нет, они будут появляться по мере становления системы граждан-
ского криптографического образования. В этих условиях предлагаемая
книга ¾Введение в криптографию¿, которая уже выдержала два изда-
ния, может быть рекомендована в качестве первого учебного пособия
для студентов-математиков, специализирующихся в области информа-
ционной безопасности. Книга написана специалистами-криптографами
с целью популяризации научных основ криптографии и поэтому доступ-
на и может быть полезна массовому читателю.
Ректор МГУ,
академик РАН В.А.Садовничий
Сентябрь 2000 г.
Предисловия 7
Предисловие ко второму изданию
В настоящем втором издании исправлены опечатки и неточности,
замеченные в первом издании.
Сентябрь 1999 г. В.Ященко
Предисловие к первому изданию
Криптография  наука о шифрах  долгое время была засекрече-
на, так как применялась, в основном, для защиты государственных и
военных секретов. В настоящее время методы и средства криптографии
используются для обеспечения информационной безопасности не толь-
ко государства, но и частных лиц, и организаций. Дело здесь совсем
не обязательно в секретах. Слишком много различных сведений ¾гуля-
ет¿ по всему свету в цифровом виде. И над этими сведениями ¾висят¿
угрозы недружественного ознакомления, накопления, подмены, фаль-
сификации и т. п. Наиболее надежные методы защиты от таких угроз
дает именно криптография.
Пока криптографические алгоритмы для рядового потребителя 
тайна за семью печатями, хотя многим уже приходилось пользоваться
некоторыми криптографическими средствами: шифрование электрон-
ной почты, интеллектуальные банковские карточки и др. Естественно,
что при этом основной вопрос для пользователя  обеспечивает ли
данное криптографическое средство надежную защиту. Но даже пра-
вильно сформулировать этот элементарный вопрос непросто. От како-
го противника защищаемся? Какие возможности у этого противника?
Какие цели он может преследовать? Как измерять надежность защи-
ты? Список таких вопросов можно продолжить. Для ответа на них
пользователю необходимы знания основных понятий криптографии.
Популярное изложение научных основ криптографии (речь идет
только о ¾негосударственной¿ криптографии; разделы криптографии,
связанные с государственной безопасностью, должны оставаться сек-
ретными)  цель настоящей книги. Ее можно использовать и в каче-
стве учебного пособия. На русском языке аналогичных книг пока нет.
Материалы ряда глав публиковались авторами ранее в других изда-
ниях (глава 1  в книге С.А.Дориченко, В.В.Ященко, ¾25 этюдов о
шифрах¿, М.: ТЭИС, 1994; главы 1,2,4,5  в журнале ¾Математиче-
ское просвещение¿, третья серия, выпуск 2, М.: МЦНМО, 1998; глава 7
 в газете ¾Информатика¿ (еженедельное приложение к газете ¾Пер-
вое сентября¿), № 4, январь 1998). При подготовке настоящего издания
8 Предисловия
эти материалы были переработаны и дополнены.
Изложение материала рассчитано на читателя с математическим
складом ума. В основном главы не зависят друг от друга (это достиг-
нуто за счет некоторых повторов) и их можно читать в произвольном
порядке. Главу 1  вводную  рекомендуется прочитать всем, посколь-
ку в ней на популярном уровне разъясняются все основные понятия со-
временной криптографии: шифр, ключ, стойкость, электронная цифро-
вая подпись, криптографический протокол и др. В других главах часть
материала повторяется, но уже более углубленно. В главах 2, 3, 4, 5
используются некоторые сведения из высшей математики, известные
ученикам математических классов и студентам. Глава 6 ориентирована
на знатоков компьютерных технологий. Глава 7 содержит материалы
олимпиад по криптографии для школьников и поэтому для ее чтения
никаких знаний, выходящих за пределы школьной программы, не тре-
буется.
Предупреждение: криптографические средства и программные про-
дукты, упоминаемые в книге, используются только для иллюстрации
общих криптографических идей; авторы не ставили своей целью да-
вать оценки или сравнивать имеющиеся на рынке криптографические
средства.
Криптография была поставлена на научную основу во многом бла-
годаря работам выдающегося американского ученого Клода Шеннона.
Его доклад ¾Математическая теория криптографии¿ был подготовлен
в секретном варианте в 1945 г., рассекречен и опубликован в 1948 г.,
переведен на русский язык в 1963 г. Поскольку ¾Работы по теории ин-
формации и кибернетике¿ (1963 г.) К.Шеннона стали библиографиче-
ской редкостью, мы включили в приложение основную часть статьи
К.Шеннона ¾Теория связи в секретных системах¿. Эту основополага-
ющую работу рекомендуется прочитать всем интересующимся крипто-
графией.
Для профессионального понимания криптографических алгоритмов
и умения оценивать их сильные и слабые стороны необходима уже се-
рьезная математическая подготовка (на уровне математических фа-
культетов университетов). Это объясняется тем, что современная крип-
тография основана на глубоких результатах таких разделов математи-
ки, как теория сложности вычислений, теория чисел, алгебра, теория
информации и др. Желающим серьезно изучать криптографию можно
порекомендовать обзорную монографию ¾Криптография в банковском
деле¿ Анохина М.И., Варновского Н.П., Сидельникова В.М., Ящен-
ко В.В., М.: МИФИ, 1997.
Октябрь 1998 г. В.Ященко
Глава 1
Основные понятия криптографии
§ 1. Введение
Как передать нужную информацию нужному адресату в тайне
от других? Каждый из читателей в разное время и с разными целя-
ми наверняка пытался решить для себя эту практическую задачу (для
удобства дальнейших ссылок назовем ее ¾задача ТП¿, т. е. задача Тай-
ной Передачи). Выбрав подходящее решение, он, скорее всего, повторил
изобретение одного из способов скрытой передачи информации, кото-
рым уже не одна тысяча лет.
Размышляя над задачей ТП, нетрудно прийти к выводу, что есть
три возможности.
1. Создать абсолютно надежный, недоступный для других канал
связи между абонентами.
2. Использовать общедоступный канал связи, но скрыть сам факт
передачи информации.
3. Использовать общедоступный канал связи, но передавать по нему
нужную информацию в так преобразованном виде, чтобы восстановить
ее мог только адресат.
Прокомментируем эти три возможности.
1. При современном уровне развития науки и техники сделать такой
канал связи между удаленными абонентами для неоднократной пере-
дачи больших объемов информации практически нереально.
2. Разработкой средств и методов скрытия факта передачи сообще-
ния занимается стеганография.
Первые следы стеганографических методов теряются в глубокой древно-
сти. Например, известен такой способ скрытия письменного сообщения: голо-
ву раба брили, на коже головы писали сообщение и после отрастания волос
раба отправляли к адресату.
Из детективных произведений хорошо известны различные способы тай-
нописи между строк обычного, незащищаемого текста: от молока до сложных
химических реактивов с последующей обработкой.
Также из детективов известен метод ¾микроточки¿: сообщение запи-
сывается с помощью современной техники на очень маленький носитель
10 Гл. 1. Основные понятия криптографии
(микроточку), который пересылается с обычным письмом, например, под
маркой или где-нибудь в другом, заранее обусловленном месте.
В настоящее время в связи с широким распространением компьютеров
известно много тонких методов ¾запрятывания¿ защищаемой информации
внутри больших объемов информации, хранящейся в компьютере. Нагляд-
ный пример запрятывания текстового файла в графический можно найти в
Интернете1); он же приведен в журнале ¾Компьютерра¿, №48 (225) от 1 де-
кабря 1997 г., на стр. 62. (Следует отметить, что авторы статьи в журнале
ошибочно относят стеганографию к криптографии. Конечно, с помощью сте-
ганографии можно прятать и предварительно зашифрованные тексты, но,
вообще говоря, стеганография и криптография  принципиально различные
направления в теории и практике защиты информации.)
3. Разработкой методов преобразования (шифрования) информации
с целью ее защиты от незаконных пользователей занимается криптогра-
фия. Такие методы и способы преобразования информации называются
шифрами.
Шифрование (зашифрование)  процесс применения шифра к за-
щищаемой информации, т. е. преобразование защищаемой информации
(открытого текста) в шифрованное сообщение (шифртекст, крипто-
грамму) с помощью определенных правил, содержащихся в шифре.
Дешифрование  процесс, обратный шифрованию, т. е. преобразо-
вание шифрованного сообщения в открытый текст с помощью опреде-
ленных правил, содержащихся в шифре.
Криптография  прикладная наука, она использует самые послед-
ние достижения фундаментальных наук и, в первую очередь, математи-
ки. С другой стороны, все конкретные задачи криптографии существен-
но зависят от уровня развития техники и технологии, от применяемых
средств связи и способов передачи информации.
§ 2. Предмет криптографии
Что же является предметом криптографии? Для ответа на этот
вопрос вернемся к задаче ТП, чтобы уточнить ситуацию и используемые
понятия.
Прежде всего заметим, что эта задача возникает только для инфор-
мации, которая нуждается в защите. Обычно в таких случаях гово-
рят, что информация содержит тайну или является защищаемой, при-
ватной, конфиденциальной, секретной. Для наиболее типичных, часто
встречающихся ситуаций такого типа введены даже специальные поня-
тия:
– государственная тайна;
– военная тайна;
1)http://www.geocities.com/SiliconValley/Vista/6001/
§ 2. Предмет криптографии 11
– коммерческая тайна;
– юридическая тайна;
– врачебная тайна и т. д.
Далее мы будем говорить о защищаемой информации, имея в виду
следующие признаки такой информации:
– имеется какой-то определенный круг законных пользователей, ко-
торые имеют право владеть этой информацией;
– имеются незаконные пользователи, которые стремятся овладеть
этой информацией с тем, чтобы обратить ее себе во благо, а законным
пользователям во вред.
Для простоты мы вначале ограничимся рассмотрением только од-
ной угрозы  угрозы разглашения информации. Существуют и другие
угрозы для защищаемой информации со стороны незаконных пользо-
вателей: подмена, имитация и др. О них мы поговорим ниже.
Теперь мы можем изобразить ситуацию, в которой возникает задача
ТП, следующей схемой (см. рис. 1).
A B
П
Рис. 1.
Здесь A и B  законные пользователи защищаемой информации;
они хотят обмениваться информацией по общедоступному каналу связи.
П  незаконный пользователь (противник), который может перехва-
тывать передаваемые по каналу связи сообщения и пытаться извлечь
из них интересующую его информацию. Эту формальную схему можно
считать моделью типичной ситуации, в которой применяются крипто-
графические методы защиты информации.
Отметим, что исторически в криптографии закрепились некоторые воен-
ные слова (противник, атака на шифр и др.) Они наиболее точно отражают
смысл соответствующих криптографических понятий. Вместе с тем широ-
ко известная военная терминология, основанная на понятии кода (военно-
морские коды, коды Генерального штаба, кодовые книги, кодобозначения и
т. п.), уже не применяется в теоретической криптографии. Дело в том, что
за последние десятилетия сформировалась теория кодирования  большое
научное направление, которое разрабатывает и изучает методы защиты ин-
формации от случайных искажений в каналах связи. И если ранее термины
кодирование и шифрование употреблялись как синонимы, то теперь это недо-
пустимо. Так, например, очень распространенное выражение ¾кодирование 
разновидность шифрования¿ становится просто неправильным.
Криптография занимается методами преобразования информации,
которые бы не позволили противнику извлечь ее из перехватываемых
12 Гл. 1. Основные понятия криптографии
сообщений. При этом по каналу связи передается уже не сама защища-
емая информация, а результат ее преобразования с помощью шифра, и
для противника возникает сложная задача вскрытия шифра.
Вскрытие (взламывание) шифра  процесс получения открытого
текста из шифрованного сообщения без знания примененного шифра.
Однако помимо перехвата сообщений и вскрытия шифра противник
может пытаться получить защищаемую информацию многими други-
ми способами. Наиболее известным из таких способов является аген-
турный, когда противник каким-либо путем склоняет к сотрудничеству
одного из законных пользователей и с помощью этого агента получает
доступ к защищаемой информации. В такой ситуации криптография
бессильна.
Противник может пытаться не получить, а уничтожить или моди-
фицировать защищаемую информацию в процессе ее передачи. Это 
совсем другой тип угроз для информации, отличный от перехвата со-
общений и вскрытия шифра. Для защиты от таких угроз разрабатыва-
ются свои специфические методы.
Следовательно, на пути от одного законного пользователя к другому
информация должна защищаться различными способами, противосто-
ящими различным угрозам. Возникает ситуация цепи из разнотипных
звеньев, которая защищает информацию. Естественно, противник будет
стремиться найти самое слабое звено, чтобы с наименьшими затратами
добраться до информации. А значит, и законные пользователи должны
учитывать это обстоятельство в своей стратегии защиты: бессмысленно
делать какое-то звено очень прочным, если есть заведомо более слабые
звенья (¾принцип равнопрочности защиты¿).
Не следует забывать и еще об одной важной проблеме: проблеме со-
отношения цены информации, затрат на ее защиту и затрат на ее добы-
вание. При современном уровне развития техники сами средства связи,
а также разработка средств перехвата информации из них и средств
защиты информации требуют очень больших затрат. Прежде чем за-
щищать информацию, задайте себе два вопроса:
1) является ли она для противника более ценной, чем стоимость ата-
ки;
2) является ли она для вас более ценной, чем стоимость защиты.
Именно перечисленные соображения и являются решающими при
выборе подходящих средств защиты: физических, стеганографических,
криптографических и др.
Некоторые понятия криптографии удобно иллюстрировать истори-
ческими примерами, поэтому сделаем небольшое историческое отступ-
ление.
Долгое время занятие криптографией было уделом чудаков-одиночек.
Среди них были одаренные ученые, дипломаты, священнослужители.
§ 2. Предмет криптографии 13
Известны случаи, когда криптография считалась даже черной магией. Этот
период развития криптографии как искусства длился с незапамятных времен
до начала ХХ века, когда появились первые шифровальные машины. Пони-
мание математического характера решаемых криптографией задач пришло
только в середине XX века  после работ выдающегося американского уче-
ного К.Шеннона.
История криптографии связана с большим количеством дипломатических
и военных тайн и поэтому окутана туманом легенд. Наиболее полная книга по
истории криптографии содержит более тысячи страниц. Она опубликована в
1967 году1). Имеется перевод этой книги на русский язык (Кан Д. Взломщики
кодов. М., Центрполиграф, 2000). Книга Т.А. Соболевой2) представляет собой
фундаментальный труд по истории криптографии в России.
Свой след в истории криптографии оставили многие хорошо известные
исторические личности. Приведем несколько наиболее ярких примеров. Пер-
вые сведения об использовании шифров в военном деле связаны с именем
спартанского полководца Лисандра (шифр ¾Сцитала¿). Цезарь использовал
в переписке шифр, который вошел в историю как ¾шифр Цезаря¿. В древней
Греции был изобретен вид шифра, который в дальнейшем стал называться
¾квадрат Полития¿. Одну из первых книг по криптографии написал аббат
И.Трителий (1462–1516), живший в Германии. В 1566 году известный мате-
матик Д.Кардано опубликовал работу с описанием изобретенной им системы
шифрования (¾решетка Кардано¿). Франция ХVI века оставила в истории
криптографии шифры короля Генриха IV и Ришелье. В упомянутой книге
Т.А.Соболевой подробно описано много российских шифров, в том числе и
¾цифирная азбука¿ 1700 года, автором которой был Петр Великий. (Некото-
рые примеры из книги приведены на форзаце.)
Некоторые сведения о свойствах шифров и их применении можно найти
и в художественной литературе, особенно в приключенческой, детективной и
военной. Хорошее подробное объяснение особенностей одного из простейших
шифров  шифра замены и методов его вскрытия содержится в двух из-
вестных рассказах: ¾Золотой жук¿ Э.По и ¾Пляшущие человечки¿ А.Конан
Дойла.
Рассмотрим более подробно два примера.
Шифр ¾Сцитала¿. Этот шифр известен со времен войны Спарты против
Афин в V веке до н.э. Для его реализации использовалась сцитала  жезл,
имеющий форму цилиндра.На сциталу виток к витку наматывалась узкая па-
пирусная лента (без просветов и нахлестов), а затем на этой ленте вдоль оси
сциталы записывался открытый текст. Лента разматывалась и получалось
(для непосвященных), что на ленте в беспорядке написаны какие-то буквы
(каждая из букв поперек ленты). Затем лента отправлялась адресату. Адре-
сат брал такую же сциталу, таким же образом наматывал на нее полученную
ленту и читал сообщение вдоль оси сциталы.
Отметим, что в этом шифре преобразование открытого текста в шиф-
1)Kahn David. Codebreakers. The story of Secret Writing. New York: Macmillan, 1967.
2)Соболева Т.А. Тайнопись в истории России (История криптографической служ-
бы России XVIII – начала XX в.). М., 1994.
14 Гл. 1. Основные понятия криптографии
рованный заключается в определенной перестановке букв открытого текста.
Поэтому класс шифров, к которым относится и шифр ¾Сцитала¿, называется
шифрами перестановки.
Шифр Цезаря. Этот шифр реализует следующее преобразование откры-
того текста: каждая буква открытого текста заменяется третьей после нее
буквой в алфавите, который считается написанным по кругу, т. е. после бук-
вы ¾я¿ следует буква ¾а¿. Отметим, что Цезарь заменял букву третьей после
нее буквой, но можно заменять и какой-нибудь другой. Главное, чтобы тот,
кому посылается шифрованное сообщение, знал эту величину сдвига. Класс
шифров, к которым относится и шифр Цезаря, называется шифрами замены.
Из предыдущего изложения понятно, что придумывание хорошего
шифра  дело трудоемкое. Поэтомужелательно увеличить ¾время жиз-
ни¿ хорошего шифра и использовать его для шифрования как можно
большего количества сообщений. Но при этом возникает опасность, что
противник уже разгадал (вскрыл) шифр и читает защищаемую инфор-
мацию. Если же в шифре есть сменный ключ, то, заменив ключ, можно
надеяться, что разработанные противником методы уже не дают эф-
фекта.
Под ключом в криптографии понимают сменный элемент шифра,
который применяется для шифрования сообщений. Например, в шиф-
ре ¾Сцитала¿ ключом является диаметр сциталы, а в шифрах типа
шифра Цезаря ключом является величина сдвига букв шифртекста от-
носительно букв открытого текста.
Описанные соображения привели к тому, что безопасность защи-
щаемой информации стала определяться в первую очередь ключом.
Сам шифр, шифрмашина или принцип шифрования стали считать
известными противнику и доступными для предварительного изуче-
ния, но в них появился неизвестный для противника ключ, от кото-
рого существенно зависят применяемые преобразования информации.
Теперь законные пользователи, прежде чем обмениваться шифрован-
ными сообщениями, должны тайно от противника обменяться ключа-
ми или установить одинаковый ключ на обоих концах канала связи.
А для противника появилась новая задача  определить ключ, после
чего можно легко прочитать зашифрованные на этом ключе сообще-
ния.
Вернемся к формальному описанию основного объекта криптогра-
фии (рис. 1, стр. 11). Теперь в него необходимо внести существенное из-
менение  добавить недоступный для противника секретный канал свя-
зи для обмена ключами (см. рис. 2). Создать такой канал связи вполне
реально, поскольку нагрузка на него, вообще говоря, небольшая.
Отметим теперь, что не существует единого шифра, подходя-
щего для всех случаев. Выбор способа шифрования зависит от осо-
бенностей информации, ее ценности и возможностей владельцев
§ 2. Предмет криптографии 15
A B
П
сообщения
ключи
Рис. 2.
по защите своей информации. Прежде всего подчеркнем большое
разнообразие видов защищаемой информации: документальная, теле-
фонная, телевизионная, компьютерная и т. д. Каждый вид информа-
ции имеет свои специфические особенности, и эти особенности силь-
но влияют на выбор методов шифрования информации. Большое
значение имеют объемы и требуемая скорость передачи шифрован-
ной информации. Выбор вида шифра и его параметров существен-
но зависит от характера защищаемых секретов или тайны. Некото-
рые тайны (например, государственные, военные и др.) должны со-
храняться десятилетиями, а некоторые (например, биржевые)  уже
через несколько часов можно разгласить. Необходимо учитывать так-
же и возможности того противника, от которого защищается данная
информация. Одно дело  противостоять одиночке или даже бан-
де уголовников, а другое дело  мощной государственной структу-
ре.
Способность шифра противостоять всевозможным атакам на него
называют стойкостью шифра.
Под атакой на шифр понимают попытку вскрытия этого шифра.
Понятие стойкости шифра является центральным для криптогра-
фии. Хотя качественно понять его довольно легко, но получение стро-
гих доказуемых оценок стойкости для каждого конкретного шифра 
проблема нерешенная. Это объясняется тем, что до сих пор нет необ-
ходимых для решения такой проблемы математических результатов.
(Мы вернемся к обсуждению этого вопроса ниже.) Поэтому стойкость
конкретного шифра оценивается только путем всевозможных попыток
его вскрытия и зависит от квалификации криптоаналитиков, атаку-
ющих шифр. Такую процедуру иногда называют проверкой стойко-
сти.
Важным подготовительным этапом для проверки стойкости шиф-
ра является продумывание различных предполагаемых возможностей,
с помощью которых противник может атаковать шифр. Появление та-
ких возможностей у противника обычно не зависит от криптографии,
это является некоторой внешней подсказкой и существенно влияет на
стойкость шифра. Поэтому оценки стойкости шифра всегда содержат
те предположения о целях и возможностях противника, в условиях ко-
16 Гл. 1. Основные понятия криптографии
торых эти оценки получены.
Прежде всего, как это уже отмечалось выше, обычно считается, что
противник знает сам шифр и имеет возможности для его предвари-
тельного изучения. Противник также знает некоторые характеристики
открытых текстов, например, общую тематику сообщений, их стиль,
некоторые стандарты, форматы и т. д.
Из более специфических приведем еще три примера возможностей
противника:
– противник может перехватывать все шифрованные сообщения, но
не имеет соответствующих им открытых текстов;
– противник может перехватывать все шифрованные сообщения и
добывать соответствующие им открытые тексты;
– противник имеет доступ к шифру (но не к ключам!) и поэтому
может зашифровывать и дешифровывать любую информацию.
На протяжении многих веков среди специалистов не утихали споры
о стойкости шифров и о возможности построения абсолютно стойкого
шифра. Приведем три характерных высказывания на этот счет.
Английский математик Чарльз Беббидж (ХIХ в.):
¾Всякий человек, даже если он не знаком с техникой вскрытия шифров, твер-
до считает, что сможет изобрести абсолютно стойкий шифр, и чем более умен
и образован этот человек, тем более твердо это убеждение. Я сам разделял
эту уверенность в течение многих лет.¿
¾Отец кибернетики¿ Норберт Винер:
¾Любой шифр может быть вскрыт, если только в этом есть настоятельная
необходимость и информация, которую предполагается получить, стоит за-
траченных средств, усилий и времени. . . ¿
Автор шифра PGP Ф. Зиммерманн (¾Компьютерра¿, №48 от 1.12.1997,
стр. 45–46):
¾Каждый, кто думает, что изобрел непробиваемую схему шифрования,  или
невероятно редкий гений, или просто наивен и неопытен. . . ¿
¾Каждый программист воображает себя криптографом, что ведет к распро-
странению исключительно плохого криптообеспечения. . . ¿
В заключение данного раздела сделаем еще одно замечание  о тер-
минологии. В последнее время наряду со словом ¾криптография¿ ча-
сто встречается и слово ¾криптология¿, но соотношение между ними не
всегда понимается правильно. Сейчас происходит окончательное фор-
мирование этих научных дисциплин, уточняются их предмет и задачи.
Криптография  инженерно-техническая дисциплина, которая за-
нимается математическими методами защиты информации. Включает
в себя криптосинтез и криптоанализ.
Криптосинтез  та часть криптографии, которая занимается раз-
работкой криптографических средств защиты информации.
§ 3. Математические основы 17
Криптоанализ  совокупность методов и способов вскрытия крип-
тографических схем.
Криптология, или, что то же самое, теоретическая (или матема-
тическая) криптография  отрасль дискретной математики, предме-
том которой является исследование математических моделей крипто-
графических схем.
Соотношение криптосинтеза и криптоанализа очевидно: криптосин-
тез  защита, например, разработка шифров, а криптоанализ  напа-
дение, т. е. атака на шифры. Однако эти две дисциплины связаны друг
с другом, и не бывает хороших криптографов, не владеющих методами
криптоанализа.
§ 3. Математические основы
Большое влияние на развитие криптографии оказали появившие-
ся в середине XX века работы американского математика Клода Шен-
нона. В этих работах были заложены основы теории информации, а
также был разработан математический аппарат для исследований во
многих областях науки, связанных с информацией. Более того, при-
нято считать, что теория информации как наука родилась в 1948 го-
ду после публикации работы К. Шеннона ¾Математическая теория
связи¿1).
В своей работе ¾Теория связи в секретных системах¿ Клод Шен-
нон обобщил накопленный до него опыт разработки шифров2). Оказа-
лось, что даже в очень сложных шифрах в качестве типичных ком-
понентов можно выделить, по крайней мере теоретически, такие про-
стые шифры как шифры замены, шифры перестановки или их сочета-
ния.
Шифр замены является простейшим, наиболее популярным шиф-
ром. Типичными примерами являются шифр Цезаря, ¾цифирная азбу-
ка¿
Петра Великого и ¾пляшущие человечки¿ А.Конан Дойла. Как видно
из самого названия, шифр замены осуществляет преобразование заме-
ны букв или других ¾частей¿ открытого текста на аналогичные ¾части¿
шифрованного текста. Легко дать математическое описание шифра за-
мены. Пусть X и Y  два алфавита (открытого и шифрованного тек-
стов соответственно), состоящие из одинакового числа символов. Пусть
также g : X → Y  взаимнооднозначное отображение X в Y . Тогда
шифр замены действует так: открытый текст x1x2 . . . xn преобразуется
в шифрованный текст g(x1)g(x2) . . . g(xn).
1)Shannon C. E. A mathematical theory of communication // Bell System Techn. J.
V. 27, №3, 1948. P. 379–423; V. 27, №4, 1948. P. 623–656.
2)См. Приложение.
18 Гл. 1. Основные понятия криптографии
Шифр перестановки, как видно из названия, осуществляет преобра-
зование перестановки букв в открытом тексте. Типичным примером
шифра перестановки является шифр ¾Сцитала¿. Обычно открытый
текст разбивается на блоки равной длины и каждый блок шифруется
независимо. Пусть, например, длина блоков равна n и   взаимно-
однозначное отображение множества {1, 2, . . . , n} в себя. Тогда шифр
перестановки действует так: блок открытого текста x1 . . . xn преобразу-
ется в блок шифрованного текста x(1) . . . x(n).
Важнейшим для развития криптографии был результат К. Шен-
нона о существовании абсолютно стойкого шифра. Любой такой шифр
подобен так называемой ленте одноразового использования в том смыс-
ле, что секретный ключ должен быть полностью случайным, однора-
зовым, и его длина должна быть не меньше длины открытого тек-
ста.
Этот результат был доказан К.Шенноном с помощью разработанно-
го им теоретико-информационного метода исследования шифров. Мы
не будем здесь останавливаться на этом подробно, заинтересованному
читателю рекомендуем изучить работу К.Шеннона1).
Обсудим особенности строения абсолютно стойкого шифра и воз-
можности его практического использования. Типичным и наиболее про-
стым примером реализации абсолютно стойкого шифра является шифр
Вернама, который осуществляет побитовое сложение n-битового откры-
того текста и n-битового ключа:
yi = xi ⊕ ki, i = 1, . . . , n.
Здесь x1 . . . xn  открытый текст, k1, . . . , kn  ключ, y1 . . . yn  шифро-
ванный текст.
Подчеркнем, что для абсолютной стойкости существенным является
каждое из следующих требований к ленте однократного использования:
1) полная случайность (равновероятность) ключа (это, в частности,
означает, что ключ нельзя вырабатывать с помощью какого-либо де-
терминированного устройства);
2) равенство длины ключа и длины открытого текста;
3) однократность использования ключа.
В случае нарушения хотя бы одного из этих условий шифр перестает
быть абсолютно стойким и появляются принципиальные возможности
для его вскрытия (хотя они могут быть трудно реализуемыми).
Но, оказывается, именно эти условия и делают абсолютно стойкий
шифр очень дорогим и непрактичным. Прежде чем пользоваться таким
шифром, мы должны обеспечить всех абонентов достаточным запасом
случайных ключей и исключить возможность их повторного примене-
ния. А это сделать необычайно трудно и дорого.
1)См. Приложение.
§ 3. Математические основы 19
Как отмечал Д.Кан: ¾Проблема создания, регистрации, распространения
и отмены ключей может показаться не слишком сложной тому, кто не име-
ет опыта передачи сообщений по каналам военной связи, но в военное вре-
мя объем передаваемых сообщений ставит в тупик даже профессиональных
связистов. За сутки могут быть зашифрованы сотни тысяч слов. Создание
миллионов ключевых знаков потребовало бы огромных финансовых издер-
жек и было бы сопряжено с большими затратами времени. Так как каждый
текст должен иметь свой собственный, единственный и неповторимый ключ,
применение идеальной системы потребовало бы передачи по крайней мере
такого количества знаков, которое эквивалентно всему объему передаваемой
военной информации.¿
В силу указанных причин абсолютно стойкие шифры применяются
только в сетях связи с небольшим объемом передаваемой информации,
обычно это сети для передачи особо важной государственной информа-
ции.
Теперь уже понятно, что чаще всего для защиты своей информа-
ции законные пользователи вынуждены применять неабсолютно стой-
кие шифры. Такие шифры, по крайней мере теоретически, могут
быть вскрыты. Вопрос только в том, хватит ли у противника сил,
средств и времени для разработки и реализации соответствующих ал-
горитмов. Обычно эту мысль выражают так: противник с неогра-
ниченными ресурсами может вскрыть любой неабсолютно стойкий
шифр.
Как же должен действовать в этой ситуации законный пользова-
тель, выбирая для себя шифр? Лучше всего, конечно, было бы дока-
зать, что никакой противник не может вскрыть выбранный шифр, ска-
жем, за 10 лет и тем самым получить теоретическую оценку стойкости.
К сожалению, математическая теория еще не дает нужных теорем 
они относятся к нерешенной проблеме нижних оценок вычислитель-
ной сложности задач.
Поэтому на практике приходится использовать альтернативный под-
ход  получение так называемых практических оценок стойкости. Для
этого нужно выполнить следующее:
– понять и четко сформулировать, от какого противника мы собира-
емся защищать информацию; необходимо уяснить, что именно против-
ник знает или сможет узнать о шифре, а также какие силы и средства
он сможет применить для его вскрытия;
– мысленно стать в положение противника и пытаться с его позиций
атаковать шифр, т. е. разрабатывать различные алгоритмы вскрытия
шифра; при этом необходимо в максимальной мере обеспечить модели-
рование сил, средств и возможностей противника;
– наилучший из разработанных алгоритмов использовать для прак-
тической оценки стойкости шифра.
20 Гл. 1. Основные понятия криптографии
Здесь полезно для иллюстрации упомянуть о двух простейших ме-
тодах вскрытия шифра: случайное угадывание ключа (он срабатывает
с маленькой вероятностью, зато имеет маленькую сложность) и перебор
всех подряд ключей вплоть до нахождения истинного (он срабатывает
всегда, зато имеет очень большую сложность). Отметим также, что не
всегда нужна атака на ключ: для некоторых шифров можно сразу, даже
не зная ключа, восстанавливать открытый текст по шифрованному.
§ 4. Новые направления
В 1983 году в книге ¾Коды и математика¿М.Н.Аршинова и Л.Е.Са-
довского (библиотечка ¾Квант¿) было написано: ¾Приемов тайнописи
 великое множество, и, скорее всего, это та область, где уже нет нуж-
ды придумывать что-нибудь существенно новое.¿ Однако это было оче-
редное большое заблуждение относительно криптографии. Еще в 1976
году была опубликована работа молодых американских математиков
У.Диффи и М.Э.Хеллмана ¾Новые направления в криптографии¿1),
которая не только существенно изменила криптографию, но и привела
к появлению и бурному развитию новых направлений в математике.
Центральным понятием ¾новой криптографии¿ является понятие од-
носторонней функции (подробнее об этом см. главу 2).
Односторонней называется функция F : X → Y , обладающая двумя
свойствами:
а) существует полиномиальный алгоритм вычисления значений F(x);
б) не существует полиномиального алгоритма инвертирования фун-
кции F (т. е. решения уравнения F(x) = y относительно x, точное опре-
деление см. на стр. 32).
Отметим, что односторонняя функция существенно отличается от
функций, привычных со школьной скамьи, из-за ограничений на слож-
ность ее вычисления и инвертирования. Вопрос о существовании одно-
сторонних функций пока открыт.
Еще одним новым понятием является понятие функции с секретом.
Иногда еще употребляется термин функция с ловушкой. Функцией с
секретом называется функция F : K × X → Y такая, что:
а) существует полиномиальный алгоритм, который выбирает такую
пару (k1, k2), что k1  случайный элемент множества K. Значение k2
называется секретом;
б) существует полиномиальный алгоритм, который по данным k1 и
x ∈ X вычисляет F(k1, x);
1)Диффи У., Хеллман М. Э. Защищенность и имитостойкость. Введение в крип-
тографию // ТИИЭР. Т. 67, №3, 1979.
§ 4. Новые направления 21
в) не существует полиномиального алгоритма инвертированияфунк-
ции F(k1, ·) при известном k1 (и неизвестном k2);
г) существует полиномиальный алгоритм, который при известном
секрете k2 инвертирует функцию F(k1, ·).
Про существование функций с секретом можно сказать то же са-
мое, что сказано про односторонние функции. Для практических целей
криптографии было построено несколько функций, которые могут ока-
заться функциями с секретом. Для них свойство в) пока строго не дока-
зано, но либо доказано, либо предполагается, что задача инвертирова-
ния эквивалентна некоторой давно изучаемой вычислительно трудной
математической задаче. Наиболее известной и популярной из них яв-
ляется теоретико-числовая функция, на которой построен шифр RSA
(подробнее об этом см. главу 4).
Применение функций с секретом в криптографии позволяет:
1) организовать обмен шифрованными сообщениями с использова-
нием только открытых каналов связи, т. е. отказаться от секретных ка-
налов связи для предварительного обмена ключами;
2) включить в задачу вскрытия шифра вычислительно трудную ма-
тематическую задачу и тем самым повысить обоснованность стойкости
шифра;
3) решать новые криптографические задачи, отличные от шифрова-
ния (электронная цифровая подпись и др.).
Подчеркнем, что все эти задачи могут быть решены, по крайней
мере теоретически, и без использования функций с секретом; однако,
конструкции, основанные на функциях с секретом, проще и эффектив-
нее.
Опишем, например, как можно реализовать п. 1). Пользователь A,
который хочет получать шифрованные сообщения, должен выбрать
какую-нибудь функцию FK с секретом K. Он сообщает всем заинте-
ресованным (например, публикует) описание функции FK в качестве
своего алгоритма шифрования. Но при этом значение секрета K он
никому не сообщает и держит в секрете. Если теперь пользователь B
хочет послать пользователю A защищаемую информацию x ∈ X, то он
вычисляет y = FK(x) и посылает y по открытому каналу пользовате-
лю A. Поскольку A для своего секрета K умеет инвертировать FK, то
он вычисляет x по полученному y. Никто другой не знает K и поэтому
в силу свойства в) функции с секретом не сможет за полиномиальное
время по известному шифрованному сообщению FK(x) вычислить от-
крытый текст x.
Описанную систему называют криптосистемой с открытым клю-
чом, поскольку алгоритм шифрования FK является общедоступным
или открытым. В последнее время такие криптосистемы еще называют
асимметричными, поскольку в них есть асимметрия в алгоритмах: ал-
22 Гл. 1. Основные понятия криптографии
горитмы шифрования и дешифрования различны. В отличие от таких
систем традиционные шифры называют симметричными: в них ключ
для шифрования и дешифрования один и тот же. (См. комментарий
к термину ¾асимметричная криптосистема¿ в Словаре криптографи-
ческих терминов.) Для асимметричных систем алгоритм шифрования
общеизвестен, но восстановить по нему алгоритм дешифрования за по-
линомиальное время невозможно.
Описанную выше идею Диффи и Хеллман предложили использо-
вать также для электронной подписи сообщений, которую невозможно
подделать за полиномиальное время. Пусть пользователю A необходи-
мо подписать сообщение x. Он, зная секрет K, находит такое y, что
FK(y) = x, и вместе с сообщением x посылает y пользователю B в каче-
стве своей электронной подписи. Пользователь B хранит y в качестве
доказательства того, что A подписал сообщение x.
Сообщение, подписанное электронной подписью, можно представ-
лять себе как пару (x, y), где x  сообщение, y  решение уравнения
FK(y) = x, FK : X → Y  функция с секретом, известная всем вза-
имодействующим абонентам. Из определения функции FK очевидны
следующие полезные свойства электронной подписи:
1) подписать сообщение x, т. е. решить уравнение FK(y) = x, может
только абонент  обладатель данного секрета K; другими словами, под-
делать подпись невозможно;
2) проверить подлинность подписи может любой абонент, знающий
открытый ключ, т. е. саму функцию FK;
3) при возникновении споров отказаться от подписи невозможно в
силу ее неподделываемости;
4) подписанные сообщения (x, y) можно, не опасаясь ущерба, пере-
сылать по любым каналам связи.
Кроме принципа построения криптосистемы с открытым ключом,
Диффи и Хеллман в той же работе предложили еще одну новую идею 
открытое распределение ключей. Они задались вопросом: можно ли
организовать такую процедуру взаимодействия абонентов A и B по от-
крытым каналам связи, чтобы решить следующие задачи:
1) вначале у A и B нет никакой общей секретной информации, но в
конце процедуры такая общая секретная информация (общий ключ) у
A и B появляется, т. е. вырабатывается;
2) пассивный противник, который перехватывает все передачи ин-
формации и знает, что хотят получить A и B, тем не менее не может
восстановить выработанный общий ключ A и B.
Диффи и Хеллман предложили решать эти задачи с помощью функ-
ции
F(x) = x mod p,
§ 4. Новые направления 23
где p  большое простое число, x  произвольное натуральное число,
  некоторый примитивный элемент поля GF(p). Общепризнанно,
что инвертирование функции x mod p, т. е. дискретное логарифмиро-
вание, является вычислительно трудной математической задачей. (По-
дробнее см. главу 4.)
Сама процедура или, как принято говорить, протокол выработки
общего ключа описывается следующим образом.
Абоненты A и B независимо друг от друга случайно выбирают по
одному натуральному числу  скажем xA и xB. Эти элементы они дер-
жат в секрете. Далее каждый из них вычисляет новый элемент:
yA = xA mod p, yB = xB mod p.
(Числа p и  считаются общедоступными.) Потом они обмениваются
этими элементами по каналу связи. Теперь абонент A, получив yB и
зная свой секретный элемент xA, вычисляет новый элемент:
yxA
B mod p = (xB)xA mod p.
Аналогично поступает абонент B:
yxB
A mod p = (xA)xB mod p.
Тем самым у A и B появился общий элемент поля, равный xAxB. Этот
элемент и объявляется общим ключом A и B.
Из описания протокола видно, что противник знает p, , xA, xB, не
знает xA и xB и хочет узнать xAxB. В настоящее время нет алгоритмов
действий противника, более эффективных, чем дискретное логарифми-
рование, а это  вычислительно трудная математическая задача.
Успехи, достигнутые в разработке схем электронной подписи и от-
крытого распределения ключей, позволили применить эти идеи также и
к другим задачам взаимодействия удаленных абонентов. Так возникло
большое новое направление теоретической криптографии  криптогра-
фические протоколы (подробнее см. главу 3).
Объектом изучения теории криптографических протоколов являют-
ся удаленные абоненты, взаимодействующие, как правило, по откры-
тым каналам связи. Целью взаимодействия абонентов является реше-
ние какой-то задачи. Имеется также противник, который преследует
собственные цели. При этом противник в разных задачах может иметь
разные возможности: например, может взаимодействовать с абонента-
ми от имени других абонентов или вмешиваться в обмены информацией
между абонентами и т. д. Противником может даже оказаться один из
абонентов или несколько абонентов, вступивших в сговор.
Приведем еще несколько примеров задач, решаемых удаленными
абонентами. (Читателю рекомендуем по своему вкусу самостоятельно
придумать еще какие-нибудь примеры.)
1. Взаимодействуют два не доверяющих друг другу абонента. Они
24 Гл. 1. Основные понятия криптографии
хотят подписать контракт. Это надо сделать так, чтобы не допустить
следующую ситуацию: один из абонентов получил подпись другого, а
сам не подписался.
Протокол решения этой задачи принято называть протоколом
подписания контракта.
2. Взаимодействуют два не доверяющих друг другу абонента. Они
хотят бросить жребий с помощью монеты. Это надо сделать так, что-
бы абонент, подбрасывающий монету, не мог изменить результат под-
брасывания после получения догадки от абонента, угадывающего этот
результат.
Протокол решения этой задачи принято называть протоколом
подбрасывания монеты.
Опишем один из простейших протоколов подбрасывания монеты по теле-
фону (так называемая схема Блюма-Микали). Для его реализации у абонен-
тов A и B должна быть односторонняя функция f : X → Y , удовлетворяющая
следующим условиям:
1) X  множество целых чисел, которое содержит одинаковое количество
четных и нечетных чисел;
2) любые числа x1, x2 ∈ X, имеющие один образ f(x1) = f(x2), имеют
одну четность;
3) по заданному образу f(x) ¾трудно¿ вычислить четность неизвестного
аргумента x.
Роль подбрасывания монеты играет случайный и равновероятный выбор
элемента x ∈ X, а роль орла и решки  четность и нечетность x соответ-
ственно. Пусть A  абонент, подбрасывающий монету, а B  абонент, угады-
вающий результат. Протокол состоит из следующих шагов:
1) A выбирает x (¾подбрасывает монету¿), зашифровывает x, т. e. вычис-
ляет y = f(x), и посылает y абоненту B;
2) B получает y, пытается угадать четность x и посылает свою догадку
абоненту A;
3) A получает догадку от B и сообщает B, угадал ли он, посылая ему
выбранное число x;
4) B проверяет, не обманывает ли A, вычисляя значение f(x) и сравнивая
его с полученным на втором шаге значением y.
3. Взаимодействуют два абонента A и B (типичный пример: A 
клиент банка, B  банк). Абонент A хочет доказать абоненту B, что он
именно A, а не противник.
Протокол решения этой задачи принято называть протоколом иден-
тификации абонента.
4. Взаимодействуют несколько удаленных абонентов, получивших
приказы из одного центра. Часть абонентов, включая центр, могут
быть противниками. Необходимо выработать единую стратегию дей-
ствий, выигрышную для абонентов.
§ 5. Заключение 25
Эту задачу принято называть задачей о византийских генералах, а
протокол ее решения  протоколом византийского соглашения.
Осмысление различных протоколов и методов их построения стало
одной из предпосылок к появлению в 1985–1986 г.г. двух плодотворных
математических моделей  интерактивной системы доказательства
и доказательства с нулевым разглашением. Математические исследо-
вания этих новых объектов позволили доказать много утверждений,
весьма полезных при разработке криптографических протоколов (по-
дробнее об этом см. главу 2).
Под интерактивной системой доказательства (P, V, S) понимают про-
токол взаимодействия двух абонентов: P (доказывающий) и V (прове-
ряющий). Абонент P хочет доказать V , что утверждение S истинно.
При этом абонент V самостоятельно, без помощи P, не может прове-
рить утверждение S (поэтому V и называется проверяющим). Абонент
P может быть и противником, который хочет доказать V , что утверж-
дение S истинно, хотя оно ложно. Протокол может состоять из многих
раундов обмена сообщениями между P и V и должен удовлетворять
двум условиям:
1) полнота  если S действительно истинно, то абонент P убедит
абонента V признать это;
2) корректность  если S ложно, то абонент P вряд ли убедит
абонента V , что S истинно.
Здесь словами ¾вряд ли¿ мы для простоты заменили точную мате-
матическую формулировку.
Подчеркнем, что в определении системы (P, V, S) не допуска-
лось, что V может быть противником. А если V оказался против-
ником, который хочет ¾выведать¿ у P какую-нибудь новую полез-
ную для себя информацию об утверждении S? В этом случае P,
естественно, может не хотеть, чтобы это случилось в результате ра-
боты протокола (P, V, S). Протокол (P, V, S), решающий такую за-
дачу, называется доказательством с нулевым разглашением и дол-
жен удовлетворять, кроме условий 1) и 2), еще и следующему усло-
вию:
3) нулевое разглашение  в результате работы протокола (P, V, S)
абонент V не увеличит свои знания об утверждении S или, другими
словами, не сможет извлечь никакой информации о том, почему S ис-
тинно.
§ 5. Заключение
За последние годы криптография и криптографические методы все
шире входят в нашу жизнь и даже быт. Вот несколько примеров. От-
правляя Email, мы в некоторых случаях отвечаем на вопрос меню: ¾Ну-
26 Гл. 1. Основные понятия криптографии
жен ли режим зашифрования?¿ Владелец интеллектуальной банков-
ской карточки, обращаясь через терминал к банку, вначале выполняет
криптографический протокол аутентификации карточки. Пользовате-
ли сети Интернет наверняка знакомы с дискуссиями вокруг возможно-
го принятия стандарта электронной подписи для тех страниц, которые
содержат ¾критическую¿ информацию (юридическую, прайс-листы и
др.). С недавних пор пользователи сетей стали указывать после своей
фамилии наряду с уже привычным ¾Email . . . ¿ и менее привычное 
¾Отпечаток открытого ключа . . . ¿.
С каждым днем таких примеров становится все больше. Именно но-
вые практические приложения криптографии и являются одним из ис-
точников ее развития.
Глава 2
Криптография и теория сложности
Основное внимание в настоящей главе мы уделяем разъяснению важ-
нейших идей, связанных с применением теоретико-сложностного под-
хода в криптографии. Изложение по необходимости недостаточно фор-
мальное  для математической криптографии типичны многостра-
ничные определения. Предполагается знакомство читателя с основами
теории сложности вычислений: понятиями машины Тьюринга, классов
P и NP (см. [2]), а также с главой 1 настоящей книги.
§ 1. Введение
В теоретической криптографии существуют два основных подхода
к определению стойкости криптосистем и криптографических протоко-
лов (в дальнейшем мы будем также использовать общий термин  крип-
тографические схемы): теоретико-информационный и теоретико-слож-
ностной. Теоретико-информационный подход предполагает, что против-
ник, атакующий криптографическую схему, не имеет даже теоретиче-
ской возможности получить информацию, достаточную для осуществ-
ления своих целей. Классическим примером здесь может служить шифр
Вернама с одноразовыми ключами, абсолютно стойкий против пассив-
ного противника.
Подавляющее большинство используемых на практике криптогра-
фических схем не обладает столь высокой стойкостью. Более того,
обычно бывает несложно указать алгоритм, который выполняет сто-
ящую перед противником задачу, но не практически, а в принципе.
Рассмотрим следующий пример.
Пример 1 (Криптосистема с открытым ключом). Криптосисте-
ма с открытым ключом полностью определяется тремя алгоритмами:
генерации ключей, шифрования и дешифрования. Алгоритм генера-
ции ключей G общедоступен; всякий желающий может подать ему на
вход случайную строку r надлежащей длины и получить пару ключей
(K1,K2). Открытый ключ K1 публикуется, а секретный ключ K2 и
случайная строка r хранятся в секрете. Алгоритмы шифрования EK1 и
28 Гл. 2. Криптография и теория сложности
дешифрования DK2 таковы, что если (K1,K2)  пара ключей, сгенери-
рованная алгоритмом G, то DK2(EK1(m)) = m для любого открытого
текста m. Для простоты изложения предполагаем, что открытый текст
и криптограмма имеют одинаковую длину n. Кроме того, считаем, что
открытый текст, криптограмма и оба ключа являются строками в дво-
ичном алфавите.
Предположим теперь, что противник атакует эту криптосистему.
Ему известен открытый ключ K1, но неизвестен соответствующий сек-
ретный ключ K2. Противник перехватил криптограмму d и пытается
найти сообщение m, где d = EK1 (m). Поскольку алгоритм шифрования
общеизвестен, противник может просто последовательно перебрать все
возможные сообщения длины n, вычислить для каждого такого сооб-
щения mi криптограмму di = EK1 (mi) и сравнить di с d. То сообщение,
для которого di = d, и будет искомым открытым текстом. Если повезет,
то открытый текст будет найден достаточно быстро. В худшем же слу-
чае перебор будет выполнен за время порядка 2nT (n), где T (n)  вре-
мя, требуемое для вычисления функции EK1 от сообщений длины n.
Если сообщения имеют длину порядка 1000 битов, то такой перебор
неосуществим на практике ни на каких самых мощных компьютерах.
Мы рассмотрели лишь один из возможных способов атаки на крип-
тосистему и простейший алгоритм поиска открытого текста, называе-
мый обычно алгоритмом полного перебора. Используется также и дру-
гое название: ¾метод грубой силы¿. Другой простейший алгоритм по-
иска открытого текста  угадывание. Этот очевидный алгоритм тре-
бует небольших вычислений, но срабатывает с пренебрежимо малой
вероятностью (при больших длинах текстов). На самом деле против-
ник может пытаться атаковать криптосистему различными способами
и использовать различные, более изощренные алгоритмы поиска от-
крытого текста. Естественно считать криптосистему стойкой, если лю-
бой такой алгоритм требует практически неосуществимого объема вы-
числений или срабатывает с пренебрежимо малой вероятностью. (При
этом противник может использовать не только детерминированные, но
и вероятностные алгоритмы.) Это и есть теоретико-сложностной под-
ход к определению стойкости. Для его реализации в отношении того
или иного типа криптографических схем необходимо выполнить следу-
ющее:
1) дать формальное определение схемы данного типа;
2) дать формальное определение стойкости схемы;
3) доказать стойкость конкретной конструкции схемы данного типа.
Здесь сразу же возникает ряд проблем.
Во-первых, в криптографических схемах, разумеется, всегда исполь-
зуются фиксированные значения параметров. Например, криптосисте-
мы разрабатываются для ключей длины, скажем, в 256 или 512 битов.
§ 1. Введение 29
Для применения же теоретико-сложностного подхода необходимо, что-
бы задача, вычислительную сложность которой предполагается исполь-
зовать, была массовой. Поэтому в теоретической криптографии рас-
сматриваются математические модели криптографических схем. Эти
модели зависят от некоторого параметра, называемого параметром без-
опасности, который может принимать сколь угодно большие значения
(обычно для простоты предполагается, что параметр безопасности мо-
жет пробегать весь натуральный ряд).
Во-вторых, определение стойкости криптографической схемы зави-
сит от той задачи, которая стоит перед противником, и от того, какая
информация о схеме ему доступна. Поэтому стойкость схем приходит-
ся определять и исследовать отдельно для каждого предположения о
противнике.
В-третьих, необходимо уточнить, какой объем вычислений можно
считать ¾практически неосуществимым¿. Из сказанного выше следу-
ет, что эта величина не может быть просто константой, она должна
быть представлена функцией от растущего параметра безопасности. В
соответствии с тезисом Эдмондса алгоритм считается эффективным,
если время его выполнения ограничено некоторым полиномом от дли-
ны входного слова (в нашем случае  от параметра безопасности). В
противном случае говорят, что вычисления по данному алгоритму прак-
тически неосуществимы. Заметим также, что сами криптографические
схемы должны быть эффективными, т. е. все вычисления, предписанные
той или иной схемой, должны выполняться за полиномиальное время.
В-четвертых, необходимо определить, какую вероятность можно
считать пренебрежимо малой. В криптографии принято считать та-
ковой любую вероятность, которая для любого полинома p и для всех
достаточно больших n не превосходит 1/p(n), где n  параметр без-
опасности.
Итак, при наличии всех указанных выше определений, проблема
обоснования стойкости криптографической схемы свелась к доказатель-
ству отсутствия полиномиального алгоритма, который решает задачу,
стоящую перед противником. Но здесь возникает еще одно и весьма се-
рьезное препятствие: современное состояние теории сложности вычис-
лений не позволяет доказывать сверхполиномиальные нижние оценки
сложности для конкретных задач рассматриваемого класса. Из этого
следует, что на данный момент стойкость криптографических схем мо-
жет быть установлена лишь с привлечением каких-либо недоказанных
предположений. Поэтому основное направление исследований состоит
в поиске наиболее слабых достаточных условий (в идеале  необходи-
мых и достаточных) для существования стойких схем каждого из типов.
В основном, рассматриваются предположения двух типов  общие (или
теоретико-сложностные) и теоретико-числовые, т. е. предположения о
30 Гл. 2. Криптография и теория сложности
сложности конкретных теоретико-числовых задач. Все эти предполо-
жения в литературе обычно называются криптографическими.
Ниже мы кратко рассмотрим несколько интересных математических
объектов, возникших на стыке теории сложности и криптографии. Бо-
лее подробный обзор по этим вопросам можно найти в книге [1].
§ 2. Криптография и гипотеза P 6= NP
Как правило, знакомство математиков-неспециалистов с теорией
сложности вычислений ограничивается классами P и NP и знамени-
той гипотезой P6=NP.
Напомним вкратце необходимые сведения из теории сложности вычис-
лений. Пусть   множество всех конечных строк в двоичном алфавите
 = {0, 1}. Подмножества L ⊆  в теории сложности принято называть язы-
ками. Говорят, что машина Тьюринга M работает за полиномиальное время
(или просто, что она полиномиальна), если существует полином p такой, что
на любом входном слове длины n машина M останавливается после выпол-
нения не более, чем p(n) операций. Машина Тьюринга M распознает (другой
термин  принимает) язык L, если на всяком входном слове x ∈ L машина
M останавливается в принимающем состоянии, а на всяком слове x /∈ L 
в отвергающем. Класс P  это класс всех языков, распознаваемых машина-
ми Тьюринга, работающими за полиномиальное время. Функция f :  → 
вычислима за полиномиальное время, если существует полиномиальная ма-
шина Тьюринга такая, что если на вход ей подано слово x ∈ , то в момент
останова на ленте будет записано значение f(x). Язык L принадлежит классу
NP, если существуют предикат P(x, y) :  ×  → {0, 1}, вычислимый за по-
линомиальное время, и полином p такие, что L = {x|∃yP(x, y)&|y| 6 p(|x|)}.
Таким образом, язык L принадлежит NP, если для всякого слова из L дли-
ны n можно угадать некоторую строку полиномиальной от n длины и затем с
помощью предиката P убедиться в правильности догадки. Ясно, что P ⊆ NP.
Является ли это включение строгим  одна из самых известных нерешенных
задач математики. Большинство специалистов считают, что оно строгое (так
называемая гипотеза P6=NP). В классе NP выделен подкласс максимально
сложных языков, называемых NP-полными: любой NP-полный язык распо-
знаваем за полиномиальное время тогда и только тогда, когда P=NP.
Для дальнейшего нам потребуется еще понятие вероятностной машины
Тьюринга. В обычных машинах Тьюринга (их называют детерминированны-
ми, чтобы отличить от вероятностных) новое состояние, в которое машина
переходит на очередном шаге, полностью определяется текущим состояни-
ем и тем символом, который обозревает головка на ленте. В вероятностных
машинах новое состояние может зависеть еще и от случайной величины, ко-
торая принимает значения 0 и 1 с вероятностью 1/2 каждое. Альтернативно,
можно считать, что вероятностная машина Тьюринга имеет дополнительную
случайную ленту, на которой записана бесконечная двоичная случайная стро-
ка. Случайная лента может читаться только в одном направлении и переход
§ 2. Криптография и гипотеза P 6= NP 31
в новое состояние может зависеть от символа, обозреваемого на этой ленте.
Рассмотрим теперь следующий естественный вопрос: не является ли
гипотеза P6=NP необходимым и достаточным условием для существова-
ния стойких криптографических схем?
Необходимость, и в самом деле, во многих случаях почти очевидна.
Вернемся к примеру 1. Определим следующий язык
L = {(K1, d, i) | существует сообщение m такое, что EK1(m) = d и
его i-ый бит равен 1}.
Ясно, что L ∈ NP: вместо описанного во введении полного перебора
можно просто угадать открытый текст m и проверить за полиномиаль-
ное время, что EK1 (m) = d и i-ый бит m равен 1. Если да, то входное
слово (K1, d, i) принимается, в противном случае  отвергается.
В предположении P=NP существует детерминированный полиноми-
альный алгоритм, распознающий язык L. Зная K1 и d, с помощью это-
го алгоритма можно последовательно, по биту, вычислить открытый
текст m. Тем самым криптосистема нестойкая.
Тот же подход: угадать секретный ключ и проверить (за полиноми-
альное время) правильность догадки, применим в принципе и к другим
криптографическим схемам. Однако, в некоторых случаях возникают
технические трудности, связанные с тем, что по информации, которая
имеется у противника, искомая величина (открытый текст, секретный
ключ и т. п.) восстанавливается неоднозначно.
Что же касается вопроса о достаточности предположения P6=NP,
то здесь напрашивается следующий подход: выбрать какую-либо NP-
полную задачу и построить на ее основе криптографическую схему, за-
дача взлома которой (т. е. задача, стоящая перед противником) была
бы NP-полной. Такие попытки предпринимались в начале 80-х годов,
в особенности в отношении криптосистем с открытым ключом, но к
успеху не привели. Результатом всех этих попыток стало осознание сле-
дующего факта: даже если P6=NP, то любая NP-полная задача может
оказаться трудной лишь на некоторой бесконечной последовательно-
сти входных слов. Иными словами, в определение класса NP заложе-
на мера сложности ¾в худшем случае¿. Для стойкости же криптогра-
фической схемы необходимо, чтобы задача противника была сложной
¾почти всюду¿. Таким образом, стало ясно, что для криптографиче-
ской стойкости необходимо существенно более сильное предположение,
чем P6=NP. А именно, предположение о существовании односторонних
функций.
32 Гл. 2. Криптография и теория сложности
§ 3. Односторонние функции
Говоря неформально, односторонняя функция  это эффективно
вычислимая функция, для задачи инвертирования которой не сущест-
вует эффективных алгоритмов. Под инвертированием понимается мас-
совая задача нахождения по заданному значению функции одного (лю-
бого) значения из прообраза (заметим, что обратная функция, вообще
говоря, может не существовать).1)
Поскольку понятие односторонней функции  центральное в мате-
матической криптографии, ниже мы даем его формальное определение.
Пусть n = {0, 1}n  множество всех двоичных строк длины n.
Под функцией f мы понимаем семейство {fn}, где fn : n → m,
m = m(n). Для простоты изложения мы предполагаем, что n пробегает
весь натуральный ряд и что каждая из функций fn всюду определена.
Функция f называется честной, если существует полином q такой,
что n 6 q(m(n)) для всех n.
Определение 1. Честная функция f называется односторонней, ес-
ли
1. Существует полиномиальный алгоритм, который для всякого x
вычисляет f(x).
2. Для любой полиномиальной вероятностной машины Тьюринга A
выполнено следующее. Пусть строка x выбрана наудачу из множест-
ва n (обозначается x ∈R n). Тогда для любого полинома p и всех
достаточно больших n
Pr{f(A(f(x))) = f(x)} < 1/p(n).
Вероятность здесь определяется случайным выбором строки x и слу-
чайными величинами, которые A использует в своей работе.
Условие 2 качественно означает следующее. Любая полиномиальная
вероятностная машина Тьюринга A может по данному y найти x из
уравнения f(x) = y лишь с пренебрежимо малой вероятностью.
Заметим, что требование честности нельзя опустить. Поскольку дли-
на входного слова f(x) машины A равна m, ей может не хватить поли-
номиального (от m) времени просто на выписывание строки x, если f
слишком сильно ¾сжимает¿ входные значения.
1)Существует следующий образный аналог односторонней функции. Представим
себе большую телефонную книгу, упорядоченную по фамилиям абонентов. Тогда
найти по данной фамилии соответствующий телефонный номер не составляет тру-
да. Но представьте себе обратную задачу  по номеру телефона найти фамилию
его владельца. Этот же пример можно использовать и для пояснения сущности по-
нятия функции с секретом (см. главу 1). Предположим, что мы подготовили две
телефонные книги. Первая, как и выше, упорядочена по фамилиям абонентов, а
вторая, наоборот  по номерам телефонов. Первую книгу мы сделали общедоступ-
ной, а вторую оставили у себя, это и есть наш секрет. Задача определения по номеру
телефона фамилии его владельца остается трудной для всех, но только не для нас!
§ 3. Односторонние функции 33
Ясно, что из предположения о существовании односторонних функ-
ций следует, что P6=NP. Однако, не исключена следующая ситуация:
P6=NP, но односторонних функций нет.
Существование односторонних функций является необходимым ус-
ловием для стойкости многих типов криптографических схем. В некото-
рых случаях этот факт устанавливается достаточно просто. Обратим-
ся опять к примеру 1. Рассмотрим функцию f такую, что f(r) = K1.
Она вычислима с помощью алгоритма G за полиномиальное время.
Покажем, что если f  не односторонняя функция, то криптосистема
нестойкая. Предположим, что существует полиномиальный вероятност-
ный алгоритм A, который инвертирует f с вероятностью по крайней
мере 1/p(n) для некоторого полинома p. Здесь n  длина ключа K1.
Противник может подать на вход алгоритму A ключ K1 и получить с
указанной вероятностью некоторое значение r′ из прообраза. Далее про-
тивник подает r′ на вход алгоритма G и получает пару ключей (K1,K′
2).
Хотя K′
2 не обязательно совпадает с K2, тем не менее, по определе-
нию криптосистемы DK′2 (EK1(m)) = m для любого открытого текста
m. Поскольку K′
2 найден с вероятностью по крайней мере 1/p(n), кото-
рая в криптографии не считается пренебрежимо малой, криптосистема
нестойкая.
Для других криптографических схем подобный результат доказыва-
ется не столь просто. В работе Импальяццо и Луби [7] доказана необхо-
димость односторонних функций для существования целого ряда стой-
ких криптографических схем.
Из всего сказанного следует, что предположение о существовании
односторонних функций является самым слабым криптографическим
предположением, которое может оказаться достаточным для дока-
зательства существования стойких криптографических схем различ-
ных типов. На выяснение того, является ли это условие и в самом
деле достаточным, направлены значительные усилия специалистов.
Трудность задачи построения криптографических схем из односто-
ронних функций можно пояснить на следующем примере. Пусть f 
односторонняя функция и нам требуется построить криптосистему
с секретным ключом. В такой криптосистеме имеется только один
ключ  секретный, который известен и отправителю, и получателю
шифрованного сообщения. Алгоритмы шифрования EK и дешифро-
вания DK оба зависят от этого секретного ключа K и таковы, что
DK(EK(m)) = m для любого открытого текста m. Ясно, что если
криптограмму d сообщения m вычислять как d = f(m), то против-
ник, перехвативший d, может вычислить m лишь с пренебрежимо ма-
лой вероятностью. Но во-первых, непонятно, каким образом сможет
восстановить сообщение m из криптограммы законный получатель?
Во-вторых, из того, что функция f односторонняя следует лишь, что
34 Гл. 2. Криптография и теория сложности
противник не может вычислить все сообщение целиком. А это  весь-
ма низкий уровень стойкости. Желательно, чтобы противник, знаю-
щий криптограмму d, не мог вычислить ни одного бита открытого тек-
ста.
На настоящий момент доказано, что существование односторонних
функций является необходимым и достаточным условием для суще-
ствования стойких криптосистем с секретным ключом, а также стой-
ких криптографических протоколов нескольких типов, включая про-
токолы электронной подписи. С другой стороны, имеется результат
Импальяццо и Рудиха [9], который является достаточно сильным ар-
гументом в пользу того, что для некоторых типов криптографиче-
ских схем (включая протоколы распределения ключей типа Диффи-
Хеллмана) требуются более сильные предположения, чем предполо-
жение о существовании односторонних функций. К сожалению, этот
результат слишком сложный, чтобы его можно было разъяснить в на-
стоящей главе.
§ 4. Псевдослучайные генераторы
Существенный недостаток шифра Вернама состоит в том, что клю-
чи одноразовые. Можно ли избавиться от этого недостатка за счет
некоторого снижения стойкости? Один из способов решения этой проб-
лемы состоит в следующем. Отправитель и получатель имеют об-
щий секретный ключ K длины n и с помощью некоторого достаточ-
но эффективного алгоритма g генерируют из него последовательность
r = g(K) длины q(n), где q  некоторый полином. Такая криптосисте-
ма (обозначим ее Cr) позволяет шифровать сообщение m (или сово-
купность сообщений) длиной до q(n) битов по формуле d = r ⊕ m,
где ⊕  поразрядное сложение битовых строк по модулю 2. Де-
шифрование выполняется по формуле m = d ⊕ r. Из результатов
Шеннона вытекает, что такая криптосистема не является абсолютно
стойкой, т. е. стойкой против любого противника (в чем, впрочем,
нетрудно убедиться и непосредственно). Но что будет, если требует-
ся защищаться только от полиномиально ограниченного противника,
который может атаковать криптосистему лишь с помощью полиноми-
альных вероятностных алгоритмов? Каким условиям должны удовле-
творять последовательность r и алгоритм g, чтобы криптосистема Cr
была стойкой? Поиски ответов на эти вопросы привели к появлению
понятия псевдослучайного генератора, которое было введено Блюмом
и Микали [3].
Пусть g : {0, 1}n → {0, 1}q(n)  функция, вычислимая за поли-
номиальное (от n) время. Такая функция называется генератором.
Интуитивно, генератор g является псевдослучайным, если порождае-
§ 4. Псевдослучайные генераторы 35
мые им последовательности неотличимы никаким полиномиальным ве-
роятностным алгоритмом от случайных последовательностей той же
длины q(n). Формально этот объект определяется следующим обра-
зом.
Пусть A  полиномиальная вероятностная машина Тьюринга, кото-
рая получает на входе двоичные строки длины q(n) и выдает в резуль-
тате своей работы один бит. Пусть
P1(A, n) = Pr{A(r) = 1 | r ∈R {0, 1}q(n)}.
Вероятность здесь определяется случайным выбором строки r и слу-
чайными величинами, которые A использует в своей работе. Пусть
P2(A, n) = Pr{A(g(s)) = 1 | s ∈R {0, 1}n}.
Эта вероятность определяется случайным выбором строки s и случай-
ными величинами, которые A использует в своей работе. Подчеркнем,
что функция g вычисляется детерминированным алгоритмом.
Определение 2. Генератор g называется криптографически стой-
ким псевдослучайным генератором, если для любой полиномиальной
вероятностной машины Тьюринга A, для любого полинома p и всех до-
статочно больших n
|P1(A, n) − P2(A, n)| < 1/p(n).
Всюду ниже мы для краткости будем называть криптографически
стойкие псевдослучайные генераторы просто псевдослучайными гене-
раторами. Такое сокращение является общепринятым в криптографи-
ческой литературе.
Нетрудно убедиться, что для существования псевдослучайных гене-
раторов необходимо существование односторонних функций. В самом
деле, сама функция g должна быть односторонней. Доказательство это-
го простого факта мы оставляем читателю в качестве упражнения. Во-
прос о том, является ли существование односторонних функций одно-
временно и достаточным условием, долгое время оставался открытым.
В 1982 г. Яо [10] построил псевдослучайный генератор, исходя из пред-
положения о существовании односторонних перестановок, т. е. сохра-
няющих длину взаимнооднозначных односторонних функций. За этим
последовала серия работ, в которых достаточное условие все более и
более ослаблялось, пока наконец в 1989–1990 гг. Импальяццо, Левин и
Луби [8] и Хостад [6] не получили следующий окончательный резуль-
тат.
Теорема 1. Псевдослучайные генераторы существуют тогда и толь-
ко тогда, когда существуют односторонние функции.
Псевдослучайные генераторы находят применение не только в крип-
тографии, но и в теории сложности, и в других областях дискретной ма-
тематики. Обсуждение этих приложений выходит за рамки настоящей
36 Гл. 2. Криптография и теория сложности
главы. Здесь же в качестве иллюстрации мы рассмотрим описанную в
начале данного раздела криптосистему Cr, использующую псевдослу-
чайный генератор в качестве алгоритма g. Прежде всего, нам необхо-
димо дать определение стойкости криптосистемы с секретным ключом.
Пусть EK  алгоритм шифрования криптосистемы с секретным
ключом. Обозначим результат его работы d = EK(m), здесь K  сек-
ретный ключ длиной n битов, а m  открытый текст длиной q(n) битов.
Через mi обозначается i-ый бит открытого текста. Пусть A  полино-
миальная вероятностная машина Тьюринга, которая получает на вход
криптограмму d и выдает пару (i, ), где i ∈ {1, . . . , q(n)},  ∈ {0, 1}.
Интуитивно, криптосистема является стойкой, если никакая машина
Тьюринга A не может вычислить ни один бит открытого текста с веро-
ятностью успеха, существенно большей, чем при простом угадывании.
Определение 3. Криптосистема называется стойкой, если для лю-
бой полиномиальной вероятностной машины Тьюринга A, для любого
полинома p и всех достаточно больших n
Pr{A(d) = (i, ) &  = mi

K ∈R {0, 1}n, m ∈R {0, 1}q(n)} <
1
2
+
1
p(n)
.
Эта вероятность (всюду ниже для краткости мы ее обозначаем про-
сто Pr) определяется случайным выбором секретного ключа K, случай-
ным выбором открытого текста m из множества всех двоичных строк
длины q(n) и случайными величинами, которые A использует в своей
работе.
Покажем, что криптосистема Cr с псевдослучайным генератором в
качестве g является стойкой в смысле данного определения. Предполо-
жим противное, т. е. что существуют полиномиальный вероятностный
алгоритм A и полином p такие, что Pr > 1/2 + 1/p(n) для бесконечно
многих n. Рассмотрим алгоритм B, который получает на входе двоич-
ную строку r длины q(n), выбирает m ∈R {0, 1}q(n), вычисляет d = m⊕r
и вызывает A как подпрограмму, подавая ей на вход строку d. Получив
от A пару (i, ), B проверяет, действительно ли mi =  и если да, то
выдает 1, в противном случае  0, и останавливается. Легко видеть, что
B работает за полиномиальное (от n) время. Убедимся, что алгоритм
B отличает псевдослучайные строки, порожденные генератором g, от
случайных строк длины q(n). В самом деле, если строки r, поступаю-
щие на вход B, являются случайными, то d  криптограмма шифра
Вернама и, согласно теоремеШеннона, Pr = 1/2. Если строки r порож-
дены генератором g, то криптограммы d имеют такое же распределе-
ние вероятностей, как в криптосистеме Cr, и, согласно предположению,
Pr > 1/2 + 1/p(n) для бесконечно многих n. Полученное противоречие
с определением псевдослучайного генератора доказывает утверждение
о стойкости криптосистемы Cr.
§ 5. Доказательства с нулевым разглашением 37
Предположение о том, что открытые тексты являются случайными
относительно равномерного распределения, весьма далеко от реально-
сти. Но мы его использовали лишь для простоты изложения. Стойкость
криптосистемы Cr с псевдослучайным генератором в качестве g может
быть доказана в гораздо более общей ситуации. Интересен, например,
такой сценарий. Противнику заранее известно, что будет передаваться
одно из двух сообщений m1,m2 ∈ {0, 1}q(n), каждое с вероятностью 1/2.
Задача противника  угадать, на основе анализа криптограммы d, ка-
кое именно из сообщений, m1 или m2, передавалось. Мы предлагаем
читателю в качестве весьма полезного упражнения самостоятельно до-
казать, что рассматриваемая криптосистема является стойкой и при
этих предположениях (для этого необходимо сначала соответствующим
образом модифицировать определение 3).
Разумеется, стойкость криптосистемы с секретным ключом можно
определять различным образом. Например, можно рассматривать стой-
кость против атаки с выбором открытого текста: противник может пред-
варительно выбрать полиномиальное количество открытых текстов и
получить их криптограммы, после чего он получает ту криптограмму,
по которой ему требуется вычислить хотя бы один бит соответствую-
щего открытого текста. Нетрудно убедиться, что криптосистема Cr с
псевдослучайным генератором в качестве g является стойкой и против
атаки с выбором открытого текста.
Таким образом, мы убедились, что с помощью псевдослучайных ге-
нераторов можно строить стойкие криптосистемы. Основное направ-
ление исследований в данной области  поиск методов построения
эффективных псевдослучайных генераторов на основе различных крип-
тографических предположений. Показателем эффективности здесь слу-
жит количество операций, затрачиваемых на вычисление каждого оче-
редного бита псевдослучайной последовательности.
§ 5. Доказательства с нулевым разглашением
Предположим, что Алиса знает доказательство некоторой теоремы
и желает убедить Боба в том, что теорема верна. Конечно, Алиса может
просто передать доказательство Бобу на проверку. Но тогда впослед-
ствии Боб сможет сам, без помощи Алисы, доказывать третьим лицам
эту теорему. А может ли Алиса убедить Боба так, чтобы он не получил
при этом никакой информации, которая помогла бы ему восстановить
доказательство теоремы? Этим двум, казалось бы взаимно исключаю-
щим требованиям, удовлетворяют протоколы доказательства с нулевым
разглашением. Последнее понятие было введено Гольдвассер, Микали
и Ракоффом в 1985 г. [4].
Рассматривается следующая модель протокола. В распоряжении
38 Гл. 2. Криптография и теория сложности
Алисы и Боба имеются вероятностные машины Тьюринга P и V со-
ответственно. Вычислительные ресурсы, которые может использовать
Алиса, неограничены, в то время как машина V работает за полино-
миальное время. Машины P и V имеют общую коммуникационную
ленту для обмена сообщениями. После записи сообщения на коммуни-
кационную ленту машина переходит в состояние ожидания и выходит
из него, как только на ленту будет записано ответное сообщение. Ма-
шины P и V имеют также общую входную ленту, на которую запи-
сано входное слово x. Утверждение, которое доказывает Алиса, суть
¾x ∈ L¿, где L  некоторый фиксированный (известный и Алисе,
и Бобу) язык. Чтобы избежать тривиальности, язык L должен быть
трудным (например, NP-полным), иначе Боб сможет самостоятельно
проверить, что x ∈ L. По существу, протокол доказательства состоит
в том, что Боб, используя случайность, выбирает некоторые вопро-
сы, задает их Алисе и проверяет правильность ответов. Выполнение
протокола завершается, когда машина V останавливается, при этом
она выдает 1, если доказательство принято, и 0  в противном слу-
чае.
Пусть A и B  две интерактивные, т. е. взаимодействующие через
общую коммуникационную ленту, вероятностные машины Тьюринга.
Через [B(x),A(x)] обозначается случайная величина  выходное сло-
во машины A, когда A и B работают на входном слове x. Через |x| обозначается длина слова x.
Определение 4. Интерактивным доказательством для языка L на-
зывается пара интерактивных машин Тьюринга (P,V) такая, что вы-
полняются следующие два условия.
1. (Полнота). Для всех x ∈ L
Pr{[P(x),V(x)] = 1} = 1.
2. (Корректность). Для любой машины Тьюринга P∗, для любого
полинома p и для всех x /∈ L достаточно большой длины
Pr{[P∗(x),V(x)] = 1} < 1/p(|x|).
Полнота означает, что если входное слово принадлежит языку L
и оба участника, и Алиса, и Боб, следуют протоколу, то доказатель-
ство будет всегда принято. Требование корректности защищает Бо-
ба от нечестной Алисы, которая пытается обмануть его, ¾доказывая¿
ложное утверждение. При этом Алиса может каким угодно образом
отклоняться от действий, предписанных протоколом, т. е. вместо ма-
шины Тьюринга P использовать любую другую машину P∗. Требу-
ется, чтобы вероятность обмана была в любом случае пренебрежимо
малой.
§ 5. Доказательства с нулевым разглашением 39
Определение 5. Интерактивный протокол доказательства для языка
L называется доказательством с абсолютно нулевым разглашением,
если, кроме условий 1 и 2, выполнено еще и следующее условие.
3. (Свойство нулевого разглашения). Для любой полиномиальной
вероятностной машины Тьюринга V∗ существует вероятностная маши-
на Тьюринга MV∗ , работающая за полиномиальное в среднем время, и
такая, что для всех x ∈ L
MV∗ (x) = [P(x),V∗(x)].
Машина MV∗ называется моделирующей машиной для V∗. Предпо-
лагается, что математическое ожидание времени ее работы ограничено
полиномом от длины x. Это означает, что в принципе MV∗ может, в
зависимости от того, какие значения примут используемые в ее работе
случайные переменные, работать достаточно долго. Но вероятность то-
го, что время ее работы превысит некоторую полиномиальную границу,
мала. Для каждой машины V∗ строится своя моделирующая машина;
последняя может использовать V∗ как подпрограмму. Через MV∗ (x)
обозначается случайная величина  выходное слово машины MV∗ , ко-
гда на входе она получает слово x.
Свойство нулевого разглашения защищает Алису от нечестного Бо-
ба, который, произвольно отклоняясь от действий, предписанных про-
токолом (используя V∗ вместо V), пытается извлечь из его выполнения
дополнительную информацию. Условие 3 означает, что Боб может при
этом получить только такую информацию, которую он смог бы вычис-
лить и самостоятельно (без выполнения протокола) за полиномиальное
время.
Приведем в качестве примера протокол доказательства с абсолютно
нулевым разглашением для языка ИЗОМОРФИЗМ ГРАФОВ из рабо-
ты Гольдрайха, Микали и Вигдерсона [5]. Входным словом является
пара графов G1 = (U,E1) и G0 = (U,E0). Здесь U  множество вер-
шин, которое можно отождествить с множеством натуральных чисел
{1, . . . , n}, E1 и E0  множества ребер такие, что |E1| = |E0| = m.
Графы G1 и G0 называются изоморфными, если существует переста-
новка ' на множестве U такая, что (u, v) ∈ E0 тогда и только тогда,
когда ('(u), '(v)) ∈ E1 (обозначается G1 = 'G0). Задача распознавания
изоморфизма графов  хорошо известная математическая задача, для
которой на данный момент не известно полиномиальных алгоритмов.
С другой стороны, неизвестно, является ли эта задача NP-полной, хотя
есть веские основания предполагать, что не является.
Протокол IG
Пусть '  изоморфизм между G1 и G0. Следующие четыре шага
выполняются в цикле m раз, каждый раз с независимыми случайными
величинами.
40 Гл. 2. Криптография и теория сложности
1. P выбирает случайную перестановку  на множестве U, вычисля-
ет H = G1 и посылает этот граф V.
2. V выбирает случайный бит  и посылает его P.
3. Если  = 1, то P посылает V перестановку , в противном слу-
чае  перестановку  ◦ '.
4. Если перестановка, полученная V, не является изоморфизмом
между G и H, то V останавливается и отвергает доказатель-
ство. В противном случае выполнение протокола продолжается.
Если проверки п.4 дали положительный результат во всех m циклах,
то V принимает доказательство.
Заметим, что если в протоколе IG машина P получает изоморфизм
' в качестве дополнительного входного слова, то ей для выполнения
протокола не требуются неограниченные вычислительные ресурсы. Бо-
лее того, в этом случае P может быть полиномиальной вероятностной
машиной Тьюринга.
Теорема 2 ([5]). Протокол IG является доказательством с абсолют-
но нулевым разглашением для языка ИЗОМОРФИЗМ ГРАФОВ.
Полнота протокола IG очевидна.
Для доказательства корректности достаточно заметить, что бит ,
которыйV выбирает на шаге 2, указывает P, для какого из графов  G0
или G1  требуется продемонстрировать изоморфизм с графом H. Если
G0 и G1 не изоморфны, то H может быть изоморфен, в лучшем случае,
одному из них. Поэтому проверка п. 4 даст положительный результат
с вероятностью 6 1/2 в одном цикле и с вероятностью 6 1/2m во всех
m циклах.
Доказательство свойства нулевого разглашения значительно слож-
нее. Поэтому мы воспроизводим только основную идею. Прежде все-
го, заметим, что основная задача машины V∗  получить макси-
мально возможную информацию об изоморфизме между G0 и G1.
Естественно предположить, что она, в отличие от V, будет выда-
вать в качестве выходного слова не один бит, а всю полученную в
результате выполнения протокола информацию, включая содержимое
своей случайной ленты, графы H и перестановки, полученные со-
ответственно на шагах 1 и 3 протокола IG. Моделирующая маши-
на MV∗ должна уметь строить такие же случайные строки, графы
и перестановки, не зная при этом изоморфизм '! Поэтому MV∗ пы-
тается угадать тот бит , который будет запросом машины V∗ на
шаге 2. Для этого MV∗ выбирает случайный бит , случайную пе-
рестановку   и вычисляет H =  G. Далее MV∗ запоминает состо-
яние машины V∗ (включая содержимое случайной ленты) и вызыва-
ет ее как подпрограмму, подавая ей на вход граф H. Ответом ма-
шины V∗ будет некоторый бит . Если  = , то моделирование в
§ 5. Доказательства с нулевым разглашением 41
данном цикле завершено успешно, поскольку MV∗ может продемон-
стрировать требуемый изоморфизм. Если же  6= , то MV∗ вос-
станавливает ранее сохраненное состояние машины V∗ и повторяет
попытку.
Если в определении свойства нулевого разглашения заменить равен-
ство случайных величин MV∗(x) и [P(x),V∗(x)] требованием, чтобы их
распределения вероятностей ¾почти не отличались¿, то получится дру-
гая разновидность доказательств доказательства со статистически
нулевым разглашением.
Еще один тип  доказательства с вычислительно нулевым разгла-
шением. В этом случае требуется, чтобы моделирующая машина созда-
вала распределение вероятностей, которое неотличимо от [P(x),V∗(x)]
никаким полиномиальным вероятностным алгоритмом (неотличимость
здесь определяется аналогично тому, как это делалось в определении
псевдослучайного генератора).
Подчеркнем особо, что во всех трех определениях нулевого разгла-
шения условия накладываются на действия моделирующей машины
только на тех словах, которые принадлежат языку.
Помимо интереса к доказательствам с нулевым разглашением как
к нетривиальному математическому объекту, они исследуются также
и в связи с практическими приложениями. Наиболее естественный и
важный тип таких приложений  протоколы аутентификации (см. гла-
ву 3). С помощью такого протокола Алиса может доказать Бобу свою
аутентичность.
Предположим, например, что Алиса  это интеллектуальная бан-
ковская карточка, в которой реализован алгоритм P, а Боб  это ком-
пьютер банка, выполняющий программу V. Прежде чем начать вы-
полнение каких-либо банковских операций, банк должен убедиться в
подлинности карточки и идентифицировать ее владельца, или, говоря
на языке криптографии, карточка должна пройти аутентификацию. В
принципе для этой цели можно использовать приведенный выше про-
токол IG. В этом случае в памяти банковского компьютера хранит-
ся пара графов (G0,G1), сопоставленная Алисе, а на интеллектуаль-
ной карточке  та же пара графов и изоморфизм '. Предполагает-
ся, что, кроме Алисы, этот изоморфизм никто не знает (кроме, быть
может, Боба) и поэтому с помощью протокола IG карточка доказыва-
ет свою аутентичность. При этом свойство полноты означает, что кар-
точка наверняка докажет свою аутентичность. Свойство корректности
защищает интересы банка от злоумышленника, который, не являясь
клиентом банка, пытается пройти аутентификацию, используя фаль-
шивую карточку. Свойство нулевого разглашения защищает клиента
от злоумышленника, который, подслушав одно или более выполнений
протокола аутентификации данной карточки, пытается пройти аутенти-
42 Гл. 2. Криптография и теория сложности
фикацию под именем Алисы. Конечно, в данном случае бессмысленно
доказывать, что пара графов (G0,G1) принадлежит языку ИЗОМОР-
ФИЗМ ГРАФОВ, поскольку она заведомо выбирается из этого языка.
Вместо этого Алиса доказывает, что она знает изоморфизм '. Интер-
активные доказательства такого типа называются доказательствами
знания.
Для практического применения очень важным свойством протоко-
ла IG, как и других протоколов доказательства знания, является то,
что алгоритм P, получивший в качестве дополнительного входа изо-
морфизм ', работает за полиномиальное время. Вместо протокола IG
можно использовать, вообще говоря, любое другое доказательство с ну-
левым разглашением, в котором алгоритм P обладает этим свойством.
Но для реальных приложений протокол IG, как и большинство подоб-
ных протоколов, не эффективен: большое количество циклов, слишком
длинные сообщения и т. д. Поиск более эффективных доказуемо стой-
ких протоколов  одно из основных направлений исследований в дан-
ной области.
§ 5. Доказательства с нулевым разглашением 43
Литература к главе 2
[1] Анохин М. И., Варновский Н. П., Сидельников В. М., Ященко В. В.
Криптография в банковском деле. М.: МИФИ, 1997.
[2] Гэри М., Джонсон Д. Вычислительные машины и трудно решае-
мые задачи. М.: Мир, 1982.
[3] Blum M., Micali S. How to generate crytographically strong sequences
of pseudo-random bits // SIAM J. Comput. V. 13, No 4, 1984. P. 850–
864.
[4] Goldwasser S., Micali S., Rackoff C. The knowledge complexity of interactive
proof systems // SIAM J. Comput. V. 18, No 1, 1989. P. 186–
208.
[5] Goldreich O., Micali S., Wigderson A. Proofs that yield nothing but
their validity or all languages in NP have zero-knowledge proof systems
// J. ACM. V. 38, No 3, 1991. P. 691–729.
[6] H˚astad J. Pseudo-random generators under uniform assumptions //
Proc. 22nd Annu. ACM Symp. on Theory of Computing. 1990. P. 395–
404.
[7] Impagliazzo R., Luby M. One-way functions are essential for complexity
based cryptography // Proc. 30th Annu. Symp. on Found. of Comput.
Sci. 1989. P. 230–235.
[8] Impagliazzo R. , Levin L., Luby M. Pseudo-random generation from
one-way functions // Proc. 21st Annu. ACM Symp. on Theory of Computing.
1989. P. 12–24.
[9] Impagliazzo R., Rudich S. Limits on the provable consequences of oneway
permutations // Proc. 21st Annu. ACM Symp. on Theory of Computing.
1989. P. 44–61.
[10] Yao A.C. Theory and applications of trapdoor functions // Proc. 23rd
Annu. Symp. on Found. of Comput. Sci. 1982. P. 80–91.
Глава 3
Криптографические протоколы
§ 1. Введение
Математическая криптография возникла как наука о шифровании
информации, т. е. как наука о криптосистемах. В классической шенно-
новской модели системы секретной связи имеются два полностью дове-
ряющих друг другу участника, которым необходимо передавать между
собой информацию, не предназначенную для третьих лиц. Такая инфор-
мация называется конфиденциальной или секретной. Возникает задача
обеспечения конфиденциальности, т. е. защиты секретной информации
от внешнего противника. Эта задача, по крайней мере исторически, 
первая задача криптографии. Она традиционно решается с помощью
криптосистем.
Представим теперь себе следующую ситуацию. Имеются два або-
нента A и B сети связи, скажем, компьютерной сети. B  это банк,
в котором у A имеется счет и A хочет переслать B по сети в элек-
тронной форме платежное поручение перевести, например, 10 фанти-
ков со своего счета на счет другого клиента C. Нужна ли в данном
случае криптографическая защита? Предлагаем читателю самостоя-
тельно поразмышлять и убедиться, что такая защита и в самом де-
ле необходима. Но здесь следует отметить следующий очень важный
момент: у A и B нет никакой конфиденциальной информации. В са-
мом деле, клиенты пересылают банку в качестве сообщений платеж-
ные поручения, содержание которых стандартно и общеизвестно. Для
банка важно убедиться в том, что данное сообщение действительно
исходит от A, а последнему, в свою очередь, необходимо, чтобы ни-
кто не мог изменить сумму, указанную в платежном поручении, или
просто послать поддельное поручение от его имени. Иными словами,
требуется гарантия поступления сообщений из достоверного источни-
ка и в неискаженном виде. Такая гарантия называется обеспечени-
ем целостности информации и составляет вторую задачу криптогра-
фии.
§ 1. Введение 45
Нетрудно видеть, что при пересылке платежных поручений в элек-
тронной форме возникает еще и совершенно иной тип угроз безопасно-
сти клиентов: всякий, кто перехватит сообщение от A к B, узнает, что C
получил от A 10 фантиков. А что будет, если эта информация попадет в
руки мафии? Возможно, кто-то из читателей скажет, что здесь как раз
и требуется конфиденциальность. И будет неправ! На самом деле кли-
ентам необходимо нечто, аналогичное свойству анонимности обычных
бумажных денег. Хотя каждая бумажная купюра имеет уникальный
номер, определить, кто ее использовал и в каких платежах, практи-
чески невозможно. Аналог этого свойства в криптографии называется
неотслеживаемостью. Обеспечение неотслеживаемости  третья задача
криптографии.
Если задача обеспечения конфиденциальности решается с помощью
криптосистем, то для обеспечения целостности и неотслеживаемости
разрабатываются криптографические протоколы. Имеются и другие от-
личия криптографических протоколов от криптосистем, из которых
можно выделить следующие:
– протоколы могут быть интерактивными, т. е. подразумевать мно-
гораундовый обмен сообщениями между участниками;
– в протоколе может быть более двух участников;
– участники протокола, вообще говоря, не доверяют друг другу. По-
этому криптографические протоколы должны защищать их участников
не только от внешнего противника, но и от нечестных действий парт-
неров.
К сожалению, понятие криптографического протокола, по-видимо-
му, невозможно формализовать. То же относится и к задачам обеспече-
ния целостности и неотслеживаемости. Под протоколом (не обязательно
криптографическим) обычно понимают распределенный алгоритм, т. е.
совокупность алгоритмов для каждого из участников, плюс специфи-
кации форматов сообщений, пересылаемых между участниками, плюс
спецификации синхронизации действий участников, плюс описание дей-
ствий при возникновении сбоев. На последний элемент этого списка сле-
дует обратить особое внимание, поскольку его часто упускают из виду,
а некорректный повторный пуск может полностью разрушить безопас-
ность участников даже в стойком криптографическом протоколе.
Криптографические протоколы  сравнительно молодая отрасль
математической криптографии. Первые протоколы появились около 20
лет назад. С тех пор эта отрасль бурно развивалась, и на настоящий
момент имеется уже не менее двух десятков различных типов крипто-
графических протоколов. Все эти типы можно условно разделить на
две группы: прикладные протоколы и примитивные. Прикладной про-
токол решает конкретную задачу, которая возникает (или может воз-
никнуть) на практике. Примитивные же протоколы используются как
46 Гл. 3. Криптографические протоколы
своеобразные ¾строительные блоки¿ при разработке прикладных про-
токолов.
За последнее десятилетие криптографические протоколы превра-
тились в основной объект исследований в теоретической криптогра-
фии. Например, на крупнейших ежегодных международных крипто-
графических конференциях Crypto и EUROCRYPT б´ольшая часть
докладов посвящена именно протоколам. Безусловно, такая ситуа-
ция может быть всего лишь отражением преобладающих интересов
исследователей. Но для вывода о превращении криптографических
протоколов в основной объект криптографических исследований име-
ются и объективные основания. Как можно понять из приведенно-
го выше примера, в банковских платежных системах в наши дни
вместо платежных поручений на бумаге используется их электрон-
ная форма. Выгоды от такой замены настолько ощутимы, что, по-
видимому, банки от нее уже никогда не откажутся, какие бы техни-
ческие и криптографические (связанные с обеспечением целостности)
трудности при этом не возникали. Но платежные поручения  лишь
один из многочисленных типов документов, находящихся в оборо-
те в сфере бизнеса. А ведь существуют еще документы, с которы-
ми работают государственные органы и общественные организации,
юридические документы и т. д. В последние годы в развитых стра-
нах отчетливо прослеживается тенденция перевода всего докумен-
тооборота в электронную форму. Обсуждение всех выгод и послед-
ствий такого шага выходит за рамки тематики данной главы. Для
нас важно отметить, что поскольку переход на электронные доку-
менты представляется неизбежным, возникает необходимость обеспе-
чения, в каждом конкретном случае, целостности и неотслеживаемо-
сти, т. е. разработки соответствующих криптографических протоко-
лов.
Сказанное выше опровергает следующее расхожее представление:
поскольку-де криптографы научились конструировать криптосистемы,
которые в течение длительного времени выдерживают все атаки, ма-
тематические исследования в криптографии в наши дни представля-
ют в основном лишь академический интерес. Не касаясь проблем, свя-
занных с криптосистемами, укажем лишь, что в исследованиях многих
типов криптографических протоколов сделаны только первые шаги и
еще многие математические проблемы предстоит решить, прежде чем
криптографические протоколы войдут в повсеместное использование.
Цель данной главы  познакомить читателя с некоторыми типа-
ми криптографических протоколов и обрисовать круг математических
задач, возникающих при исследовании их стойкости. При этом предпо-
лагается знакомство читателя с главами 1, 2 и 4.
§ 2. Целостность. Протоколы аутентификации и электронной подписи 47
§ 2. Целостность. Протоколы аутентификации и
электронной подписи
“Воротится коза, постучится в дверь и запоет:
 Козлятушки, ребятушки!
Отопритеся, отворитеся!
Ваша мать пришла  молока принесла.
Козлятки отопрут дверь и впустят мать. . .
Волк подслушал как поет коза. Вот раз коза ушла, волк подбе-
жал к избушке и закричал толстым голосом:
 Вы детушки! Вы козлятушки!
Отопритеся, отворитеся,
Ваша мать пришла, молока принесла.
Козлята ему отвечают:
 Слышим, слышим  да не матушкин это голосок!. . .
Волку делать нечего. Пошел он в кузницу и велел себе горло пе-
рековать, чтобы петь тонюсеньким голосом. . .
Только коза ушла, волк опять шасть к избушке, постучался и
начал причитывать тонюсеньким голосом:
 Козлятушки, ребятушки!
Отопритеся, отворитеся!
Ваша мать пришла  молока принесла.
Козлята отворили дверь, волк кинулся в избу и всех козлят
съел.”
¾Волк и семеро козлят¿. Русская народная сказка.
Как уже отмечалось во введении, понятие целостности информации,
по-видимому, не допускает математической формализации. В данном
разделе мы рассмотрим методы обеспечения целостности на примере
двух наиболее важных и распространенных типов криптографических
протоколов  схем аутентификации и электронной подписи.
Назначение и суть протоколов аутентификации (называемых так-
же протоколами идентификации) легко понять на следующем примере.
Представим себе информационную систему, которая работает в ком-
пьютерной сети и обеспечивает доступ к некоторым данным. У админи-
стратора системы имеется список всех ее пользователей вместе с сопо-
ставленным каждому из них набором полномочий, на основе которых
осуществляется разграничение доступа к ресурсам системы. Ресурса-
ми могут быть, например, некоторые фрагменты информации, а также
функции, выполняемые системой. Одним пользователям может быть
разрешено читать одну часть информации, другим  другую ее часть,
а третьим  еще и вносить в нее изменения. В данном контексте под
обеспечением целостности понимается предотвращение доступа к систе-
ме лиц, не являющихся ее пользователями, а также предотвращение до-
ступа пользователей к тем ресурсам, на которые у них нет полномочий.
48 Гл. 3. Криптографические протоколы
Наиболее распространенный метод разграничения доступа, парольная
защита, имеет массу недостатков. Их обсуждение стало общим местом
для текстов по компьютерной безопасности, поэтому мы сразу перейдем
к криптографической постановке задачи.
В протоколе имеются два участника  Алиса, которая должна до-
казать свою аутентичность, и Боб, который эту аутентичность должен
проверить. У Алисы имеются два ключа  общедоступный открытый
K1 и секретный K2. Фактически, Алисе нужно доказать, что она зна-
ет K2, и сделать это таким образом, чтобы это доказательство можно
было проверить, зная только K1.
Задача аутентификации уже обсуждалась в главе 2. Там же были
сформулированы основные требования, которым должен удовлетворять
стойкий протокол аутентификации. Напомним, что для удовлетворения
этих требований достаточно, чтобы протокол аутентификации был до-
казательством с нулевым разглашением. В главе 2 приведен протокол
доказательства с абсолютно нулевым разглашением для задачи ИЗО-
МОРФИЗМ ГРАФОВ. Но этот протокол имеет неприемлемо большое
с практической точки зрения количество раундов обмена сообщениями
между Алисой и Бобом.
Ниже мы приводим протокол Шнорра [1], один из наиболее эффек-
тивных практических протоколов аутентификации. Для его описания
нам потребуются некоторые обозначения, которые будут использовать-
ся и в последующих разделах данной главы.
Пусть p и q  простые числа такие, что q делит p−1.Шнорр предла-
гает [1] использовать p длины порядка 512 битов и q  длины порядка
140 битов. Пусть g ∈ Zp таково, что gq = 1 (mod p), g 6= 1. Пусть
x ∈R Zq и y = gx (mod p). Задача вычисления значения x по заданно-
му значению y при известных p, q и g называется задачей дискретного
логарифмирования (см. главу 4). Для задачи дискретного логарифми-
рования на данный момент не известно эффективных алгоритмов. По-
этому в криптографии широко используется гипотеза о вычислитель-
ной трудности задачи дискретного логарифмирования. Сформулируем
ее более строго. Пусть n  растущий целочисленный параметр, число p
выбирается из множества всех простых чисел длины n таких, что p −1
имеет простой делитель длины не меньше n" для некоторой константы
" > 0, q  из множества всех таких простых делителей числа p − 1,
g  из множества всех чисел g таких, что gq = 1 (mod p), а x ∈ Zq.
Тогда функция f(x, p, q, g) = (gx mod p, p, q, g)  односторонняя (см.
главу 2). Рекомендации, данные Шнорром относительно длин чисел p
и q, можно трактовать следующим образом. На тот момент (1989 г.)
инвертирование функции f считалось практически невыполнимым уже
для p и q длины порядка 512 и 140 битов соответственно. Здесь, однако,
следует учитывать, что прогресс в области вычислительной техники и
§ 2. Целостность. Протоколы аутентификации и электронной подписи 49
в алгоритмической теории чисел (см. главу 4) может привести к необ-
ходимости пересмотра этих величин.
В качестве секретного ключа схемы аутентификации Алиса выби-
рает случайное число x из {1, . . . , q − 1}. Далее Алиса вычисляет y =
g−x mod p и публикует открытый ключ y. Открытые ключи всех участ-
ников схемы должны публиковаться таким образом, чтобы исключа-
лась возможность их подмены (такое хранилище ключей называется
общедоступным сертифицированным справочником). Эта проблема, на-
зываемая часто проблемой аутентичности открытых ключей, составля-
ет отдельный предмет исследований в криптографии и в данной главе
не рассматривается.
Схема аутентификации Шнорра
1. Алиса выбирает случайное число k из множества {1, . . . , q − 1},
вычисляет r = gk mod p и посылает r Бобу.
2. Боб выбирает случайный запрос e из множества {0, . . . , 2t−1}, где
t  некоторый параметр, и посылает e Алисе.
3. Алиса вычисляет s = (k + xe) mod q и посылает s Бобу.
4. Боб проверяет соотношение r = gsye mod p и, если оно выполня-
ется, принимает доказательство, в противном случае  отвергает.
Отметим одно существенное отличие этого протокола от протокола
доказательства для задачи ИЗОМОРФИЗМ ГРАФОВ, приведенного в
главе 2: последний протокол многораундовый, в нем количество раун-
дов, т. е. посылок сообщений от Алисы Бобу и обратно, возрастает с
ростом размерности задачи (количества вершин графа). А в протоколе
Шнорра количество раундов равно трем, вне зависимости от значений
других параметров. Поэтому с практической точки зрения протокол
Шнорра является значительно более эффективным.
Первое из требований к стойкости протоколов аутентификации, кор-
ректность, означает, что противник, знающий только открытый ключ
y, может пройти аутентификацию лишь с пренебрежимо малой веро-
ятностью. Несложный анализ показывает, что корректность протокола
Шнорра зависит от выбранного значения параметра t. В самом деле,
если t невелико, то противник имеет хорошие шансы просто угадать
тот запрос e, который он получит от Боба на шаге 2. Пусть для про-
стоты t = 1. Тогда противник, не знающий секретного ключа x, может
действовать следующим образом. Подбросив монету, он выбирает рав-
новероятным образом одно из значений 0 или 1. Обозначим его через e′.
Далее противник выбирает произвольное s из {0, . . . , q − 1}, вычисля-
ет r = gsye′ mod p и посылает r Бобу. Ясно, что запрос e, полученный
от Боба на шаге 2, совпадет с e′ с вероятностью 1/2, и именно с такой
вероятностью противник пройдет аутентификацию.
50 Гл. 3. Криптографические протоколы
Если же значение t достаточно велико, то шансы угадать запрос e
малы. Шнорр [1] рекомендует t = 72. Разумеется, вероятность 2−72, а
именно такой будет вероятность простого угадывания, можно считать
пренебрежимо малой. Но что будет, если противник атакует схему, ис-
пользуя более изощренные методы? Задача теоретической криптогра-
фии в том и состоит, чтобы исследовать стойкость криптографических
схем против любых (эффективных) атак противника.
Если в схеме Шнорра Алиса является противником, то на шаге 1
вместо действий, предписанных протоколом, она может выбирать r
произвольным (но эффективным) образом. Иными словами, Алиса ис-
пользует некоторый полиномиальный вероятностный алгоритм, кото-
рый для каждого конкретного значения r определяет вероятность его
выбора.
Пусть r  некоторое значение, которое Алиса передала Бобу на шаге
1. Предположим, что нам удалось найти два запроса e1, e2 ∈ {0, . . . , 2t− 1}, e1 6= e2, такие, что Алиса может для каждого из них найти соот-
ветствующие значения s, для которых проверка на шаге 4 даст поло-
жительный результат. Обозначим эти значения s через s1 и s2 соответ-
ственно. Мы имеем:
r = gs1ye1 (mod p),
r = gs2ye2 (mod p).
Отсюда
gs1ye1 = gs2ye2 (mod p),
или
gs1−s2 = ye2−e1 (mod p).
Поскольку e1 6= e2, существует (e2 − e1)−1 mod q и, следовательно,
(s1−s2)(e2−e1)−1  дискретный логарифм y, т. е. (s1−s2)(e2−e1)−1 = x
(mod q).
Таким образом, либо запросы e1, e2, e1 6= e2, такие, что Алиса может
ответить надлежащим образом на оба из них (при одном и том же r)
на шаге 3 протокола, встречаются ¾достаточно редко¿, и это означает,
что атака Алисы успешна лишь с пренебрежимо малой вероятностью.
Либо такие значения попадаются ¾достаточно часто¿, и тогда тот алго-
ритм, который применяет Алиса, можно использовать для вычисления
дискретных логарифмов.
Эта неформально изложенная идея была использована Шнорром
[1] для доказательства полиномиальной сводимости задачи дискретно-
го логарифмирования к задаче, стоящей перед пассивным противни-
ком, т. е. таким, который пытается пройти аутентификацию, зная лишь
открытый ключ. Иными словами, доказано, что в предположении труд-
ности задачи дискретного логарифмирования схема аутентификации
§ 2. Целостность. Протоколы аутентификации и электронной подписи 51
Шнорра является стойкой против пассивного противника, т. е. коррект-
ной.
Отметим, что вопреки весьма распространенному мнению, этот ре-
зультат, как и большинство подобных результатов в теоретической крип-
тографии, не является асимптотическим: если задача дискретного ло-
гарифмирования трудна для чисел (p и q) данной длины, то схема
Шнорра является корректной при использовании чисел той же дли-
ны.
Активный противник может провести некоторое количество сеан-
сов выполнения протокола в качестве проверяющего с честным до-
казывающим (или подслушать такие выполнения) и после этого по-
пытаться атаковать схему аутентификации. Для стойкости против ак-
тивного противника достаточно, чтобы протокол аутентификации был
доказательством с нулевым разглашением. Однако свойство нулево-
го разглашения для схемы Шнорра до сих пор никому доказать не
удалось. Более того, на данный момент известен единственный ме-
тод доказательства свойства нулевого разглашения  так называе-
мый метод ¾черного ящика¿. В этом методе моделирующая маши-
на использует алгоритм проверяющего (машину Тьюринга V ∗  в
обозначениях из главы 2) лишь в качестве оракула, т. е. не анализи-
руя сам этот алгоритм, подает ему на вход любые значения по сво-
ему выбору и получает соответствующие выходные значения. Голь-
драйх и Кравчик доказали [2], что трехраундовые доказательства
с нулевым разглашением, в которых последнее свойство устанавли-
вается методом ¾черного ящика¿, существуют лишь в тривиальном
случае, т. е. когда проверяющий может самостоятельно, без всякой
помощи доказывающего, проверить истинность утверждаемого. В от-
ношении схемы Шнорра из этого результата следует, что либо суще-
ствует эффективный алгоритм дискретного логарифмирования, либо
свойство нулевого разглашения этого протокола не может быть дока-
зано методом ¾черного ящика¿. Вопрос о существовании доказательств
с нулевым разглашением, для которых свойство нулевого разглашения
не может быть доказано методом ¾черного ящика¿, остается откры-
тым.
Нетрудно показать, что схемаШнорра обладает несколько более сла-
бым свойством  свойством абсолютно нулевого разглашения относи-
тельно честного проверяющего. В этом случае достаточно построить
моделирующую машину только для честного проверяющего, который
на шаге 2 и в самом деле выбирает случайный запрос e из множества
{0, . . . , 2t − 1}.
Вся информация, которую получает Боб в результате выполнения
протокола  это тройка чисел (r, e, s) такая, что r = gsye (mod p) и
r 6= 1. Обозначим множество всех таких троек через 
. В этой тройке
52 Гл. 3. Криптографические протоколы
число e выбирается случайным образом из {0, . . . , 2t−1}, а r = gk mod p,
где k  случайное число из множества {1, . . . , q − 1}. Ясно, что при
таком выборе k значение r будет распределено равновероятным обра-
зом среди всех отличных от единицы элементов группы, порожден-
ной g. Значение s вычисляется согласно шагу 3 протокола и опреде-
ляется величинами e и r однозначно. Таким образом, распределение
вероятностей на множестве 
 определяется случайным выбором чисел
e и k.
Моделирующая машина должна создать на множестве 
 такое же
распределение вероятностей как в протоколе. Но при этом она не
может использовать формулу из шага 3, поскольку в нее входит
секретный ключ x. Вместо этого моделирующая машина выбирает слу-
чайные e и s из {0, . . . , 2t − 1} и {0, . . . , q − 1} соответственно и вы-
числяет r = gsye mod p. Если r = 1, то попытка неудачна и выби-
раются новые e и s. В противном случае моделирующая машина вы-
дает тройку (r, e, s). Напомним, что моделирующая машина строится
только для честного доказывающего. Из этого, в частности, следует,
что открытый ключ y принадлежит группе, порожденной g, т. е. су-
ществует число x ∈ {1, . . . , q − 1} такое, что g−x = y (mod p). По-
этому при любых e и s число r = gsye = gsg−xe = gs−xe (mod p)
также принадлежит этой группе. Остается лишь заметить, что по-
скольку моделирующая машина выбирает число s случайным обра-
зом и независимо от значения e, величина (s − xe) mod q  случайный
элемент множества {0, . . . , q − 1}, также не зависящий от e. Поэтому
число r, сгенерированное моделирующей машиной, является случай-
ным элементом группы, порожденной g, не зависящим от e, т. е. имеет
такое же распределение, как в протоколе. Иными словами, одно и то
же распределение вероятностей на множестве 
 можно создать двумя
способами: либо выбрать случайное k (а, следовательно, и r) и вы-
числить s = (k + xe) mod q, либо выбрать случайное s и получить
r = gs−xe mod p.
Свойства нулевого разглашения относительно честного проверяю-
щего может оказаться достаточно, если схема аутентификации исполь-
зуется, например, для контроля за доступом в охраняемое помещение.
В этом случае Алиса  это пропуск, выполненный в виде интеллекту-
альной карточки, а Боб  компьютер охраны. В такой ситуации глав-
ная задача  обеспечить корректность схемы аутентификации, а за-
щищаться от нечестного проверяющего бессмысленно. Что же касается
свойства нулевого разглашения относительно честного проверяющего,
то оно представляется далеко не лишним, так как позволяет обезопа-
ситься от противника, который может попытаться подслушивать сеансы
выполнения протокола с целью изготовления фальшивого пропуска.
Пример протокола аутентификации приведен в эпиграфе к данному
§ 2. Целостность. Протоколы аутентификации и электронной подписи 53
разделу. В этом протоколе коза выступает в качестве доказывающего,
а семеро козлят  в качестве проверяющего. Протокол призван обеспе-
чивать целостность. В данном случае  целостность семерых козлят. В
эпиграфе описана и атака на протокол. Противником выступает волк,
и этот противник активный: сначала он подслушивает выполнение про-
токола, потом пытается сам пройти аутентификацию в качестве дока-
зывающего (козы) и при этом накапливает и анализирует получаемую
информацию. Протокол оказался нестойким против активного против-
ника. Надо было обратиться за консультацией к профессиональным
криптографам и использовать, например, схему Шнорра.
Прежде чем завершить разговор о протоколах аутентификации необ-
ходимо подчеркнуть, что никакое математически строго доказанное
свойство криптографического протокола не может гарантировать его
безопасности во всех случаях жизни. В самом деле, даже протокол до-
казательства с нулевым разглашением не защищает от следующей атаки
на схему аутентификации, известной в криптографической литературе
под названием ¾мафиозная угроза¿. В данном сценарии имеются четы-
ре участника: A, B, C и D. Предположим, что A зашел в кафе выпить
чашечку кофе и расплачивается с помощью кредитной карточки. Для
выполнения любой банковской операции карточка должна идентифи-
цировать себя, т. е. выполнить протокол аутентификации. Но владелец
кафе, B,  мафиози, сообщник которого C в тот же самый момент на-
ходится в магазине ювелира D и пытается купить бриллиант, также с
помощью кредитной карточки. При этом C ¾представляется¿ как A, а D
просит доказать это с помощью протокола аутентификации. Устройство
считывания для карточек у B и карточка у C  это специально изго-
товленные приемо-передающие устройства, которые лишь пересылают
сообщения между A и D. В результате A, обмениваясь сообщениями с
B, на самом деле идентифицирует себя для D.
Мы здесь не затрагиваем вопроса о практической осуществимости
¾мафиозной угрозы¿. Мы привели ее просто как пример, показываю-
щий, что только математического обоснования стойкости того или иного
криптографического протокола недостаточно. Для практического при-
менения конкретного протокола требуются еще усилия специалистов в
области информационной безопасности по анализу условий его приме-
нения.
Теперь мы переходим к обсуждению другого типа протоколов аутен-
тификации  к протоколам электронной подписи. Они обеспечивают
аутентификацию сообщений, т. е. гарантируют, что сообщения посту-
пают от достоверного отправителя и в неискаженном виде. Более то-
го, целостность здесь понимается в расширенном смысле: получатель
сообщения не только убеждается в его достоверности, но и получает
электронную подпись, которую в дальнейшем может использовать как
54 Гл. 3. Криптографические протоколы
доказательство достоверности сообщения третьим лицам (арбитру) в
том случае, если отправитель впоследствии попытается отказаться от
своей подписи. Здесь имеется полная аналогия обычной подписи на бу-
маге, за исключением того, что под арбитром обычно понимается техни-
ческий эксперт, который дает заключение о подлинности электронной
подписи, т. е. выполняет функцию, аналогичную функции графолога
в случае обычной подписи. Назначение схем электронной подписи мы
уже обсуждали во введении на примере платежных поручений.
Все протоколы электронной подписи, разрабатываемые для практи-
ческого применения, являются неинтерактивными (т. е. весь обмен со-
общениями состоит в передаче отправителем получателю подписанного
сообщения). Это вызвано, прежде всего, требованиями к эффективно-
сти.
Как обычно, математическая формализация рассматривает схему
электронной подписи как бесконечное семейство схем, зависящих от це-
лочисленного параметра n, n > 0, называемого параметром безопасно-
сти.
Схема электронной подписи  это тройка алгоритмов (G, S, V ), где
G  полиномиальный вероятностный алгоритм генерации ключей. На
входе 1n алгоритм G выдает пару (K1,K2), где K1  открытый ключ
схемы подписи, а K2  соответствующий ему секретный ключ. Ключ
K1 помещается в общедоступный сертифицированный справочник;
S  полиномиальный вероятностный алгоритм генерации подписей. На
входе (m,K2), где m  сообщение, алгоритм S выдает подпись s для
сообщения m;
V  полиномиальный алгоритм проверки подписи. Если V (K1,m, s) =
= 1, то подпись s для сообщения m принимается. В этом слу-
чае говорят, что s  корректная подпись для сообщения m. Если
V (K1,m, s) = 0, то подпись s отвергается. Если подпись s для со-
общения m сгенерирована на ключе K2 с помощью алгоритма S, то
всегда должно быть V (K1,m, s) = 1.
Здесь K1, K2, m и s  двоичные строки, длины которых ограничены
некоторыми фиксированными полиномами от n.
Для определения стойкости схемы электронной подписи необходи-
мо принять некоторые предположения о противнике. Последний может
пытаться подделывать подписи, зная только открытый ключ схемы. Та-
кой противник называется пассивным и является самым слабым из всех
возможных противников, так как открытый ключ схемы подписи всегда
общедоступен. Разумеется, пассивный противник, как и любой другой,
знает описание схемы подписи, поскольку предполагается, что алгорит-
мы G, S и V общедоступны.
Более изобретательный противник может попытаться собрать неко-
торую дополнительную информацию о схеме подписи, набрав некоторое
§ 2. Целостность. Протоколы аутентификации и электронной подписи 55
количество пар (сообщение, подпись). Здесь имеются два основных ва-
рианта. Атака с известными сообщениями состоит в том, что противник
перехватывает некоторое (ограниченное фиксированным полиномом от
n) количество подписанных сообщений. При этом противник никак не
влияет на выбор этих сообщений. По существу это  разновидность
пассивного противника, так как подписанные сообщения обычно пере-
сылаются по общедоступному каналу связи (в некоторых работах по
теоретической криптографии принимается математическая модель, в
которой подписанные сообщения просто публикуются).
Еще более сильный противник может сам выбирать сообщения и
каким-то образом получать корректные подписи для них. Такая атака
называется атакой с выбором сообщений, а соответствующий противник
 активным. Вопрос о практической осуществимости подобной атаки
выходит за рамки математической модели и в данной главе не рассмат-
ривается. Отметим лишь, что, по-видимому, никакими организацион-
ными мерами нельзя полностью исключить возможность атаки с вы-
бором сообщений и здесь, как и всюду в теоретической криптографии,
делается предположение в пользу противника. Это значит, что обычно
исследуется стойкость схем электронной подписи в присутствии самого
сильного противника, осуществляющего атаку с выбором сообщений.
Помимо атаки необходимо также определить ту угрозу безопасности
схемы электронной подписи, против которой мы желаем защищаться.
Самая сильная угроза  полное раскрытие, т. е. вычисление противни-
ком секретного ключа K2. Ясно, что если противник может осуществить
подобную угрозу, то схема нестойкая. С другой стороны, нетрудно по-
нять, что стойкости против полного раскрытия недостаточно для того,
чтобы считать схему подписи стойкой на практике. Достаточно рассмот-
реть следующую вырожденную схему. Алгоритм G выбирает случайный
секретный ключ K2 и вычисляет K1 = f(K2), где f  некоторая одно-
сторонняя функция. Подпись для сообщения m алгоритм S вычисляет в
виде s = g(m), где g  некоторая легко вычислимая функция. Функция
g публикуется как часть открытого ключа, и проверка подписи состоит
в вычислении g(m) и сравнении подписи s с этим значением. Ясно, что
такая схема будет стойкой против полного раскрытия, поскольку для
вычисления секретного ключа K2 требуется инвертировать односторон-
нюю функцию f. Но всякий желающий может вычислить подпись для
любого сообщения. Этот пример поучителен еще и потому, что в крип-
тографической литературе встречаются статьи, в которых анализ стой-
кости схем электронной подписи подменяется рассуждениями о слож-
ности задачи полного раскрытия.
На другом полюсе находится самая слабая из угроз  угроза экзи-
стенцианальной подделки. Такая угроза осуществима, если после про-
ведения атаки на схему электронной подписи противник может подде-
56 Гл. 3. Криптографические протоколы
лать подпись хотя бы для одного, пусть даже бессмысленного, сообще-
ния.
Стойкость схемы электронной подписи определяется относительно
пары (атака, угроза). Наиболее стойкими являются схемы, стойкие про-
тив самой слабой из угроз на основе самой сильной из атак, т. е. против
экзистенцианальной подделки на основе атаки с выбором сообщений.
Опишем эти атаку и угрозу на несколько более строгом уровне. Си-
стематическое изложение атак и угроз для схем электронной подписи
см. в [3].
Под противником мы понимаем вероятностную машину Тьюринга A,
которая получает на входе 1n и K1 и завершает свою работу за поли-
номиальное (от n) время. Машина A имеет доступ к алгоритму S ге-
нерации подписей (знающему секретный ключ K2) как к оракулу. Тем
самым A может выбрать сообщения m1, . . . ,ml, где l 6 p(n) для неко-
торого полинома p, и получить для них корректные подписи s1, . . . , sl
соответственно. При оценке времени работы машины A каждое обра-
щение к оракулу считается одной командой. Можно считать, что к мо-
менту выбора сообщения mi машина A уже знает подписи s1, . . . , si−1
для всех предшествующих сообщений. Такая атака называется адап-
тивной. После этого машина A должна найти пару (m, s), где m 6= mi
для всех i = 1, . . . , l такую, что s  корректная подпись для сообщения
m. Обозначим через A(1n,K1) → (m, s) событие, состоящее в том, что
A находит такую пару. Схема электронной подписи (G, S, V ) называ-
ется стойкой против экзистенцианальной подделки на основе (адаптив-
ной) атаки с выбором сообщений, если для любой машины Тьюринга A
указанного выше вида, для любого полинома P и для всех достаточно
больших n
Pr{A(1n,K1) → (m, s)} < 1/P(n).
Вероятность здесь определяется случайными величинами алгоритмов
G, S и A.
Несложные рассуждения, аналогичные тем, которые приведены в
главе 2, показывают, что для существования схем электронной подписи,
стойких против экзистенцианальной подделки на основе атаки с вы-
бором сообщений, необходимо существование односторонних функций.
Одно из замечательных достижений теоретической криптографии со-
стоит в доказательстве того, что это условие одновременно является и
достаточным. Поскольку этот результат весьма нетривиален, ниже мы
лишь схематично излагаем основные идеи.
Рассмотрим вначале схему электронной подписи Лампорта [4]. Пусть
f : n → n, где  = {0, 1},  односторонняя функция и пусть r
 множество, из которого выбираются подписываемые сообщения (т. е.
каждое сообщение m = m1 . . .mr рассматривается как r-битовая стро-
§ 2. Целостность. Протоколы аутентификации и электронной подписи 57
ка). Алгоритм вычисления функции f считается общедоступным.
Алгоритм генерации ключей выбирает 2r случайных строк из n:
x01
, x11
, x02
, x12
, . . . , x0r
, x1r
. Совокупность этих 2r строк составляет секрет-
ный ключ схемы подписи. Далее алгоритм вычисляет
y0
1 = f(x01
), y1
1 = f(x11
), . . . , y0
r = f(x0r
), y1
r = f(x1r
).
Совокупность строк y0
1, y1
1, . . . , y0
r , y1
r публикуется как открытый ключ
схемы.
Подписью для сообщения m = m1 . . .mr служит последовательность
строк (xm1
1 , . . . , xmr
r ). Иными словами, для i-го бита сообщения m от-
крывается одно из значений x0i
или x1i
в зависимости от того, чему ра-
вен i-ый бит mi  нулю или единице. Проверка подписи s = (s1, . . . , sr)
очевидна: для каждого i = 1, . . . , r вычисляется значение f(si) и срав-
нивается с соответствующей строкой ymi
i из открытого ключа.
Схема Лампорта ¾одноразовая¿, она позволяет подписать одно r-
битовое сообщение, после чего надо сгенерировать новые ключи и заме-
нить открытый ключ в сертифицированном справочнике. Но с другой
стороны, эта схема уже обладает тем свойством, которого мы добива-
емся: если f  односторонняя функция, то схема стойкая. В самом
деле, пусть Y = (y0
1, y1
1, . . . , y0
r , y1
r )  открытый ключ, а (m, s)  сообще-
ние и корректная подпись для него, вычисленная на секретном ключе
X = (x01
, x11
, . . . , x0r
, x1r
), соответствующем открытому ключу Y . Предпо-
ложим, что противник может за полиномиальное время с вероятностью
по крайней мере 1/P(n) для некоторого полинома P найти пару (m′, s′),
где m′ 6= m, а s′  корректная подпись для m′. Пусть i0  номер бита,
в котором отличаются сообщения m и m′, и предположим для опреде-
ленности, что mi0 = 0, а m′
i0 = 1. Тогда в подписи s отсутствует значе-
ние x1i
0 , а в s′ должно присутствовать какое-либо значение x такое, что
f(x) = y1
i0 = f(x1i
0 ). Следовательно, алгоритм A, которым пользуется
противник для вычисления s′, должен уметь инвертировать функцию f
на этом значении yi0 . Тогда следующий алгоритм будет противоречить
предположению о том, что функция f односторонняя. Пусть u выбрано
наудачу из n и v = f(u) задано нам в качестве входного значения.
Выбираем случайное j из множества {1, . . . , 2r}. Для всех i = 1, . . . , 2r,
i 6= j, генерируем соответствующие компоненты ключей X и Y с по-
мощью алгоритма G, а вместо j-го элемента ключа Y подставляем v.
Далее вызываем алгоритм A, подавая ему на вход ключ Y . Когда A
запросит подпись для некоторого сообщения m, проверяем, требуется
ли для подписания этого сообщения прообраз значения v. Если да, то
попытка неудачна (вероятность этого 1/2). В противном случае создаем
подпись s для m и передаем ее алгоритму A.
Если A успешно подделывает подпись для некоторого сообщения m′,
m′ 6= m, то проверяем, не содержит ли эта подпись прообраз значения v.
58 Гл. 3. Криптографические протоколы
Если да, то выдаем этот прообраз.
Ясно, что в случае успеха описанный алгоритм инвертирует функ-
цию f. Очевидно также, что этот алгоритм работает за полиномиальное
время. Оценим теперь вероятность успеха. Прежде всего заметим, что
алгоритм A получает на вход только открытый ключ Y и распределение
вероятностей на множестве всех возможных значений Y такое же как
в том случае, когда A атакует схему подписи. Поэтому мы угадаем i0 и
m′
i0 (т. е. произойдет событие j = 2·i0+m′
i0 ) с вероятностью 1/2r. Легко
видеть, что общая вероятность успеха будет по крайней мере 1/2rP(n),
что не меньше, чем 1/Q(n) для некоторого полинома Q (напомним, что
по определению r не превосходит некоторого полинома от параметра
безопасности n).
В качестве своеобразного криптографического курьеза укажем,
что если в схеме Лампорта разрешить подписывать любые сооб-
щения, длина которых не превосходит r, то из подписи для сооб-
щения m можно легко создать подпись для любого его префик-
са. Например, из подписи для сообщения, представляющего собой
знаменитую фразу ¾казнить нельзя, помиловать¿ можно изгото-
вить подпись для сообщения ¾казнить¿. Конечно, в данном случае
можно предложить простые и эффективные контрмеры. Напри-
мер, можно потребовать, чтобы короткие сообщения дополнялись
справа двоичными нулями до длины r. Но этот курьез служит
хорошей иллюстрацией следующего общего принципа: всякое ут-
верждение о стойкости какой-либо криптографической схемы тре-
бует точной спецификации значений всех ее параметров и зача-
стую даже незначительное отступление от установленных значе-
ний полностью разрушает стойкость схемы.
Теперь осталось только преобразовать схему Лампорта в ¾много-
разовую¿. Идея такого преобразования достаточно очевидна: в момент
подписания очередного сообщения m нужно выбрать новые секретный
и открытый ключи X и Y и отправить получателю тройку (m, Y, s),
где s  подпись для сообщения mkY . В результате возникает цепоч-
ка открытых ключей Y1, Y2, . . . , Yj , . . . и соответствующих им подписей
s2, . . . , sj , . . . . Здесь Y1  открытый ключ, хранящийся в сертифициро-
ванном справочнике, а sj  подпись для ключа Yj , сгенерированная с
помощью секретного ключа Xj−1, соответствующего открытому ключу
Yj−1. Таким образом, каждый открытый ключ Yj будет аутентифици-
рован посредством цепочки подписей s2, . . . , sj и, следовательно, может
использоваться совместно с секретным ключом Xj для генерации и про-
верки подписей для сообщений. Проблема, однако, в том, что с помощью
одной пары ключей (X, Y ) можно подписать только r битов сообщения,
а длина одного только нового открытого ключа равна 2rn битам.
§ 2. Целостность. Протоколы аутентификации и электронной подписи 59
Для описания способа решения этой проблемы нам потребуется но-
вое понятие  понятие криптографической хэш-функции. Хэш-функ-
ции  весьма любопытный криптографический примитив, заслужива-
ющий отдельного разговора. Здесь же мы лишь кратко обсудим это
понятие. Говоря неформально, криптографическая хэш-функция  это
легко вычислимая функция, сжимающая входные значения, для кото-
рой не существует эффективного алгоритма поиска коллизий. Колли-
зией для функции h называется пара значений x, y, x 6= y, такая, что
h(x) = h(y). Поскольку хэш-функция сжимает входные значения, кол-
лизии заведомо существуют и их можно найти полным перебором. Но,
по определению, никакой полиномиальный алгоритм не найдет колли-
зий у криптографической хэш-функции.
Следующее определение семейства односторонних хэш-функций бы-
ло дано Наором и Юнгом [4]. Пусть n  целочисленный параметр,
n > 0 и Hn  множество функций h: n → k, где k = k(n) < n.
При этом предполагается, что n < p(k) для некоторого полинома p.
Далее, каждая функция h ∈ Hn имеет описание ¯h и существует поли-
номиальный вероятностный алгоритм, который на входе 1n выбирает
равновероятным образом из множества всех описаний функций из Hn.
Предполагается также, что существует полиномиальный алгоритм, ко-
торый, получив на вход описание ¯h функции из Hn и x ∈ n, выдает
значение h(x). Под противником, который пытается отыскать колли-
зии, понимается полиномиальный вероятностный алгоритм B, работа-
ющий в два этапа. Сначала он получает на вход 1n и должен выдать
какое-нибудь значение x из n. После этого B получает ¯h, выбранное
наудачу из множества всех описаний функций из Hn. Семейство {Hn} называется семейством односторонних хэш-функций, если для любого
такого алгоритма B, для любого полинома P и для всех достаточно
больших n
Pr{B(¯h) = y | y ∈ n, y 6= x&h(x) = h(y)} < 1/P(n).
Предположим, что существует семейство односторонних хэш-функ-
ций {H2nr}, где H2nr = {h: 2nr → k, k < n}. Как показали Наор и
Юнг [4], с помощью такого семейства схему Лампорта можно превра-
тить в ¾многоразовую¿ следующим образом. Подписывающий выбира-
ет случайное описание ¯h функции h ∈ H2nr и помещает это описание в
сертифицированный справочник вместе с открытым ключом Y1. Под-
писываемые сообщения имеют длину n − k. Когда подписывается пер-
вое сообщение, генерируется новая пара ключей (X2, Y2) и вычисляется
значение h(Y2). Далее, с помощью первых n − k элементов ключа X1
подписывается сообщение, а с помощью последних k элементов  зна-
чение h(Y2). После этого сообщение, новый открытый ключ Y2 и подпи-
си посылаются получателю. Аналогичным образом подписываются все
60 Гл. 3. Криптографические протоколы
последующие сообщения. Для проверки подписи нужно либо проверять
всю цепочку, начиная с Y1, либо помнить последний аутентифицирован-
ный подписывающим открытый ключ.
Анализ этой схемы (подробности см. в [4]) показывает, что для под-
делки подписей противник должен уметь либо подменять открытый
ключ Yj , не меняя значения h(Yj), а значит, находить коллизии для
функции h, либо инвертировать функцию f.
Остается еще понять, почему указанная возможность находить кол-
лизии противоречит определению семейства односторонних хэш-функ-
ций. Ведь противник заранее знает описание ¯h и только потом полу-
чает значение, для которого требуется найти коллизию; а значит, за-
дача противника при атаке на схему подписи кажется более легкой,
чем та, которая указана в определении семейства односторонних хэш-
функций. Но дело в том, что подписывающий выбирает ¯h и все Xj
равновероятным образом и независимо друг от друга. Следовательно,
и все Yj будут независимы от ¯h. Поэтому противник, атакующий хэш-
функцию, может сам выбрать значение Y таким же образом, как это
делает подписывающий, и после этого получить случайное описание ¯h.
Легко понять, что вероятность успеха атаки при этом не изменится.
Наор и Юнг [4] построили семейство односторонних хэш-функций,
исходя из предположения о существовании односторонней перестанов-
ки. Ромпель [5] усилил этот результат, доказав, что достаточно (любой)
односторонней функции. Тем самым установлено, что схемы электрон-
ной подписи, стойкие против экзистенцианальной подделки на основе
атаки с выбором сообщений, существуют тогда и только тогда, когда
существуют односторонние функции.
Этот фундаментальный результат можно интерпретировать следу-
ющим образом. Если существуют схемы подписи, стойкие в каком-либо,
даже весьма слабом, смысле, то существуют и схемы, стойкие против
экзистенцианальной подделки на основе атаки с выбором сообщений,
т. е. схемы, стойкие в самом сильном смысле. В самом деле, как уже от-
мечалось выше, если схему подписи можно считать в каком-либо смысле
стойкой, то она должна быть стойкой против полного раскрытия, а из
этого уже следует существование односторонних функций.
К сожалению, эта схема подписи слишком неэффективна, чтобы
ее можно было использовать на практике. Во-первых, подписи имеют
слишком большую длину. На каждый подписываемый бит требуется n
битов подписи. Во-вторых, получатель должен хранить всю цепочку от-
крытых ключей, начиная с Y1, и всю последовательность подписанных
сообщений для предъявления их арбитру в случае возникновения спо-
ров о подлинности подписей. С помощью некоторых ухищрений можно
несколько сократить длины цепочек и уменьшить размер подписи, но
полностью избавиться от этих недостатков не удается. Вопрос о возмож-
§ 2. Целостность. Протоколы аутентификации и электронной подписи 61
ности построения практически эффективных схем электронной подпи-
си, исходя из одного только предположения о существования односто-
ронней функции, остается открытым.
Рассмотрим теперь пример практической схемы электронной подпи-
си. Вернемся к схеме аутентификацииШнорра. В этом протоколе интер-
активность требуется только для того, чтобы получить от проверяюще-
го случайный запрос e. Поэтому если бы у доказывающего был надеж-
ный источник случайности, пользующийся доверием проверяющего, то
протокол можно было бы сделать неинтерактивным. Фиат и Шамир [6]
предложили способ преобразования протокола аутентификации в схему
электронной подписи путем замены случайного запроса неким ¾сурро-
гатом¿. А именно, пусть m  подписываемое сообщение и h  крипто-
графическая хэш-функция. Тогда вместо обращения к проверяющему
(он же  получатель сообщения) доказывающий (он же  подписыва-
ющий) вычисляет величину h(m) и использует ее в качестве запроса e.
Этот метод универсален, так как применим к широкому классу протоко-
лов аутентификации. Опишем теперь получаемую в результате такого
преобразования схему электронной подписи Шнорра [1]. Открытый и
секретный ключи подписывающего генерируются в этой схеме таким
же образом, как в схеме аутентификацииШнорра. Открытый ключ по-
мещается в общедоступный сертифицированный справочник.
Схема электронной подписи Шнорра
1. Подписывающий выбирает случайное число k ∈ {1, . . . , q − 1} и
вычисляет r = gk mod p.
2. Подписывающий вычисляет e = h(r,m), где m  подписываемое
сообщение.
3. Подписывающий вычисляет s = (k + xe) mod q и посылает сооб-
щение m с подписью (e, s) получателю.
4. Получатель вычисляет r′ = gsye mod p и проверяет, выполняется
ли равенство e = h(r′,m). Если да, то подпись принимается, в
противном случае  отвергается.
Предполагается, что хэш-функция h отображает пары значений
(r,m) в множество {0, . . . , 2t − 1}.
Легко проверить, что для подписи, сгенерированной согласно про-
токолу, проверка п. 4 всегда будет выполнена.
Стойкость схемы Шнорра в значительной степени зависит от
свойств функции h. Если противник умеет отыскивать коллизии специ-
ального вида, т. е. по заданной паре (r,m) находить другое сообщение
m′, m′ 6= m, такое, что h(r,m) = h(r,m′), то он может осуществлять
экзистенцианальную подделку подписей. Для этого достаточно пере-
хватить сообщение m и подпись (e, s) для него, а также найти колли-
62 Гл. 3. Криптографические протоколы
зию указанного вида. Тогда пара (e, s) будет также подписью и для
сообщения m′.
Хэш-функции являются неотъемлемой частью конструкции схем
электронной подписи. Это является следствием необходимости под-
писывать сообщения различной длины. Конечно, длинные сообщения
можно разбивать на блоки, имеющие требуемую для схемы подписи
длину, и подписывать каждый блок. Но это решение неэффективно.
На практике используются хэш-функции, которые преобразуют сооб-
щения произвольной длины в хэш-значения требуемой длины. Ясно,
что такая хэш-функция должна быть в каком-то смысле стойкой про-
тив попыток найти коллизии. Но поскольку практические хэш-функции
конструируются для конкретных длин хэш-значений (скажем, 256 би-
тов), формализовать это требование не удается.
В отличие от протоколов аутентификации, для практических схем
электронной подписи не известно методов доказательства стойкости.
Стойкие схемы подписи не могут быть доказательствами с нулевым раз-
глашением. Это легко понять, если вспомнить, что определение нулево-
го разглашения требует существования моделирующей машины, кото-
рая, не зная секретного ключа, создает для всех величин, наблюдаемых
проверяющим, распределение вероятностей, неотличимое от того, кото-
рое возникает при выполнении протокола. Но все, что видит проверя-
ющий (он же  получатель) в процессе выполнения протокола, это 
сообщения с подписями. Следовательно, моделирующая машина, если
она существует, может подделывать подписи, так как создаваемые ею
¾подписи¿ должны быть неотличимы от подлинных, в частности, и для
алгоритма проверки подписей.
Стойкость схем электронной подписи против пассивного противни-
ка, который, зная только открытый ключ, пытается подделывать подпи-
си, может быть доказана в так называемой модели со случайным ора-
кулом. В этой модели подписывающий и проверяющий вместо вычис-
ления функции h обращаются к оракулу, который для каждого вход-
ного значения  выбирает случайное выходное значение  и выдает
его в качестве ответа. При этом пара (, ) запоминается и в случае
повторного обращения с входным значением  оракул снова выдаст
значение . Как заметили Фиат и Шамир [6], изложенная выше идея
доказательства корректности схем аутентификации применима в дан-
ной модели для доказательства стойкости схем подписи против пас-
сивного противника. Этот результат справедлив для широкого клас-
са схем подписи, включающего схему Шнорра. Фактически это озна-
чает, что схемы подписи являются стойкими (против указанного
выше пассивного противника), если хэш-функция ведет себя, как слу-
чайная функция. Это утверждение является по-существу единствен-
ным результатом теоретической криптографии, касающимся стойкости
§ 3. Неотслеживаемость. Электронные деньги 63
практических схем электронной подписи, если не считать работы [8],
где то же самое доказано в предположении, что хэш-функция ведет
себя, как функция дешифрования стойкой, в некотором смысле, крип-
тосистемы.
§ 3. Неотслеживаемость. Электронные деньги
“И он сделает то, что всем  малым и великим, бо-
гатым и нищим, свободным и рабам  положено бу-
дет начертание на правую руку их или на чело их,
И что никому нельзя будет ни покупать, ни прода-
вать, кроме того, кто имеет это начертание, или
имя зверя, или число имени его.
Здесь мудрость. Кто имеет ум, тот сочти число
зверя, ибо это число человеческое; число его шесть-
сот шестьдесят шесть.”
Откровение святого Иоанна Богослова, глава 13.
Лет пятнадцать назад, а может быть и больше, жители некоторых
районов Москвы обнаруживали в своих почтовых ящиках необычные
послания. На листочках, вырванных из ученических тетрадей, не слиш-
ком грамотные люди старательно переписывали один и тот же текст,
повествующий о том, что где-то в Брюсселе (не иначе, как в штаб-
квартире НАТО) появился конфьютер (сохраняем терминологию ав-
торов) под названием ¾Зверь¿ и с номером 666. И этот конфьютер
якобы предначертал каждому смертному определенное число, без ко-
торого не то что покупать или продавать, но даже шагу ступить нель-
зя будет. В заключение, разумеется, предрекался скорый конец све-
та.
Безусловно, это сочинение, как и все ему подобные, не заслужива-
ло бы никакого внимания, если бы его авторы, сами того не ведая, не
нащупали весьма серьезную угрозу, которую несет компьютеризация
правам и свободам личности.
Поскольку данный раздел посвящен электронным деньгам, рассмот-
рим эту угрозу на следующем простом примере. Столь популярная ныне
во всем мире кредитная карточка представляет собой носитель инфор-
мации, который при каждом платеже полностью идентифицирует сво-
его владельца. И если владелец карточки использует ее для покупки
билетов на транспорт, то можно отследить все его поездки, что в циви-
лизованном обществе без санкции прокурора недопустимо. Аналогич-
ным образом, для каждого владельца кредитных карточек возможно
собирать информацию о том, какие товары и где он покупает, какими
услугами пользуется, какие культурно-зрелищные мероприятия посе-
щает и т. д.
64 Гл. 3. Криптографические протоколы
Дальше  больше. Организация компьютерного доступа к хранили-
щам информации и перевод документов в электронную форму созда-
дут предпосылки для ведения досье, отражающих весь круг интересов
каждого из граждан. Этот перечень угроз правам и свободам личности,
безусловно, можно продолжить1). Резюмируя, можно сказать, что ком-
пьютеризация создает беспрецедентные возможности для организации
тотальной слежки. Угроза эта тем более серьезная, что она до сих пор
еще не осознана даже многими специалистами.
Для предотвращения подобной угрозы необходима система контроля
за доступом к ресурсам, которая удовлетворяет двум, казалось бы, вза-
имно исключающим требованиям. Во-первых, всякий желающий дол-
жен иметь возможность обратиться к этой системе анонимно, а во-
вторых, при этом все же доказать свое право на доступ к тому или
иному ресурсу. Обычные бумажные деньги обеспечивают оба этих свой-
ства. Если ресурсом, например, является некоторый товар, то наличие у
покупателя достаточного количества купюр является доказательством
его права на доступ к ресурсу. С другой стороны, хотя каждая бумаж-
ная купюра и имеет уникальный номер, отслеживать купюры по но-
мерам практически невозможно. Кредитные карточки удовлетворяют
только второму требованию.
Всюду ниже под электронными деньгами мы будем понимать элек-
тронные платежные средства, обеспечивающие неотслеживаемость.
Понятие неотслеживаемости, также как и целостности, по-видимому,
не может быть формализовано и будет поясняться на конкретных при-
мерах протоколов.
Для работы с электронными деньгами разрабатываются специаль-
ные криптографические протоколы, называемые протоколами элек-
тронных платежей. В таком протоколе задействованы три участника,
которых мы будем называть: банк, покупатель и продавец. Покупатель
и продавец, каждый, имеют счет в банке, и покупатель желает запла-
тить продавцу за товар или услугу.
В платежной системе используются три основные транзакции:
– снятие со счета;
– платеж;
– депозит.
В транзакции снятия со счета покупатель получает подписанную
банком электронную банкноту на затребованную сумму. При этом счет
покупателя уменьшается на эту сумму. В транзакции платежа покупа-
1)Когда данный раздел уже был написан, вышел из печати журнал ¾Компью-
терра¿ №20 от 20 мая 1998 г., в котором эти угрозы обсуждаются более подробно.
Замечательно, что у одного из авторов возникли те же ассоциации со словами из
Апокалипсиса.
§ 3. Неотслеживаемость. Электронные деньги 65
тель передает банкноту продавцу и указывает сумму платежа. Прода-
вец, в свою очередь, передает эту информацию банку, который прове-
ряет подлинность банкноты. Если банкнота подлинная, банк проверяет,
не была ли она потрачена ранее. Если нет, то банк заносит банкноту в
специальный регистр, зачисляет требуемую сумму на счет продавца,
уведомляет продавца об этом, и, если достоинство банкноты выше, чем
сумма платежа, возвращает покупателю ¾сдачу¿ (через продавца). С
помощью транзакции депозита, покупатель может положить ¾сдачу¿
на свой счет в банке.
Безопасность банка основывается на невозможности подделать его
подпись для создания фальшивой банкноты, или, более общим обра-
зом, на невозможности, получив набор подлинных электронных банк-
нот, подделать подпись еще хотя бы для одной банкноты. Для неотсле-
живаемости покупателя необходимо, чтобы банк, получив банкноту в
транзакции платежа, не мог установить, кому она была выдана. То же
относится и к ¾сдаче¿. Это, казалось бы, парадоксальное требование
удовлетворяется с помощью схемы так называемой подписи вслепую: в
транзакции снятия со счета банк подписывает не банкноту, а некото-
рую ¾абракадабру¿, из которой покупатель восстанавливает подписан-
ную банкноту. Таким образом, неотслеживаемость гарантируется тем,
что банк просто не знает, что именно он подписал.
Рассмотрим простейший вариант платежной системы, в которой ис-
пользуется подпись вслепую, соответствующая схеме подписи RSA. По-
следняя основана на тех же принципах, что и криптосистема RSA (см.
главу 4). Подписывающий, в нашем случае  банк, выбирает два сек-
ретных простых числа p и q достаточно большой длины и публикует их
произведение N = pq. Пусть e и d, где ed = 1 (mod '(N)),  соответ-
ственно открытый и секретный ключи криптосистемы RSA. Генерация
подписи в схеме электронной подписи RSA состоит в применении к сооб-
щению m функции дешифрования криптосистемы RSA: s = md mod N.
Для проверки подписи нужно применить к ней функцию шифрования.
Если se = m (mod N), то s  корректная подпись для сообщения m.
Итак, банк выбирает и публикует числа N и e, а также некоторую
одностороннюю функцию f : ZN → ZN, назначение которой станет ясно
из дальнейшего. Пара ключей (e, d) используется банком исключитель-
но для создания электронных банкнот, т. е. устанавливается соглашение
о том, что электронной подписи, сгенерированной на ключе d, соответ-
ствует электронная банкнота достоинством, скажем, в 1 фантик.
В транзакции снятия со счета покупатель выбирает случайное чис-
ло n ∈ ZN и вычисляет f(n). Ему нужно получить подпись банка на
этой банкноте, т. е. значение f(n)d. Но просто послать значение f(n)
банку покупатель не может, поскольку для снятия денег со счета он
должен идентифицировать себя. Поэтому, если банк получает f(n), он
66 Гл. 3. Криптографические протоколы
в дальнейшем всегда узнает данную банкноту и неотслеживаемость
будет потеряна. Решение проблемы состоит в использовании подпи-
си вслепую: покупатель выбирает случайное число r ∈ ZN, r 6= 0,
вычисляет f(n)re mod N и посылает это значение банку. Множитель
re часто называют затемняющим множителем. Банк вычисляет значе-
ние f(n)d · r mod N и возвращает его покупателю. Покупатель легко
¾снимает¿ затемняющий множитель и получает подписанную банкно-
ту (n, f(n)d mod N).
В транзакции платежа покупатель передает продавцу электронную
банкноту (n, f(n)d mod N). В принципе, продавец может проверить под-
линность любой банкноты (n, s) самостоятельно. Для этого достаточно
вычислить f(n) и проверить, что f(n) = se (mod N). Но дело в том,
что электронные банкноты, как и любую другую информацию, пред-
ставленную в электронной форме, легко копировать. Поэтому нечест-
ный покупатель может заплатить одной и той же электронной банк-
нотой многократно. Для предотвращения подобного злоупотребления
продавец передает банкноту на проверку банку. Банк проверяет по спе-
циальному регистру, не была ли эта банкнота потрачена ранее, и если
нет, то зачисляет 1 фантик на счет продавца и уведомляет его об этом.
Безопасность банка в этой системе электронных платежей основыва-
ется на вере в стойкость схемы электронной подписи RSA. Применение
функции f в этой конструкции необходимо ввиду известного свойства
мультипликативности схемы RSA: если s1 и s2  подписи для m1 и m2
соответственно, то s1s2 = md1
md2
mod N  подпись для m1m2. Поэто-
му, если бы в системе электронных платежей использовались банкноты
вида (n, nd mod N), то из двух подлинных банкнот всегда можно было
бы изготовить третью. Неотслеживаемость клиентов в данной системе
абсолютна. Все, что остается у банка от транзакции снятия со счета, 
это значение f(n)d ·r mod N, которое благодаря затемняющему множи-
телю r представляет собой просто случайное число из ZN. Поэтому у
банка нет никакой информации о том, какую именно банкноту он выдал
данному клиенту.
В этом примере банк выдает банкноты только достоинством в 1 фан-
тик и все платежи должны быть кратны этой величине. Оказывается,
можно реализовать и более гибкую систему. Рассмотрим следующую
систему электронных платежей из работы Шаума [9]. Здесь уместно
отметить, что все основные идеи, связанные с понятием неотслеживае-
мости, электронными деньгами и со схемами подписи вслепую, принад-
лежат этому голландскому математику.
Система из работы [9] также основана на схеме электронной подпи-
си RSA. Допуская некоторую вольность в обозначениях будем писать
n1/t mod N вместо nd mod N, где dt = 1 (mod '(N)), и называть эту
величину корнем t-ой степени из n. Как и выше, f : ZN → ZN  неко-
§ 3. Неотслеживаемость. Электронные деньги 67
торая односторонняя функция, которую выбирает и публикует банк.
Устанавливается соглашение, согласно которому корню степени, рав-
ной i-му нечетному простому числу, соответствует номинал в 2i−1 фан-
тиков. Т. е. предъявитель пары (n, f(n)1/3 mod N) является владельцем
электронной банкноты достоинством в 1 фантик. Если в этой паре вме-
сто корня кубического присутствует корень 7-ой степени, то банкнота
имеет достоинство 4 фантика, а если 21-ой степени  то 5 фантиков.
Иными словами, для банкноты достоинством S фантиков необходим
корень степени, равной произведению всех простых чисел, соответству-
ющих единицам в двоичном представлении числа S.
Все банкноты, выдаваемые банком, имеют одинаковое достоинство.
Для простоты изложения будем, как и в [9], предполагать, что оно рав-
но 15 фантикам. Тогда подпись банка на банкноте, это  корень h-ой
степени, где h = 3 · 5 · 7 · 11. Для этой схемы нужен также еще допол-
нительный модуль RSA N1, который используется в работе с так на-
зываемой копилкой (см. ниже). Этот модуль выбирается и публикуется
таким же образом, как и модуль N.
Транзакция снятия со счета выполняется таким же образом, как
описано выше. В результате покупатель получает электронную банкно-
ту (n1, f(n1)1/h mod N).
Предположим теперь, что покупатель желает заплатить продавцу
5 фантиков. Для этого он вычисляет f(n1)1/3·7 mod N, просто возво-
дя полученную банкноту в 55-ую степень, и создает копилку, выбирая
случайное значение j и вычисляя f(j)s5·11
1 mod N1. Здесь опять s5·11
1
 затемняющий множитель. Транзакция платежа начинается с пере-
сылки значений n1, f(n1)1/3·7 mod N, f(j)s5·11
1 mod N1, а также сум-
мы платежа (5 фантиков) продавцу. Продавец, в свою очередь, пе-
редает всю эту информацию банку. Банк легко проверяет, что пара
(n1, f(n1)1/3·7) представляет собой подлинную банкноту достоинством
5 фантиков. Он проверяет по специальному регистру, не была ли банк-
нота с номером n1 потрачена ранее. Если нет, записывает в регистр
вновь полученную банкноту, увеличивает счет продавца на 5 фантиков
и посылает продавцу уведомление о завершении транзакции платежа, а
также ¾сдачу¿ (10 фантиков) покупателю, возвращаемую через копил-
ку: f(j)1/5·11s1 mod N1.
В транзакции депозита покупатель посылает банку копилку
(j, f(j)1/5·11). Банк проверяет ее таким же образом, как и банкноту
в транзакции платежа, и если копилка с номером j подлинная и ра-
нее не использовалась в транзакции депозита, то зачисляет сумму 10
фантиков на счет покупателя.
Если все платежи, осуществляемые покупателями, делаются на мак-
симальную сумму (15 фантиков), то схема обеспечивает безусловную
(или теоретико-информационную) неотслеживаемость покупателя: вы-
68 Гл. 3. Криптографические протоколы
давая подпись вслепую, банк не получает никакой информации о номере
подписываемой банкноты.
Необходимость депозита полученной от банка ¾сдачи¿ нарушает
неотслеживаемость: банк запоминает все платежи, а значит, и все ¾сда-
чи¿, и при выполнении транзакции депозита может ¾вычислить¿ кли-
ента, если последний выполнил платеж на уникальную или достаточно
редко встречающуюся сумму. Эта проблема частично может быть реше-
на за счет многократного использования копилки в транзакциях плате-
жа.
Предположим, что покупатель получил в банке вторую банкноту с
номером n2 и желает заплатить тому же или другому продавцу сумму в
3 фантика. Тогда в транзакции платежа он может использовать копилку
со ¾сдачей¿, оставшейся после первого платежа, и послать продавцу n2,
f(n2)1/3·5 mod N, f(j)1/5·11s7·11
2 mod N1. Платеж выполняется таким же
образом, как было описано выше, и в результате покупатель получит
копилку f(j)1/5·11·7·11 mod N1.
В транзакции депозита покупатель кладет накопленную в копилке
сумму на свой счет в банке. Для этого он посылает банку значения j,
f(j)1/5·7·11·11 mod N1 и указывает сумму. Банк проверяет копилку так
же, как банкноту, т. е. устанавливает наличие всех корней с объявлен-
ными покупателем кратностями, а также проверяет, что копилка с но-
мером j не использовалась ранее ни в одной транзакции депозита. При
выполнении всех этих условий банк зачисляет сумму, находящуюся в
копилке, на счет покупателя.
Если количество клиентов в платежной системе достаточно велико
и если каждый из них использует в транзакциях платежа одну и ту
же копилку до тех пор, пока накапливаемая в ней сумма не превысит
определенный предел (скажем, 100 фантиков), а после этого сразу же
выполняет депозит, то шансы банка отследить действия кого-либо из
клиентов представляются практически ничтожными.
Оба рассмотренных примера относятся к классу так называемых
централизованных систем, отличительная черта которых  необходи-
мость участия банка во всех транзакциях платежа. С точки зрения
эффективности значительно привлекательнее выглядят автономные си-
стемы электронных платежей, в которых продавец самостоятельно, без
обращения к банку, проверяет подлинность полученных от покупателя
электронных денег. Последние, чтобы отличить автономные системы от
централизованных, будем называть электронной монетой (заметим, что
общепринятой терминологии здесь нет).
Как уже отмечалось выше, без обращения к банку в каждой тран-
закции платежа невозможно предотвратить повторную трату одной и
той же электронной монеты. Вместо этого автономные системы обес-
печивают идентификацию нарушителя post factum. Конструкции ав-
§ 3. Неотслеживаемость. Электронные деньги 69
тономных систем электронных платежей достаточно сложны (см., на-
пример, [10], [11]), поэтому здесь мы описываем лишь их основную
идею, да и то в самых общих чертах. Наше описание предполагает ис-
пользование схемы аутентификации Шнорра, но можно использовать
и любую другую схему, обладающую всеми необходимыми свойства-
ми.
Каждый клиент банка выбирает секретный ключ x, содержащий
идентификатор этого клиента, и затем вычисляет открытый ключ y =
gx mod p. В транзакции снятия со счета клиент выбирает случайное
значение k и вычисляет r = gk mod p. Электронная монета состоит
из некоторой строки, содержащей y и r, и подписи банка для этой
строки. Основная трудность здесь состоит в том, что банк должен
подписать монету подписью вслепую, но при этом убедиться в том,
что монета имеет требуемую структуру. Один из способов решения
этой проблемы заинтересованный читатель может найти в работе Яко-
би [10].
В транзакции платежа продавец сначала проверяет подпись банка,
и, если она корректна, выбирает случайный запрос e, как в схеме аутен-
тификации Шнорра, и посылает e покупателю. Последний вычисляет
s = (k + ex) mod q и посылает s продавцу. Продавец проверяет пра-
вильность ответа, используя те значения r и y, которые содержатся в
монете.
В транзакции депозита продавец посылает банку электронную мо-
нету, а также e и s. Если банк обнаруживает, что данная монета уже
была потрачена ранее, то у него оказываются две различные пары (e, s)
и (e′, s′), удовлетворяющие проверочному соотношению в схемеШнорра
при одних и тех же y и r. Как было показано в предыдущем разделе, это-
го достаточно для того, чтобы банк смог вычислить секретный ключ x,
а значит, и идентифицировать нарушителя.
Замечательное свойство автономных систем электронных платежей
состоит в том, что они, с одной стороны, обеспечивают неотслеживае-
мость честных клиентов, а с другой  позволяют однозначно идентифи-
цировать нарушителей. Но в таких системах банк идет на определенный
риск, поскольку в момент обнаружения повторной траты электронной
монеты на счету нарушителя может не оказаться суммы, достаточной
для покрытия перерасхода. Несколько более подробно эта проблема об-
суждается в [12].
В большинстве автономных систем электронные монеты могут ис-
пользоваться лишь в одном платеже, после чего необходимо выполнить
депозит. Если монета может использоваться во многих платежах, без
промежуточных депозитов, то такая монета называется переводимой.
Если бы переводимые монеты могли находиться в обращении доста-
точно долго, то это обеспечило бы практическую неотслеживаемость
70 Гл. 3. Криптографические протоколы
клиентов. Но с другой стороны, стало бы значительно сложнее обнару-
живать повторные траты одной и той же монеты. Еще один недостаток в
том, что длина переводимой монеты возрастает с каждым ее переводом
от клиента к клиенту. С интуитивной точки зрения это представляется
естественным, поскольку монета должна содержать информацию, поз-
воляющую банку идентифицировать нарушителя, потратившего моне-
ту дважды. Поэтому каждый клиент, через которого проходит монета,
должен оставить на ней свои ¾отпечатки пальцев¿. Шаум и Педерсен
[13] доказали, что возрастание длины переводимой монеты и в самом
деле неизбежно.
§ 4. Протоколы типа ¾подбрасывание монеты по
телефону¿
“ Хорошо, дайте же сюда деньги.
 На что-ж деньги? У меня вот они в руке! Как
только напишете расписку, в туже минуту их возь-
мете.
 Да позвольте, как же мне писать расписку?
Прежде нужно видеть деньги.
Чичиков выпустил из рук бумажки Собакеви-
чу, который, приблизившись к столу и накрывши их
пальцами левой руки, другою написал на лоскутке
бумаги, что задаток двадцать пять рублей государ-
ственными ассигнациями за проданные души получен
сполна."
Н. В. Гоголь. ¾Мертвые души¿, глава 5.
В данном разделе мы кратко обсудим те типы криптографических
протоколов, в которых два участника должны обменяться некоторой
информацией. Но участники не доверяют друг другу и каждый из них
может оказаться обманщиком. Поэтому, если один из участников по
неосторожности ¾выпустит информацию из рук¿ преждевременно, то
в обмен он может получить совсем не то, о чем договаривались, или
вообще не получить ничего: проблемы здесь те же, что и в ¾протоколе¿
обмена расписки на ассигнации у Чичикова и Собакевича.
Из всех криптографических протоколов данного типа, пожалуй, наи-
более наглядным, и к тому же достаточно простым, является протокол
подбрасывания монеты. Предположим, что двум участникам, Алисе и
Бобу, необходимо бросить жребий. В случае, когда они оба физически
находятся в одном и том же месте, задачу можно решить с помощью
обычной процедуры подбрасывания монеты. Если кто-либо из участни-
ков не доверяет монете, можно использовать другие источники случай-
§ 4. Протоколы типа ¾подбрасывание монеты по телефону¿ 71
ности. Правда, создание надежных источников случайности  весьма
непростая задача, но она уже относится к математической статистике,
а не к криптографии.
Если же Алиса и Боб удалены друг от друга и могут общаться лишь
по каналу связи, то задача о жребии, на первый взгляд, кажется нераз-
решимой. В самом деле, если, следуя обычной процедуре подбрасыва-
ния монеты, первый ход делает Алиса, которая выбирает один из воз-
можных вариантов  ¾орел¿ или ¾решка¿, то Боб всегда может объ-
явить тот исход, который ему выгоден.
Тем не менее, эта задача была решена Блюмом [14]. Любопытно, что
даже в заголовке своей работы Блюм охарактеризовал предложенный
им метод как метод ¾решения нерешаемых задач¿.
Легко понять, что задача о жребии решается очень просто, если
существует надежный агент  третья сторона, которая пользуется пол-
ным доверием и Алисы, и Боба, и которая имеет конфиденциальные
(закрытые) каналы связи с обоими участниками. В этом случае Боб и
Алиса выбирают случайные биты b и c соответственно и посылают их
в тайне друг от друга агенту. Последний ждет, пока не поступят оба
бита, и после этого публикует b, c и d = b ⊕ c  исход подбрасывания
монеты.
В отсутствие надежного агента срабатывает идея, которую про-
ще всего понять на следующей ¾физической¿ реализации. Боб вы-
бирает случайный бит b, записывает его на листе бумаги, запира-
ет этот лист в ящике, оставляя ключ от замка у себя, и посылает
ящик Алисе. Предполагается, что, не имея ключа, Алиса не может
добраться до содержимого ящика. Получив ящик, Алиса выбирает
случайный бит c и посылает его Бобу. В ответ Боб посылает Алисе
ключ от ящика. Исходом подбрасывания монеты будет опять-таки бит
d = b ⊕ c.
Ниже мы излагаем криптографическую реализацию той же идеи,
основанную на задаче дискретного логарифмирования, и используем
при этом обозначения из раздела 2.
Протокол подбрасывания монеты
1. Алиса выбирает случайное число x из Zq, вычисляет y = gx mod p
и посылает y Бобу.
2. Боб выбирает случайный бит b, случайное число k из Zq, вычис-
ляет r = ybgk mod p и посылает r Алисе.
3. Алиса выбирает случайный бит c и посылает его Бобу.
4. Боб посылает Алисе b и k.
72 Гл. 3. Криптографические протоколы
5. Алиса проверяет, выполняется ли сравнение r = ybgk (mod p). Ес-
ли да, то результатом выполнения протокола будет бит d = b ⊕ c.
Значение r  это криптографический аналог того ящика, о котором
шла речь в описании физической реализации. В самом деле, из значе-
ния r Алиса не может извлечь никакой информации о бите b. Поскольку
k выбирается случайным образом из Zq, значение r в обоих случаях, при
b = 0 и b = 1, является случайным элементом группы, порожденной g,
и поэтому не несет никакой информации о значении бита b (разумеется,
Алиса может попытаться обманывать, выбирая значение y, не принад-
лежащее группе, порожденной g; однако Боб легко обнаружит такой
обман, проверяя сравнение yq = 1 (mod p)).
С другой стороны, Боб может обманывать, т. е. открывать значение
бита b по своему желанию и как 0, и как 1, но только в том случае,
если он умеет вычислять дискретные логарифмы. Это вытекает из сле-
дующих соображений. Поскольку, как уже отмечалось выше, можно
считать, что значение r заведомо принадлежит группе, порожденной
g, существует единственное число  ∈ Zq такое, что r = g (mod p).
Для того, чтобы открыть значение b = 0, Боб должен послать Алисе
на шаге 4 число , а для того, чтобы открыть значение b = 1,  число
k = ( − x) mod q. Отсюда x = ( − k) mod q. Пусть M  полиноми-
альная вероятностная машина Тьюринга, которую Боб использует для
осуществления такого обмана. Тогда следующий алгоритм будет вычис-
лять дискретные логарифмы.
1. Передаем входное значение y машине M.
2. Получив в ответ значение r, запоминаем состояние машины M.
3. Выбираем случайный бит c и передаем его M.
4. Получив от M значения b и k, запоминаем эти величины, восста-
навливаем ранее запомненное состояние машины M и переходим
на шаг 3.
5. Как только среди пар (b, k) найдутся (0, k1) и (1, k2), вычисляем
x = (k1 − k2) mod q  дискретный логарифм величины y.
На основе этих соображений можно построить доказательство сле-
дующего утверждения: в предположении трудности задачи дискретного
логарифмирования приведенный выше протокол подбрасывания моне-
ты является стойким. Заметим, что для данного протокола достаточ-
но весьма слабой формы этого предположения. Поскольку Алиса мо-
жет прекратить выполнение протокола, если с момента передачи зна-
чения y Бобу до момента получения от него значений b и k прохо-
дит более, скажем, 30 секунд, достаточно предположить, что задача
§ 4. Протоколы типа ¾подбрасывание монеты по телефону¿ 73
дискретного логарифмирования не может быть решена за такое вре-
мя.
Если из приведенного выше протокола подбрасывания монеты вы-
членить шаги 1, 2 и 4, то получим так называемый протокол привязки
к биту (bit commitment). Шаги 1 и 2 в таком протоколе называются
этапом привязки, а шаг 4  этапом открытия бита. В этом протоколе
для значения r, в которое упаковывается бит b, (аналог ящика в физи-
ческой реализации) обычно используется термин блоб (blob), для Али-
сы  получатель, а для Боба  отправитель. Говоря неформально, от
протокола привязки к биту требуется такая конструкция блоба, которая
обеспечивает одновременное выполнение следующих двух требований:
1) после выполнения этапа привязки получатель не может самосто-
ятельно определить, какой бит упакован в блоб;
2) на этапе открытия бита отправитель может открыть любой блоб
либо только как 0, либо только как 1.
В нашем случае требование 1) выполняется безусловно, т. е. вне за-
висимости от того, какими вычислительными ресурсами обладает по-
лучатель, он не может самостоятельно узнать, какой бит находится в
блобе. В таких случаях говорят, что протокол гарантирует безуслов-
ную безопасность отправителя. В то же время безопасность получателя
основывается на недоказанном предположении о вычислительной труд-
ности задачи дискретного логарифмирования. Такая асимметрия ти-
пична для многих типов криптографических протоколов. Она имеется,
например, в доказательствах с вычислительно нулевым разглашением.
Но существует и другой тип протоколов привязки к биту, в которых уже
безопасность получателя безусловна, а безопасность отправителя осно-
вывается на недоказанных предположениях. Для многих типов крип-
тографических протоколов с указанной выше асимметрией построены
такого рода двойственные протоколы.
Протокол привязки к биту  один из основных типов примитив-
ных криптографических протоколов. Он находит многочисленные при-
менения в криптографии. В качестве иллюстрации рассмотрим способ
повышения эффективности доказательств с нулевым разглашением на
примере рассмотренного в главе 2 протокола для задачи ИЗОМОР-
ФИЗМ ГРАФОВ. В этом протоколе главная проблема  большое коли-
чество раундов, растущее пропорционально размеру графа. Достаточ-
но естественная идея  выполнить все эти последовательные раунды
параллельно. На первом шаге P выбирает m случайных перестановок
1, . . . , m, вычисляет H1 = 1G1, . . . ,Hm = mG1 и посылает все эти m
графов V. На втором шаге V выбирает m случайных битов 1, . . . , m
и посылает их P, а на третьем P формирует все m требуемых переста-
новок и посылает их V.
Но будет ли такой протокол доказательством с нулевым разгла-
74 Гл. 3. Криптографические протоколы
шением? Прежде всего заметим, что этот протокол трехраундовый,
а как показывает уже упоминавшийся в разделе 2 результат Голь-
драйха и Кравчика, трехраундовых доказательств с нулевым разгла-
шением скорее всего не существует. Тот метод, который использовал-
ся в главе 2 для построения моделирующей машины, срабатывал, по-
скольку при последовательном выполнении протокола моделирующая
машина могла угадать на каждом раунде запрос i проверяющего с
вероятностью 1/2. В параллельном же варианте вероятность угады-
вания равна 1/2m, т. е. пренебрежимо мала. Кроме того, проверяю-
щий формирует свои запросы 1, . . . , m, уже получив от P все гра-
фы H1, . . . ,Hm, и может выбирать их (запросы) зависящими достаточ-
но сложным образом от всех этих графов. Это также представляется
непреодолимым препятствием при попытке построения моделирующей
машины.
Зависимость 1, . . . , m от H1, . . . ,Hm можно предотвратить следу-
ющим образом. Проверяющий V выбирает свои запросы в самом начале
выполнения протокола, еще до того, как увидит H1, . . . ,Hm. Каждый
бит i упаковывается в блоб ri, и V посылает все блобы r1, . . . , rm дока-
зывающему. Только после этого P посылает V все графы H1, . . . ,Hm.
В ответ V открывает блобы, а P, получив 1, . . . , m, формирует тре-
буемые перестановки и посылает их V.
В результате количество раундов в протоколе возросло, но осталось
константой (достаточно 5 раундов). При использовании протокола при-
вязки к биту, обеспечивающего безусловную безопасность отправителя,
даже обладающий неограниченными вычислительными возможностями
доказывающий не может извлечь из блобов r1, . . . , rm никакой инфор-
мации о запросах 1, . . . , m. Поэтому корректность протокола сохра-
няется.
Итак, второе из указанных выше препятствий устранено. А как
быть с первым? Оказывается, моделирующей машине совсем необя-
зательно угадывать запросы V∗. Следующая замечательная идея
многократно использовалась в работах, посвященных криптографи-
ческим протоколам (см. [15]). Моделирующая машина MV ∗ , получив
от V∗ блобы, запоминает состояние машины V∗, выбирает графы
H′
1 , . . . ,H′
m , как случайные перестановки графа G0, и передает их V∗.
В ответ V∗ открывает блобы, и MV ∗ получает запросы 1, . . . , m. По-
сле этого моделирующая машина формирует графы H1, . . . ,Hm как
ответы на запросы 1, . . . , m, восстанавливает запомненное состоя-
ние машины V∗ и передает ей H1, . . . ,Hm. Поскольку протокол при-
вязки к биту предполагается стойким, машина MV ∗ вновь получит те
же самые биты 1, . . . , m и успешно завершит моделирование, выда-
вая 1, . . . , m, H1, . . . ,Hm, требуемые перестановки, а также блобы
r1, . . . , rm и те сообщения, которые были выданы машиной V∗ для их
§ 5. Еще раз о разделении секрета 75
открытия.
Предположим, что то предположение, на котором основывается
стойкость протокола привязки к биту, стало доказанным фактом. На-
пример, удалось доказать, что не существует полиномиальных алгорит-
мов для задачи дискретного логарифмирования. Даже в этом случае
полиномиально ограниченный отправитель в приведенном выше про-
токоле привязки к биту может угадать x хоть и с малой, но ненулевой
вероятностью, и обмануть получателя. Из-за этого рассмотренный на-
ми параллельный вариант протокола будет доказательством лишь со
статистически нулевым разглашением. А исходный последовательный
вариант (см. главу 2) обладал свойством абсолютно нулевого разглаше-
ния. В работе Беллара, Микали и Островски [15], где был предложен
описанный выше способ преобразования последовательных протоколов
в параллельные, используется специальная конструкция блобов для за-
дачи ИЗОМОРФИЗМ ГРАФОВ, сохраняющая свойство абсолютно ну-
левого разглашения.
§ 5. Еще раз о разделении секрета
В работе [16] со ссылкой на книгу ¾Gent und seine Sch¨onheiten¿
(Thill–Verlag, Br¨ussel, 1990) описывается следующий исторический при-
мер. В XIII–XIV веках в г. Генте была построена ратушная баш-
ня. В ¾секрете¿ (secreet), самом надежном помещении башни, хра-
нились уставы и привилегии, имевшие важное значение. Помещение
имело две двери, каждая с тремя замками, ключи от которых нахо-
дились во владении различных цехов. Документы хранились в шка-
фу, который, в свою очередь, также запирался на три ключа. Один
из этих ключей хранился у фогта, а два других  у главного шеффе-
на.
Мы привели этот пример в разделе, посвященном протоколам раз-
деления секрета, главным образом для того, чтобы показать, что хотя
криптографические протоколы  сравнительно молодая отрасль крип-
тографии, задачи, которые решаются с помощью протоколов, возникли
очень давно и имеют свою историю.
Почему ¾еще раз о разделении секрета¿? В главе 5 разделение сек-
рета рассматривается в основном как математическая, прежде всего
комбинаторная, задача. Здесь же мы его обсуждаем как криптографи-
ческий протокол. При этом предполагается, что читатель знаком с осно-
вами разделения секрета (при необходимости требуемую информацию
можно найти в главе 5).
В протоколе разделения секрета имеются n участников P1, . . . , Pn,
которых мы будем называть процессорами, и один выделенный участ-
76 Гл. 3. Криптографические протоколы
ник D, называемый дилером (или, иногда, лидером). Протокол состоит
из двух фаз.
На фазе разделения секрета дилер, знающий некоторый секрет s,
генерирует n долей секрета s1, . . . , sn и посылает si процессору Pi по
защищенному каналу связи. На фазе восстановления секрета любое
подмножество из не менее чем t+1 процессоров, где t  параметр про-
токола, однозначно восстанавливает секрет, обмениваясь сообщениями
по защищенным каналам связи. А любое подмножество из не более чем
t процессоров не может восстановить секрет (что означают слова ¾не
может восстановить¿ будет пояснено ниже).
Как и в других типах криптографических протоколов, в протоко-
ле разделения секрета участники, вообще говоря, не доверяют друг
другу и каждый из них может оказаться противником. В том числе и
дилер. Можно ли обеспечить какую-либо защиту честных участников
даже и в этом случае? Безусловно, нечестный дилер может просто са-
ботировать выполнение протокола. Но если дилер пытается обмануть
более хитрым способом, то от этого, оказывается, можно защитить-
ся следующим образом. Фаза разделения секрета начинается с того,
что дилер публикует секрет s в ¾зашифрованном¿ виде (точнее бы-
ло бы сказать  выполняет привязку к строке s, по аналогии с при-
вязкой к биту). С помощью этой информации каждый процессор Pi
может проверить, что значение si, полученное им от дилера, действи-
тельно является долей секрета s. Такой протокол называется протоко-
лом проверяемого разделения секрета. В обычных схемах разделения
секрета рассматривается пассивный противник, а именно, противни-
ком являются не более чем t участников, которые, объединив свои до-
ли, пытаются получить какую-либо информацию о значении секрета.
На фазе восстановления секрета в протоколе проверяемого разделе-
ния секрета действует активный противник: нечестные участники мо-
гут преследовать цель сорвать восстановление значения s честными
участниками, посылая им вместо своих долей секрета любую другую
информацию. От протокола требуется, чтобы честные участники, если
их по крайней мере t + 1, всегда правильно восстанавливали значе-
ние s.
Рассмотрим конструкцию протокола проверяемого разделения сек-
рета из работы [17]. Конструкция основана на задаче дискретного ло-
гарифмирования.
В соответствии со схемой Шамира дилер выбирает случайный по-
лином Q(x) = a0 + a1x + · · · + atxt степени t, где a0 = s, вычисля-
ет ri = gai mod p (i = 0, 1, . . . , t) и публикует r0, . . . , rt. После этого
для всякого j = 1, . . . , n дилер вычисляет sj = Q(j) и посылает это
значение процессору Pj по защищенному каналу. Процессор Pj , прове-
§ 5. Еще раз о разделении секрета 77
ряя равенство
gsj = r0 · (r1)j · . . . · (rt)jt
(mod p),
убеждается, что sj  доля секрета s. В самом деле,
r0 ·(r1)j ·. . .·(rt)jt
= ga0 ·ga1j ·. . .·gatjt
= ga0+a1j+···+atjt
= gQ(j) (mod p).
Конструкцию протокола для фазы восстановления секрета рассмот-
рим в наиболее простом случае, когда дилер честный. На этой фазе
каждый процессор Pj посылает каждому другому процессору Pi свою
долю sj . Всякий честный участник Pi, получив некоторое значение sj
от Pj , проверяет это значение, как описано выше, и отбрасывает все
доли sj, не прошедшие проверку. Поскольку честных участников не ме-
нее t + 1, Pi получит по крайней мере t + 1 правильных долей секрета.
Используя алгоритм восстановления секрета из схемы Шамира, Pi вос-
становит значение s.
В отличие от схем разделения секрета, рассматриваемых в главе 5,
стойкость данного протокола основывается на предположении о вычис-
лительной трудности задачи дискретного логарифмирования. Поэтому,
если в обычных схемах разделения секрета требуется, чтобы любое под-
множество участников, не составляющее кворума, не получало никакой
информации о секрете, то во многих схемах проверяемого разделения
секрета такое подмножество лишь ¾не может восстановить¿ секрет. В
том смысле, что для его восстановления требуется решить некоторую
гипотетически трудную вычислительную задачу. В рассмотренном вы-
ше примере всякий участник мог бы узнать секрет s, если бы он умел
вычислять дискретные логарифмы.
Одно из возможных приложений схем разделения секрета  орга-
низация хранения криптографических ключей. Свойство проверяемо-
сти представляется далеко не лишним для таких приложений. Но круг
приложений схем проверяемого разделения секрета существенно ши-
ре.
Предположим, что с помощью описанной выше схемы разделены
два секрета s1 и s2 и что оба эти секреты являются числами. Теперь
представим себе ситуацию, что после этого потребовалась разделить
секрет s = s1+s2. Конечно, это может сделать дилер с помощью того же
протокола. А могут ли процессоры выполнить то же самое без участия
дилера?
Пусть Q1(x) = a0 + a1x + · · · + atxt и Q2(x) = b0 + b1x + · · ·
· · · + btxt  полиномы, которые использовались для разделения сек-
ретов s1 и s2 соответственно. Пусть r1
i = gai mod p и r2
i = gbi mod p для
i = 0, . . . , t. Для любого j = 1, . . . , n пусть s1j
= Q1(j) и s2j
= Q2(j) 
доли секретов s1 и s2, полученные процессором Pj . Ясно, что Q(x) =
78 Гл. 3. Криптографические протоколы
Q1(x) + Q2(x)  также полином степени t и Q(0) = s.
Поэтому каждый процессор Pj может вычислить долю sj секрета
s просто по формуле sj = s1j
+ s2j
. Эти доли проверяемы с помощью
значений ri = r1
i · r2
i mod p.
Рабин и Бен-Ор показали [18], что выполняя такого рода вычисле-
ния над долями секретов, процессоры могут вычислить любую функ-
цию над конечным полем ¾проверяемым образом¿. Этот результат от-
носится к области протоколов конфиденциального вычисления (secure
multi party computation). Типичная задача здесь такая. Требуется вы-
числить значение функции f на некотором наборе значений аргументов
y1, . . . , ym. С помощью схемы проверяемого разделения секрета вычис-
ляются доли x1, . . . , xn этих значений. В начале выполнения протокола
доля xi известна процессору Pi и только ему. Протокол должен обеспе-
чивать вычисление значения f(x1, . . . , xn) = f(y1, . . . , ym) таким обра-
зом, чтобы для некоторого параметра t:
1) в результате выполнения протокола любое подмножество из не
более чем t процессоров не получало никакой информации о значениях
xi других процессоров (кроме той, которая следует из известных им
долей и значения функции f(x1, . . . , xn));
2) при любых действиях нечестных участников остальные участники
вычисляют правильное значение f(x1, . . . , xn), если только количество
нечестных участников не превосходит t.
Протоколы конфиденциального вычисления, ввиду своей общности,
представляют несомненный теоретический интерес. Кроме того, многие
типы прикладных криптографических протоколов (например, протоко-
лы голосования) по существу являются частными случаями протоколов
конфиденциального вычисления.
При различных предположениях о процессорах и о сети связи до-
казан ряд теорем следующего типа: если t не превосходит некоторого
порогового значения (зависящего от n и от предположений), то всякая
вычислимая функция имеет протокол конфиденциального вычисления.
§ 6. Поиграем в ¾кубики¿. Протоколы голосования
“. . . всеобщее голосование бессмысленно.
. . . Вы, вероятно, согласитесь со мной, что гениаль-
ные люди встречаются редко, не правда ли? Но будем
щедры и допустим, что во Франции их сейчас имеет-
ся человек пять. Прибавим, с такой же щедростью,
двести высокоталантливых людей, тысячу других,
тоже талантливых, каждый в своей области, и де-
сять тысяч человек так или иначе выдающихся. Вот
вам генеральный штаб в одиннадцать тысяч двести
§ 6. Поиграем в ¾кубики¿. Протоколы голосования 79
пять умов. За ним идет армия посредственности,
за которой следует вся масса дурачья. А так как по-
средственность и дураки всегда составляют огром-
ное большинство, то немыслимо представить, что-
бы они могли избрать разумное правительство."
Г. де Мопассан. ¾Обед и несколько мыслей¿.
В этом разделе мы займемся бессмысленными вещами, а именно,
обсудим, как помочь ¾массе дурачья¿ избрать ¾неразумное правитель-
ство¿, т. е. рассмотрим протоколы голосования.
У читателя, ознакомившегося с предшествующими разделами, мог-
ло сложиться впечатление, что криптографические протоколы  в
общем-то не такая уж и сложная вещь. Но дело в том, что до сих
пор мы выбирали именно такие протоколы, конструкции которых, на
наш взгляд, наиболее просто понять при первом знакомстве с предме-
том. К тому же изложение велось на полуформальном уровне, чтобы
основные идеи не затуманивались обилием технических деталей. Боль-
шинство же типов прикладных криптографических протоколов доста-
точно сложны, и хорошим примером здесь служат протоколы голосо-
вания.
Как отмечалось во введении, примитивные криптографические про-
токолы используются как своеобразные ¾строительные блоки¿ или ¾ку-
бики¿, из которых складывается прикладной протокол. В данном раз-
деле мы рассмотрим не столько конструкцию каждого отдельного ¾ку-
бика¿, сколько процесс сборки.
Пусть в голосовании участвуют l избирателей V1, . . . , Vl, которые
являются абонентами компьютерной сети и подают свои голоса в элек-
тронной форме. Предположим для простоты, что голосование имеет два
исхода: ¾за¿ и ¾против¿, которые будут представляться как 1 и −1 со-
ответственно. Из всех возможных требований к протоколу голосования
выделим пока два основных:
1) голосование должно быть тайным;
2) должна быть обеспечена правильность подсчета голосов.
Как уже отмечалось в предыдущем разделе, протоколы голосования
можно рассматривать как частный случай протоколов конфиденциаль-
ного вычисления. В начальный момент у каждого участника Vi есть
секретное значение bi ∈ {−1, 1}  его голос,  и требуется вычислить
функцию f(b1 . . . , bl) =
Pl
i=1 bi. Протокол конфиденциального вычис-
ления удовлетворяет двум указанным требованиям, если только доля
нечестных участников не слишком велика. У такого решения есть одно
замечательное достоинство  в протоколе участвуют только избирате-
ли, т. е. не требуется никакого центрального органа, который пользовал-
ся бы доверием голосующих. Но есть и весьма серьезный недостаток.
80 Гл. 3. Криптографические протоколы
Протоколы конфиденциального вычисления настолько сложны (с точ-
ки зрения количества вычислений, выполняемых каждым участником,
и количества пересылаемой информации), что уже при сравнительно
небольших l они практически невыполнимы.
Остается второй путь  создание центра подсчета голосов (в даль-
нейшем для краткости будем называть его просто центр). Сначала
предположим, что центр честный и пользуется безусловным доверием
всех избирателей. В такой ситуации напрашивается следующее реше-
ние. Центр выбирает секретный x и открытый y  ключи некоторой
криптосистемы с открытым ключом  и публикует y. Каждый избира-
тель Vi посылает центру сообщение, содержащее идентификатор этого
избирателя и его голос bi, зашифрованный на ключе y. Центр проверя-
ет соответствие поданных бюллетеней спискам избирателей, расшифро-
вывает бюллетени и отбрасывает недействительные (в которых голоса
отличны от −1 и 1), подсчитывает и публикует итог.
Уже в этой простой схеме есть ¾подводный камень¿. Если каждый
избиратель просто шифрует свой бит bi на ключе y, то возможных
криптограмм всего две и ни о какой анонимности голосов речи быть
не может. Можно шифровать строку, которая состоит из бита bi, до-
полненного, например, справа случайной строкой. Это накладывает до-
полнительные требования на криптосистему: старший бит открытого
текста должен быть трудным, т. е. задача его вычисления по крипто-
грамме должна быть эквивалентна (в смысле полиномиальной своди-
мости) задаче вычисления всего открытого текста. Такие криптосисте-
мы существуют, но лучше использовать криптосистему вероятностного
шифрования (см. [19]), в ней криптограмма сообщения m на ключе k
вычисляется с помощью рандомизированного алгоритма: c = Ek(m, r),
где r  случайная строка. Это означает, что у каждого сообщения суще-
ствует, вообще говоря, экспоненциально много криптограмм, вычислен-
ных на одном и том же ключе. Но дешифрование при этом всегда од-
нозначно! Криптосистемы вероятностного шифрования были введены
в работе Гольдвассер и Микали [19], где при некоторых предположе-
ниях доказано существование криптосистем такого типа, обладающих
так называемой семантической стойкостью. Это  своего рода аналог
шенноновской абсолютной стойкости, но относительно противника, ра-
ботающего за полиномиальное время.
Мы рассмотрим в качестве примера один из вариантов криптосисте-
мы Эль-Гамаля [20], основанной на задаче дискретного логарифмиро-
вания. В обозначениях из раздела 2 пусть Gq  подгруппа Z∗
p , порож-
денная g. Для сообщения m ∈ Gq выбирается  ∈R Zq и вычисляется
криптограмма (a, b), где a = g mod p, b = ym mod p. Получатель,
знающий секретный ключ x, вычисляет
b/ax = ym/(g)x = ym/gx = ym/y = m (mod p).
§ 6. Поиграем в ¾кубики¿. Протоколы голосования 81
Вернемся к протоколу голосования. Пусть h  еще один порожда-
ющий группы Gq. Тогда для b ∈ {−1, 1} бюллетень вычисляется в виде
(g, yhb). После применения алгоритма дешифрования центр получит
значение hb mod p, после чего бит b можно извлечь, просто подставляя
оба значения 1 и −1.
В такой схеме голосование, по существу, не может быть тайным, по-
скольку центр знает, как голосовал каждый избиратель. Но с правиль-
ностью подсчета голосов ситуация иная. Предположим, что для прове-
дения голосования создано табло  хранилище информации, в котором
для каждого избирателя выделена отдельная строка. Эта строка содер-
жит, например, полные паспортные данные избирателя, и в эту стро-
ку он помещает свой бюллетень. Предполагается, что табло доступно
на чтение всем участникам голосования, а также сторонним наблюда-
телям. По истечении срока подачи голосов табло ¾закрывается¿, т. е.
фиксируется его состояние. После этого выделяется некоторое время, в
течение которого каждый избиратель проверяет содержимое своей стро-
ки на табло. Все претензии разбираются, при необходимости вносятся
соответствующие изменения и, когда все избиратели удовлетворены, со-
держимое табло фиксируется окончательно.
После этого центр вычисляет z =
Pl
i=1 bi и публикует итог голо-
сования z. Пусть (gi , yihbi )  бюллетень избирателя Vi. Поскольку
все бюллетени находятся на табло, любой избиратель, а также всякий
сторонний наблюдатель, может вычислить
(
Yl
i−1
gi mod p,
Yl
i=1
yihbi mod p).
Обозначим A =
Ql
i=1 gi mod p, B =
Ql
i=1 yi mod p. Если центр
правильно подсчитал голоса, то должно выполняться равенство hz =
=
Ql
i=1 hbi (mod p). Поэтому, если вторую из вычисленных выше ве-
личин поделить на hz, то должно получиться значение B. Пусть
B′ = (
Ql
i=1 yihbi)/hz mod p. Проблема в том, что проверяющий не
знает значение B и не может самостоятельно выяснить, верно ли, что
B′ = B. Но нетрудно проверить, что должно выполняться сравнение
B = Ax (mod p). Поэтому проверяющий может потребовать от центра
доказательство следующего факта: дискретный логарифм B′ по основа-
нию A равен дискретному логарифму y по основанию g. Мы приводим
предназначенный для этой цели протокол Шаума и Педерсена [21], ци-
тируя его по работе [22].
Протокол Шаума и Педерсена
1. Доказывающий выбирает k ∈R Zq, вычисляет (, 
) = (gk mod p,
Ak mod p) и посылает (, 
) проверяющему.
82 Гл. 3. Криптографические протоколы
2. Проверяющий выбирает запрос e ∈R Zq и посылает e доказываю-
щему.
3. Доказывающий вычисляет s = (k +ex) mod q и посылает s прове-
ряющему.
4. Проверяющий убеждается, что gs = ye mod p и As = 
Be mod p,
и принимает доказательство. В противном случае, если хотя бы
одно из этих сравнений не выполняется,  отвергает.
Читатель, который ознакомился со вторым разделом данной главы,
без труда обнаружит сходство этого протокола со схемой аутентифи-
кации Шнорра. Такому читателю будет полезно попытаться самостоя-
тельно провести анализ стойкости данного протокола.
В принципе центр может доказать утверждение B′ = A (mod p)
каждому желающему. Неудобство в том, что протокол интерактивный.
Но используя тот же прием, которым схема аутентификации Шнорра
преобразуется в схему электронной подписи (см. раздел 2), можно и этот
протокол сделать неинтерактивным. В таком случае центр может про-
сто опубликовать неинтерактивное доказательство вместе с итогом z.
Конечно, предположение о том, что все избиратели доверяют одному
центру подсчета голосов, весьма далеко от реальности. Можно создать
n центров C1, . . . ,Cn. Тогда предположение о том, что по крайней ме-
ре t центров из n честные, где, например, t > 2n/3, выглядит более
реалистичным.
В этом случае центры совместно выбирают и публикуют три слу-
чайных порождающих g, y и h группы Gq. Бюллетень избирателя Vi
формируется так же, как и в предыдущем варианте: (gi , yihbi). Но
теперь центры не в состоянии сами дешифровать эту криптограмму.
Вместо этого каждый из них вычисляет (
Ql
i=1 gi ,
Ql
i=1 yihbi ). Изби-
ратель Vi с помощью описанной в предыдущем разделе схемы проверяе-
мого разделения секрета создает доли i1 , . . . , in секретного значения
i и передает долю ij центру Cj . Далее, выполняя вычисления над
долями (см. раздел 5), центры вычисляют  =
Pl
i=1 i mod p. Если при
этом хотя бы t центров честные, то остальные не смогут восстановить ни
одно из значений i. Полученный результат  проверяется: должно вы-
полняться сравнение g =
Ql
i=1 gi mod p. Если оно выполнено, то зна-
чение  публикуется, и этого значения достаточно для вычисления итога
голосования. В самом деле, (
Ql
i=1 yihbi)/y =
Ql
i=1 hbi (mod p). Прав-
да, для того чтобы получить итог z, необходимо вычислить дискретный
логарифм полученной величины. Но поскольку абсолютное значение z
невелико (заведомо не превосходит количества избирателей l) это мож-
но сделать простым перебором.
§ 6. Поиграем в ¾кубики¿. Протоколы голосования 83
В этой схеме возникает новая проблема  необходимо обеспечить
протокол, с помощью которого центры совместно выбирают порожда-
ющие g, y и h, причем так, что ни один из них не является известной
степенью другого. Эту проблему можно решить следующим способом.
Пусть G  вероятностный алгоритм, который генерирует три случай-
ных порождающих. Его можно рассматривать как детерминированный
алгоритм, который получает на входе помимо чисел p и q еще и случай-
ную строку r требуемой длины. В разделе 4 был описан протокол под-
брасывания монеты, который очевидным образом обобщается на случай
n участников. С помощью такого обобщенного протокола центры могут
по биту сгенерировать строку r (существуют и более эффективные схе-
мы). Если хотя бы один из центров честный, то r  случайная строка.
По окончании выполнения протокола центры публикуют r, g, y и h. По-
скольку алгоритм G предполагается общеизвестным, всякий желающий
может проверить, что g, y и h получены с помощью строки r.
Все проблемы решены? Отнюдь! Если в случае одного центра по-
следний расшифровывал все бюллетени и проверял их правильность,
отбрасывая недействительные, то в случае n центров нечестный изби-
ратель может попытаться с помощью недействительного бюллетеня со-
рвать выборы или исказить их итог. Эту проблему можно решить, если
потребовать, чтобы вместе с бюллетенем каждый избиратель публико-
вал доказательство, что бюллетень построен правильно. Другими сло-
вами, требуется протокол, с помощью которого для данного бюллетеня
(Ai,Bi) избиратель Vi доказывал, что он знает i ∈ Zq и bi ∈ {−1, 1} такие, что Ai = gi mod p, Bi = yihbi mod p. При этом протокол не
должен давать проверяющему никакой полезной для него информации
о значениях i и bi. Пример такого протокола дан в работе [22]; мы его
не воспроизводим здесь ввиду громоздкости.
Теперь, наконец, все? Опять нет! . . .Впрочем, поставим на этом точ-
ку. Надеемся, что читатель уже убедился в том, что протоколы голосо-
вания  нетривиальный объект и всевозможные его технические аспек-
ты можно обсуждать еще очень долго. К тому же мы рассматривали
только два основных требования к протоколам голосования  аноним-
ность и правильность подсчета голосов. А ведь существуют и другие.
Причем новые требования могут возникать уже в процессе анализа про-
токолов голосования, когда обнаруживается, что последние обладают
некоторыми неожиданными свойствами, которых нет в ныне общепри-
нятых неэлектронных системах выборов. Например, при использовании
описанной выше конструкции бюллетеня избиратель Vi знает значения
i и bi, которые он впоследствии может использовать для доказатель-
ства, что голосовал данным определенным образом (например, ¾за¿,
а не ¾против¿). Это создает возможности покупки голосов и требует
разработки соответствующей криптографической защиты.
84 Гл. 3. Криптографические протоколы
Дальнейшие подробности протоколов голосования см. в работах [22],
[23], из которых заимствованы изложенные выше идеи построения та-
ких протоколов.
И последнее, о чем хотелось бы сказать в этом разделе. Всюду вы-
ше мы обсуждали (неформально) лишь стойкость различных крипто-
графических примитивов, используемых в протоколе голосования, по
отдельности. Но при композиции стойких криптографических протоко-
лов может получиться нестойкий. Исследование стойкости композиций
протоколов  еще одна, и зачастую весьма непростая, задача теорети-
ческой криптографии.
§ 7. За пределами стандартных предположений.
Конфиденциальная передача сообщений
“Ты умеешь считать?  спросила Белая Королева.
Сколько будет один плюс один плюс один плюс один
плюс один плюс один плюс один плюс один плюс один
плюс один?
 Я не знаю,  ответила Алиса.  Я сбилась со сче-
та.
Она не умеет считать, сказала Черная Королева."
Л. Кэрролл. ¾Алиса в зазеркалье¿.
Криптографические протоколы в своем большинстве относятся к
одной из двух категорий. В первую входят протоколы, обладающие
теоретико-информационной или абсолютной стойкостью. Вторая ка-
тегория  это те протоколы, стойкость которых основывается на
вычислительной сложности каких-либо математических задач. Осно-
вывается в том смысле, что либо стойкость протокола доказана при
некотором конкретном предположении, либо справедливость предполо-
жения необходима для стойкости, т. е. противник, научившийся решать
соответствующую задачу эффективно, заведомо ¾взламывает¿ прото-
кол.
В теоретической криптографии, как и во всякой научной дисци-
плине, представлено все многообразие направлений научного поиска.
Одно из таких направлений  разработка криптографических схем,
стойких при каких-либо нестандартных предположениях. Работ, посвя-
щенных этой тематике, немного, но они есть. И в этом заключительном
разделе мы рассмотрим пример криптографического протокола, дока-
зуемо стойкого при нестандартном предположении.
Задача конфиденциальной передачи сообщений состоит в следую-
щем. Имеются два участника, Алиса и Боб, которые являются або-
нентами сети связи. Участники соединены n проводами, по каждому
§ 7. За пределами стандартных предположений. Конфиденциальная передача сообщени8й5
из которых можно пересылать сообщения в обе стороны, независимо
от того, что происходит с другими проводами. Никакой общей секрет-
ной информации у Алисы и Боба изначально нет. У Алисы имеется
конфиденциальное сообщение m, и задача состоит в том, чтобы его
конфиденциальным же образом передать Бобу. Против участников дей-
ствует активный противник, который может полностью контролировать
не более t проводов. Полный контроль означает, что противник пере-
хватывает все сообщения, передаваемые по данному проводу, и может
заменять их любыми другими сообщениями.
Если положить n = 1 и рассматривать пассивного противника, ко-
торый только подслушивает, то получим классическую модель секрет-
ной связи, введенную еще Шенноном. Задача конфиденциальной пе-
редачи сообщений в этой модели всегда решалась с помощью крип-
тосистем. Но выделение криптосистем в отдельную категорию  это,
скорее, дань традиции. На самом деле требуется протокол конфиден-
циальной передачи сообщений, при построении которого используют-
ся такие криптографические примитивы, как алгоритмы шифрова-
ния и дешифрования, протокол распределения ключей и т. д. Напри-
мер, в случае криптосистемы с открытым ключом примитивом может
быть и протокол электронной подписи, если тот орган (центр дове-
рия), которому поручено вести сертифицированный справочник, за-
веряет все открытые ключи, хранящиеся в этом справочнике, своей
подписью.
В предположении n > 2t + 1 задача конфиденциальной передачи
сообщений может быть решена с помощью следующего простого прото-
кола.
Прежде всего заметим, что при данном предположении Алиса и Боб
имеют абсолютно надежный открытый канал связи. Если, например,
Алисе необходимо послать сообщение x Бобу, то она посылает x по
каждому из проводов, а Боб выбирает из всех полученных значений
то, которое появилось по крайней мере t + 1 раз.
Далее, пусть q  большое простое число, q > n. Алиса выбирает
случайный полином Q(x) степени t над Zq. Пусть P = Q(0). Идея со-
стоит в том, чтобы передать P Бобу в качестве одноразового ключа
для шифра Вернама. При этом нужно обеспечить такую передачу, что-
бы противник не мог узнать ничего о значении P. Для этого Алиса
использует пороговую схему разделения секрета, т. е. посылает значе-
ние Q(j) по j-му проводу. Пусть rj , j = 1 . . . , n  значение, которое
Боб получил по j-му проводу. Если все n пар (j, rj ) интерполируют-
ся полиномом степени t, то передача успешна и Боб может вычислить
ключ P. Далее Алиса и Боб общаются по описанному выше открытому
каналу. Если Боб получил ключ P, то он уведомляет об этом Алису
специальным сообщением. Алиса вычисляет и посылает Бобу крипто-
86 Гл. 3. Криптографические протоколы
грамму z = (P + m) mod q. Боб дешифрует криптограмму и получает
сообщение m. Если пары (j, rj ) не интерполируются полиномом степе-
ни t, то Боб посылает все эти пары Алисе, которая обнаружит хотя бы
для одного j, что rj 6= Q(j). Ясно, что в этом случае провод контро-
лируется противником. Алиса посылает Бобу список всех таких номе-
ров j, и соответствующие провода исключаются из работы. После этого
Алиса и Боб повторяют весь протокол, используя оставшиеся провода.
Ясно, что после не более t повторений передача ключа будет успеш-
ной.
Данный протокол  простейший вариант протокола конфиденци-
альной передачи сообщений из работы Долева и др. [24]. В этой работе
предложен значительно более эффективный протокол, который при том
же предположении n > 2t+1 является доказуемо стойким против более
сильного противника.
Если противник пассивный, т. е. он лишь подслушивает не более t
проводов, то задача конфиденциальной передачи сообщений решается
совсем просто. Мы предлагаем читателю в качестве несложного упраж-
нения самостоятельно сконструировать соответствующий протокол при
n > t.
Протокол конфиденциальной передачи сообщений является доказу-
емо стойким в предположении, что противнику не хватает ресурсов,
чтобы контролировать хотя бы половину проводов, которыми соеди-
нены Алиса и Боб. Этот результат наводит на следующие размышле-
ния. Так называемый здравый смысл подсказывает, что для построения
системы секретной связи целесообразно создать закрытую сеть свя-
зи, т. е. такую, доступ к которой сильно ограничен. Но, по-видимому,
действительно надежное решение следует искать в прямо противопо-
ложном направлении: объединить все сети связи в единую открытую
сеть с очень большим количеством соединений между каждой парой
абонентов. Конечно, это  всего лишь теоретические рассуждения,
относящиеся к математической модели реальных систем. Но сколько
раз еще результаты, полученные в математической криптографии, как
и в любых других научных дисциплинах, заставят нас усомниться
в очевидности тех решений, которые подсказываются здравым смыс-
лом.
§ 8. Вместо заключения
Математическая теория криптографических протоколов развивает-
ся совместными усилиями ученых различных стран. Среди авторов ра-
бот, посвященных протоколам, встречаются имена математиков США и
Израиля, Канады и Голландии, Италии и Японии, Франции и Германии,
Дании и Венгрии. Этот список можно продолжить. И лишь наша заме-
§ 8. Вместо заключения 87
чательная математическая школа практически никаких заслуг в этой
области не имеет. Будем надеяться, что в недалеком будущем ситуация
изменится и не без участия кого-либо из наших читателей.
Литература к главе 3
[1] Schnorr C. P. Efficient identification and signatures for smart cards //
Proc. Crypto’89, Lect. Notes in Comput. Sci. V. 435, 1990. P. 239–252.
[2] Goldreich O., Krawczyk H. On the composition of zero-knowledge proof
systems // SIAM J. Comput. V. 25, No 1, 1996. P. 169–192.
[3] Goldwasser S., Micali S., Rivest R. A secure digital signature scheme
// SIAM J. Comput. V. 17, No 2, 1988. P. 281–308.
[4] Naor M., Yung M. Universal one-way hash functions and their cryptographic
applications // Proc. 21st Annu. ACM Symp. on Theory of
Computing. 1989. P. 33–43.
[5] Rompel J. One-way functions are necessary and sufficient for secure
signatures // Proc. 22nd Annu. ACM Symp. on Theory of Computing.
1990. P. 387–394.
[6] Fiat A., Shamir A. How to prove yourself: practical solutions to identification
and signature problems // Proc. Crypto’86, Lect. Notes in
Comput. Sci. V. 263, 1987. P. 186–194.
[7] Feige U., Fiat A., Shamir A. Zero-knowledge proofs of identity // J. of
Cryptology, V. 1, No 2, 1988. P. 77–94.
[8] Варновский Н. П. О стойкости схем электронной подписи с аппа-
ратной поддержкой. Технический отчет. Лаборатория МГУ по ма-
тематическим проблемам криптографии, 1997.
[9] Chaum D. Online cash checks // Proc. EUROCRYPT’89, Lect. Notes
in Comput. Sci., V. 434, 1990. P. 288–293.
[10] Yacobi Y. Efficient electronic money // Proc. ASIACRYPT’94, Lect.
Notes in Comput. Sci., V. 739, 1994. P. 131–139.
[11] Brands S. Untraceable off-line cash in wallets with observers // Proc.
Crypto’93, Lect. Notes in Comput. Sci., V. 773, 1994. P. 302–318.
[12] Анохин М. И., Варновский Н. П., Сидельников В. М., Ященко В. В.
Криптография в банковском деле. М.: МИФИ, 1997.
[13] Chaum D., Pedersen T. P. Transferred cash grows in size // Proc.
EUROCRYPT’92, Lect. Notes in Comput. Sci., V. 658, 1993. P. 390–
407.
[14] Blum M. Coin flipping by telephone: A protocol for solving impossible
problems // Proc. 24th IEEE Comp. Conf., 1982. P. 133–137; reprinted
in SIGACT News, V. 15, No 1, 1983. P. 23–27.
88 Гл. 3. Криптографические протоколы
[15] Bellare M., Micali S., Ostrovsky R. Perfect zero-knowledge in constant
rounds // Proc. 22nd Annu. ACM Symp. on Theory of Computing.
1990. P. 482–493.
[16] Kersten A. G. Shared secret Schemes aus geometrisches sicht. Mitteilungen
mathem. Seminar Giessen, Heft 208, 1992.
[17] Feldman P. A practical scheme for non-interactive verifiable secret
sharing // Proc. 28th Annu. Symp. on Found. of Comput. Sci. 1987. P.
427–437.
[18] Rabin T., Ben-Or M. Verifiable secret sharing and multiparty protocols
with honest majority // Proc. 21st Annu. ACM Symp. on Theory of
Computing. 1989. P. 73–85.
[19] Goldwasser S., Micali S. Probabilistic encryption // J. of Computer
and System Sciences, V. 28, No 2, 1984. P. 270–299.
[20] El Gamal T. A public-key cryptosystem and a signature scheme based
on discrete logarithms // IEEE Trans. Inf. Theory, IT-31, No 4, 1985.
P. 469–472.
[21] Chaum D., Pedersen T. P. Wallet databases with observers // Proc.
Crypto’92, Lect. Notes in Comput. Sci., V. 740, 1993. P. 89–105.
[22] Cramer R., Gennaro R., Schoenmakers B. A secure and optimally efficient
multi-authority election scheme // Proc. EUROCRYPT’97, Lect.
Notes in Comput. Sci., V. 1233, 1997. P. 103–118.
[23] Cramer R., Franklin M., Schoenmakers B., Yung M. Multi-authority
secret ballot elections with linear work // Proc. EUROCRYPT’96, Lect.
Notes in Comput. Sci., V. 1070, 1996. P. 72–83.
[24] Dolev D., Dwork C., Waarts O., Yung M. Perfectly secure message
transmission // Proc. 31st Annu. Symp. on Found. of Comput. Sci.
1990. P. 36–45.
Глава 4
Алгоритмические проблемы теории чисел
§ 1. Введение
Вопрос ¾как сосчитать?¿ всегда сопутствовал теоретико-числовым
исследованиям. Труды Евклида и Диофанта, Ферма и Эйлера, Гаус-
са, Чебышева и Эрмита содержат остроумные и весьма эффективные
алгоритмы решения диофантовых уравнений, выяснения разрешимо-
сти сравнений, построения больших по тем временам простых чисел,
нахождения наилучших приближений и т. д. Без преувеличения мож-
но сказать, что вся теория чисел пронизана алгоритмами. В последние
два десятилетия, благодаря в первую очередь запросам криптографии
и широкому распространению ЭВМ, исследования по алгоритмическим
вопросам теории чисел переживают период бурного и весьма плодо-
творного развития. Мы кратко затронем здесь лишь те алгоритмиче-
ские аспекты теории чисел, которые связаны с криптографическими
применениями.
Вычислительные машины и электронные средства связи проникли
практически во все сферы человеческой деятельности. Немыслима без
них и современная криптография. Шифрование и дешифрование тек-
стов можно представлять себе как процессы переработки целых чисел
при помощи ЭВМ, а способы, которыми выполняются эти операции, как
некоторые функции, определенные на множестве целых чисел. Все это
делает естественным появление в криптографии методов теории чисел.
Кроме того, стойкость ряда современных криптосистем обосновывается
только сложностью некоторых теоретико-числовых задач (см. [22]).
Но возможности ЭВМ имеют определенные границы. Приходится
разбивать длинную цифровую последовательность на блоки ограни-
ченной длины и шифровать каждый такой блок отдельно. Мы будем
считать в дальнейшем, что все шифруемые целые числа неотрицатель-
ны и по величине меньше некоторого заданного (скажем, техническими
ограничениями) числа m. Таким же условиям будут удовлетворять и
числа, получаемые в процессе шифрования. Это позволяет считать и те,
и другие числа элементами кольца вычетов Z/mZ. Шифрующая функ-
90 Гл. 4. Алгоритмические проблемы теории чисел
ция при этом может рассматриваться как взаимнооднозначное отобра-
жение колец вычетов
f : Z/mZ → Z/mZ,
а число f(x) представляет собой сообщение x в зашифрованном ви-
де.
Простейший шифр такого рода  шифр замены, соответствует отоб-
ражению f : x 7→ x + k mod m при некотором фиксированном целом k.
Подобный шифр использовал еще Юлий Цезарь. Конечно, не каждое
отображение f подходит для целей надежного сокрытия информации
(подробнее об этом см. главу 1).
В 1978 г., см. [1], Р.Ривест, А.Шамир и Л.Адлеман (R. L.Rivest,
A. Shamir, L.Adleman) предложили пример функции f, обладающей
рядом замечательных достоинств. На ее основе была построена ре-
ально используемая система шифрования, получившая название по
первым буквам имен авторов  система RSA. Эта функция такова,
что
а) существует достаточно быстрый алгоритм вычисления значений
f(x);
б) существует достаточно быстрый алгоритм вычисления значений
обратной функции f−1(x);
в) функция f(x) обладает некоторым ¾секретом¿, знание которого
позволяет быстро вычислять значения f−1(x); в противном же случае
вычисление f−1(x) становится трудно разрешимой в вычислительном
отношении задачей, требующей для своего решения столь много вре-
мени, что по его прошествии зашифрованная информация перестает
представлять интерес для лиц, использующих отображение f в каче-
стве шифра.
Подробнее об отображениях такого сорта и возможностях их исполь-
зования в криптографии рассказано в главах 1, 2.
Еще до выхода из печати статьи [1] копия доклада в Массачусетс-
ском Технологическом институте, посвященного системе RSA, была по-
слана известному популяризатору математики М. Гарднеру, который
в 1977 г. в журнале Scientific American опубликовал статью [2], посвя-
щенную этой системе шифрования. В русском переводе заглавие статьи
Гарднера звучит так: Новый вид шифра, на расшифровку которого по-
требуются миллионы лет. Именно статья [2] сыграла важнейшую роль
в распространении информации об RSA, привлекла к криптографии
внимание широких кругов неспециалистов и фактически способствова-
ла бурному прогрессу этой области, произошедшему в последовавшие
30 лет.
§ 2. Система шифрования RSA 91
§ 2. Система шифрования RSA
В дальнейшем мы будем предполагать, что читатель знаком с эле-
ментарными фактами теории чисел. Тех же, кто хотел бы ознакомиться
с ними или напомнить себе эти факты, мы отсылаем к книге [3].
Пусть m и e натуральные числа. Функция f, реализующая схему
RSA, устроена следующим образом
f : x 7→ xe mod m. (1)
Для дешифрования сообщения a = f(x) достаточно решить сравнение
xe ≡ a (mod m). (2)
При некоторых условиях на m и e это сравнение имеет единственное
решение x.
Для того, чтобы описать эти условия и объяснить, как можно найти
решение, нам потребуется одна теоретико-числовая функция, так на-
зываемая функция Эйлера. Эта функция натурального аргумента m
обозначается '(m) и равняется количеству целых чисел на отрезке от 1
до m, взаимно простых с m. Так '(1) = 1 и '(pr) = pr−1(p− 1) для лю-
бого простого числа p и натурального r. Кроме того, '(ab) = '(a)'(b)
для любых натуральных взаимно простых a и b. Эти свойства позволя-
ют легко вычислить значение '(m), если известно разложение числа m
на простые сомножители.
Если показатель степени e в сравнении (2) взаимно прост с '(m), то
сравнение (2) имеет единственное решение. Для того, чтобы найти его,
определим целое число d, удовлетворяющее условиям
de ≡ 1 (mod '(m)), 1 6 d < '(m). (3)
Такое число существует, поскольку (e, '(m)) = 1, и притом единственно.
Здесь и далее символом (a, b) будет обозначаться наибольший общий
делитель чисел a и b. Классическая теорема Эйлера, см. [3], утверждает,
что для каждого числа x, взаимно простого с m, выполняется сравнение
x'(m) ≡ 1 (mod m) и, следовательно,
ad ≡ xde ≡ x (mod m). (4)
Таким образом, в предположении (a,m) = 1, единственное решение
сравнения (2) может быть найдено в виде
x ≡ ad (mod m). (5)
Если дополнительно предположить, что число m состоит из раз-
личных простых сомножителей, то сравнение (5) будет выполняться и
без предположения (a,m) = 1. Действительно, обозначим r = (a,m) и
s = m/r. Тогда '(m) делится на '(s), а из (2) следует, что (x, s) = 1.
Подобно (4), теперь легко находим x ≡ ad (mod s). А кроме того, име-
ем x ≡ 0 ≡ ad (mod r). Получившиеся сравнения в силу (r, s) = 1 дают
нам (5).
92 Гл. 4. Алгоритмические проблемы теории чисел
Функция (1), принятая в системе RSA, может быть вычислена доста-
точно быстро. Как это сделать, мы обсудим чуть ниже. Пока отметим
лишь, что обратная к f(x) функция f−1 : x 7→ xd (mod m) вычисляется
по тем же правилам, что и f(x), лишь с заменой показателя степени
e на d. Таким образом, для функции (1) будут выполнены указанные
выше свойства а) и б).
Для вычисления функции (1) достаточно знать лишь числа e и m.
Именно они составляют открытый ключ для шифрования. А вот для
вычисления обратной функции требуется знать число d, оно и являет-
ся ¾секретом¿, о котором речь идет в пункте в). Казалось бы, ничего
не стоит, зная число m, разложить его на простые сомножители, вы-
числить затем с помощью известных правил значение '(m) и, наконец,
с помощью (3) определить нужное число d. Все шаги этого вычисле-
ния могут быть реализованы достаточно быстро, за исключением пер-
вого. Именно разложение числа m на простые множители и составляет
наиболее трудоемкую часть вычислений. В теории чисел несмотря на
многолетнюю ее историю и на очень интенсивные поиски в течение по-
следних 30 лет, эффективный алгоритм разложения натуральных чисел
на множители так и не найден. Конечно, можно, перебирая все простые
числа до √m, и, деля на них m, найти требуемое разложение. Но, учи-
тывая, что количество простых в этом промежутке, асимптотически
равно 2√m · (lnm)−1, см. [5], гл. 5, находим, что при m, записываемом
100 десятичными цифрами, найдется не менее 4 ·1042 простых чисел, на
которые придется делить m при разложении его на множители. Очень
грубые прикидки показывают, что компьютеру, выполняющему милли-
он делений в секунду, для разложения числа m > 1099 таким способом
на простые сомножители потребуется не менее, чем 1035 лет. Известны
и более эффективные способы разложения целых чисел на множители,
чем простой перебор простых делителей, но и они работают очень мед-
ленно. Таким образом, название статьи М. Гарднера вполне оправдано.
Авторы схемы RSA предложили выбирать число mв виде произведе-
ния двух простых множителей p и q, примерно одинаковых по величине.
Так как
'(m) = '(pq) = (p − 1)(q − 1), (6)
то единственное условие на выбор показателя степени e в отображе-
нии (1) есть
(e, p − 1) = (e, q − 1) = 1. (7)
Итак, лицо, заинтересованное в организации шифрованной перепис-
ки с помощью схемы RSA, выбирает два достаточно больших простых
числа p и q. Перемножая их, оно находит число m = pq. Затем выбира-
ется число e, удовлетворяющее условиям (7), вычисляется с помощью
(6) число '(m) и с помощью (3)  число d. Числа m и e публикуют-
§ 2. Система шифрования RSA 93
ся, число d остается секретным. Теперь любой может отправлять за-
шифрованные с помощью (1) сообщения организатору этой системы, а
организатор легко сможет дешифровывать их с помощью (5).
Для иллюстрации своего метода Ривест, Шамир и Адлеман зашиф-
ровали таким способом некоторую английскую фразу. Сначала она
стандартным образом (a=01, b=02, . . . , z=26, пробел=00) была записа-
на в виде целого числа x, а затем зашифрована с помощью отображения
(1) при
m =11438162575788886766932577997614661201021829672124236256256184293
5706935245733897830597123563958705058989075147599290026879543541
и e = 9007. Эти два числа были опубликованы, причем дополнительно
сообщалось, что m = pq, где p и q  простые числа, записываемые
соответственно 64 и 65 десятичными знаками. Первому, кто дешифрует
соответствующее сообщение
f(x) =9686961375462206147714092225435588290575999112457431987469512093
0816298225145708356931476622883989628013391990551829945157815154,
была обещана награда в 100$.
Эта история завершилась спустя 17 лет в 1994 г., см. [5], когда
D. Atkins, M. Graff, A. K. Lenstra и P. C. Leyland сообщили о дешиф-
ровке фразы, предложенной в [1]. Она1)
1)The magic words are squeamish ossifrage (Волшебные слова  брезгли-
вая скопа). Скопа  хищная птица отряда соколообразных. была выне-
сена в заголовок статьи [5], а соответствующие числа p и q оказались равными
p =3490529510847650949147849619903898133417764638493387843990820577,
q =32769132993266709549961988190834461413177642967992942539798288533.
Интересующиеся могут найти детали вычислений в работе [5]. Здесь же мы от-
метим, что этот замечательный результат (разложение на множители 129-значного
десятичного числа) был достигнут благодаря использованию алгоритма разложе-
ния чисел на множители, называемого методом квадратичного решета. Выполнение
вычислений потребовало колоссальных по тем временам ресурсов. В работе, возглав-
лявшейся четырьмя авторами проекта, и продолжавшейся после предварительной
теоретической подготовки примерно 220 дней, на добровольных началах участвова-
ло около 600 человек и примерно 1600 компьютеров, объединенных сетью Internet.
Описанная выше схема RSA ставит ряд вопросов, которые мы и попробуем обсу-
дить ниже. Например, как проводить вычисления с большими числами, ведь стан-
дартное математическое обеспечение не позволяет перемножать числа размером по
65 десятичных знаков? Как вычислять огромные степени больших чисел? Что зна-
чит быстрый алгоритм вычисления и что такое сложная вычислительная задача?
Где взять большие простые числа? Как, например, построить простое число в 65
десятичных знаков? Существуют ли другие способы решения сравнения (2)? Ведь,
если можно найти решение (2), не вычисляя секретный показатель d или не разла-
гая число m на простые сомножители, да еще сделать это достаточно быстро, вся
94 Гл. 4. Алгоритмические проблемы теории чисел
§ 3. Сложность теоретико-числовых алгоритмов
Сложность алгоритмов теории чисел обычно принято измерять ко-
личеством арифметических операций (сложений, вычитаний, умноже-
ний и делений с остатком), необходимых для выполнения всех действий,
предписанных алгоритмом. Впрочем, это определение не учитывает ве-
личины чисел, участвующих в вычислениях. Ясно, что перемножить
два стозначных числа значительно сложнее, чем два однозначных, хотя
при этом и в том, и в другом случае выполняется лишь одна арифме-
тическая операция. Поэтому иногда учитывают еще и величину чисел,
сводя дело к так называемым битовым операциям, т. е. оценивая ко-
личество необходимых операций с цифрами 0 и 1, в двоичной записи
чисел. Это зависит от рассматриваемой задачи, от целей автора и т. д.
На первый взгляд странным также кажется, что операции умно-
жения и деления приравниваются по сложности к операциям сложе-
ния и вычитания. Житейский опыт подсказывает, что умножать чис-
ла значительно сложнее, чем складывать их. В действительности же,
вычисления можно организовать так, что на умножение или деление
больших чисел понадобится не намного больше битовых операций, чем
на сложение. В книге [7] описывается алгоритм Шёнхаге – Штрассе-
на, основанный на так называемом быстром преобразовании Фурье, и
требующий O(n ln n lnln n) битовых операций для умножения двух n-
разрядных двоичных чисел. Таким же количеством битовых операций
можно обойтись при выполнении деления с остатком двух двоичных
чисел, записываемых не более, чем n цифрами. Для сравнения отме-
тим, что сложение n-разрядных двоичных чисел требует O(n) битовых
операций.
Говоря в этой главе о сложности алгоритмов, мы будем иметь в виду
количество арифметических операций. При построении эффективных
система RSA разваливается. Наверное, читателю могут прийти в голову и другие
вопросы.
Начнем с конца. За 17 лет, прошедших между публикациями работ [1] и [5], никто
так и не смог дешифровать предложенную авторами RSA фразу. Конечно, это всего
лишь косвенное подтверждение стойкости системы RSA, но все же достаточно убе-
дительное. Ниже мы обсудим теоретические проблемы, возникающие при решении
полиномиальных сравнений.
Мы не будем обсуждать, как выполнять арифметические действия с большими це-
лыми числами, рекомендуем читателю обратиться к замечательной книжке Д. Кну-
та [6, гл. 4]. Заметим только, что большое число всегда можно разбить на меньшие
блоки, с которыми компьютер может оперировать так же, как мы оперируем с циф-
рами, когда проводим вычисления вручную на бумаге. Конечно, для этого нужны
специальные программы. Созданы и получили достаточно широкое распространение
даже специальные языки программирования для вычислений с большими числами.
Укажем здесь два из них  PARI и UBASIC. Эти языки свободно распространяются.
Информацию о том, как их получить в пользование, можно найти в книге [17].
§ 3. Сложность теоретико-числовых алгоритмов 95
алгоритмов и обсуждении верхних оценок сложности обычно хватает
интуитивных понятий той области математики, которой принадлежит
алгоритм. Формализация же этих понятий требуется лишь тогда, когда
речь идет об отсутствии алгоритма или доказательстве нижних оценок
сложности. Более детальное и формальное обсуждение этих вопросов
см. в главе 2.
Приведем теперь примеры достаточно быстрых алгоритмов с оцен-
ками их сложности. Здесь и в дальнейшем мы не будем придерживаться
формального описания алгоритмов, стараясь в первую очередь объяс-
нить смысл выполняемых действий.
Следующий алгоритм вычисляет ad mod m за O(lnm) арифметиче-
ских операций. При этом, конечно, предполагается, что натуральные
числа a и d не превосходят по величине m.
1. Алгоритм вычисления ad mod m
1. Представим d в двоичной системе счисления d = d02r + · · ·
· · · + dr−12 + dr, где di, цифры в двоичном представлении, рав-
ны 0 или 1, d0 = 1.
2. Положим a0 = a и затем для i = 1, . . . , r вычислим
ai ≡ a2 i−1 · adi (mod m).
3. ar есть искомый вычет ad mod m.
Справедливость этого алгоритма вытекает из сравнения
ai ≡ ad02i+···+di (mod m),
легко доказываемого индукцией по i.
Так как каждое вычисление на шаге 2 требует не более трех умноже-
ний по модулю m и этот шаг выполняется r 6 log2m раз, то сложность
алгоритма может быть оценена величиной O(lnm).
Второй алгоритм  это классический алгоритм Евклида вычисле-
ния наибольшего общего делителя целых чисел. Мы предполагаем за-
данными два натуральных числа a и b и вычисляем их наибольший
общий делитель (a, b).
2. Алгоритм Евклида
1. Вычислим r  остаток от деления числа a на b, a = bq + r,
0 6 r < b.
2. Если r = 0, то b есть искомое число.
3. Если r 6= 0, то заменим пару чисел ha, bi парой hb, ri и перейдем к
шагу 1.
Не останавливаясь на объяснении, почему алгоритм действительно
находит (a, b), докажем некоторую оценку его сложности.
96 Гл. 4. Алгоритмические проблемы теории чисел
Теорема 3. При вычислении наибольшего общего делителя (a, b) с по-
мощью алгоритма Евклида будет выполнено не более 5p операций де-
ления с остатком, где p есть количество цифр в десятичной записи
меньшего из чисел a и b.
Доказательство. Положим r0 = a > b и определим r1, r2, . . . , rn 
последовательность делителей, появляющихся в процессе выполнения
шага 1 алгоритма Евклида. Тогда
r1 = b, . . . , 0 6 ri+1 < ri, i = 0, 1, . . . n − 1.
Пусть также u0 = 1, u1 = 1, uk+1 = uk + uk−1, k > 1,  последо-
вательность Фибоначчи. Индукцией по i от i = n − 1 до i = 0 легко
доказывается неравенство ri+1 > un−i. А так как un > 10(n−1)/5, то
имеем неравенства 10p > b = r1 > un > 10(n−1)/5 и n < 5p + 1.
Немного подправив алгоритм Евклида, можно достаточно быстро
решать сравнения ax ≡ 1 (mod b) при условии, что (a, b) = 1. Эта задача
равносильна поиску целых решений уравнения ax + by = 1.
3. Алгоритм решения уравнения ax + by = 1
0. Определим матрицу E =

1 0
0 1

.
1. Вычислим r  остаток от деления числа a на b, a = bq + r,
0 6 r < b.
2. Если r = 0, то второй столбец матрицы E дает вектор

x
y

реше-
ний уравнения.
3. Если r 6= 0, то заменим матрицу E матрицей E ·

0 1
1 −q

.
4. Заменим пару чисел ha, bi парой hb, ri и перейдем к шагу 1.
Если обозначить через Ek матрицу E, возникающую в процессе ра-
боты алгоритма перед шагом 2 после k делений с остатком (шаг 1), то в
обозначениях из доказательства теоремы 1 в этот момент выполняется
векторное равенство ha, bi · Ek = hrk−1, rki. Его легко доказать индук-
цией по k. Поскольку числа a и b взаимно просты, имеем rn = 1, и
это доказывает, что алгоритм действительно дает решение уравнения
ax + by = 1. Буквой n мы обозначили количество делений с остатком,
которое в точности такое же, как и в алгоритме Евклида.
Три приведенных выше алгоритма относятся к разряду так назы-
ваемых полиномиальных алгоритмов. Это название носят алгоритмы,
сложность которых оценивается сверху степенным образом в зависимо-
сти от длины записи входящих чисел (см. подробности в главе 2). Если
наибольшее из чисел, подаваемых на вход алгоритма, не превосходит m,
то сложность алгоритмов этого типа оценивается величиной O(lncm) ,
§ 3. Сложность теоретико-числовых алгоритмов 97
где c  некоторая абсолютная постоянная. Во всех приведенных выше
примерах c = 1.
Полиномиальные алгоритмы в теории чисел  большая редкость.
Да и оценки сложности алгоритмов чаще всего опираются на какие-
либо не доказанные, но правдоподобные гипотезы, обычно относящиеся
к аналитической теории чисел.
Для некоторых задач эффективные алгоритмы вообще не извест-
ны. Иногда в таких случаях все же можно предложить последователь-
ность действий, которая, ¾если повезет¿, быстро приводит к требуемо-
му результату. Существует класс так называемых вероятностных ал-
горитмов, которые дают правильный результат, но имеют вероятност-
ную оценку времени работы. Обычно работа этих алгоритмов зависит
от одного или нескольких параметров. В худшем случае они работают
достаточно долго. Но удачный выбор параметра определяет быстрое за-
вершение работы. Такие алгоритмы, если множество ¾хороших¿ значе-
ний параметров велико, на практике работают достаточно эффективно,
хотя и не имеют хороших оценок сложности.
Мы будем иногда использовать слова детерминированный алгоритм,
чтобы отличать алгоритмы в обычном смысле от вероятностных алго-
ритмов.
Как пример, рассмотрим вероятностный алгоритм, позволяющий
эффективно находить решения полиномиальных сравнений по просто-
му модулю. Пусть p  простое число, которое предполагается большим,
и f(x) ∈ Z[x]  многочлен, степень которого предполагается ограничен-
ной. Задача состоит в отыскании решений сравнения
f(x) ≡ 0 (mod p). (8)
Например, речь может идти о решении квадратичных сравнений, ес-
ли степень многочлена f(x) равна 2. Другими словами, мы должны
отыскать в поле Fp = Z/pZ все элементы, удовлетворяющие уравнению
f(x) = 0.
Согласно малой теореме Ферма, все элементы поля Fp являются од-
нократными корнями многочлена xp − x. Поэтому, вычислив наиболь-
ший общий делитель d(x) = (xp − x, f(x)), мы найдем многочлен d(x),
множество корней которого в поле Fp совпадает с множеством корней
многочлена f(x), причем все эти корни однократны. Если окажется, что
многочлен d(x) имеет нулевую степень, т. е. лежит в поле Fp, это будет
означать, что сравнение (8) не имеет решений.
Для вычисления многочлена d(x) удобно сначала вычислить много-
член c(x) ≡ xp (mod f(x)), пользуясь алгоритмом, подобным описанно-
му выше алгоритму возведения в степень (напомним, что число p пред-
полагается большим). А затем с помощью аналога алгоритма Евклида
вычислить d(x) = (c(x)−x, f(x)). Все это выполняется за полиномиаль-
98 Гл. 4. Алгоритмические проблемы теории чисел
ное количество арифметических операций.
Таким образом, обсуждая далее задачу нахождения решений сравне-
ния (8), мы можем предполагать, что в кольце многочленов Fp[x] спра-
ведливо равенство
f(x) = (x − a1) · . . . · (x − an), ai ∈ Fp, ai 6= aj .
4. Алгоритм нахождения делителей многочлена f(x)
в кольце Fp[x]
1. Выберем каким-либо способом элемент  ∈ Fp.
2. Вычислим наибольший общий делитель
g(x) = (f(x), (x + )
p−1
2 − 1).
3. Если многочлен g(x) окажется собственным делителем f(x), то
многочлен f(x) распадется на два множителя и с каждым из них
независимо нужно будет проделать все операции, предписываемые
настоящим алгоритмом для многочлена f(x).
4. Если окажется, что g(x) = 1 или g(x) = f(x), следует перейти к
шагу 1 и, выбрав новое значение , продолжить выполнение алго-
ритма.
Количество операций на шаге 2 оценивается величиной O(ln p), ес-
ли вычисления проводить так, как это указывалось выше при нахож-
дении d(x). Выясним теперь, сколь долго придется выбирать числа ,
пока на шаге 2 не будет найден собственный делитель f(x).
Количество решений уравнения (t+a1)
p−1
2 = (t+a2)
p−1
2 в поле Fp не
превосходит p−3
2 . Это означает, что подмножество D ⊂ Fp, состоящее
из элементов , удовлетворяющих условиям
( + a1)
p−1
2 6= ( + a2)
p−1
2 ,  6= −a1,  6= −a2,
состоит не менее, чем из p−1
2 элементов. Учитывая теперь, что каждый
ненулевой элемент b ∈ Fp удовлетворяет одному из равенств b
p−1
2 = 1,
либо b
p−1
2 = −1, заключаем, что для  ∈ D одно из чисел a1, a2 будет
корнем многочлена (x+)
p−1
2 −1, а другое  нет. Для таких элементов 
многочлен g(x), определенный на шаге 2 алгоритма, будет собственным
делителем многочлена f(x).
Итак, существует не менее p−1
2 ¾удачных¿ выборов элемента , при
которых на шаге 2 алгоритма многочлен f(x) распадется на два соб-
ственных множителя. Следовательно, при ¾случайном¿ выборе элемен-
та  ∈ Fp, вероятность того, что многочлен не разложится на множители
после k повторений шагов алгоритма 1–4, не превосходит 2−k. Вероят-
ность с ростом k убывает очень быстро. И действительно, на практике
этот алгоритм работает достаточно эффективно.
§ 4. Как отличить составное число от простого 99
Заметим, что при оценке вероятности мы использовали только два
корня многочлена f(x). При n > 2 эта вероятность, конечно, еще мень-
ше. Более тонкий анализ с использованием оценок А. Вейля для сумм
характеров показывает, что вероятность для многочлена f(x) не рас-
пасться на множители при однократном проходе шагов алгоритма 1–4,
не превосходит 2−n + O(p−1/2). Здесь постоянная в O(·) зависит от n.
Детали доказательства см. в [24]. В настоящее время известно элемен-
тарное доказательство оценки А. Вейля (см. [9]).
В книге [6] описывается принадлежащий Берлекэмпу детерминиро-
ванный алгоритм решения сравнения (8), требующий O(pn3) арифме-
тических операций. Он практически бесполезен при больших p, а вот
при маленьких p и не очень больших n он работает не очень долго.
Если в сравнении (8) заменить простой модуль p составным моду-
лем m, то задача нахождения решений соответствующего сравнения
становится намного более сложной. Известные алгоритмы ее решения
основаны на сведении сравнения к совокупности сравнений (8) по про-
стым модулям  делителям m, и, следовательно, они требуют разло-
жения числа m на простые сомножители, что, как уже указывалось,
является достаточно трудоемкой задачей.
§ 4. Как отличить составное число от простого
Существует довольно эффективный способ убедиться, что заданное
число является составным, не разлагая это число на множители. Со-
гласно малой теореме Ферма, если число N простое, то для любого
целого a, не делящегося на N, выполняется сравнение
aN−1 ≡ 1 (mod N). (9)
Если же при каком-то a это сравнение нарушается, можно утверждать,
что N  составное. Проверка (9) не требует больших вычислений, это
следует из алгоритма 1. Вопрос только в том, как найти для состав-
ного N целое число a, не удовлетворяющее (9). Можно, например, пы-
таться найти необходимое число a, испытывая все целые числа подряд,
начиная с 2. Или попробовать выбирать эти числа случайным образом
на отрезке 1 < a < N.
К сожалению, такой подход не всегда дает то, что хотелось бы. Име-
ются составные числа N, обладающие свойством (9) для любого цело-
го a с условием (a,N) = 1. Такие числа называются числами Кармайк-
ла. Рассмотрим, например, число 561 = 3 · 11 · 17. Так как 560 делится
на каждое из чисел 2, 10, 16, то с помощью малой теоремы Ферма легко
проверить, что 561 есть число Кармайкла.Можно доказать (Carmichael,
1912), что любое из чисел Кармайкла имеет вид N = p1 · . . . · pr, r > 3,
где все простые pi различны, причем N−1 делится на каждую разность
100 Гл. 4. Алгоритмические проблемы теории чисел
pi − 1. Лишь недавно, см. [10], была решена проблема о бесконечности
множества таких чисел.
В 1976 г.Миллер предложил заменить проверку (9) проверкой несколь-
ко иного условия. Детали последующего изложения можно найти в [8].
Если N  простое число, N −1 = 2s ·t, где t нечетно, то согласно малой
теореме Ферма для каждого a с условием (a,N) = 1 хотя бы одна из
скобок в произведении
(at − 1)(at + 1)(a2t + 1) · . . . · (a2s−1t + 1) = aN−1 − 1
делится на N. Обращение этого свойства можно использовать, чтобы
отличать составные числа от простых.
Пусть N  нечетное составное число, N − 1 = 2s · t, где t нечетно.
Назовем целое число a, 1 < a < N, ¾хорошим¿ для N, если нарушается
одно из двух условий:
) N не делится на a;
) at ≡ 1 (mod N) или существует целое k, 0 6 k < s, такое, что
a2kt ≡ −1 (mod N).
Из сказанного ранее следует, что для простого числа N не существу-
ет хороших чисел a. Если же N составное число, то, как доказал Рабин,
их существует не менее 3
4 (N − 1).
Теперь можно построить вероятностный алгоритм, отличающий со-
ставные числа от простых.
5. Алгоритм, доказывающий непростоту числа
1. Выберем случайным образом число a, 1 < a < N, и проверим для
этого числа указанные выше свойства ) и ).
2. Если хотя бы одно из них нарушается, то число N составное.
3. Если выполнены оба условия ) и ), возвращаемся к шагу 1.
Из сказанного выше следует, что составное число не будет опреде-
лено как составное после однократного выполнения шагов 1–3 с веро-
ятностью не большей 4−1. А вероятность не определить его после k
повторений не превосходит 4−k, т. е. убывает очень быстро.
Миллер предложил детерминированный алгоритм определения со-
ставных чисел, имеющий сложность O(ln3 N), однако справедливость
его результата зависит от недоказанной в настоящее время расширен-
ной гипотезы Римана. Согласно этому алгоритму достаточно проверить
условия ) и ) для всех целых чисел a, 2 6 a 6 70 ln2 N. Если при
каком-нибудь a из указанного промежутка нарушается одно из условий
) или ), число N составное. В противном случае оно будет простым
или степенью простого числа. Последняя возможность, конечно, легко
проверяется.
Напомним некоторые понятия, см. [4], необходимые для формули-
ровки расширенной гипотезы Римана. Они понадобятся нам и в даль-
§ 4. Как отличить составное число от простого 101
нейшем. Пусть m > 2  целое число. Функция  : Z → C называется
характером Дирихле по модулю m, или просто характером, если эта
функция периодична с периодом m, отлична от нуля только на числах,
взаимно простых с m, и мультипликативна, т. е. для любых целых u, v
выполняется равенство (uv) = (u)(v). Для каждого m существует
ровно '(m) характеров Дирихле. Они образуют группу по умножению.
Единичным элементом этой группы является так называемый главный
характер 0, равный 1 на всех числах, взаимно простых с m, и 0 на
остальных целых числах. Порядком характера называется его порядок
как элемента мультипликативной группы характеров.
С каждым характером связана так называемая L-функция Ди-
рихле  функция комплексного переменного s, определенная рядом
L(s, ) =
∞X
n=1
(n)
ns . Сумма этого ряда аналитична в области Re s > 1
и может быть аналитически продолжена на всю комплексную плос-
кость. Следующее соотношение L(s, 0) = (s)
Y
p|m
(1 − p−s) связывает
L-функцию, отвечающую главному характеру, с дзета-функцией Ри-
мана (s) =
∞X
n=0
1
ns . Расширенная гипотеза Римана утверждает, что
комплексные нули всех L-функций Дирихле, расположенные в поло-
се 0 < Re s < 1, лежат на прямой Re s =
1
2
. В настоящее время не
доказана даже простейшая форма этой гипотезы  классическая ги-
потеза Римана, утверждающая такой же факт о нулях дзета-функ-
ции.
В 1952 г. Анкени с помощью расширенной гипотезы Римана доказал,
что для каждого простого числа q существует квадратичный невычет a,
удовлетворяющий неравенствам 2 6 a 6 70 ln2 q. Константа 70 была со-
считана позднее. Именно это утверждение и лежит в основе алгоритма
Миллера. В 1957 г. Берджесс доказал существование такого невычета
без использования расширенной гипотезы Римана, но с худшей оценкой
2 6 a 6 q
1
4√e+", справедливой при любом положительном " и q, большем
некоторой границы, зависящей от ".
Алгоритм Миллера принципиально отличается от алгоритма 5, так
как полученное с его помощью утверждение о том, что число N 
составное, опирается на недоказанную расширенную гипотезу Рима-
на и потому может быть неверным. В то время как вероятностный
алгоритм 5 дает совершенно правильный ответ для составных чисел.
Несмотря на отсутствие оценок сложности, на практике он работает
вполне удовлетворительно.
102 Гл. 4. Алгоритмические проблемы теории чисел
§ 5. Как строить большие простые числа
Мы не будем описывать здесь историю этой задачи, рекомендуем
обратиться к книге [6] и обзорам [8, 9]. Конечно же, большие простые
числа можно строить сравнительно быстро. При этом можно обеспечить
их случайное распределение в заданном диапазоне величин. В против-
ном случае теряла бы всякий практический смысл система шифрования
RSA. Наиболее эффективным средством построения простых чисел яв-
ляется несколько модифицированная малая теорема Ферма.
Теорема 4. Пусть N, S  нечетные натуральные числа, N−1 = S·R,
причем для каждого простого делителя q числа S существует целое
число a такое, что
aN−1 ≡ 1 (mod N), (a
N−1
q − 1,N) = 1. (10)
Тогда каждый простой делитель p числа N удовлетворяет сравнению
p ≡ 1 (mod 2S).
Доказательство. Пусть p  простой делитель числа N, а q  некото-
рый делитель S. Из условий (10) следует, что в поле вычетов Fp спра-
ведливы соотношения
aN−1 = 1, a
N−1
q 6= 1, ap−1 = 1. (11)
Обозначим буквой r порядок элемента a в мультипликативной группе
поля Fp. Первые два из соотношений (11) означают, что q входит в
разложение на простые множители числа r в степени такой же, как и в
разложение N −1, а последнее  что p−1 делится на r. Таким образом,
каждый простой делитель числа S входит в разложение p−1 в степени
не меньшей, чем в S, так что p−1 делится на S. Кроме того, p−1 четно.
Теорема 4 доказана.
Следствие. Если выполнены условия теоремы 4 и R 6 4S+2, то N 
простое число.
Действительно, пусть N равняется произведению не менее двух про-
стых чисел. Каждое из них, согласно утверждению теоремы 2, не мень-
ше, чем 2S + 1. Но тогда (2S + 1)2 6 N = SR + 1 6 4S2 + 2S + 1.
Противоречие и доказывает следствие.
Покажем теперь, как с помощью последнего утверждения, имея
большое простое число S, можно построить существенно большее про-
стое число N. Выберем для этого случайным образом четное число
R на промежутке S 6 R 6 4S + 2 и положим N = SR + 1. Затем
проверим число N на отсутствие малых простых делителей, разделив
его на малые простые числа; испытаем N некоторое количество раз с
помощью алгоритма 5. Если при этом выяснится, что N  составное
число, следует выбрать новое значение R и опять повторить вычисле-
ния. Так следует делать до тех пор, пока не будет найдено число N,
§ 5. Как строить большие простые числа 103
выдержавшее испытания алгоритмом 5 достаточно много раз. В этом
случае появляется надежда на то, что N  простое число, и следует
попытаться доказать простоту с помощью тестов теоремы 4.
Для этого можно случайным образом выбирать число a, 1 < a < N,
и проверять для него выполнимость соотношений
aN−1 ≡ 1 (mod N), (aR − 1,N) = 1. (12)
Если при выбранном a эти соотношения выполняются, то, согласно
следствию из теоремы 4, можно утверждать, что число N простое. Если
же эти условия нарушаются, нужно выбрать другое значение a и повто-
рять эти операции до тех пор, пока такое число не будет обнаружено.
Предположим, что построенное число N действительно является
простым. Зададимся вопросом, сколь долго придется перебирать числа
a, пока не будет найдено такое, для которого будут выполнены усло-
вия (12). Заметим, что для простого числа N первое условие (12), со-
гласно малой теореме Ферма, будет выполняться всегда. Те же числа a,
для которых нарушается второе условие (12), удовлетворяют сравнению
aR ≡ 1 (mod N). Как известно, уравнение xR = 1 в поле вычетов FN
имеет не более R решений. Одно из них x = 1. Поэтому на промежутке
1 < a < N имеется не более R − 1 чисел, для которых не выполняют-
ся условия (12). Это означает, что, выбирая случайным образом числа
a на промежутке 1 < a < N, при простом N можно с вероятностью
большей, чем 1 − O(S−1), найти число a, для которого будут выполне-
ны условия теоремы 4, и тем доказать, что N действительно является
простым числом.
Заметим, что построенное таким способом простое число N будет
удовлетворять неравенству N > S2, т. е. будет записываться примерно
вдвое большим количеством цифр, чем исходное простое число S. За-
менив теперь число S на найденное простое число N и повторив с этим
новым S все указанные выше действия, можно построить еще большее
простое число. Начав с какого-нибудь простого числа, скажем, запи-
санного 10 десятичными цифрами (простоту его можно проверить, на-
пример, делением на маленькие табличные простые числа), и повторив
указанную процедуру достаточное число раз, можно построить простые
числа нужной величины.
Обсудим теперь некоторые теоретические вопросы, возникающие в
связи с нахождением простых чисел вида N = SR + 1, где числа R
и S удовлетворяют неравенствам S 6 R 6 4S + 2. Прежде всего, со-
гласно теореме Дирихле, доказанной еще в 1839 г., прогрессия 2Sn+ 1,
n = 1, 2, 3, . . . содержит бесконечное количество простых чисел. Нас
интересуют простые числа, лежащие недалеко от начала прогрессии.
Оценка наименьшего простого числа в арифметической прогрессии бы-
ла получена в 1944 г.Ю.В.Линником. Соответствующая теорема утвер-
104 Гл. 4. Алгоритмические проблемы теории чисел
ждает, что наименьшее простое число в арифметической прогрессии
2Sn+1 не превосходит SC, где C  некоторая достаточно большая аб-
солютная постоянная. В предположении справедливости расширенной
гипотезы Римана можно доказать, [11, стр. 272], что наименьшее такое
простое число не превосходит c(") · S2+" при любом положительном ".
Таким образом, в настоящее время никаких теоретических гарантий
для существования простого числа N = SR + 1, S 6 R 6 4S + 2 не
существует. Тем не менее, опыт вычислений на ЭВМ показывает, что
простые числа в арифметической прогрессии встречаются достаточно
близко к ее началу. Упомянем в этой связи гипотезу о существовании
бесконечного количества простых чисел q с условием, что число 2q + 1
также простое, т. е. простым является уже первый член прогрессии.
Очень важен в связи с описываемым методом построения простых
чисел также вопрос о расстоянии между соседними простыми числами
в арифметической прогрессии. Ведь убедившись, что при некотором R
число N = SR + 1 составное, можно следующее значение R взять рав-
ным R + 2 и действовать так далее, пока не будет найдено простое
число N. И если расстояние между соседними простыми числами в
прогрессии велико, нет надежды быстро построить нужное число N.
Перебор чисел R до того момента, как мы наткнемся на простое чис-
ло N окажется слишком долгим. В более простом вопросе о расстоянии
между соседними простыми числами pn и pn+1 в натуральном ряде до-
казано лишь, что pn+1 −pn = O

p
38
61+"
n

, что, конечно, не очень хорошо
для наших целей. Вместе с тем существует так называемая гипотеза
Крамера (1936 г.), что pn+1 − pn = O(ln2 pn), дающая вполне прием-
лемую оценку. Примерно такой же результат следует и из расширен-
ной гипотезы Римана. Вычисления на ЭВМ показывают, что простые
числа в арифметических прогрессиях расположены достаточно плот-
но.
В качестве итога обсуждения в этом разделе подчеркнем следующее:
если принять на веру, что наименьшее простое число, а также рассто-
яние между соседними простыми числами в прогрессии 2Sn + 1 при
S 6 n 6 4S + 2 оцениваются величиной O(ln2 S), то описанная схе-
ма построения больших простых чисел имеет полиномиальную оценку
сложности. Кроме того, несмотря на отсутствие теоретических оценок
времени работы алгоритмов, отыскивающих простые числа в арифме-
тических прогрессиях со сравнительно большой разностью, на прак-
тике эти алгоритмы работают вполне удовлетворительно. На обычном
персональном компьютере без особых затрат времени строятся таким
способом простые числа порядка 10300.
Конечно, способ конструирования простых чисел для использования
в схеме RSA должен быть массовым, а сами простые числа должны
§ 6. Как проверить большое число на простоту 105
быть в каком-то смысле хорошо распределенными. Это вносит ряд до-
полнительных осложнений в работу алгоритмов. Впрочем, описанная
схема допускает массу вариаций. Все эти вопросы рассматриваются в
статье [12].
Наконец, отметим, что существуют методы построения больших про-
стых чисел, использующие не только простые делители N − 1, но и
делители чисел N +1, N2 +1, N2 ±N +1. В основе их лежит использо-
вание последовательностей целых чисел, удовлетворяющих линейным
рекуррентным уравнениям различных порядков. Отметим, что после-
довательность an, члены которой присутствуют в формулировке малой
теоремы Ферма, составляет решение рекуррентного уравнения первого
порядка un+1 = aun, u0 = 1.
§ 6. Как проверить большое число на простоту
Есть некоторое отличие в постановках задач предыдущего и насто-
ящего разделов. Когда мы строим простое число N, мы обладаем неко-
торой дополнительной информацией о нем, возникающей в процессе
построения. Например, такой информацией является знание простых
делителей числа N − 1. Эта информация иногда облегчает доказатель-
ство простоты N.
В этом разделе мы предполагаем лишь, что нам задано некоторое
число N, например, выбранное случайным образом на каком-то про-
межутке, и требуется установить его простоту, или доказать, что оно
является составным. Эту задачу за полиномиальное количество опе-
раций решает указанный в п. 4 алгоритм Миллера. Однако, справед-
ливость полученного с его помощью утверждения зависит от недока-
занной расширенной гипотезы Римана. Если число N выдержало ис-
пытания алгоритмом 5 для 100 различных значений параметра a, то,
по-видимому, можно утверждать, что оно является простым с вероят-
ностью большей, чем 1 − 4−100. Эта вероятность очень близка к еди-
нице, однако все же оставляет некоторую тень сомнения на простоте
числа N. В дальнейшем в этом разделе мы будем считать, что за-
данное число N является простым, а нам требуется лишь доказать
это.
В настоящее время известны детерминированные алгоритмы раз-
личной сложности для доказательства простоты чисел. Мы остано-
вимся подробнее на одном из них, предложенном в 1983 г. в сов-
местной работе Адлемана, Померанца и Рамели [13]. Для доказа-
тельства простоты или непростоты числа N этот алгоритм требует
(lnN)c lnlnlnN арифметических операций. Здесь c  некоторая поло-
жительная абсолютная постоянная. Функция ln ln lnN хоть и медлен-
но, но все же возрастает с ростом N, поэтому алгоритм не является
106 Гл. 4. Алгоритмические проблемы теории чисел
полиномиальным. Но все же его практические реализации позволя-
ют достаточно быстро тестировать числа на простоту. Существенные
усовершенствования и упрощения в первоначальный вариант алгорит-
ма были внесены в работах Х.Ленстры и А.Коена [14, 15]. Мы бу-
дем называть описываемый ниже алгоритм алгоритмом Коена – Лен-
стры.
В основе алгоритма лежит использование сравнений типа малой тео-
ремы Ферма, но в кольцах целых чисел круговых полей, т. е. полей, по-
рожденных над полем Q числами p = e2i/p  корнями из 1. Пусть q 
простое нечетное число и c  первообразный корень по модулю q, т. е.
образующий элемент мультипликативной группы поля Fq, которая цик-
лична. Для каждого целого числа x, не делящегося на q, можно опре-
делить его индекс, indq x ∈ Z/(q −1)Z, называемый также дискретным
логарифмом, с помощью сравнения x ≡ cindq x (mod q). Рассмотрим да-
лее два простых числа p, q с условием, что q − 1 делится на p, но не
делится на p2.
Следующая функция, определенная на множестве целых чисел,
(x) =
(
0, если q|x,
indq x
p , если (x, q) = 1
является характером по модулю q и порядок этого характера равен p.
Сумма
() = −
Xq−1
x=1
(x)x
q ∈ Z[p, q]
называется суммой Гаусса. Формулируемая ниже теорема 5 представ-
ляет собой аналог малой теоремы Ферма, используемый в алгоритме
Коена – Ленстры.
Теорема 5. Пусть N  нечетное простое число, (N, pq) = 1. Тогда в
кольце Z[p, q] выполняется сравнение
()N ≡ (N)−N · (N) (mod NZ[p, q]).
Если при каких-либо числах p, q сравнение из теоремы 3 наруша-
ется, можно утверждать, что N составное число. В противном случае,
если сравнение выполняется, оно дает некоторую информацию о воз-
можных простых делителях числа N. Собрав такую информацию для
различных p, q, в конце концов удается установить, что N имеет лишь
один простой делитель и является простым.
В случае p = 2 легко проверить, что сравнение из теоремы 5 равно-
сильно хорошо известному в элементарной теории чисел сравнению
q
N−1
2 ≡

q
N

(mod N), (13)
§ 6. Как проверить большое число на простоту 107
где

q
N

 так называемый символ Якоби. Хорошо известно, что по-
следнее сравнение выполняется не только для простых q, но и для лю-
бых целых q, взаимно простых с N. Заметим также, что для вычис-
ления символа Якоби существует быстрый алгоритм, основанный на
законе взаимности Гаусса и, в некотором смысле, подобный алгоритму
Евклида вычисления наибольшего общего делителя. Следующий при-
мер показывает, каким образом выполнимость нескольких сравнений
типа (13) дает некоторую информацию о возможных простых делите-
лях числа N.
Пример 1 (Х. Ленстра). Пусть N  натуральное число, (N, 6) = 1,
для которого выполнены сравнения
a
N−1
2 ≡

a
N

(mod N), при a = −1, 2, 3, (14)
а кроме того с некоторым целым числом b имеем
b
N−1
2 ≡ −1 (mod N). (15)
Как уже указывалось, при простом N сравнения (14) выполняются
для любого a, взаимно простого с N, а сравнение (15) означает, что b
есть первообразный корень по модулю N. Количество первообразных
корней равно '(N −1), т. е. достаточно велико. Таким образом, число b
с условием (15) при простом N может быть найдено достаточно быстро
с помощью случайного выбора и последующей проверки (15).
Докажем, что из выполнимости (14–15) следует, что каждый дели-
тель r числа N удовлетворяет одному из сравнений
r ≡ 1 (mod 24) или r ≡ N (mod 24). (16)
Не уменьшая общности, можно считать, что r  простое число. Введем
теперь обозначения N − 1 = u · 2k, r − 1 = v · 2m, где u и v  нечетные
числа. Из (15) и сравнения br−1 ≡ 1 (mod r) следует, что m > k. Далее,
согласно (14), выполняются следующие сравнения

a
N

=

a
N
v
≡ auv2k−1
(mod r),

a
r

=

a
r
u
≡ auv2m−1
(mod r),
означающие (в силу того, что символ Якоби может равняться лишь −1
или +1), что

a
N
2m−k
=

a
r

.
При m > k это равенство означает, что

a
r

= 1 при a = −1, 2, 3, и,
следовательно, r ≡ 1 (mod 24). Если же m = k, то имеем

a
N

=

a
r

и r ≡ N (mod 24). Этим (16) доказано.
108 Гл. 4. Алгоритмические проблемы теории чисел
Информация такого рода получается и в случае произвольных про-
стых чисел p и q с указанными выше свойствами.
Опишем (очень грубо) схему алгоритма Коена – Ленстры для про-
верки простоты N:
1) выбираются различные простые числа p1, . . . , pk и различные
простые нечетные q1, . . . , qs такие, что
а) для каждого j все простые делители числа qj − 1 содержатся
среди p1, . . . , pk и qj − 1 не делится на квадрат простого числа,
б) S = 2q1 · . . . · qs > √N;
2) для каждой пары выбранных чисел p, q проводятся тесты, по-
добные сравнению из теоремы 5. Если N не удовлетворяет какому-либо
из этих тестов  оно составное. В противном случае
3) определяется не очень большое множество чисел, с которыми
только и могут быть сравнимы простые делители N. А именно, каждый
простой делитель r числа N должен удовлетворять сравнению вида
r ≡ Nj (mod S), 0 6 j < T = p1 · . . . · pk;
4) проверяется, содержит ли найденное множество делители N. Ес-
ли при этом делители не обнаружены, утверждается, что N  простое
число.
Если число N составное, оно обязательно имеет простой делитель r,
меньший √N < S, который сам содержится среди возможных остатков.
Именно на этом свойстве основано применение пункта 4) алгоритма.
Пример 2. Если выбрать следующие множества простых чисел
{p} = {2, 3, 5, 7} и {q} = {3, 7, 11, 31, 43, 71, 211},
то таким способом удается проверять простоту чисел N < 8,5 · 1019.
Отметим, что в работе [13] для тестирования использовались не
сравнения теоремы 3, а закон взаимности для степенных вычетов и так
называемые суммы Якоби. Сумма Якоби
J(1, 2) = −
Xq−1
x=2
1(x)2(1 − x)
определяется для двух характеров 1, 2 по модулю q. Если характеры
имеют порядок p, то соответствующая сумма Якоби принадлежит коль-
цу Z[p]. Поскольку числа p, участвующие в алгоритме, сравнительно
невелики, то вычисления с суммами Якоби производятся в полях су-
щественно меньшей степени, чем вычисления с суммами Гаусса. Это
главная причина, по которой суммы Якоби предпочтительнее для вы-
числений. При 12 6= 0 выполняется классическое соотношение
J(1, 2) =
(1) · (2)
(1 · 2)
,
§ 6. Как проверить большое число на простоту 109
связывающее суммы Гаусса с суммами Якоби и позволяющее перепи-
сать сравнение теоремы 5 в терминах сумм Якоби (см. [16]). Так, при
p = 3 и q = 7 соответствующее сравнение, справедливое для простых N,
отличных от 2, 3, 7, принимает вид
(−3 − 2)
[N
3 ]
· (3 + 1)
[ 2N
3 ]
≡  (mod NZ[]),
где  = e2i/3 и   некоторый корень кубический из 1.
В 1984 г. в работе [15] было внесено существенное усовершенствова-
ние в алгоритм, позволившее освободиться от требования неделимости
чисел q−1 на квадраты простых чисел. В результате, например, выбрав
число T = 24 · 32 · 5 · 7 = 5040 и взяв S равным произведению простых
чисел q с условием, что T делится на q − 1, получим S > 1,5 · 1052,
что позволяет доказывать простоту чисел N, записываемых сотней де-
сятичных знаков. При этом вычисления будут проводиться в полях,
порожденных корнями из 1 степеней 16, 9, 5 и 7.
Отметим, что оценка сложности этого алгоритма представляет со-
бой трудную задачу аналитической теории чисел. Как уже указывалось,
количество операций оценивается величиной (lnN)c lnlnlnN. Однако со-
ответствующие числа S и T , возникающие в процессе доказательства,
не могут быть явно указаны в зависимости от N. Доказано лишь су-
ществование чисел S и T , для которых достигается оценка. Впрочем,
есть вероятностный вариант алгоритма, доказывающий простоту про-
стого числа N c вероятностью большей 1 − 2−k за O(k(lnN)c lnlnlnN)
арифметических операций. А в предположении расширенной гипотезы
Римана эта оценка сложности может быть получена при эффективно
указанных S и T .
Сравнительно недавно, в 2000 г., был найден детерминированный
алгоритм полиномиальной сложности, позволяющий по заданному на-
туральному числу N сказать, будут оно простым или составным. Ос-
новные его идеи были предложены индийскими математикамиM. Агра-
валом, Н. Кайалом, Н. Саксеной.
В основе алгоритма лежит сравнение (x + a)p ≡ xp + a (mod p), вы-
полняющееся при любом простом p в кольце многочленов Z[x]. Имеется
в виду, что каждый коэффициент многочлена в левой части сравним по
модулю p с соответствующим коэффициентом многочлена, стоящего в
правой части сравнения.
Пусть N  большое целое число, которое мы хотели бы проверить
на простоту. Если при каком-то целом a сравнение (x + a)N ≡ xN + a
(mod N) не выполняется, то N  составное число. Если же последнее
сравнение выполняется для многих целых чисел a, то весьма вероят-
но, что число N простое. Оказывается, что достаточно проверить это
110 Гл. 4. Алгоритмические проблемы теории чисел
сравнение для всех натуральных a, ограниченных некоторой величиной,
явно указанной в зависимости от N. Если все эти сравнения выполня-
ются, можно утверждать, что N простое число.
Обозначим буквой A  кольцо классов вычетов по модулю N. Ука-
занные выше сравнения можно записать в виде равенства (x + a)N =
xN + a, выполняющегося в кольце многочленов A[x].
Недостатком этого подхода является то, что в процессе вычисле-
ний и сравнения коэффициентов приходится работать с многочленами
очень большой степени, ведь число N может иметь очень большую ве-
личину. Выход, предложенный индийскими математиками в том, чтобы
сравнивать не сами многочлены, а их остатки при делении на некото-
рый фиксированный многочлен, имеющий не очень большую степень,
например, на многочлен xr − 1. Эти остатки для многочленов (x + a)N
и xN могут легко быть сосчитаны с помощью алгоритма, подобного ал-
горитму 1.
В описании следующего далее алгоритма участвует функция Эйле-
ра '(n). Кроме того, здесь и далее в этом параграфе log x обозначает
логарифм числа x по основанию 2.
Полиномиальный алгоритм проверки на простоту
Дано нечетное число N > 3. Требуется определить, простое оно или
составное.
1. Проверить, равно ли N степени целого числа, т.е. выяснить, верно
ли равенствоN = ab, a, b ∈ Z, b > 2. Если верно, то N  составное число.
2. Перебирая последовательно все натуральные числа, найти наи-
меньшее число r, для которого выполняется по крайней мере одно из
условий
а) (r,N) 6= 1,
б) при всех k, 1 6 k < log2 N имеем r ∤ Nk − 1.
3. Если 1 < (r,N) < N, то N составное.
4. Если (r,N) = N, то N простое.
5. Положить T = {1, 2, . . . , [
p
'(r) logN]} и проверить выполнимость
в кольце A[x] сравнений
(x + b)N ≡ xN + b (mod xr − 1), при всех b ∈ T. (17)
Если хотя бы одно из этих сравнений нарушается, то N  составное.
Если же все сравнения выполнены, то N  простое число.
Проверим сначала, что алгоритм работает корректно. Если он за-
вершает свою работу в пунктах 1 или 3, то, очевидно, его ответ верен.
Если алгоритм завершил свою работу в пункте 4, то, согласно опре-
делению числа r, для каждого k, 1 6 k < r, выполняется равенство
(k,N) = 1. Но тогда N > r и, поскольку N|r, заключаем, что r = N 
простое число. И в этом случае алгоритм дает правильный ответ.
§ 6. Как проверить большое число на простоту 111
Допустим теперь, что алгоритм завершил работу в пункте 5. Пред-
положим, что N  простое число. В этом случае все биномиальные
коэффициенты
􀀀N
k

при 1 < k < N делятся на N, так что при любом
b ∈ Z выполняется сравнение
(x + b)N = xN + b ≡ xN + b (mod xr − 1).
Значит, если хотя бы одно из сравнений (17) нарушается, можно утвер-
ждать, что N не простое, т.е. составное, число. Ответ алгоритма в этом
случае верен.
Осталось доказать, что если алгоритм дошел до пункта 5 и все срав-
нения этого пункта верны, то число N действительно простое. Это до-
казательство основано на следующей теореме.
Теорема 6. Пусть N > 3, r > 1  целые взаимно простые числа, N
не имеет простых делителей, меньших t = [
p
'(r) logN] + 1, и поря-
док N в мультипликативной группе (Z/rZ)∗ не меньше, чем log2 N.
Пусть также при любом b ∈ Z, 0 6 b < t, в кольце A[x] выполняется
сравнение
(x + b)N ≡ xN + b (mod xr − 1). (18)
Тогда N имеет единственный простой делитель, т.е. является про-
стым или степенью простого числа.
Докажем справедливость последнего утверждения из пункта 5 алгорит-
ма. Так как алгоритм прошел пункты 3, 4 и не остановился, то имеем
(r,N) = 1. Согласно определению r в пункте 2 алгоритма можно утвер-
ждать, что ordr N  порядок элемента N в мультипликативной группе
(Z/rZ)∗ удовлетворяет неравенству ordr N > log2 N. Из того же опре-
деления следует, что N не имеет простых делителей меньших r. По-
скольку r > '(r) > ordr N > log2 N, то r > √r logN >
p
'(r) logN и
r > t = [
p
'(r) logN] + 1. Таким образом, справедливость сравнений
(17) означает, что выполнены все условия теоремы 6, и по этой теоре-
ме N имеет единственный простой делитель. Так как алгоритм прошел
пункт 1, можно утверждать, что N  простое число.
Можно показать, что число r, участвующее в алгоритме, имеет по-
рядок O(log5 N), а количество битовых операций, требующихся для за-
вершения работы алгоритма есть величина порядка O(log10,5 N), что
доказывает его полиномиальность. Существенным недостатком этого
алгоритма, не позволяющим использовать его на практике, является
потребность очень большой памяти, которая имеет порядок O(log6 N)
бит, что при больших N намного превосходит память, требующуюся
алгоритму Коэна-Ленстры.
112 Гл. 4. Алгоритмические проблемы теории чисел
§ 7. Как раскладывают составные числа на
множители
Мы лишь кратко коснемся этой темы, отсылая читателей к кни-
гам [6, 16, 17]. Среди многих алгоритмов разложения мы выберем ту
линию развития, которая привела к разложению числа, предложенно-
го RSA.
Поиском эффективных способов разложения целых чисел на мно-
жители занимаются уже очень давно. Эта задача интересовала выдаю-
щихся ученых в области теории чисел. Вероятно Ферма был первый, кто
предложил представить разлагаемое число N в виде разности квадра-
тов N = x2 −y2, а затем, вычисляя (N, x−y), попытаться найти нетри-
виальный делитель N. Он же предложил и способ, позволяющий найти
требуемое представление. Если разлагаемое число имеет два не очень
отличающиеся по величине множителя, этот способ позволяет опреде-
лить их быстрее, чем простой перебор делителей. Лежандр обратил вни-
мание на то, что при таком подходе достаточно получить сравнение
x2 ≡ y2 (mod N). (19)
Конечно, не каждая пара чисел, удовлетворяющих ему, позволяет раз-
ложить N на множители. Эйлер и Гаусс предложили некоторые способы
нахождения чисел, связанных соотношением (19). Лежандр использо-
вал для этой цели непрерывные дроби.
Напомним, что каждому иррациональному числу  может быть по-
ставлена в соответствие бесконечная последовательность целых чисел
[b0; b1, b2, . . . ], называемая его непрерывной дробью. Это сопоставление
строится следующим образом
x0 = , bi = [xi], xi+1 =
1
xi − bi
, i = 0, 1, 2, . . . .
Лежандр доказал, что непрерывная дробь квадратичной иррациональ-
ности периодична. Если раскладывать в непрерывную дробь число
 = √N, то возникающие в процессе разложения числа xi имеют
вид xi =
√N + Pi
Qi
с целыми Pi,Qi, причем всегда 0 6 Pi < √N,
0 < Qi < 2√N. С каждой непрерывной дробью можно связать последо-
вательность рациональных чисел, так называемых подходящих дробей,
Ai
Bi
, i > 0, вычисляемых по правилам
Ai+1 = bi+1Ai + Ai−1, Bi+1 = bi+1Bi + Bi−1, i > 0,
A0 = b0, B0 = A−1 = 1, B−1 = 0
и стремящихся к разлагаемому числу. Если в непрерывную дробь раз-
§ 7. Как раскладывают составные числа на множители 113
лагается число  = √N, то справедливо соотношение
A2 i−1 − NB2
i−1 = (−1)iQi, (20)
из которого следует
A2 i−1 ≡ (−1)iQi (mod N). (21)
Заметим, что длина периода разложения в непрерывную дробь числа
 = √N может быть большой и достигать величин порядка √N.
В 1971 г. Шенкс предложил использовать сравнения (21) для кон-
струирования чисел, удовлетворяющих (19). Если вычисления прово-
дить до тех пор, пока при четном i не получится Qi = R2 при некотором
целом R, то пара чисел hAi−1,Ri будет удовлетворять (19) и с ее помо-
щью можно надеяться получить разложение N на простые множители.
В 1975 г. Моррисон и Бриллхарт стали перемножать сравнения (21)
при различных i с тем, чтобы таким способом получить квадрат
целого числа в правой части. Этот метод, метод непрерывных дро-
бей, позволил впервые разложить на множители седьмое число Ферма
F7 = 2128+1. Для реализации алгоритма выбирается так называемая ба-
за множителей {p1, p2, . . . , ps}. В нее входят ограниченные по величине
некоторым параметром простые числа такие, что

N
pi

= 1. Послед-
нее условие связано с тем, что, согласно (20), в разложение на простые
множители чисел Qi могут входить лишь те простые, для которых N
является квадратичным вычетом.
На первом этапе алгоритма каждое очередное число Qi делится на
все числа p1, p2, . . . , ps и, если оно не разлагается полностью в произ-
ведение степеней этих простых, то отбрасывается. Иначе получается
разложение
(−1)iQi = (−1)a0
Ys
j=1
paj
j . (22)
Этому номеру i сопоставляется вектор (a0, a1, . . . , as) (вектор показате-
лей). Затем вычисляется следующее значение Qi+1, и с ним проделыва-
ется в точности такая же процедура.
Эти вычисления проводятся до тех пор, пока не будет построено
s + 2 вектора показателей. В получившейся матрице показателей, оче-
видно, можно подобрать вектора-строки так, что их сумма будет век-
тором с четными координатами 2(b0, b1, . . . bs). Если   множество
номеров векторов, вошедших в эту сумму, то, как легко проверить с
помощью (21), имеет место сравнение


Y
i∈
Ai−1


2
≡


Ys
j=1
pbj
j


2
(mod N).
114 Гл. 4. Алгоритмические проблемы теории чисел
Если с помощью этого сравнения не удается разложить N на множи-
тели, разложение в непрерывную дробь продолжается, продолжается
набор векторов показателей и т. д.
В этот алгоритм был внесен ряд усовершенствований: вместо √N
можно раскладывать в непрерывную дробь число √kN, где малень-
кий множитель k подбирается так, чтобы в базу множителей вошли
все малые простые; была предложена так называемая стратегия ран-
него обрыва и т. д. Сложность этого алгоритма была оценена в 1982 г.
величиной O(exp(√1,5 · lnN · lnlnN)). При выводе этой оценки исполь-
зовался ряд правдоподобных, но не доказанных гипотез о распределе-
нии простых чисел. Получившаяся в оценке функция растет медленнее
любой степенной функции от N. Алгоритмы, сложность которых оце-
нивается подобным образом, получили название субэкспоненциальных
(в зависимости от lnN).
В 1982 г. Померанцом был предложен еще один субэкспоненциаль-
ный алгоритм  алгоритм квадратичного решета. Его сложность оце-
нивается такой же функцией, как и в методе непрерывных дробей, но
вместо константы 1,5 получена лучшая  9/8. Обозначим m =
h√N
i
,
Q(x) = (x + m)2 − N и выберем ту же базу множителей, что и в мето-
де непрерывных дробей. При малых целых значениях x величина Q(x)
будет сравнительно невелика. Следующий шаг объясняет название ал-
горитма  квадратичное решето. Вместо того, чтобы перебирать числа
x и раскладывать соответствующие значения Q(x) на множители, ал-
горитм сразу отсеивает негодные значения x, оставляя лишь те, для
которых Q(x) имеет делители среди элементов базы множителей.
Задав некоторую границу B, для каждого простого числа p, вхо-
дящего в базу множителей, и каждого показателя степени a, с усло-
вием pa 6 B находим решения x квадратичного сравнения Q(x) ≡
≡ 0 (mod pa). Множество решений обозначим буквой . Итак, для каж-
дого x ∈  найдется элемент базы множителей, а может быть и не один,
входящий в некоторой степени в разложение на простые сомножители
числа Q(x). Те числа x, при которых значения Q(x) оказываются полно-
стью разложенными, дают нам вектор показателей, как и в алгоритме
непрерывных дробей. Если таких векторов окажется достаточно много,
с ними можно проделать те же операции, что и в алгоритме непрерыв-
ных дробей.
Мы кратко описали здесь лишь основную идею алгоритма. Поми-
мо этого, используется много других дополнительных соображений и
различных технических приемов. Например, аналог соотношения (22)
§ 8. Дискретное логарифмирование 115
имеет вид
Q(x) = q1q2(−1)a0
Ys
j=1
paj
j (mod N). (23)
В нем допускается наличие двух дополнительных больших простых
множителей B1 < qi < B2. Эти множители впоследствии при пере-
множении значений Q(x) исключаются.
Некоторые детали реализации алгоритма можно найти в работе [6].
Отметим здесь только, что на множители раскладывалось число 5N, ба-
за множителей состояла из −1 и 524338 простых чисел, меньших, чем
B1 = 16333609. При этом было использовано B2 = 230. В результате
просеивания получилось 112011 соотношений вида (23) без множителей
qi, 1431337 соотношений с одним таким множителем и 6881138 соотно-
шений с двумя множителями. Именно на поиск всех этих соотношений
понадобились 220 дней и большое количество работавших параллельно
компьютеров. На втором шаге алгоритма, когда из соотношений (23)
комбинировались четные векторы показателей степеней, приходилось
работать с матрицами, размеры которых измерялись сотнями тысяч
битов. Этот второй шаг потребовал 45 часов работы. Уже четвертый
вектор с четными показателями привел к искомому разложению на мно-
жители.
Алгоритм квадратичного решета не самый быстрый из известных в
настоящее время. Так называемый алгоритм решета в числовых полях
при некоторых правдоподобных допущениях имеет оценку O

e(lnN)1/3(ln lnN)2/3(c+o(1))

для количества арифметических операций, где можно взять c = 3
q
64
9 .
Это асимптотически наиболее быстрый в настоящее время алгоритм. С
его помощью, например, в 2005 году было разложено на множители чис-
ло, записываемое 200 десятичными знаками и не имеющее каких-либо
особенностей.
§ 8. Дискретное логарифмирование
Пусть p  нечетное простое число. Еще Эйлер знал, что мультипли-
кативная группа кольца Z/pZ циклична, т. е. существуют такие целые
числа a, что сравнение
ax ≡ b (mod p) (24)
разрешимо относительно x при любом b ∈ Z, не делящемся на p. Числа
a с этим свойством называются первообразными корнями, и количество
их равно '(p−1), где '  функция Эйлера. Целое x, удовлетворяющее
сравнению (24), называется индексом или дискретным логарифмом чис-
ла b.
116 Гл. 4. Алгоритмические проблемы теории чисел
В параграфе 2 мы описали алгоритм, позволяющий по заданному
числу x достаточно быстро вычислять ax mod p. Обратная же опера-
ция  вычисление по заданному b его дискретного логарифма, вообще
говоря, является очень сложной в вычислительном отношении задачей.
Именно это свойство дискретного логарифма и используется в его мно-
гочисленных криптографических применениях (см. главу 1). Наиболее
быстрые (из известных) алгоритмы решения этой задачи, основанные
на так называемом методе решета числового поля, требуют выполне-
ния exp(c(ln p)1/3(ln ln p)2/3) арифметических операций (см. [25]), где
c  некоторая положительная постоянная. Это сравнимо со сложно-
стью наиболее быстрых алгоритмов разложения чисел на множители.
Конечно, указанная оценка сложности получена при условии справед-
ливости ряда достаточно правдоподобных гипотез.
Говоря о сложности задачи дискретного логарифмирования, мы име-
ли в виду ¾общий случай¿. Ведь и большое целое число легко может
быть разложено на простые сомножители, если все эти сомножители не
очень велики. Известен алгоритм, позволяющий быстро решать задачу
дискретного логарифмирования, если p − 1 есть произведение малых
простых чисел.
Пусть q  простое число, делящее p−1. Обозначим c ≡ a
p−1
q (mod p),
тогда классы вычетов 1, c, c2, . . . , cq−1 все различны и образуют полное
множество решений уравнения xq = 1 в поле Fp = Z/pZ. Если q не
велико и целое число d удовлетворяет сравнению dq ≡ 1 (mod p), то
показатель u, 0 6 u < q, для которого выполняется d ≡ cu (mod p),
легко может быть найден, например, с помощью перебора. Именно на
этом свойстве основан упомянутый выше алгоритм.
Допустим, что p − 1 = qkh, (q, h) = 1. Алгоритм последовательно
строит целые числа uj, j = 1, . . . , k, для которых выполняется сравнение
􀀀
bha−huj
qk−j
≡ 1 (mod p). (25)
Так как выполняется сравнение bhqk
≡ 1 (mod p), то найдется целое
число u1, для которого bhqk−1
≡ cu1 (mod p). При таком выборе срав-
нение (25) с j = 1, очевидно, выполняется. Предположим, что найдено
число uj , удовлетворяющее сравнению (25). Тогда определим t с помо-
щью сравнения
􀀀
bha−huj
qk−j−1
≡ ct (mod p), (26)
и положим uj+1 = uj + tqj . Имеют место сравнения
􀀀
bha−huj+1
qk−j−1
≡ cta−thqk−1
≡ 1 (mod p), (27)
означающие справедливость (25) при j + 1.
При j = k сравнение (25) означает в силу (24), что a(x−uk)h ≡
§ 8. Дискретное логарифмирование 117
≡ 1 (mod p). Целое число a есть первообразный корень по модулю p,
поэтому имеем (x − uk)h ≡ 0 (mod p − 1) и
x ≡ uk (mod qk).
Если p−1 = qk1
1 ·. . .·qks
s , где все простые числа qj малы, то указанная
процедура позволяет найти вычеты x mod qki
i , i = 1, . . . , s, и, с помощью
китайской теоремы об остатках, вычет x mod p − 1, т. е. решить сравне-
ние (24).
В случае обычных логарифмов в поле действительных чисел име-
ется специальное основание e = 2,71828 . . . , позволяющее достаточно
быстро вычислять логарифмы с произвольной точностью. Например,
это можно делать с помощью быстро сходящегося ряда
ln
1 + x
1 − x
= 2(x +
x3
3
+
x5
5
+ . . . ), |x| < 1. (28)
Логарифмы по произвольному основанию c могут быть вычислены с
помощью тождества
logc x =
ln x
ln c
. (29)
В случае дискретных логарифмов нет основания, по которому логариф-
мы вычислялись бы столь же быстро, как натуральные в поле действи-
тельных чисел. Вместе с тем, последняя формула, связывающая лога-
рифмы с различными основаниями, остается справедливой и позволяет
выбирать основание удобным способом. Единственное условие для это-
го состоит в том, чтобы логарифм нового основания Log c был взаимно
прост с p −1. Тогда в формуле (29) возможно деление по модулю p−1.
Заметим, что это условие будет выполнено, если и только если c 
первообразный корень. Из расширенной гипотезы Римана следует, что
наименьший первообразный корень по модулю p ограничен величиной
O(log6 p). Поэтому в дальнейшем для простоты изложения мы будем
предполагать, что основание a в (24) невелико, именно a = O(log6 p).
Так как поле Fp неполно, вычисление дискретных логарифмов не
может использовать предельный переход и основано на иных принци-
пах. Прежде всего, нужный дискретный логарифм Log b вычисляется не
сам по себе, а вместе с совокупностью логарифмов ряда других чисел.
Заметим, что всякое сравнение вида
qk1
1 · . . . · qks
s ≡ qm1
1 · . . . · qms
s (mod p), (30)
где qi, ki,mi ∈ Z, приводит к соотношению между логарифмами
(k1 − m1) Log q1 + · · · + (ks − ms) Log qs ≡ 0 (mod p − 1). (31)
А если выполняются сравнения
a ≡ qr1
1 · . . . · qrs
s (mod p) b ≡ qx1
1 · . . . · qxs
s (mod p),
118 Гл. 4. Алгоритмические проблемы теории чисел
то
r1 Log q1 + · · · + rs Log qs ≡ 1 (mod p − 1), (32)
и
Log b ≡ x1 Log q1 + · · · + xs Log qs (mod p − 1). (33)
Имея достаточно много векторов k1, . . . , ks, m1, . . . ,ms с условием (30),
можно найти решение соответствующей системы сравнений (31), (32).
Если эта система имеет единственное решение, то им как раз и будет
набор логарифмов Log q1, . . . , Log qs. Затем с помощью (33) можно найти
Log b.
Мы опишем ниже реализацию этой идеи, взятую из работы [18].
Эвристические соображения позволили авторам [18] утверждать, что
предложенный ими алгоритм требует L1+", где L = exp(√ln p · ln ln p),
арифметических операций для вычисления Log b.
Положим
H = [√p] + 1, J = H2 − p.
Тогда 0 < J < 2√p + 1, и, как легко проверить, для любой пары целых
чисел c1, c2 выполняется сравнение
(H + c1)(G + c2) ≡ J + (c1 + c2)H + c1c2 (mod p). (34)
Если числа ci не очень велики, скажем ci 6 L1/2+" при некотором " > 0,
то правая часть сравнения (34) не превосходит p1/2+"/2. Можно дока-
зать, что случайно выбранное натуральное число x < p1/2+"/2 раскла-
дывается в произведение простых чисел, меньших L1/2, с вероятностью
большей, чем L−1/2−"/2.
Обозначим через S = {q1, . . . , qs} совокупность всех простых чисел
q < L1/2, а также всех целых чисел вида H + c при 0 < c < L1/2+". То-
гда s = O(L1/2+"). Будем теперь перебирать случайным образом числа
и для каждой такой пары пытаться разложить на множители соответ-
ствующее выражение из правой части (34). Для разложения можно вос-
пользоваться, например, делением на все простые числа, меньшие чем
L1/2. Перебрав все 1
2
(L1/2+")2 = O(L1+2") указанных пар c1, c2, мы най-
дем, как это следует из указанных выше вероятностных соображений,
не менее
L−1/2−"/2 · O(L1+2") = O(L1/2+3"/2) (35)
пар, для которых правая часть сравнения (34) полностью расклады-
вается на простые сомножители, меньшие L1/2. Сравнение (34), таким
образом, принимает вид (30). Так строится система уравнений типа (31).
Напомним, что число a, согласно нашему предположению, суще-
ственно меньше, чем L1/2. Поэтому оно раскладывается в произведение
простых чисел, входящих в множество {q1, . . . , qs}, и это приводит к
сравнению (32).
§ 8. Дискретное логарифмирование 119
Заметим, что количество (35) найденных сравнений типа (31) пре-
восходит число s. Следовательно, построенная система неоднородных
линейных сравнений относительно Log qi содержит сравнений больше,
чем неизвестных. Конечно, множество ее решений может при этом быть
бесконечным. Одна из правдоподобных гипотез состоит в том, что си-
стема все- таки имеет единственное решение, и, решив ее, можно опреде-
лить дискретные логарифмы всех чисел qi. На этом завершается первый
этап работы алгоритма из [18].
Как было отмечено, каждое из чисел, стоящих в правой части срав-
нения (34), не превосходит p1/2+"/2. Поэтому оно раскладывается в про-
изведение не более O(ln p) простых сомножителей и, следовательно,
каждое из сравнений (31) построенной системы содержит лишь O(ln p)
отличных от нуля коэффициентов. Матрица системы сравнений будет
разреженной, что позволяет применять для ее решения специальные
методы с меньшей оценкой сложности, чем обычный гауссов метод ис-
ключения переменных.
Вместо перебора всех допустимых значений ci в [18] предлагается
использовать так называемое решето, отбрасывающее все пары этих
чисел, для которых правая часть (34) заведомо не раскладывается в
произведение малых простых сомножителей. Для каждого c1 и каждой
малой простой степени q′ < L1/2 можно найти все решения c2 < L1/2
линейного сравнения
J + (c1 + c2)H + c1c2 ≡ 0 (mod q′).
Организованная правильным образом, эта процедура одновременно от-
бирает все нужные пары чисел c1, c2 и дает разложение на простые
сомножители правых частей сравнений (34).
Итак, после первого этапа работы алгоритма в нашем распоряже-
нии оказываются дискретные логарифмы всех чисел из множества S.
Второй этап алгоритма сводит поиск дискретного логарифма числа b к
поиску логарифмов некоторого множества чисел u, не превосходящих
по величине L2. Выбирая случайным образом число w не более L1/4
раз, можно, как показывают вероятностные соображения, найти такое
w, что вычет awb mod p раскладывается в произведение простых чисел,
меньших L2. Пусть
awb ≡
Ys
i=1
qyi
i
Yt
j=1
uzj
j (mod p)
такое разложение, где u1, . . . , ut  некоторые простые числа с условием
L1/2 < u < L2. На поиск этого сравнения потребуется O(L1/2) арифме-
тических операций. В результате вычисление дискретного логарифма
числа b сводится к вычислению t дискретных логарифмов для чисел
120 Гл. 4. Алгоритмические проблемы теории чисел
uj , 1 6 j 6 t среднего размера.
Наконец, на последнем этапе производится вычисление логарифмов
всех чисел uj. Пусть u  простое число из интервала L1/2 < u < L2.
Обозначим
G =
√p
u

, I = HGu − p.
Для любых целых чисел c1, c2 < L1/2+" выполняется сравнение
(H + c1)(H + c2)u ≡ I + (c1G + c2H + c1c2)u (mod p). (36)
Отметим, что правая часть этого сравнения не превосходит p1/2L5/2+".
Просеивая все числа c1, c2 из указанного интервала, можно найти такие,
что числа G + c2 и правая часть сравнения (36) состоят из простых
сомножителей, не превосходящих L1/2. Тогда сравнение (36) позволяет
вычислить Log u. Вычисление Log b при известных уже значениях Log qi
требует L1/2+" арифметических операций.
Существуют и другие способы построения соотношений (30). В [23]
для этого используются вычисления в полях алгебраических чисел. В
качестве множителей в соотношениях типа (30) используются не только
простые числа, но и простые идеалы с небольшой нормой.
Задача вычисления дискретных логарифмов может рассматривать-
ся также и в полях Fpn, состоящих из pn элементов, в мультипликатив-
ных группах классов вычетов (Z/mZ)∗, в группах точек эллиптических
кривых и вообще в произвольных группах. С литературой по этому во-
просу можно ознакомиться по работе [19].
§ 9. Заключение
Мы затронули в этой главе лишь небольшую часть вопросов, связан-
ных с теоретико-числовыми алгоритмами и оценками их сложности.Мы
не описывали перспективные исследования, связанные с распростране-
нием алгоритмов решета на поля алгебраических чисел (решето число-
вого поля), и использование их для разложения целых чисел на мно-
жители или решения задачи дискретного логарифмирования, см. [20].
Именно с помощью этих алгоритмов достигнуты теоретические оценки
сложности разложения на множители
exp(c(lnN)1/3(ln lnN)2/3).
Не были затронуты эллиптические кривые, т. е. определенные с точно-
стью до обратимого множителя пропорциональности множества точек
Ea,b = {(x, y, z) ∈ (Z/mZ)3|y2z = x3 + axz2 + bz3},
обладающие групповой структурой. С их помощью удалось построить
весьма эффективные алгоритмы разложения чисел на множители и
проверки целых чисел на простоту. В отличие от мультипликативной
§ 9. Заключение 121
группы (Z/mZ)∗ порядок группы Ea,b при одном и том же m меняется
в зависимости от целых параметров a, b. Это оказывается весьма су-
щественным, например, при разложении чисел m на множители. Мы
отсылаем читателей за подробностями использования эллиптических
кривых к статье [21].
Литература к главе 4
[1] Rivest R. L., Shamir A., Adleman L. A method for obtaining digital
signatures and public key cryptosystems // Commun. ACM. V.21, No
2, 1978. P. 120–126.
[2] Gardner M. A new kind of cipher that would take millions of years to
break // Sci. Amer. 1977. P. 120–124.
[3] Виноградов И. М. Основы теории чисел. М.: Наука, 1972.
[4] Карацуба А. А. Основы аналитической теории чисел. М.: Наука,
1983 г.
[5] Atkins D., Graff M., Lenstra A. K. and Leyland P. C. The magic words
are squeamish ossifrage // ASIACRYPT–94, Lect. Notes in Comput.
Sci. V. 917. Springer, 1995.
[6] Кнут Д. Искусство программирования на ЭВМ. Т.2: Получислен-
ные алгоритмы. М.: Мир, 1977.
[7] Ахо А., Хопкрофт Дж., Ульман Дж. Построение и анализ вычис-
лительных алгоритмов. М.: Мир, 1979.
[8] Williams H. C. Primality testing on a computer // Ars Combin.,
5, 1978. P. 127–185. (Русский перевод: Кибернетический сборник,
вып. 23, 1986. С. 51–99.)
[9] Василенко О. Н. Современные способы проверки простоты чисел //
Кибернетический сборник, вып. 25, 1988. С. 162–188.
[10] Alford W. R., Granville A., Pomerance C. There are infinitely many
Carmichael numbers // Ann. Math. 140, 1994. P. 703–722.
[11] Прахар К. Распределение простых чисел. М.: Мир, 1967.
[12] Plaisted D. A. Fast verification, testing, and generation of large
primes // Theor. Comp. Sci. 9, 1979. P. 1–16.
[13] Adleman L. M., Pomerance C., Rumely R. S. On distinguishing prime
numbers from composite numbers // Annals ofMath. 117, 1983. P. 173–
206.
[14] Lenstra H. W. (jr.) Primality testing algorithms (after Adleman,
Rumely and Williams) // Lecture Notes in Math. V. 901, 1981. P. 243–
257.
[15] Cohen H., Lenstra H. W. (jr.) Primality testing and Jacobi sums //
Math. of Comput. V. 42, №165, 1984. P. 297–330.
122 Гл. 4. Алгоритмические проблемы теории чисел
[16] Riesel H. Prime numbers and computer methods for factorization.
Birkhauser, 1985.
[17] Cohen H. A course in computational algebraic number theory. GraduateTexts
in Math. V. 138. New York, Springer, 1993.
[18] Coppersmith D., Odlyzko A. M., Schroeppel R. Discrete logarithms in
GF(p) // Algorithmica. V. 1, 1986. P. 1–15.
[19] McCurley K. S. The discrete logarithm problem // Proc. of Symp. in
Appl. Math. V. 42, 1990. P. 49–74.
[20] Lenstra A. K., Lenstra H. W., Manasse M. S., Pollard J. M. The number
field sieve // Proc. 22nd Ann. ACMSymp. on Theory of Computing.
Baltimore, May 14–16, 1990. P. 564–572.
[21] Lenstra H. W. (jr.) Elliptic curves and number-theoretic algorithms //
ICM86. P. 99–120. (Русский перевод: Международный конгресс ма-
тематиков в Беркли, М.: Мир, 1991, С. 164–193.)
[22] Koblitz N. A Course in Number Theory and Cryptography. 2nd ed.
Springer, 1994.
[23] Lenstra A. K., Lenstra H. W. (jr.) The Development of the Number
Field Sieve. Lect. Notes in Math. V. 1554. Springer, 1993.
[24] Ben-Or M. Probabilistic algorithms in finite fields. Proc. 22 IEEE
Symp. Found. Comp. Sci, 1981. P. 394–398.
[25] Gordon D.M. Discrete logarithms in GF(p), using the number field
sieve. SIAM J. Disc. Math. V.6, №1, 1993. P. 124–138.
Глава 5
Математика разделения секрета
§ 1. Введение
Рассмотрим следующую, в наше время вполне реальную ситуацию.
Два совладельца драгоценности хотят положить ее на хранение в сейф.
Сейф современный, с цифровым замком на 16 цифр. Так как совладель-
цы не доверяют друг другу, то они хотят закрыть сейф таким образом,
чтобы они могли открыть его вместе, но никак не порознь. Для это-
го они приглашают третье лицо, называемое дилером, которому они
оба доверяют (например, потому что оно не получит больше доступ к
сейфу). Дилер случайно выбирает 16 цифр в качестве ¾ключа¿, чтобы
закрыть сейф, и затем сообщает первому совладельцу втайне от второго
первые 8 цифр ¾ключа¿, а второму совладельцу втайне от первого  по-
следние 8 цифр ¾ключа¿. Такой способ представляется с точки здравого
смысла оптимальным, ведь каждый из совладельцев получил ¾полклю-
ча¿ и что может быть лучше?! Недостатком данного примера является
то, что любой из совладельцев, оставшись наедине с сейфом, может
за пару минут найти недостающие ¾полключа¿ с помощью несложного
устройства, перебирающего ключи со скоростью 1МГц. Кажется, что
единственный выход  в увеличении размера ¾ключа¿, скажем, вдвое.
Но есть другой, математический выход, опровергающий (в данном слу-
чае  к счастью) соображения здравого смысла. А именно, дилер неза-
висимо выбирает две случайные последовательности по 16 цифр в каж-
дой, сообщает каждому из совладельцев втайне от другого ¾его¿ после-
довательность, а в качестве ¾ключа¿, чтобы закрыть сейф, использует
последовательность, полученную сложением по модулю 10 соответству-
ющих цифр двух выбранных последовательностей. Довольно очевидно
(и ниже мы это докажем), что для каждого из совладельцев все 1016
возможных ¾ключей¿ одинаково вероятны и остается только переби-
рать их, что потребует в среднем более полутора лет для устройства,
перебирающего ключи со скоростью 100МГц.
И с математической, и с практической точки зрения неинтересно
останавливаться на случае двух участников и следует рассмотреть об-
124 Гл. 5. Математика разделения секрета
щую ситуацию. Неформально говоря, ¾схема, разделяющая секрет¿
(СРС) позволяет ¾распределить¿ секрет между n участниками таким
образом, чтобы заранее заданные разрешенные множества участников
могли однозначно восстановить секрет (совокупность этих множеств
называется структурой доступа), а неразрешенные  не получали ника-
кой дополнительной к имеющейся априорной информации о возможном
значении секрета. СРС с последним свойством называются совершен-
ными (и только они, как правило, рассматриваются в этой главе).
История СРС начинается с 1979 года, когда эта проблема была по-
ставлена и во многом решена Г. Блейкли [1] и А. Шамиром [2] для слу-
чая пороговых (n, k)-СРС (т. е. разрешенными множествами являются
любые множества из k или более элементов). Особый интерес вызвали
так называемые идеальные СРС, т. е. такие, где ¾размер¿ информации,
предоставляемой участнику, не больше ¾размера¿ секрета (а меньше,
как было показано, он и не может быть). Оказалось [3], что любой та-
кой СРС соответствует матроид (определение, что это такое, см. в п. 4)
и, следовательно, не для любой структуры доступа возможно идеальное
разделение секрета. С другой стороны, было показано, что для любо-
го набора разрешенных множеств можно построить совершенную СРС,
однако известные построения весьма ¾неэкономны¿. В данной главе рас-
сматриваются алгебро-геометрические и комбинаторные задачи, возни-
кающие при математическом анализе ¾схем, разделяющих секрет¿. Вот
пример одной из таких задач.
Будем говорить, что семейство подпространств {L0, . . . ,Ln} конеч-
номерного векторного пространства L над полем K удовлетворяет свой-
ству ¾все или ничего¿, если для любого множества A ⊂ {1, . . . , n} ли-
нейная оболочка подпространств {La : a ∈ A} либо содержит подпро-
странство L0 целиком, либо пересекается с ним только по вектору 0.
В п. 3 мы увидим, что такое семейство задает ¾линейную¿ СРС, у ко-
торой множество A ⊂ {1, . . . , n} является разрешенным, если и только
если линейная оболочка подпространств {La : a ∈ A} содержит под-
пространство L0 целиком. В связи с этим понятием возникает ряд во-
просов. Например, если поле K конечно (|K| = q) и все подпростран-
ства {L0, . . . ,Ln} одномерны, то каково максимально возможное число
участников n для линейных пороговых (n, k)-СРС (k > 1)? Иначе гово-
ря, каково максимально возможное число векторов {h0, . . . , hn} таких,
что любые k векторов, содержащие вектор h0, линейно независимы, а
любые k + 1 векторов, содержащие вектор h0, линейно зависимы. Ока-
зывается, что это свойство эквивалентно следующему, на первый взгляд
более сильному, свойству: любые k векторов линейно независимы, а лю-
бые k+1  линейно зависимы. Такие системы векторов изучались в гео-
метрии как N-множества (N = n + 1) в конечной проективной геомет-
рии PG(k − 1, q), в комбинаторике как ортогональные таблицы силы k
§ 2. Разделение секрета для произвольных структур доступа 125
и индекса  = 1, в теории кодирования как проверочные матрицы МДР
кодов (подробнее см. [4]). В п. 3 мы приведем известную конструкцию
таких множеств с N = q +1, а довольно старая гипотеза состоит в том,
что это и есть максимально возможное N, за исключением двух случа-
ев: случая q < k, когда N = k +1, и случая q = 2m, k = 3 или k = q −1,
когда N = q + 2.
§ 2. Разделение секрета для произвольных структур
доступа
Начнем с формальной математической модели. Имеется n+1 множе-
ство S0, S1, . . . , Sn и (совместное) распределение вероятностей P на их
декартовом произведении S = S0×· · ·×Sn. Соответствующие случайные
величины обозначаются через Si. Имеется также некоторое множество
􀀀 подмножеств множества {1, . . . , n}, называемое структурой доступа.
Определение 1. Пара (P, S) называется совершенной вероятностной
СРС, реализующей структуру доступа 􀀀, если
P(S0 = c0 | Si = ci, i ∈ A) ∈ {0, 1} для A ∈ 􀀀, (1)
P(S0 = c0 | Si = ci, i ∈ A) = P(S0 = c0) для A /∈ 􀀀. (2)
Это определение можно истолковать следующим образом. Имеется
множество S0 всех возможных секретов, из которого секрет s0 выби-
рается с вероятностью p(s0), и имеется СРС, которая ¾распределяет¿
секрет s0 между n участниками, посылая ¾проекции¿ s1, . . . , sn секре-
та с вероятностью Ps0 (s1, . . . , sn). Отметим, что i-й участник получает
свою ¾проекцию¿ si ∈ Si и не имеет информации о значениях других
¾проекций¿, однако знает все множества Si, а также оба распределения
вероятностей p(s0) и Ps0 (s1, . . . , sn). Эти два распределения могут быть
эквивалентно заменены на одно: P(s0, s1, . . . , sn) = p(s0)Ps0 (s1, . . . , sn),
что и было сделано выше. Цель СРС, как указывалось во введении, со-
стоит в том, чтобы:
а) участники из разрешенного множества A (т. е. A ∈ 􀀀) вместе
могли бы однозначно восстановить значение секрета  это отражено в
свойстве (1);
б) участники, образующие неразрешенное множество A (A /∈ 􀀀), не
могли бы получить дополнительную информацию об s0, т. е., чтобы ве-
роятность того, что значение секрета S0 = c0, не зависела от значений
¾проекций¿ Si при i ∈ A  это свойство (2).
Замечание о терминологии. В англоязычной литературе для обо-
значения ¾порции¿ информации, посылаемой участнику СРС, были
введены термины ¾share¿ (А. Шамир) и ¾shadow¿ (Г. Блейкли). Пер-
вый термин оказался наиболее популярным и автор долго боролся с со-
блазном привлечь массового читателя, постоянно используя в качестве
126 Гл. 5. Математика разделения секрета
его перевода слово ¾акция¿. Неадекватная (во всех смыслах) замена
¾акции¿ на ¾проекцию¿ может быть несколько оправдана следующим
примером.
Пример 1. Множество S0 всех возможных секретов состоит из 0, 1
и 2, ¾представленных¿ соответственно: шаром; кубом, ребра которого
параллельны осям координат; цилиндром, образующие которого парал-
лельны оси Z. При этом диаметры шара и основания цилиндра, и длины
ребра куба и образующей цилиндра, равны. Первый участник получает
в качестве своей ¾доли¿ секрета его проекцию на плоскость XY , а вто-
рой  на плоскость XZ. Ясно, что вместе они однозначно восстановят
секрет, а порознь  не могут. Однако, эта СРС не является совершен-
ной, так как любой из участников получает информацию о секрете,
оставляя только два значения секрета как возможные при данной про-
екции (например, если проекция  квадрат, то шар невозможен).
Еще одно замечание. Элемент (участник) x ∈ {1, . . . , n} называ-
ется несущественным (относительно 􀀀), если для любого неразрешенно-
го множества A множество A ∪ x также неразрешенное. Очевидно, что
несущественные участники настолько несущественны для разделения
секрета, что им просто не нужно посылать никакой информации. По-
этому далее, без ограничения общности, рассматриваются только такие
структуры доступа 􀀀, для которых все элементы являются существен-
ными. Кроме того, естественно предполагать, что 􀀀 является монотон-
ной структурой, т. е. из A ⊂ B,A ∈ 􀀀 следует B ∈ 􀀀.
Пример 2. Рассмотрим простейшую структуру доступа  (n, n)-поро-
говую схему, т. е. все участники вместе могут восстановить секрет, а
любое подмножество участников не может получить дополнительной
информации о секрете. Будем строить идеальную СРС, выбирая и сек-
рет, и его проекции из группы Zq вычетов по модулю q, т. е. S0 = S1 =
= . . . = Sn = Zq. Дилер генерирует n − 1 независимых равномерно
распределенных на Zq случайных величин xi и посылает i-му участни-
ку (i = 1, . . . , n−1) его ¾проекцию¿ si = xi, а n-му участнику посылает
sn = s0 − (s1 + · · · + sn−1). Кажущееся ¾неравноправие¿ n-ого участ-
ника тут же исчезает, если мы выпишем распределение Ps0 (s1, . . . , sn),
которое очевидно равно 1/qn−1, если s0 = s1 + · · · + sn, и равно 0  в
остальных случаях. Теперь легко проверяется и свойство (2), означаю-
щее в данном случае независимость случайной величины S0 от случай-
ных величин {Si : i ∈ A} при любом собственном подмножестве A.
Данное выше определение СРС, оперирующее словами ¾распреде-
ление вероятностей¿, ниже переведено, почти без потери общности, на
комбинаторный язык, который представляется автору более простым
для понимания. Произвольная M × (n + 1)-матрица V , строки которой
имеют вид v = (v0, v1, . . . , vn), где vi ∈ Si, называется матрицей ком-
§ 2. Разделение секрета для произвольных структур доступа 127
бинаторной СРС, а ее строки  ¾правилами¿ распределения секрета.
Для заданного значения секрета s0 дилер СРС случайно и равноверо-
ятно выбирает строку v из тех строк матрицы V , для которых значение
нулевой координаты равно s0.
Определение 2. Матрица V задает совершенную комбинаторную
СРС, реализующую структуру доступа 􀀀, если, во-первых, для лю-
бого множества A ∈ 􀀀 нулевая координата любой строки матрицы V
однозначно определяется значениями ее координат из множества A, и,
во-вторых, для любого множества A /∈ 􀀀 и любых заданных значений
координат из множества A число строк матрицы V с данным значени-
ем  нулевой координаты не зависит от .
Сопоставим совершенной вероятностной СРС, задаваемой парой
(P, S), матрицу V, состоящую из строк s ∈ S, таких что P(s) > 0.
Заметим, что если в определении 1 положить все ненулевые значения
P одинаковыми, а условия (1) и (2) переформулировать на комбинатор-
ном языке, то получится определение 2. Это комбинаторное определе-
ние несколько обобщается, если допустить в матрице V повторяющиеся
строки, что эквивалентно вероятностному определению 1, когда значе-
ния вероятностей P(s)  рациональные числа.
Пример 2 (продолжение). Переформулируем данную выше конст-
рукцию (n, n)-пороговой СРС на комбинаторном языке. Строками мат-
рицы V являются все векторы s такие, что −s0 + s1 + · · · + sn = 0.
Очевидно, что матрица V задает совершенную комбинаторную СРС
для 􀀀 = {1, . . . , n}, так как для любого собственного подмножества
A ⊂ {1, . . . , n} и любых заданных значений координат из множества
A число строк матрицы V с данным значением нулевой координаты
равно qn−1−|A|.
Удивительно, но простой схемы примера 2 оказывается достаточно,
чтобы из нее, как из кирпичиков, построить совершенную СРС для про-
извольной структуры доступа. А именно, для всех разрешенных мно-
жеств, т. е. для A ∈ 􀀀, независимо реализуем описанную только что
пороговую (|A|, |A|)-СРС, послав тем самым i-му участнику столько
¾проекций¿ sAi
, скольким разрешенным множествам он принадлежит.
Это словесное описание несложно перевести на комбинаторный язык
свойств матрицы V и убедиться, что эта СРС совершенна. Как это ча-
сто бывает, ¾совершенная¿ не значит ¾экономная¿, и у данной СРС
размер ¾проекции¿ оказывается, как правило, во много раз больше,
чем размер секрета. Эту схему можно сделать более экономной, так
как достаточно реализовать пороговые (|A|, |A|)-СРС только для ми-
нимальных разрешенных множеств A, т. е. для A ∈ 􀀀min, где 􀀀min 
совокупность минимальных (относительно включения) множеств из 􀀀.
Тем не менее, для пороговой (n, n/2)-СРС размер ¾проекции¿ (измерен-
128 Гл. 5. Математика разделения секрета
ный, например, в битах) будет в Cn/2
n ∼ 2n/√2n раз больше размера
секрета (это наихудший случай для рассматриваемой конструкции). С
другой стороны, как мы убедимся чуть позже, любая пороговая струк-
тура доступа может быть реализована идеально, т. е. при совпадающих
размерах ¾проекции¿ и секрета. Поэтому естественно возникает вопрос
о том, каково максимально возможное превышение размера ¾проекции¿
над размером секрета для наихудшей структуры доступа при наилуч-
шей реализации. Формально, R(n) = maxR(􀀀), где max берется по всем
структурам доступа 􀀀 на n участниках, а R(􀀀) = minmax log |Si|
log |S0| , где
min берется по всем СРС, реализующим данную структуру доступа 􀀀,
а max  по i = 1, . . . , n. Приведенная конструкция показывает, что
R(n) 6 Cn/2
n . С другой стороны, как было доказано лишь недавно [5],
R(n) > n/ log n. Такая огромная ¾щель¿ между верхней и нижней оцен-
кой дает, по нашему мнению, достаточный простор для исследований
(автор предполагает, что R(n) растет экспоненциально от n).
§ 3. Линейное разделение секрета.
Начнем с предложенной А. Шамиром [2] элегантной схемы разде-
ления секрета для пороговых структур доступа. Пусть K = GF(q)
конечное поле из q элементов (например, q = p  простое число и
K = Zp) и q > n. Сопоставим участникам n различных ненулевых
элементов поля {a1, . . . , an} и положим a0 = 0. При распределении сек-
рета s0 дилер СРС генерирует k − 1 независимых равномерно распре-
деленных на GF(q) случайных величин fj (j = 1, . . . , k − 1) и посыла-
ет i-му участнику (i = 1, . . . , n) ¾его¿ значение si = f(ai) многочлена
f(x) = f0 + f1x + · · · + fk−1xk−1, где f0 = s0. Поскольку любой мно-
гочлен степени k − 1 однозначно восстанавливается по его значениям
в произвольных k точках (например, по интерполяционной формуле
Лагранжа), то любые k участников вместе могут восстановить много-
член f(x) и, следовательно, найти значение секрета как s0 = f(0). По
этой же причине для любых k − 1 участников, любых полученных ими
значений проекций si и любого значения секрета s0 существует ровно
один ¾соответствующий¿ им многочлен, т. е. такой, что si = f(ai) и
s0 = f(0). Следовательно, эта схема является совершенной в соответ-
ствии с определением 2. ¾Линейность¿ данной схемы становится ясна,
если записать ¾разделение секрета¿ в векторно-матричном виде:
s = fH, (3)
где s = (s0, . . . , sn), f = (f0, . . . , fk−1), k × (n + 1)-матрица H = (hij) =
= (aj−1
i ) и h00 = 1. Заметим, что любые k столбцов этой матрицы ли-
нейно независимы, а максимально возможное число столбцов матрицы
H равно q, и чтобы добиться обещанного в п. 1 значения q + 1 надо
§ 3. Линейное разделение секрета. 129
добавить столбец, соответствующий точке ¾бесконечность¿.
Упражнение. Придумайте сами, как это сделать.
Возьмем в (3) в качестве H произвольную r×(n+1)-матрицу с эле-
ментами из поля K. Получаемую СРС будем называть одномерной ли-
нейной СРС. Она является совершенной комбинаторной СРС со струк-
турой доступа 􀀀, состоящей из множеств A таких, что вектор h0 пред-
ставим в виде линейной комбинации векторов {hj : j ∈ A}, где hj
это j-ый столбец матрицы H. Строками матрицы V , соответствующей
данной СРС являются, как видно из (3), линейные комбинации строк
матрицы H. Перепишем (3) в следующем виде
sj = (f , hj) для j = 0, 1, . . . , n,
где (f , hj)  скалярное произведение векторов f и hj . Если A ∈ 􀀀, т. е.
если h0 =
P
jhj , то
s0 = (f , h0) = (f ,
X
jhj) =
X
j(f , hj) =
X
jsj
и, следовательно, значение секрета однозначно находится по его ¾про-
екциям¿. Рассмотрим теперь случай, когда вектор h0 не представим в
виде линейной комбинации векторов {hj : j ∈ A}. Нам нужно показать,
что в этом случае для любых заданных значений координат из множест-
ва A число строк матрицы V с данным значением нулевой координаты
не зависит от этого значения. В этом нетрудно убедиться, рассмотрев
(3) как систему линейных уравнений относительно неизвестных fi и
воспользовавшись тем, что система совместна тогда и только тогда, ко-
гда ранг матрицы коэффициентов равен рангу расширенной матрицы, а
число решений у совместных систем одинаково и равно числу решений
однородной системы.
Указание. Рассмотрите две системы: без ¾нулевого¿ уравнения
(т. е. со свободным членом) и с ним. Так как вектор h0 не представим
в виде линейной комбинации векторов {hj : j ∈ A}, то ранг матрицы
коэффициентов второй системы на 1 больше ранга матрицы коэффи-
циентов первой системы. Отсюда немедленно следует, что если первая
система совместна, то совместна и вторая при любом s0.
Эта конструкция подводит нас к определению общей линейной СРС.
Пусть секрет и его ¾проекции¿ представляются как конечномерные век-
торы si = (s1i
, . . . , smi
i ) и генерируются по формуле si = fHi, где Hi 
некоторые r × mi-матрицы. Сопоставим каждой матрице Hi линейное
пространство Li ее столбцов (т. е. состоящее из всех линейных комбина-
ций вектор-столбцов матрицы Hi). Несложные рассуждения, аналогич-
ные приведенным выше для одномерного случая (все mi = 1), показы-
вают, что данная конструкция дает совершенную СРС тогда и только
тогда, когда семейство линейных подпространств {L0, . . . ,Ln} конеч-
номерного векторного пространства Kr удовлетворяет упомянутому во
130 Гл. 5. Математика разделения секрета
введении свойству ¾все или ничего¿. При этом множество A является
разрешенным (A ∈ 􀀀), если и только если линейная оболочка подпро-
странств {La : a ∈ A} содержит подпространство L0 целиком. С другой
стороны, множество A является неразрешенным (A /∈ 􀀀), если и только
если линейная оболочка подпространств {La : a ∈ A} пересекается с
подпространством L0 только по вектору 0. Отметим, что если бы для
некоторого A пересечение L0 и линейной оболочки {La : a ∈ A} было
нетривиальным, то участники A не могли бы восстановить секрет од-
нозначно, но получали бы некоторую информацию о нем, т. е. схема не
была бы совершенной.
Пример 3. Рассмотрим следующую структуру доступа для случая че-
тырех участников, задаваемую 􀀀min = {{1, 2}, {2, 3}, {3, 4}}.Она извест-
на как первый построенный пример структуры доступа, для которой не
существует идеальной реализации. Более того, было доказано, что для
любой ее совершенной реализации R(􀀀) > 3/2. С другой стороны, непо-
средственная проверка показывает, что выбор матриц H0,H1, . . . ,H4,
приведенных в табл. 1, дает совершенную линейную СРС с R = 3/2,
реализующую эту структуру, которая, следовательно, является и опти-
мальной (наиболее экономной) СРС.
Таблица 1.
H0 =


1 0
0 1
0 0
0 0
0 0
0 0


, H1 =


0 0
0 0
1 0
0 1
0 0
0 0


, H2 =


1 0 0
0 1 0
1 0 0
0 1 0
0 0 1
0 0 0


, H3 =


0 0 1
0 0 0
0 0 0
0 1 0
0 0 1
1 0 0


, H4 =


0 0
0 1
0 0
0 0
1 0
0 1


.
§ 4. Идеальное разделение секрета и матроиды
Начнем с определения идеальных СРС. Для этого вернемся к ком-
бинаторному определению совершенной СРС. Следующее определение
совершенной СРС [3] является даже более общим, чем вероятностное
определение 1, поскольку условие (2) заменено в нем на более сла-
бое.
Для произвольного множества B ⊆ {0, 1, . . . , n} обозначим через VB
M × |B|-матрицу, полученную из матрицы V удалением столбцов,
номера которых не принадлежат множеству B. Пусть ||W|| обозначает
число различных строк в матрице W.
§ 4. Идеальное разделение секрета и матроиды 131
Определение 3. Матрица V задает БД-совершенную СРС, реализу-
ющую структуру доступа 􀀀, если
||VA∪0|| = ||VA|| × ||V0||􀀀(A), (4)
где 􀀀(A) = 0, если A ∈ 􀀀, и 􀀀(A) = 1 в противном случае.
Это определение отличается от определений 1 и 2 тем, что на нераз-
решенные множества A накладывается довольно слабое условие, а имен-
но, если множество строк V с данными значениями координат из мно-
жества A непусто, то все возможные значения секрета встречаются в
нулевой координате этих строк (без требований ¾одинаково часто¿ как
в комбинаторном определении 2 или же ¾с априорной вероятностью¿
как в вероятностном определении 1). Легко видеть, что матрица лю-
бой совершенной вероятностной СРС задает БД-совершенную СРС, но
обратное неверно.
Для произвольной комбинаторной СРС, задаваемой матрицей V ,
определим на множествах A ⊆ {0, 1, . . . , n} функцию h(A) = logq ||VA||,
где q = |S0|. Легко проверить, что max{h(A), h(B)} 6 h(A ∪ B) 6
6 h(A) + h(B) для любых множеств A и B, а условие (4) может быть
переписано в виде
hq(VA∪0) = hq(VA) + 􀀀(A)hq(V0),
Лемма. Для любой БД-совершенной СРС если A /∈ 􀀀 и {A ∪ i} ∈ 􀀀,
то h(i) > h(0).
Доказательство. По условиям леммы h(A ∪ 0) = h(A) + h(0) и
h(A ∪ i ∪ 0) = h(A ∪ i). Следовательно,
h(A) + h(i) > h(A ∪ i) = h(A ∪ i ∪ 0) > h(A ∪ 0) = h(A) + h(0). 
Так как мы предполагаем, что все точки i ∈ {1, . . . , n} существенные,
т. е. для любого i найдется подмножество A такое, что A /∈ 􀀀 и {A∪i} ∈ 􀀀, то из леммы вытекает
Следствие. Для любой БД-совершенной СРС |Si| > |S0| для всех i =
= 1, . . . , n.
Следствие означает, как мы и предупреждали в начале статьи, что
для совершенных СРС ¾размер¿ проекции не может быть меньше ¾раз-
мера¿ секрета. Поэтому БД-совершенная СРС называется идеальной,
если |Si| = |S0| для всех i = 1, . . . , n.
Замечание. Неравенство |Si| > |S0| справедливо и для совершенных
вероятностных СРС, поскольку их матрицы задают БД-совершенные
СРС.
Естественный вопрос состоит в том, для каких структур доступа 􀀀
существуют реализующие их идеальные (вероятностные или комбина-
торные) СРС. Как уже отмечалось во введении, наилучший на сего-
дняшний день ответ использует слово ¾матроид¿. Напомним определе-
ние матроидов и некоторые их основные свойства (см. [6]).
132 Гл. 5. Математика разделения секрета
Матроидом называется конечное множество X и семейство I его
подмножеств, называемых независимыми (остальные множества назы-
ваются зависимыми), если выполнены следующие свойства:
∅ ∈ I; (5.1)
Если A ∈ I и B ⊂ A, то B ∈ I; (5.2)
Если A,B ∈ I и |A| = |B| + 1,
то существует a ∈ A\B такое, что a ∪ B ∈ I. (5.3)
Пример 4. Множество X  это множество векторов в некотором ли-
нейном векторном пространстве, а независимые подмножества  это
линейно независимые подмножества векторов.
Собственно с этого примера и началась теория матроидов, вначале
как попытка дать аксиоматическое определение линейной независимо-
сти векторов через ¾внутренние свойства¿, т. е. не апеллируя к понятию
вектора. К счастью, попытка не удалась, так как нашлись матроиды, не
представимые как линейные (т. е. как системы векторов), а сама теория
матроидов разрослась далеко за пределы ¾линейной алгебры¿ (см. [6]).
Пример 5 (матроид Вамоса). Рассмотрим следующее множество:
X = {1, 2, 3, 4, 5, 6, 7, 8} и положим a = {1, 2}, b = {3, 4}, c = {5, 6} и d = {7, 8}. Матроид Вамоса определяется как матроид, в котором
множества a ∪ c, a ∪ d, b ∪ c, b ∪ d, c ∪ d, а также все подмножества из
пяти или более элементов являются зависимыми. Известно, что этот
матроид не является линейным.
Матроид также можно определить через так называемую ранговую
функцию r(A) матроида, определяемую как максимальная мощность
независимого подмножества B ⊆ A. Очевидно, что независимые множе-
ства (и только они) задаются условием r(A) = |A|. Ранговая функция
матроида обладает свойствами
r(A) ∈ Z, r(∅) = 0; (6.1)
r(A) 6 r(A ∪ b) 6 r(A) + 1; (6.2)
Если r(A ∪ b) = r(A ∪ c) = r(A), то r(A ∪ b ∪ c) = r(A). (6.3)
Обратно, пусть некоторая функция r(A) обладает свойствами (6).
Назовем независимыми те множества A, для которых r(A) = |A|. То-
гда эти множества задают матроид, а функция r является его ранговой
функцией. Возможно также определить матроид через минимальные
зависимые множества, называемые циклами. Матроид называется связ-
ным, если для любых двух его точек существует содержащий их цикл.
Теперь мы можем сформулировать основной результат.
Теорема ([3]). Для любой БД-совершенной идеальной СРС, реализу-
ющей структуру доступа 􀀀, независимые множества, определяемые
условием log|S0| ||VA|| = |A|, задают связный матроид на множестве
§ 4. Идеальное разделение секрета и матроиды 133
{0, 1, . . . , n}. Все циклы этого матроида, содержащие точку 0, имеют
вид 0 ∪ A, где A ∈ 􀀀min.
Главным в доказательстве теоремы является ¾проверка¿ целочис-
ленности функции h(A). В самом деле, h(·) очевидно обладает осталь-
ными свойствами (6) и, следовательно, при условии целочисленности
является ранговой функцией и задает матроид. Доказательство этой
теоремы и несколько более общих утверждений можно найти в [7].
Отметим, что из второй части утверждения теоремы следует, что
разным идеальным СРС, реализующим данную структуру доступа 􀀀,
всегда соответствует один и тот же матроид, поскольку матроид одно-
значно определяется всеми циклами, проходящими через фиксирован-
ную точку (см. [6]). Тем самым, каждой идеально реализуемой струк-
туре доступа соответствует однозначно определенный матроид.
В связи с теоремой возникает несколько естественных вопросов.
Прежде всего, не порождают ли идеальные СРС все матроиды? Нет,
например, матроид Вамоса не может быть получен как матроид иде-
альной СРС [8]. С другой стороны, линейные матроиды есть ни что
иное как рассмотренные в п. 3 идеальные одномерные линейные СРС.
В связи с этим возникает вопрос о существовании структуры доступа
􀀀, которую невозможно реализовать в виде идеальной одномерной ли-
нейной СРС, но можно в виде идеальной многомерной линейной СРС.
Недавно такой пример был построен [9], и, значит, мы можем говорить о
многомерных линейных матроидах как классе матроидов более общем,
чем линейные.
Итак, идеальных СРС больше, чем линейных матроидов, но мень-
ше, чем всех матроидов. Уточнить, ¾насколько больше¿, представляется
довольно сложной задачей. В частности, существует ли идеально реа-
лизуемая структура доступа 􀀀, которую невозможно реализовать как
идеальную линейную многомерную СРС?
Литература к главе 5
[1] Blakley G. R. Safeguarding cryptographic keys // Proc. AFIPS 1979
National Computer Conference. V. 48. N. Y., 1979. P. 313–317.
[2] Shamir A. How to Share a Secret // Comm. ACM. V. 22, No 1, 1979.
P. 612–613.
[3] Brickell E. F., Davenport D. M. On the classification of Ideal Secret
Sharing Schemes. // J. Cryptology. V. 4, 1991. P. 123–134.
[4] Мак-Вильямс Ф. Дж., Слоэн Н. Дж. А. Теория кодов, исправля-
ющих ошибки. М.: Связь, 1979.
[5] Csirmaz L. The size of a share must be large // J. Cryptology. V. 10,
No 4, 1997. P. 223–232.
134 Гл. 5. Математика разделения секрета
[6] Welsh D. J. A. Matroid Theory. Academic Press, 1976.
[7] Блейкли Г. Р., Кабатянский Г. А. Обобщенные идеальные схемы,
разделяющие секрет, и матроиды // Проблемы передачи информа-
ции. Т. 33, вып. 3, 1997. С. 102–110.
[8] Seymour P. O. On Secret-Sharing Matroids. // J. Comb. Theory.
Ser. B. V. 56, 1992. P. 69–73.
[9] Ashihmin A., Simonis J. Almost Affine codes. // Designs, codes and
cryptography.
Глава 6
Компьютер и криптография
“. . . задача воеводства совсем не в том состоит, чтобы до-
стигать какого-то мечтательного благополучия, а в том,
чтобы исстари заведенный порядок (хотя бы и не благопо-
лучный) от повреждений оберегать и ограждать.”
М. Е. Салтыков-Щедрин
§ 1. Вместо введения
Для чего криптографии нужен компьютер?
Криптография  одна из древнейших наук. О ней вспоминают всег-
да, когда возникает необходимость скрывать тайны. Но одним каран-
дашом и бумагой пользоваться достаточно трудоемко и обременитель-
но. И с древнейших времен человек пытается использовать различные
орудия, позволяющие облегчить труд шифровальщика. После многове-
кового использования веревочек, жезлов, полосок, ленточек, планше-
тов, трафаретов, дисков и т. д. и т. п., криптография в начале ХХ века
поставила себе на службу массу механических, пневматических, элек-
трических, а затем и электронных устройств. В 40-х годах она при-
думала для своих нужд первые электронные вычислители. Появление
компьютеров также поначалу было воспринято именно как появление
мощнейшего помощника для людей, занимающихся разработкой и ана-
лизом алгоритмов шифрования. Кстати, первый компьютер с назва-
нием ¾Colossus¿, в создании которого участвовал математик А. Тью-
ринг, был разработан в Англии именно для решения задач дешифро-
вания германской шифрмашины ¾Enigma¿ в самом начале Второй ми-
ровой войны. Но компьютеры не облегчили изнуряющий труд крип-
тографа, а только привнесли массу новых проблем. Появились новые
виды информации, требующей закрытия, новые области применения
криптографических методов, а самое главное  существенно возрос-
ли возможности противника по раскрытию применявшихся ранее шиф-
ров.
136 Гл. 6. Компьютер и криптография
Первые три десятилетия после своего появления компьютеры оправ-
дывали свое название ¾вычислитель¿ и представляли собой инструмент
для создания новых и взлома старых шифров.
В восьмидесятые годы произошла неизбежная переоценка ценно-
стей. Из подсобного средства, вычислителя, компьютер стал централь-
ным звеном для множества различных самостоятельных систем, вы-
полняющих самые разнообразные функции. Это  информационные
системы, системы связи и системы управления, системы автоматиче-
ского проектирования, автоматизированные системы практически для
всех областей человеческой деятельности, включая производственную,
военную, финансовую, экономическую, медицинскую, и многие другие.
Нетрудно догадаться, что и в области криптографии компьютер за-
нял центральное место, взяв на себя большинство функций традицион-
ной криптографической деятельности, включая реализацию криптогра-
фических алгоритмов, проверку их качества, генерацию и распределе-
ние ключей, автоматизацию работы по анализу перехвата и раскрытию
шифров и т. д.
Наконец, сейчас, в конце девяностых годов в связи с появлением
глобальных сетей, мы начинаем осознавать неизбежность вхождения
в мировое информационное пространство, часто называемое киберпро-
странством, которое стремительно развивается по своим законам, за-
сасывая миллионы новых и новых обитателей. Проваливаясь в него,
мы забываем о существовании времени и пространства, теряем грань
между реальностью и вымыслом. Самые фантастические идеи нахо-
дят в нем простое и естественное воплощение, действительное стано-
вится виртуальным, а виртуальное действительным. Универсальность,
полная совместимость и взаимосвязанность удаленных друг от друга
компьютеров позволяют, с одной стороны, реализовать принципиаль-
но новые криптографические идеи, а с другой, существенно расширить
области применения криптографии.
Вместе с тем, восхищаясь возможностями компьютеров, не надо за-
бывать о простых вещах. Как справедливо заметил американский мате-
матик Нил Коблиц  автор книги ¾Курс по теории чисел и криптогра-
фии¿,  выступая на семинаре в Московском университете, системы
с открытыми ключами созданы для людей, которые очень сильно не
доверяют друг другу, но при этом бесконечно доверяют своим компью-
терам.
Для чего компьютеру нужна криптография?
Пока компьютеры были большими, их обслуживали специально
подготовленные инженеры-программисты, системщики, аппаратчики,
информационщики, а также операторы и технический персонал. До-
ступ к хранящейся и обрабатываемой в них информации имел также
§ 2. Немного теории 137
ограниченный круг людей. Поэтому проблемы защиты информации в
основном сводились к повышению надежности работы, дублированию
критичной информации и организационным мерам. Позднее было осо-
знано, что наряду с безопасностью данных огромную роль играет также
безопасность программного обеспечения и аппаратных средств. Поэто-
му стали говорить о компьютерной безопасности. Наконец, с появле-
нием автоматизированных систем обработки данных (представляющих
собой неразрывное целое из объединенных в сеть компьютеров, средств
телекоммуникаций, информационных технологий и распределенных ин-
формационных массивов) стали больше говорить об информационной
безопасности системы в целом, понимая под этим состояние защищен-
ности всех процессов обработки, хранения и передачи информации в
системе.
Естественно, что криптография заняла в этой области подобающее
ей место, предоставив массу алгоритмов для закрытия хранимой и пе-
редаваемой конфиденциальной информации. Как ни странно, но даже
для информационных систем, обрабатывающих только открытую и об-
щедоступную информацию, также не удалось обойтись без криптогра-
фических решений. Действительно, можно ли доверять полученным от
такой системы данным, если они могут быть легко изменены, модифи-
цированы или даже уничтожены кем-то из пользователей. Например,
кому нужна информационная система с недостоверной информацией,
или система принятия решений, работа которой основана на случайной
или подтасованной информации? Именно криптография предоставляет
незаменимый набор средств для обеспечения безопасности работы си-
стемы, такие как электронная цифровая подпись, протоколы идентифи-
кации и аутентификации абонентов, коды аутентификации сообщений
и многое другое.
Вместе с тем, как это обычно бывает, при практической реализации
даже самых хороших теоретических результатов возникают ¾малень-
кие¿ трудности. Чтобы получить представление о том, что это за труд-
ности, проанализируем процесс создания программы для шифрования
файлов.
§ 2. Немного теории
Что надо знать перед написанием программы шифрования
С появлением персональных компьютеров криптография приобрела
совершенно новое лицо. Хотя компьютеры привнесли немало нового и
в криптографию, все же самое радикальное новшество заключается в
том, что о криптографии стали говорить открыто и на каждом углу.
Где есть компьютеры, там обязательно появляются вопросы о защите
138 Гл. 6. Компьютер и криптография
информации. А где начинают задумываться о защите информации 
там неизбежно вспоминают о криптографии.
Криптография  очень таинственная и хитрая область знаний. Как
правило, о ней можно было прочитать очень мало. Сейчас же ситуация
изменилась, и о ней пишут много. Парадокс в том, что чем больше о ней
пишут, тем меньше в ней понимаешь. Точнее, тем больше понимаешь,
что ты в ней ничего не понимаешь.
Не секрет, что каждый, кто хоть немного поработал на компьютере,
не раз задумывался о защите своих файлов. Неважно от кого. Просто
каждый из нас не любит, когда в его делах кто-то копается. А при рабо-
те с персональным компьютером (ПК) постоянно возникает ситуация,
когда он находится в безраздельной власти, в общем-то, посторонних
вам людей. К соблазну попробовать зашифровать файлы, директории
или диски постоянно подталкивают нас и многочисленные програм-
мы со встроенными функциями шифрования: нортоновский Diskreet,
Secretdisk, различные архиваторы, редакторы и т. д. Поэтому без пре-
увеличения можно сказать, что с криптографией сталкивался каждый
пользователь ПК.
На более серьезном уровне приходится строить отношения с крип-
тографией тем, кто имеет свое дело и использует ПК или локальную
сеть ПК в своей организации или фирме. Здесь уже потери от небреж-
ного обращения со своей информацией могут привести к непоправимым
последствиям. Не будем утомлять читателя примерами из жизни, по-
скольку каждый наверняка читал об этом в газетах или слышал от
друзей.
Дело не в примерах, а в сути дела. А суть в том, что без криптогра-
фии решить задачи сохранения ваших тайн практически невозможно.
Не будем тратить время на доказательство этого тезиса. Интуитивно
это понимают все, хотя у непрофессионалов и возникает иногда неко-
торое чувство внутреннего сопротивления.
Итак, вы поняли, что вам надо воспользоваться какой-либо програм-
мой для шифрования. И вот здесь-то сразу появляются непреодолимые
трудности. То, что они непреодолимые, вы понимаете чуть позднее. Для
того, чтобы выбрать для себя нужную программу, надо научиться оце-
нивать ее качество и уметь сравнивать такие программы между собой.
А вот здесь-то никаких критериев вам никто и никогда не расскажет,
да и в книгах вы ничего путного не прочитаете. А верить продавцу
с его навязчивой и крикливой рекламой в данном случае полностью
абсурдно, так как продавцом может оказаться ваш конкурент со все-
ми вытекающими отсюда последствиями. Верить можно только той
программе, которую вы написали сами. Если вы с этим не согласны,
значит у вас еще все впереди. Ваши иллюзии еще не скоро рассеют-
ся.
§ 2. Немного теории 139
Итак, приступим к написанию программы шифрования файлов. По-
началу создание такой программы кажется вполне доступной задачей,
с которой может справиться любой человек, изучивший какой-нибудь
язык программирования. Нет ничего проще. Вы выбираете самый на-
дежный из известных вам алгоритм шифрования, например описанный
в ГОСТ 28147, садитесь за компьютер, и через некоторое время у вас
появляется работающая программа. Хотя она работает не очень быстро
и интерфейс у нее не очень удобный, она вас вполне устраивает и вы ей
полностью доверяете, поскольку это ваша программа.
Но со временем у вас опять появляется червь сомнения. Вы опять
начинаете задумываться о надежности вашей защиты и понимаете, что,
несмотря на свой богатый опыт в области криптографии, вы в сущно-
сти ничего в этом не понимаете. Единственное, что согревает душу в
такой ситуации, так это то, что вы теперь ясно осознаете необходи-
мость серьезного подхода к решению задачи. А это уже очень много. С
этого момента и начинается ваша работа по освоению криптографии.
Какой алгоритм выбрать?
Мы разговаривали со многими криптографами, и все они начинали
с объяснения, что такое шифр Цезаря. Он прост и удобен в обращении,
но имеет один существенный недостаток  раскрыть его может каждый
школьник. Поэтому не будем на нем останавливаться и сразу перейдем
к шифру Виженера, либо Вернама, либо любому другому, в котором
шифрование сводится к наложению одной последовательности на дру-
гую. Как признают все криптографы, при одноразовом использовании
такого типа шифров дешифровать сообщение невозможно.
Простейший способ построить программу шифрования  реализо-
вать генератор случайной последовательности, знаки которой можно
последовательно складывать со знаками исходного сообщения. Для на-
ложения, конечно, нужна не любая последовательность, а именно слу-
чайная. Что это такое? На первый взгляд нет проблем. Различных ге-
нераторов известно великое множество. Какой из них выбрать? Ответ
очевиден  тот, который вырабатывает последовательность, наиболее
близкую к случайной.
А теперь попробуйте дать определение случайной последовательно-
сти. Для эксперимента попросите кого-нибудь это сделать, и он навер-
няка скажет вам, что это такая последовательность, в которой каждый
элемент случайно, независимо от других элементов и равновероятно мо-
жет принимать каждое из возможных значений, или что-нибудь вроде
¾это последовательность, являющаяся реализацией схемы независимых
испытаний¿, или  ¾полученная в результате выборки из множества
всех последовательностей с равномерным распределением¿.
140 Гл. 6. Компьютер и криптография
Недостаток использования такого рода определений для целей крип-
тографии становится очевидным при взгляде на последовательность
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.
Она является одной из реализаций схемы последовательных незави-
симых испытаний и ни в чем не уступает любой другой последователь-
ности, например,
1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,
так как вероятности появления их на выходе удовлетворяющего таким
определениям случайного датчика одинаковы. С точки зрения теории,
разницы нет никакой, но попробуйте их использовать для шифрования.
Таким образом, наша случайная последовательность должна быть
не просто получена по той или иной вероятностной схеме, но еще и быть
похожей на случайную (ведь никому не придет в голову назвать первую
из этих последовательностей случайной). Но кто может ответить, что
значит ¾похожей¿? На что похожа, например, последовательность
38765043353179975014693910353191097086635896251806230
29822890926723711514115245155566479256098717968310496
83605391251330391031054184702591128155858755970005635
69377039492262413967236168374702472481350482084517454
3990212200528238143667515252273?
Попробуйте отличить ее от случайной последовательности. Вместе с
тем, специалист по теории чисел скажет, что это десятичное представ-
ление простого числа 2829 + 1. А теперь подумайте, как эта последова-
тельность будет выглядеть в двоичной записи.
Каковы возможные критерии похожести? Легко сформулировать
условия похожести одной последовательности на другую. Но как сфор-
мулировать, что значит ¾последовательность похожа на случайную по-
следовательность¿? Эта проблема не имеет однозначного ответа. Есть
много подходов к определению понятия ¾похожести¿, но каждый из них
страдает односторонностью. Поэтому от выбранного вами подхода во
многом зависит качество шифрования.
Удобно ли носить большую связку ключей?
Перед вами программа для шифрования. Что является секретным
в этой программе? Сама программа? Исходный текст? Описание алго-
ритма? Ответ, безусловно, зависит от условий ее применения. Конечно,
лучше всего сделать так, чтобы ваш конкурент не имел ни того, ни дру-
гого, ни третьего. Поэтому обычно подобные программы защищают и
от копирования, и от дизассемблирования, и от работы под отладчиком
и т. д. Если она защищена грамотным специалистом, то пройдет не один
§ 2. Немного теории 141
месяц, пока защита будет снята. Тем не менее, программа, как правило,
используется длительное время, а хакеров сейчас великое множество.
Поэтому лучше сразу исходить из того, что все связанное с программой
секрета на представляет.
Что еще представляет интерес для вашего конкурента? Закрытая
программой информация? От нее никто не откажется, но она мало что
дает. Если алгоритм шифрования выбран надежный, то закрытая ин-
формация не представляет секрета, так как она непосредственно пред-
назначена для хранения и передачи в открытом виде. Поэтому при от-
сутствии следов не уничтоженной открытой информации можно быть
спокойным.
Остаются ключи. Имея ключи, ваши конкуренты откроют все за-
крытые двери. Это главный секрет во всем процессе шифрования, и,
можете не сомневаться, что основные усилия вашего конкурента будут
направлены именно на подкуп персонала, имеющего доступ к ключам.
Но как вводить ключ в программу и где хранить ключи? Если про-
грамму использовать интенсивно, то ключей нужно очень много. Где
их брать и как заменять один на другой?
Скупой рыцарь хранил свои сокровища в сундуках, которые были
закрыты с помощью замков, ключи от которых он постоянно носил
с собой. Он правильно делал, что никогда не расставался с ключа-
ми. Но поскольку он был очень богат, то ключей у него было очень
много, и носить такую связку ему, наверно, было очень неудобно.
Вообще-то, он мог завести еще один сундук, куда можно было бы
сложить все ключи. Тогда бы ему потребовалось носить всего один
ключ. Именно эта идея используется в ключевых системах с главным
ключом, когда все ключи, кроме главного, хранятся в компьютере на
винчестере в зашифрованном виде. Хотя такой способ хранения клю-
чей несколько усложняет процедуру доступа к зашифрованной инфор-
мации, преимущества здесь неоспоримы. Действительно, можете ли
вы представить себе человека, который помнит несколько сотен клю-
чей?
Таким образом, задача сводится к обеспечению надежного хране-
ния всего одного ключа. Правда, при этом ценность этого ключа резко
возрастает и носить его в кармане становится очень опасным. Не толь-
ко потому, что наверняка найдутся люди, которые будут испытывать
непреодолимое желание взять у вас его, хотя бы на время; но еще и
потому, что если он потеряется или испортится, получив механическое
повреждение, то вы уже никогда не сможете ничего восстановить из
той информации, которую вы хранили в своем компьютере. С ключами
надо быть очень осторожным.
В 1976 году американские математики Диффи и Хеллман предло-
жили перейти к системам с открытым ключом. Давайте издадим книгу-
142 Гл. 6. Компьютер и криптография
справочник с открытыми ключами всех корреспондентов и поместим ее
на общедоступном сервере. Это полностью снимет проблему с хранени-
ем большого числа ключей.
Нетрудно догадаться, сколь неоднозначный и шокирующий эффект
это предложение произвело на криптографическую общественность. Но
уж больно заманчивы были те возможности, которые предоставляла
такая система. Как показали авторы идеи, такая система дает воз-
можность подписывать сообщения электронной цифровой подписью,
которая выполняет роль обычной подписи под документом. Таким об-
разом, сразу снимался тяжкий груз по производству, запоминанию,
хранению, распределению и уничтожению огромного количества сек-
ретных ключей, да к тому же открывались новые возможности и сферы
применения.
Более того, плодотворность идеи выразилась в проявлении большо-
го интереса к ней у значительной части крупных математиков. Ведь
для реализации такой системы нужны были труднорешаемые матема-
тические задачи. А кто, кроме самих математиков, может придумать
такие задачи!
Посмотрим, например, как организуется выработка ключей в широ-
ко распространенном протоколе SSH (Secure Shell). Данный протокол
обеспечивает аутентификацию и закрытие коммуникаций при взаимо-
действии UNIX машин. Для выработки ключей в нем используется про-
токол, являющийся модификацией хорошо известного протокола обме-
на ключами, предложенного Диффи и Хеллманом. Пусть p  большое
простое число и q = (p − 1)/2. Пусть g  число, имеющее порядок рав-
ный q по модулю p. Оно является образующим элементом мультипли-
кативной группы порядка q. Помимо операции возведения в степень в
протоколе используются алгоритмы вычисления функции хеширования
SHA (secure hash algorithm) и цифровой подписи DSS (digital signature
standard), принятые в США в качестве стандартов. Протокол состоит
в следующем (см. [6]).
1. Клиент C генерирует случайное число x, 1 < x < q, вычисляет
значение e = gx mod p и отправляет сообщение ¾e¿ серверу S.
2. Сервер S генерирует случайное число y, 1 < y < q, вычисляет
значение f = gy mod p, вычисляет значение ключа K = ey mod p,
вычисляет проверочное значение H = hash(V,Ks, e, f,K) (здесь
hash  функция хеширования на основе алгоритма SHA, V 
некоторая строка, содержащая идентифицирующую информацию
о клиенте и сервере, Ks  открытый ключ сервера), вычисляет
значение цифровой подписи m под H на своем секретном ключе
в соответствии с алгоритмом DSS, а затем отправляет сообщение
¾(Ks,H,m, f)¿ клиенту C.
§ 2. Немного теории 143
3. Клиент C проверяет, действительно ли Ks является ключом серве-
ра. Если да, то вычисляет значение ключа K = fx mod p, проверя-
ет правильность значения вектора H. Наконец, проверяет подпись
под этим значением.
В этом протоколе простое число p строится из известного каждому
школьнику числа  по формуле
p = 21024 − 2960 − 1 + 264 
2894 + 12903

,
и равно
179769313486231590770839156793787453197860296048756011706444
423684197180216158519368947833795864925541502180565485980503
646440548199239100050792877003355816639229553136239076508735
759914822574862575007425302077447712589550957937778424442426
617334727629299387668709205606050270810842907692932019128194
467627007.
Его шестнадцатиричная запись имеет ¾менее случайный¿ вид
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1
29024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DD
EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245
E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED
EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE65381
FFFFFFFF FFFFFFFF.
Данное число построено Ричардом Шреппелем из университета
штата Аризона, а его свойства описаны в работе [7].
В качестве образующего элемента для этого простого числа взято
число g = 2. Возведение в степень такого числа выполняется достаточно
быстро, так как умножение на 2  это простой сдвиг двоичной записи
числа в сторону старших разрядов.
49783156431138-я попытка
Теперь встанем на сторону нападающей стороны и попробуем напи-
сать программу для нахождения неизвестного ключа. Пусть у вас есть
исходный и закрытый файлы. Если это не так, то надо постараться по-
лучить хотя бы общее представление о том, что представляет собой ис-
ходный файл: исполняемый код, текст программы на каком-либо языке
программирования, текст в кодировке ASCII, ANSI, KOI-8 и т. п. Если
даже это неизвестно, то возможность определения правильного ключа
зачастую вообще становится проблематичной. Но не будем о грустном.
Пусть у вас есть оба файла. Воспользуемся написанной ранее програм-
мой шифрования и добавим к ней блоки генерации ключей и сравнения
полученного зашифрованного текста с имеющимся открытым. Прежде
144 Гл. 6. Компьютер и криптография
чем запустить на исполнение программу, подумаем, сколько времени
она может работать.
Сначала найдем среднее число знаков текста, которое требуется для
отбраковки случайного ключа. Предположим, что наша программа по-
следовательно сравнивает биты текста, полученного шифрованием с
помощью случайно выбранного ключа, с битами имеющегося закрыто-
го файла. Если реализованный в программе шифр обладает хорошими
свойствами и дает шифртекст, похожий на случайную последователь-
ность, то по первому биту будет забракована приблизительно половина
ключей, по второму  еще четверть, и т. д. В итоге мы получим, что
среднее число знаков для отбраковки оценивается бесконечной суммой
∞X
i=1
i
2i .
Математики знают, что эта сумма равна двум. Поэтому, как это ни
странно, потребуется в среднем всего два бита текста для отбраковки
ложного случайного ключа. Это один из первых парадоксов криптогра-
фического анализа. А ведь для того, чтобы убедиться в том, что ключ
найден правильно, надо расшифровать весь текст.
Данный результат обнадеживает своей неожиданностью. Поэтому
сразу переходим ко второй части задачи и найдем, сколько потребуется
в среднем перебрать вариантов ключа до появления искомого. Считаем,
что все ключи равноправны. Перенумеруем их и начнем по очереди про-
верять с помощью нашей программы. На первый взгляд кажется, что
от выбора порядка нумерации ключей зависит очень много. Действи-
тельно, если у вас есть дар предвидения и вы выбрали такой порядок,
что искомый ключ имеет первый номер, то программа сработает уже на
первом шаге. Но не будем верить в чудо и найдем среднее число шагов
для случайно выбранного порядка. Оно равно
Xn
i=1
iki
n!
,
где ki  число различных упорядочений множества из n ключей, у
которых истинный ключ стоит на месте с номером i. Так как легко
подсчитать, что ki = (n − 1)!, то наша сумма равна
Xn
i=1
iki
n!
=
Xn
i=1
i
n
=
n(n + 1)
2n
=
(n + 1)
2
.
Итак, в среднем придется перебрать чуть больше половины всех
ключей.
Теперь вернемся от математики к суровой действительности. Пусть
вы написали великолепную программу, которая проверяет за одну
§ 3. Как зашифровать файл? 145
секунду один миллион вариантов ключа. Тогда за час программа пере-
берет 3600 000 000 ключей, за сутки  86 400 000 000 ключей, а за год 
более 30 000 000 000 000. Короче, для перебора 256 ключей шифратора
DES вашей программе потребуется в среднем чуть более 1500 лет. Вдох-
новляющий результат, не правда ли? А теперь подсчитайте, сколько лет
потребуется вашей программе для нахождения неизвестного ключа у
отечественного алгоритма шифрования ГОСТ 28147, в котором число
ключей равно 2256.
Подобные оценки помогут вам избежать излишеств и правильно вы-
брать длину ключа для вашей программы.
А теперь перейдем к решению практических вопросов.
§ 3. Как зашифровать файл?
Руки прочь от моих файлов!
Представьте себе: вы приходите домой после трудного дня и в прихо-
жей вас встречает ваш младший брат, громко декламируя ваши стихи,
посвященные любимой девушке из соседнего класса, которые вы вчера
набрали на своем компьютере. И не только декламирует, а еще и ком-
ментирует, и из его комментариев следует, что Пушкина из вас ну никак
не получится.
Вы, конечно, можете объяснить брату, что он не прав, подкрепив
свои слова парой подзатыльников и другими весомыми аргументами.
Это называется административные меры защиты.
Вы можете поставить пароль на включение компьютера. Как ду-
маете, сколько времени продержится такая защита? Правильно. Дня
три-четыре. Потом ваш брат замучает вас просьбами разрешить ему
поиграть в WarCraft, и вам придется поделиться с ним паролем.
Было бы хорошо сделать так, чтобы ваш брат мог бы беспрепят-
ственно играть в любимые игры, а доступ к чужим файлам был бы для
него закрыт. Это называется разграничение доступа.
Как же организовать разграничение доступа на своем компьютере?
Если бы у вас была установлена не Windows 95, а Windows NT или
UNIX, вы легко могли бы ограничить доступ к своим файлам. В UNIX
вам пришлось бы набрать команду chmod с нужными параметрами, а в
Windows NT хватило бы нескольких движений мышью. Но у вас стоит
Windows 95, а Windows 95 разграничение доступа не поддерживает. Так
что же вам делать? Неужели нельзя защитить свои файлы от других
пользователей?
Можно. Тут нам на помощь приходит криптография. Если вы не
хотите, чтобы другие читали ваш файл, этот файл нужно зашифро-
вать. Пусть его теперь читают все кому не лень. Все равно, если кто-
146 Гл. 6. Компьютер и криптография
то, кроме вас, прочитает этот файл, он увидит не содержимое файла,
а шифртекст. Конечно, используемый шифр должен быть достаточно
стойким.
Как вводить ключ?
Как вы собираетесь вводить ключ в программу шифрования? Проще
всего  с клавиатуры. Именно этот вариант реализован в большинстве
готовых программ, и знакомство с ними начинается с вежливого при-
глашения: ¾enter your password: . . . ¿. Только имейте в виду, что пароль,
вводимый с клавиатуры, можно подсмотреть. Если программа шифро-
вания при вводе пароля отображает его на экране, такой программой
лучше не пользоваться. Когда при зашифровании файла вы вводите
пароль, он тоже не должен отображаться на экране.
А что случится, если при вводе пароля вы случайно нажали не ту
клавишу? Вы думаете, что ввели один пароль, а на самом деле ввели
другой. Пробуете расшифровать файл, а программа говорит: ¾Пароль
неправильный¿. Чтобы такого не было, обычно программы шифрова-
ния при вводе пароля для зашифрования файла просят ввести пароль
дважды. Если пользователь в первый раз ввел один пароль, а во второй
раз  другой, значит, по крайней мере один раз он ошибся. А если оба
раза пользователь ввел одно и то же, значит, все нормально. Вряд ли
пользователь дважды ошибется одинаково.
Как проверять правильность ключа?
Кстати, а как программа при расшифровании файла определяет, что
пароль неправильный? По-разному. Некоторые программы вообще не
проверяют правильность пароля. В этом случае, если вы ввели непра-
вильный пароль, файл как бы расшифруется, но вы увидите совсем не
то, что зашифровали. Это неудобно. Предположим, вы зашифровали
файл мегабайт в 50 с помощью алгоритма ГОСТ. Сколько времени он
будет расшифроваться? Если у вас дома стоит обычный Pentium, то,
по крайней мере, минуту. А скорее всего, минуты три. Вы все это вре-
мя сидите, ждете, а потом оказывается, что зря ждали  пароль-то
ввели неправильный. А если вы exe-файл неправильно расшифрова-
ли, а потом запустили на выполнение? Скорее всего, придется давить
Reset. Так что лучше, когда перед расшифрованием программа прове-
ряет правильность пароля.
Остается вопрос: как проверять правильность пароля? Можно про-
сто вписать пароль в начало зашифрованного файла перед шифртек-
стом. При расшифровании вы вводите пароль, программа читает на-
чало зашифрованного файла и сравнивает то, что вы ввели, и то,
что в файле. Если совпало, значит, пароль правильный. А если не
§ 3. Как зашифровать файл? 147
совпало  неправильный. Просто и удобно. Только что произойдет, если
кто-нибудь другой случайно просмотрит зашифрованный файл, напри-
мер, с помощью Norton Commander? Весь файл  сплошная абрака-
дабра, а в начале файла  осмысленное слово. Не нужно быть семи
пядей во лбу, чтобы догадаться, что это и есть пароль. Так что нужно
придумывать что-то другое.
Очевидно, эталон пароля, который хранится в зашифрованном фай-
ле, тоже надо зашифровать. Только как? Проще всего шифровать па-
роль по той же схеме, что и текст исходного файла. Если шифр стойкий
(а иначе его и не стоит использовать), пароль будет закрыт надежно. А
что брать в качестве ключа? Можно взять константу. Тогда в каждом
зашифрованном файле эталон пароля будет зашифрован на одном и
том же ключе. Так, например, делает встроенная система шифрования
файлов электронной почты Sprint Mail. Только там зашифрованный па-
роль хранится не в начале зашифрованного файла, а в конце. Но что
будет, если кто-то узнает ключ, на котором шифруются все пароли?
Он сможет расшифровывать все файлы, которые вы зашифруете. И не
важно, что пароли разные  злоумышленник возьмет нужный пароль
прямо из файла, который хочет прочесть.
Вы, скорее всего, подумали: а откуда злоумышленник узнает ключ,
на котором шифруются эталоны паролей? Этот ключ встроен в про-
грамму шифрования, его никто не знает, даже вы его не знаете. Тем
не менее, если злоумышленник достаточно квалифицирован, если он
умеет пользоваться дизассемблером и отладчиком, этот ключ он узна-
ет без труда. Обычно на решение такой задачи уходит всего несколько
часов. Как это можно сделать  тема отдельной статьи. Пока поверьте
на слово  имея только exe-файл, определенные навыки и много сво-
бодного времени, можно разобраться в том, что делает программа, до
мельчайших подробностей.
Лучше шифровать эталон пароля сам на себе. Взять пароль в ка-
честве открытого текста и взять тот же пароль в качестве ключа. При
расшифровании файла, когда вы вводите пароль, программа пытает-
ся расшифровать только начало файла. Если в результате получилась
строка, совпадающая с паролем, значит, пароль правильный, и мож-
но расшифровывать файл дальше. А если получилось что-то другое,
значит, пароль неправильный.
Некоторые программы шифрования шифруют пароли иначе. Берет-
ся какая-то строка, всегда одна и та же, шифруется на пароле и за-
писывается в зашифрованный файл. Diskreet, например, шифрует на
пароле строку ¾ABCDEFGHENRIXYZ¿ (эта строка завершается нуле-
вым байтом, как принято в языке C). Когда Diskreet проверяет пароль,
он берет начало зашифрованного файла (точнее, байты с 16-го по 31-
й) и расшифровывает их на пароле, который ввел пользователь. Если
148 Гл. 6. Компьютер и криптография
после расшифрования получилось ¾ABCDEFGHENRIXYZ¿  пароль
правильный, если не получилось  неправильный.
На первый взгляд кажется, что эта схема хуже, чем предыдущая.
Действительно, в предыдущем случае злоумышленнику неизвестны ни
открытый текст, ни ключ, а в последнем случае неизвестен только ключ,
а открытый текст известен. Но если вы еще помните, что было написа-
но в начале этой главы, то, наверное, уже поняли, что последняя схема
ничуть не слабее предыдущей. Если шифр стойкий, то ключ шифрова-
ния невозможно получить за приемлемое время, даже если известны и
открытый текст, и шифртекст.
Какой должен быть пароль?
Какой длины должен быть пароль, чтобы защита была стойкой?
Число различных вариантов пароля должно быть не меньше числа раз-
личных ключей. Если вы шифруете файл с помощью алгоритма ГОСТ,
а для пароля используете только строчные английские буквы и хотите,
чтобы стойкость защиты была не ниже стойкости ГОСТа, то длина па-
роля должна быть не меньше, чем log26 2256 = 54,46298970967. (Здесь
2256  число различных ключей ГОСТ, а 26  число различных англий-
ских букв.) Так что вам придется придумывать 55-буквенный пароль.
К тому же учтите, что если вы используете в качестве пароля не хао-
тичную последовательность букв, а осмысленную фразу, то нужно сде-
лать поправку на избыточность языка. Если в пароль входят не только
строчные буквы, но и заглавные, то для обеспечения необходимого чис-
ла ключей ГОСТ достаточно 51 символа. Только имейте в виду, что
некоторые программы шифрования, получив пароль, преобразуют все
его буквы к одному регистру. Например, Diskreet делает все англий-
ские буквы, входящие в пароль, заглавными. Вы можете использовать
в пароле русские буквы, но будьте осторожны! Не все программы шиф-
рования корректно работают с русскими паролями. Таблица 1 поможет
вам оценить требуемую длину пароля в различных ситуациях.
Имейте в виду, что данные в этой таблице относятся к тому случаю,
когда в качестве пароля берется равномерно распределенная случайная
последовательность символов. Если в качестве пароля вы используете
только осмысленные слова и фразы, количество возможных вариан-
тов пароля будет гораздо меньше. Если в качестве пароля использу-
ется длинная фраза русского языка, то, как показывают теоретико-
информационные исследования, количество возможных вариантов бу-
дет равно не 33n, где n  число символов во фразе, а всего лишь 2n
(эта приближенная оценка верна только для больших n). Так что в этом
случае для достижения стойкости DES придется брать пароль длиной
56 символов, а для достижения стойкости ГОСТ  256 символов.
§ 3. Как зашифровать файл? 149
Таблица 1.
Длина пароля
Мощность Количество для достижения
Алфавит алфавита вариантов стойкости стойкости
6-символьного DES =256= ГОСТ =2256=
пароля = 7,21 · 1016 = 1,16 · 1077
строчные
английские буквы 26 3,09 · 108 12 55
строчные русские
буквы 33 1,29 · 109 12 51
строчные и
заглавные
английские буквы
52 1,97 · 1010 10 45
строчные и
заглавные
английские буквы
и цифры
62 5,68 · 1010 10 43
строчные и
заглавные русские
буквы
66 8,27 · 1010 10 43
строчные и
заглавные русские
буквы и цифры
76 1,93 · 1011 9 41
строчные и
заглавные
английские буквы,
цифры и знаки
препинания
94 6,90 · 1011 9 40
строчные и
заглавные русские
буквы, цифры и
знаки препинания
108 1,59 · 1012 9 38
все алфавитно-
цифровые символы
русифицированной
клавиатуры
160 1,68 · 1013 8 35
150 Гл. 6. Компьютер и криптография
Так стоит ли вообще использовать для шифрования пароль, вводи-
мый с клавиатуры? Для ответа на этот вопрос надо определить для
себя  от кого вы собираетесь защищать информацию. Если ваш про-
тивник умеет только подбирать пароль с клавиатуры, то в качестве па-
роля лучше всего взять осмысленное слово длиной 6–8 символов. Глав-
ное, чтобы злоумышленнику было трудно догадаться до этого слова.
При этом надо помнить, что нельзя использовать в качестве пароля:
– свое имя (фамилию, отчество, прозвище, . . . );
– свою дату рождения (номер телефона, номер паспорта, . . . );
– имя того файла, который вам надо зашифровать;
– и все другие пароли, которые легко угадать.
Если ваш противник, от которого вы защищаете информацию, уме-
ет программировать, то он может написать программу, которая будет
подбирать пароль автоматически. Даже если противник не умеет про-
граммировать, он может взять такую программу из Internet  там таких
программ много. В этом случае пароль не должен быть осмысленным
словом. В современном английском языке обычно употребляется всего
около 100 000 слов, в русском  чуть больше. Перебрать 100 000 паро-
лей можно очень быстро. Если в качестве шифра используется DES,
на процессоре Pentium можно перебрать все английские слова-пароли
всего за несколько секунд.
Даже если пароль представляет собой слово, которого нет в словаре,
его все равно можно легко угадать. Вы уже знаете, что порядок букв в
словах и фразах естественного языка подчиняется определенным ста-
тистическим закономерностям. Например, в русском языке комбинация
букв ий встречается часто, а оь  никогда. Для большинства естествен-
ных языков статистика встречаемости символов документирована. Если
программа перебора вначале подбирает наиболее вероятные пароли, а
менее вероятные оставляет на потом, то перебор сокращается в десятки
и сотни раз. Один из авторов видел, как подобная программа подо-
брала пароль natenok на компьютере с процессором 386DX–40 всего за
10 минут. Общая сложность перебора была равна 8,03 · 109. Вот другие
известные авторам случаи удачного подбора паролей:
Сложность перебора1) Время подбора Тип процессора
2,08 · 1011 15 минут 486DX/4–100
5,68 · 1010 8 часов Pentium–120
В первом случае пароль представлял собой два английских слова,
записанных подряд без пробела. Одно из них было трехбуквенным, дру-
1)Имеется в виду сложность тотального перебора. Поскольку реально проводился
оптимизированный перебор, его сложность была гораздо меньше. Этим и объясня-
ется несоответствие сложности перебора и времени подбора.
§ 3. Как зашифровать файл? 151
гое  пятибуквенным. Во втором случае пароль состоял из трех строч-
ных английских букв, двух заглавных английских букв и одной цифры.
Этот пароль был абсолютно бессмысленным. Выводы делайте сами.
Лучший результат по подбору ключа был достигнут в 1997 году, ко-
гда в сети Internet был дешифрован файл, зашифрованный с помощью
DES. В подборе ключа участвовали десятки тысяч пользователей Internet.
Все множество ключей было разбито на непересекающиеся подмно-
жества и каждый перебирал ключи из своего подмножества. Перебор
длился несколько недель. Руководил работой добровольной ¾виртуаль-
ной¿ бригады взломщиков со своего сервера программист Рокки Вер-
сер  автор программы, перебирающей ключи. Общая сложность пе-
ребора составляла 7,21 · 1016, но ключ был найден после перебора всего
25% ключей. При этом ¾расколол¿ сообщение компьютер с процессором
Pentium/90 c 16 Мбайт оперативной памяти. Оно гласило: ¾Надежная
криптография делает мир безопасным¿.
А можно ли обойтись без пароля?
Как видите, применять пароль в качестве ключа шифрования не так
удобно, как кажется на первый взгляд. Либо защита будет нестойкой,
либо пароль трудно запомнить и ввести без ошибок. Если вы хотите
построить по-настоящему надежную защиту, вместо пароля нужно ис-
пользовать что-то другое.
Можно, например, хранить ключ на дискете1). Вы создаете каким-то
образом (каким  обсудим позже) случайный, равновероятный и доста-
точно длинный ключ и записываете его на дискету. Когда программа
шифрования запрашивает ключ, вы вводите ключ не с клавиатуры, а
с дискеты. Вы просто вставляете дискету в дисковод, а программа счи-
тывает оттуда ключ и зашифровывает файл на этом ключе. При рас-
шифровании файла программа просит ¾Вставьте ключевую дискету в
дисковод¿. Вы вставляете дискету в дисковод, программа считывает
оттуда ключ, проверяет его правильность и, если ключ правильный,
расшифровывает файл.
Конечно, программа шифрования должна уметь работать с ключе-
выми дискетами.
Ключевую дискету нужно хранить в месте, недоступном для зло-
умышленников. Если кто-то воспользуется вашей ключевой дискетой,
то он сможет прочесть все, что вы зашифровали с ее помощью. Не
теряйте ключевые дискеты! Если вы потеряете такую дискету, то тем
1)Или на электронном ключе Touch Memory, или на пластиковой карте. Только в
этом случае нужно, чтобы в вашем компьюьере было соответствующее устройство
ввода.
152 Гл. 6. Компьютер и криптография
самым вы потеряете все данные, которые вы зашифровали с ее помо-
щью.
Удобно ли пользоваться ключевыми дискетами? Нет. Но за надеж-
ность защиты приходится платить. Вообще, это общая закономерность
чем надежнее система защиты, тем труднее с ней работать. И
наоборот, чем система защиты удобнее в обращении, тем она слабее.
Конечно, разрабатывая систему защиты, можно наделать ошибок, и
система получится и ненадежной, и неудобной. Но если система раз-
рабатывалась на совесть, приведенное выше утверждение почти всегда
верно.
Можно ли как-нибудь защитить ключ, хранящийся на дискете? Ко-
нечно! Его тоже можно зашифровать. И не нужно для этого приду-
мывать сложный шифр  вполне хватит самого примитивного шифра
наподобие простой замены. Почему? Да потому, что ключ шифрова-
ния  текст случайный и равновероятный. На чем основан метод де-
шифрования шифра простой замены? На том, что открытый текст 
это осмысленный текст. А в осмысленном тексте обязательно присут-
ствуют статистические закономерности. Но в ключе никаких законо-
мерностей нет  ключ случаен и равновероятен!
Что использовать в качестве ключа, на котором шифруется ключ?
Можно использовать пароль, но, как вы уже знаете, это не очень на-
дежно. Можно завести вторую ключевую дискету, на которой хранить
ключ, необходимый для доступа к первой. Но тогда придется заводить
третью дискету, чтобы защитить вторую, а потом заводить четвертую,
чтобы защитить третью . . .
Так как же быть? Подумайте сами. Один из возможных ответов вы
найдете в конце главы.
Где взять ключи?
Каким должен быть ключ шифрования? Случайным и равноверо-
ятным. А как получить случайную и равновероятную последователь-
ность символов? Правильно, с помощью генератора случайных чисел.
Написать свой генератор ¾случайных¿ чисел очень просто. Хорошие по
статистическим свойствам последовательности получаются по формуле
линейного конгруэнтного метода:
rn+1 = (arn + b) mod m,
где ri  i-й член псевдослучайной последовательности; a, b, m  неко-
торые целые числа.
Качество псевдослучайной последовательности зависит от выбора
чисел a, b и m. Эти числа обязательно должны быть взаимно просты.
Есть и другие правила выбора этих коэффициентов, о них можно про-
читать в [1]. В Diskreet, например, используется следующий генератор
§ 3. Как зашифровать файл? 153
псевдослучайной последовательности:
rn+1 = (214013rn + 2531011) mod 232.
Как видите, формула для получения очередного ¾случайного¿ числа
рекурсивна  каждый член последовательности зависит от предыдуще-
го. Возникает вопрос: откуда берется первый член? Обычно в качестве
r1 берут текущее время с точностью до тика таймера (0,054945 сек.). Ес-
ли для генерации ключа используется линейный конгруэнтный метод,
ключом является последовательность чисел (r1, r2, . . . , rN), где
N =
(длина ключа)
(длина ri в байтах)
.
Предположим, что с помощью линейного конгруэнтного метода сге-
нерирована последовательность (r1, r2, . . . , r128), где каждое ri есть ко-
роткое целое число (16 бит). Созданный ключ представляет собой слу-
чайную равновероятную последовательность длиной 256 байт. Оценим,
сколько различных вариантов ключа можно получить по данной схеме.
Зафиксируем значение r1. Какие значения может принимать r2?
Только одно значение. Если r1 фиксировано, то значение r2 определено
однозначно:
r2 = (ar1 + b) mod m.
Значение r3 тоже определено однозначно. Оно равно
r3 = (ar2 + b) mod m = (a((ar1 + b) mod m) + b) mod m.
Таким образом, значение r1 однозначно определяет значения всех
следующих членов последовательности. Получается, что различных по-
следовательностей (r1, r2, . . . , r128) в точности столько же, сколько раз-
личных значений r1. В нашем примере r1  короткое целое число, при-
нимающее значения от 0 до 216−1 = 65535. Оказывается, что стойкость
ключевой системы (число различных вариантов ключа) равна не 2256,
а всего лишь 216, что в 1,77 · 1072 раз меньше!
Получается, что псевдослучайные последовательности в качестве
ключей использовать нельзя. А что можно?
В чем слабость псевдослучайных последовательностей? В том, что
они псевдослучайны. Первый член последовательности однозначно оп-
ределяет остальные. Чтобы ключ был по-настоящему случайным и рав-
новероятным, последовательность должна быть не псевдослучайной, а
истинно случайной.
Где взять истинно случайную последовательность?
На первый взгляд, эта задача очень проста. Можно, например, вы-
числить случайный адрес памяти и взять оттуда данные. Или можно
вычислить случайный номер сектора на диске и взять данные оттуда.
154 Гл. 6. Компьютер и криптография
Эти данные, бесспорно, будут случайными. Но какое распределение бу-
дут иметь члены полученной случайной последовательности? Неизвест-
но. Если полученные случайные данные представляют собой фрагмент
текстового файла, то распределение символов, представляемых байта-
ми файла, будет одно, если это фрагмент машинного кода  совсем
другое. Одно можно сказать точно  это распределение почти никогда
не будет равномерным. Ниже приведены гистограммы встречаемости
символов для различных видов информации.
§ 3. Как зашифровать файл? 155
Как видите, из всех приведенных гистограмм только последняя
более-менее похожа на гистограмму равномерного распределения. Од-
нако, если приглядеться повнимательнее, в ней можно заметить пик
вдоль оси Y (впрочем, этот пик нетипичен для архивов pkzip  он
объясняется тем, что выбранный архив включал в себя очень много
коротких файлов).
Конечно, если распределение исходной последовательности задано
априорно, путем несложного преобразования эту последовательность
можно превратить в распределенную равномерно. Но подсчитать рас-
пределение символов для информации, хранимой в памяти и на дисках
компьютера, не удается даже в том случае, если известно, откуда эта
информация взялась. Посмотрите на гистограмму встречаемости сим-
волов в тексте этой главы. А теперь посмотрите на следующую гисто-
грамму.
Как видите, распределения отличаются довольно сильно. Получает-
ся, что если в документе есть картинки, исходное распределение одно,
а если нет  совсем другое.
Кроме того, в осмысленных текстах (в том числе и в текстах exe-
файлов, баз данных и т. д.) обязательно присутствуют статистические
закономерности более высокого порядка. Если построить гистограм-
му встречаемости биграмм и триграмм, она будет еще менее похожа
на горизонтальную линию (что должно иметь место при равномерном
распределении), чем гистограмма встречаемости отдельных символов.
Например, в exe-файле, скомпилированном с помощью Visual C++, ма-
шинный код подавляющего большинства функций (подпрограмм) на-
чинается байтами
55 8B EC 83 EC1)
1)Машинные команды
push ebp
mov ebp,esp
sub esp, ...
156 Гл. 6. Компьютер и криптография
и заканчивается байтами
8B E5 5D C31).
Поэтому последовательность байтов, полученных из случайного ме-
ста оперативной памяти или диска, нельзя считать случайной. В такой
последовательности наверняка есть внутренние статистические зависи-
мости.
Так где же взять случайную последовательность?
Возможно, у вас уже появилась мысль, что истинно случайную по-
следовательность программным путем не получить. Это не так. Суще-
ствует, по крайней мере, один способ, позволяющий получить истин-
но случайную последовательность байтов. Основная идея этого способа
заключается в том, чтобы привлечь к процессу выработки случайной
последовательности самого пользователя.
Пользователь работает с компьютером. Он двигает мышь, нажимает
клавиши на клавиатуре. Попробуем взять в качестве элементов случай-
ной последовательности интервалы между последовательными нажати-
ями клавиш. Какая получится последовательность?
Случайная? Несомненно. Равномерно распределенная? Вряд ли. Ка-
кое у нее будет распределение? Трудно сказать. Если пользователь на-
бирает текст, получится одно распределение, если работает с Norton
Commander  другое, если играет в Tetris  третье. Будут ли соседние
элементы последовательности зависеть друг от друга? Скорее всего, да.
Кажется, что никаких преимуществ по сравнению с предыдущим
методом нет. Однако в отличие от предыдущего метода в данном случае
все перечисленные проблемы можно решить.
Для начала посмотрим, можно ли написать программу генерации
ключа так, чтобы распределение исходной случайной величины было
известно. Исходная случайная величина у нас  это продолжительность
интервала между нажатиями клавиш. В разных ситуациях эта величи-
на распределена по-разному. Выберем ситуацию, когда распределение
этой случайной величины легко посчитать. Пусть, например, пользо-
ватель в процессе выработки ключа играет в Tetris. При игре в Tetris
частота нажатий на клавиши мало зависит от пользователя, другими
словами, все пользователи, играя в Tetris, нажимают на клавиши при-
мерно одинаково часто (конечно, кроме пользователей, которые играют
в Tetris первый раз в жизни).
1)Машинные команды
mov ebp,esp
pop ebp
ret
§ 3. Как зашифровать файл? 157
Распределение интервалов времени между последовательными на-
жатиями на клавиши несложно рассчитать. Для этого нужно прежде
всего написать резидентную программу, которая перехватывала бы пре-
рывание 16h, отвечающее за работу с клавиатурой, при каждом вызове
прерывания получала бы текущее значение таймера, сравнивала его с
предыдущим полученным значением, вычисляла разность и записыва-
ла полученное число в файл1). Затем нужно запустить эту программу
и, пока она работает, поиграть некоторое время в Tetris. Проведите этот
эксперимент в качестве упражнения.
Посмотрите на рисунок. Распределение нашей случайной величины
будет выглядеть примерно так:
p
t
пользователь уже принял
решение, куда укладывать
очередную фигуру, и нажимает
клавиши, не думая
пользователь думает, куда
же ему положить очередную
фигуру
Распределение явно неравномерное, но это и не важно. Важно то,
что распределение случайной величины при разных испытаниях при-
мерно одинаково. Преобразовать это распределение в равномерное со-
всем несложно.
Остается решить последнюю проблему. Тай-
мер компьютера тикает с частотой 18,2 раза
в секунду, т. е. один тик занимает примерно
55 миллисекунд. Когда пользователь нажима-
ет клавиши подряд, не думая, или просто дер-
жит клавишу нажатой, интервалы между по-
следовательными нажатиями составляют 100–
200 миллисекунд. Получается, что первый пик
на приведенном графике на самом деле выглядит примерно так, как
показано на рисунке.
1)Некоторые версии Tetris используют для работы с клавиатурой прерывание 9.
В этом случае написать такую программу немного сложнее.
158 Гл. 6. Компьютер и криптография
А это нехорошо  в полученной случайной последовательности чис-
ла 2 и 3 будут встречаться гораздо чаще, чем любые другие. После
преобразования к равномерному распределению значения этих часто
встречающихся чисел изменятся, но сам факт наличия двух-трех зна-
чений, на которые приходится львиная доля наблюдений, останется.
Получается, что нам мешает дискретность таймера персонального
компьютера. Как от нее избавиться? Подумайте сами. Один из возмож-
ных ответов вы найдете в конце главы.
§ 4. Поучимся на чужих ошибках
Удобно, красиво, но . . .
Рассмотрим примеры использования криптографических алгорит-
мов в широко распространенных программных продуктах.
В последнее время проблема защиты информации перестала быть
головной болью только государственных структур, над нею начинают
задумываться многие обычные пользователи ПК. Идя навстречу их по-
желаниям, многие производители программ стали включать в свои про-
дукты функции защиты данных. Однако в большинстве случаев раз-
работчики таких программ не ставят своей целью использовать в них
сколько-нибудь стойкие алгоритмы. Они считают основной своей зада-
чей предоставить пользователям возможность защитить информацию
либо от случайного несанкционированного доступа, либо от неквали-
фицированного взломщика. Программные продукты, о которых речь
пойдет ниже, широко известны. Они, скорее, маскируют информацию,
чем реализуют алгоритмы надежного криптографического закрытия.
Многие из вас, наверное, пользовались для редактирования доку-
ментов программным продуктом Microsoft Word. Эта программа предо-
ставляет пользователю широкий спектр возможностей для работы с до-
кументами, в том числе возможность сохранения информации в файлах
в различном формате.
Если вы посмотрите в меню сохранения документов программы
Word, то в параметрах этой операции обнаружите возможность указать
пароль для доступа к документу. То есть для его открытия и дальней-
шей работы с ним пользователь должен ввести пароль. Что происходит
с документом, если в соответствующем поле параметров ввести пароль?
Для ответа на этот вопрос достаточно посмотреть на два докумен-
та, желательно идентичных по содержанию, но сохраненных с паролем
и без него. В редакторе они будут выглядеть совершенно одинаково.
Однако, откроем эти документы (они имеют расширение .doc) какой-
нибудь программой просмотра файлов.
Мы увидим, что файл, представляющий документ в формате Mi§
4. Поучимся на чужих ошибках 159
crosoft Word, имеет сложную структуру. Он состоит из заголовка и
нескольких разделов, которые описывают текст, а также содержат дан-
ные о работе пользователя с документом и служебную информацию. В
одном из разделов файла, соответствующем документу без пароля, мы
можем увидеть сам открытый текст. При этом в том же разделе файла с
паролем мы обнаружим уже случайную последовательность символов.
Оказывается, пароль использовался не только для разрешения доступа
к документу при его открытии, но и являлся ключом некоторой крип-
тографической схемы, зашифровавшей текст.
Очевидно, что если не зашифровывать текст, то сама идея использо-
вать пароль была бы бесполезной. Любой пользователь сначала мог бы
¾вытащить руками¿ из файла большую часть текста, а потом перенести
его в Word. В то же время, выбранная в MicrosoftWord схема шифрова-
ния информации остановит только начинающего хакера [4]. Рассмотрим
ее подробнее.
Из пароля пользователяWord вырабатывает массив длиной 16 байт,
который назовем гаммой (gamma[0..15]).Далее, каждый байт открыто-
го текста (plain_text[i]) последовательно складывается побитно (XOR)
с байтом гаммы, в результате получаются знаки шифрованного текста
(cipher_text[i]),
которые мы можем видеть в файле с паролем. То есть шифрование
производится согласно формуле:
cipher_text[i] := plain_text[i] XOR gamma [imod16],
где mod 16  операция получения остатка от целочисленного деления
на 16.
Перед нами типичный пример криптографической схемы гаммиро-
вания короткой гаммой. Так как каждый шестнадцатый символ шиф-
рованного текста получается прибавлением к символу открытого текста
одного и того же значения гаммы, можно считать, что мы имеем дело с
16-ю простыми заменами. Для каждой из шестнадцати позиций символа
в тексте подсчитаем таблицу частот его значений, после чего выберем
в каждой из них значения символа, встретившегося чаще других.
Заметим, что самый частый символ в документе Word  это пробел
(его значение в кодировке ASCII есть 0x20). В этом легко убедиться,
просматривая документ в шестнадцатиричном формате. Следователь-
но, самым частым символам в таблице частот соответствуют зашифро-
ванные пробелы, и, складывая побитно значения этих символов с 0x20,
мы получим все 16 знаков гаммы. Далее, зная гамму, расшифровываем
весь текст. Не правда ли, просто!
На эту очевидную слабость многие сразу обратили внимание. По-
этому фирма Microsoft для последних версий текстового процессора
MicrosoftWord, начиная сWord 97, полностью изменила алгоритм шиф-
160 Гл. 6. Компьютер и криптография
рования файлов, встроив в него хорошо известные алгоритмы шифро-
вания RC4 и хеширования MD5.
Теперь посмотрим, как защищаются пароли пользователя в опера-
ционных системах (ОС) MicrosoftWindows 95 первых версий (до OSR 2).
Большинство современных сетевых ОС являются многопользова-
тельскими, это и Novell NetWare, и Microsoft Windows NT, и т. д. Для
разграничения доступа пользователей к своим ресурсам эти ОС требу-
ют от последних доказать свою подлинность. Делается это с помощью
пароля, который известен и ОС, и пользователю. Ясно, насколько важ-
но системе для обеспечения ее безопасности надежно и недоступно для
постороннего доступа хранить информацию о паролях пользователей.
ОС Microsoft Windows 95 не является многопользовательской и не
предоставляет возможность пользователям разделять свои ресурсы.
Тем не менее, для удобства работы она запрашивает у пользователя
при входе в систему его имя и пароль. Но если он ничего не ответит
(нажмет кнопку ¾Cancel¿), ОС все равно разрешит ему работать даль-
ше. Для чего же тогда запрашивается пароль?
Дело в том, что ПК может работать в локальной вычислительной се-
ти (ЛВС), где ему доступны ресурсы или серверы, для обращения к ко-
торым требуются пароли, причем, возможно, различные. Чтобы поль-
зователю не нужно было их все запоминать, ОС Microsoft Windows 95
запоминает пароли для доступа к ресурсам ЛВС в специальном файле
с именем ¾имя_пользователя.pwl¿. В этом файле данные шифруются
на том самом пароле, который система запрашивает у пользователя при
его входе в систему. Если пароль введен правильно, то в дальнейшем
ОС сама подставляет соответствующий пароль при запросе пользова-
теля на доступ к ресурсам или серверам ЛВС.
Данные в .pwl файлах шифруются следующим образом [5]. Из паро-
ля пользователя по алгоритму шифрования RC4 вырабатывается гам-
ма. Каждый пароль на доступ к соответствующему ресурсу вместе с
некоторой служебной информацией суммируется побитно с получен-
ной гаммой. То есть каждый раз при шифровании используется одна
и та же гамма. Если учесть, что .pwl файл содержит зашифрованную
запись, начинающуюся с имени пользователя, дополненного до 20 сим-
волов пробелами, то задача вскрытия пароля становится элементарной.
Получив первые 20 знаков гаммы, мы можем прочитать любой сохра-
ненный в файле пароль (учитывая то обстоятельство, что редко когда
используются пароли длиной более 10 символов).
Следует отметить, что сам по себе алгоритм RC4 довольно слож-
ный, и в данном случае использовались слабости не самого алгоритма,
а схемы его применения, а именно многократное использование одной
гаммы.
§ 4. Поучимся на чужих ошибках 161
Сколько дырок в вычислительных сетях?
При современном уровне развития компьютерных и информацион-
ных технологий даже обычный домашний ПК уже не мыслится отдель-
но от всего компьютерного киберпространства. Проникновение вычис-
лительных сетей всюду, где есть компьютеры, стремление самих пользо-
вателей объединяться вынесло на передний план лозунг компании Sun
Microsystem ¾Сеть  это компьютер¿. Разработчики современного про-
граммного обеспечения также стали ориентироваться на использование
сетевых технологий и обеспечение пользователей удобными средствами
для работы с распределенными ресурсами и удаленными источниками
информации.
Многие из вас пользовались ресурсами глобальной сети Internet,
кто-то имел возможность работать в локальных вычислительных сетях
(ЛВС). Наверное, при этом вы задавали себе вопросы:
– как защищается информация, передаваемая по открытым каналам
связи;
– можно ли, перехватывая данные, которыми обмениваются ком-
пьютеры в вычислительной сети, получить информацию о действиях
работающих на них пользователей;
– можно ли вмешаться в протокол взаимодействия компьютеров;
– как защитить свои данные при их передаче по каналам локальных
или глобальных сетей.
Мы не будем пытаться дать исчерпывающие ответы на поставленные
вопросы, в этом случае мы вышли бы далеко за рамки данной главы.
Попробуем просто посмотреть на примере существующих сейчас попу-
лярных систем, как эти вопросы решаются на практике.
Во-первых, как защищается информация, передаваемая по каналам
ЛВС и в глобальных сетях? Для большинства распространенных сете-
вых ОС можно ответить  никак!
Информация между компьютерами передается в открытом виде по
специальным коммуникационным протоколам. В этом легко убедить-
ся, воспользовавшись специальными программами перехвата и анализа
данных сетевого информационного обмена.
Такой программой является широко распространенный программ-
ный пакет LANalyzer forWindows фирмы Novell. Для его использования
не требуется каких-то специальных навыков работы в ЛВС. Для начала
перехвата информации достаточно нажать кнопку ¾Start¿, а для про-
смотра пойманных пакетов кнопку ¾View¿. Дополнительные возможно-
сти программы, например настройки фильтров перехвата, можно изу-
чить и использовать в дальнейшем, по ходу дела.
Просмотрев улов, вы обнаружите, что каждый пакет имеет весьма
сложную структуру, представляющую иерархию вложенных друг в дру-
162 Гл. 6. Компьютер и криптография
га сетевых протоколов. Но главное не в этом. Попробуйте перехватить
пакеты, когда с одного компьютера на другой копируется текстовый
файл. Без особого труда вы найдете файл в перехвате. Если он малень-
кий, то он размещен в одном пакете, если большой, то в нескольких.
Например, пусть копируется файл help.txt с содержанием:
Help, I need somebody,
Help, not just anybody,
Help, you know I need someone, help.
Этот файл может выглядеть при передаче по каналам ЛВС так (па-
кет декодирован программой LANalyzer):
ip: ======================= Internet Protocol =======================
Station:127.0.0.1 ---->127.0.0.2
Protocol: TCP
Version: 4
Header Length (32 bit words): 5
Precedence: Routine
Normal Delay, Normal Throughput, Normal Reliability
Total length: 194
Identification: 12292
Fragmentation not allowed, Last fragment
Fragment Offset: 0
Time to Live: 128 seconds
Checksum: 0xB689(Valid)
tcp: ================= Transmission Control Protocol =================
Source Port: 1091
Destination Port: NETBIOS-SSN
Sequence Number: 20624641
Acknowledgement Number: 849305
Data Offset (32-bit words): 5
Window: 7473
Control Bits: Acknowledgement Field is Valid (ACK)
Push Function Requested (PSH)
Checksum: 0xCB85(Valid)
Urgent Pointer: 0
Data:
0: 00 00 00 96 FF 53 4D 42 2F 00 00 00 00 18 03 80 |.....SMB/.......
10: 00 00 00 00 00 00 00 00 00 00 00 00 00 08 FE CA |................
20: 00 08 00 06 0E FF 00 00 00 00 08 00 00 00 00 FF |................
30: FF FF FF 00 00 57 00 00 00 57 00 3F 00 00 00 00 |.....W...W.?....
40: 00 57 00 48 65 6C 70 2C 20 49 20 6E 65 65 64 20 |.W.Help, I need
50: 73 6F 6D 65 62 6F 64 79 2C 0D 0A 48 65 6C 70 2C |somebody,..Help,
60: 20 6E 6F 74 20 6A 75 73 74 20 61 6E 79 62 6F 64 | not just anybod
70: 79 2C 0D 0A 48 65 6C 70 2C 20 79 6F 75 20 6B 6E |y,..Help, you kn
80: 6F 77 20 49 20 6E 65 65 64 20 73 6F 6D 65 6F 6E |ow I need someon
90: 65 2C 20 68 65 6C 70 2E 0D 0A |e, help...
Таким образом, если злоумышленник нашел возможность подклю-
читься к ЛВС и установил необходимое программное обеспечение, то он
без особого труда может собирать информацию о работе пользователей
§ 4. Поучимся на чужих ошибках 163
сети, запускаемых программных продуктах, содержании разрабатыва-
емых документов и т. п.
Кроме того, злоумышленник иногда может вмешиваться в работу
пользователей сети. В частности, некоторые атаки на сетевые ОС ис-
пользуют слабости протоколов идентификации получателей и отпра-
вителей информации в ЛВС. Дело в том, что каждый пакет, переда-
ваемый по каналам ЛВС, снабжается электронными сетевыми адреса-
ми компьютера-отправителя пакета и компьютера, которому этот пакет
предназначен. Это как адреса на почтовых конвертах.
В начале 90-х годов широко использовалась сетевая ОС Novell Net-
Ware ver 3.11. Пользуясь слабостью реализованных в этой системе сете-
вых протоколов, злоумышленник с помощью специальной программы,
подменяющей сетевые адреса, мог выдать свой компьютер за компью-
тер, на котором работает другой пользователь, в том числе Суперви-
зор [2]. После чего мог давать системе любые запросы на использова-
ние ее ресурсов, заводить новых пользователей, устанавливать их пра-
ва доступа. Данный способ подмены сетевых адресов получил название
¾Голландская атака¿ и широко описан в литературе.
Более того, при работе с Novell NetWare ver 3.11, пользуясь описан-
ными выше слабостями, можно было создавать в ЛВС ложные серверы
(компьютеры, где находится информация о пользователях и основные
ресурсы сети) и направлять запросы других пользователей через свой
компьютер.
Рассмотрим еще один важный вопрос, связанный с безопасностью
сетевых ОС. В большинстве случаев компьютеры ЛВС объединяются
в группы, которые в различных системах называются по разному: под-
сеть, домен, рабочая группа и т. д. Однако часто эти группы имеют неко-
торую общую структуру. В группе выделяется один (иногда несколько)
мощный компьютер, называемый сервером или контроллером домена,
который отвечает за общую безопасность. Остальные компьютеры (ра-
бочие станции) предназначаются для работы пользователей сети.
Сервер несет ответственность за разрешение санкционированного
доступа к ресурсам всей группы, например, к хранящимся на нем фай-
лам или сетевым принтерам. Он отвечает и за допуск в сеть зареги-
стрированных пользователей.
Если пользователь хочет воспользоваться ресурсами компьютеров
группы, он должен отправить на сервер информацию, подтверждаю-
щую свою подлинность. Как уже говорилось выше, чаще всего это дела-
ется с помощью пароля. Пользователь на рабочей станции вводит свои
имя и пароль, которые отправляются на сервер для проверки. Сервер
сравнивает полученные данные с хранящимся у него эталонным па-
ролем пользователя и по результатам проверки принимает решение о
доступе пользователя к ресурсам группы.
164 Гл. 6. Компьютер и криптография
Так поступают серверы большинства современных операционных си-
стем. Но мы знаем, что информация, передаваемая по каналам локаль-
ных вычислительных сетей, может быть легко перехвачена злоумыш-
ленником. Следовательно, пароль пользователя должен передаваться с
рабочей станции на сервер таким образом, что, даже перехватив его,
им нельзя было воспользоваться. Здесь на помощь приходит крипто-
графия.
Разберем это на примере сетевой ОС Novell NetWare ver 3.11.
Заметим, что в версии 2.12 этой системы пароль пользователя во-
обще передавался в открытом виде. Данное обстоятельство делало все
усилия по организации разграничения доступа к информации совер-
шенно бесполезными.
В версии 3.11 был использован протокол передачи информации о
пароле пользователя, состоящий из следующих шагов.
Шаг 1. Пользователь рабочей станции в ответ на запрос системы вво-
дит свое имя и пароль.
Шаг 2. Рабочая станция преобразует пароль пользователя, вычисляя
массив данных, называемый образом или сверткой пароля.
Шаг 3. Рабочая станция запрашивает у сервера разовый ключ (случай-
ный массив данных, используемый однократно, для одного входа
пользователя в систему).
Шаг 4. С использованием разового ключа и образа пароля пользовате-
ля рабочая станция вычисляет разовый билет на вход в систему,
который отправляет на сервер для проверки.
Шаг 5. Сервер осуществляет проверку билета и направляет рабочей
станции сообщение о ее результате. Если проверка прошла успеш-
но, то пользователь получает разрешение на доступ в систему.
При реализации данного протокола решался ряд задач по обеспече-
нию его безопасности, а именно:
– сделать максимально трудным подбор пароля пользователя зло-
умышленником, перехватившим в ЛВС разовый ключ и билет;
– добиться невозможности повторного использования билета для по-
лучения доступа к ресурсам системы.
Как видно из описания протокола, вторая задача была успешно ре-
шена. При каждом запросе пользователя на вход в систему билет вы-
числялся с участием разового ключа, а значит в дальнейшем он не по-
вторялся и не мог быть использован еще раз.
Для решения первой задачи в качестве базового элемента протокола
использовался криптографический алгоритм, участвующий в преобра-
зовании пароля в его образ на Шаге 2 и в вычислении разового билета
на Шаге 4.
§ 4. Поучимся на чужих ошибках 165
Алгоритм перерабатывает массив данных длиной 32 байта, его схема
приведена ниже (см. рис. 1). На ней:
Array  массив данных из 32 элементов (байтов), после каждого ша-
га работы схемы заполнение массива сдвигается на один элемент влево,
а в Array[31] записывается результат побитного сложения;
T ab  фиксированная таблица из 32 элементов (байтов), после каж-
дого шага работы схемы заполнение таблицы циклически сдвигается на
один элемент влево;
Elem  один элемент памяти (байт);
XOR  операция побитного сложения байтов;
+ и −  операции сложения и вычитания, соответственно, байтов
по модулю 256;
mod 32  операция получения остатка от деления на 32, результат
этой операции используется как индекс для выборки элемента массива
Array.
Схема работает 64 такта.
Несмотря на кажущуюся сложность схемы, оказалось, что она со-
держит ряд недостатков, позволяющих, при некоторых благоприятных
условиях, подбирать пароль пользователя [2]. Например, злоумышлен-
0 1 2 . . . 30 31
Tab
A − B
Array 0 1 2 . . . 30 31
B
A
+
+
XOR
Elem
mod 32
Рис. 1. Схема криптографического преобразования, используемого ОС
Novell NetWare.
166 Гл. 6. Компьютер и криптография
ник, перехватив разовый ключ и билет, мог попытаться в лоб подобрать
пароль пользователя. При этом он мог использовать словари наиболее
часто встречающихся паролей, которые любой из вас может найти в Internet.
Конечно, пароль не любого пользователя удастся таким образом
подобрать. Но это слабое утешение.
Какой же может быть найден выход для пользователей, желающих
надежно защитить свою информацию при ее передаче по открытым
каналам вычислительных сетей?
Ответ здесь один  использование программ шифрования, реализу-
ющих надежные криптографические алгоритмы.
Здесь может быть предложено два основных подхода по организации
системы шифрования:
– предварительное шифрование информации перед передачей ее по
сети;
– прозрачное шифрование пакетов сетевого информационного обме-
на.
Первый подход наиболее удобен в глобальных информационных се-
тях, например, Internet. Суть его в том, что пользователи, предвари-
тельно обменявшись ключами, шифруют свои данные, а потом пере-
дают их по каналам сети стандартными средствами файлового обмена.
Выгоды этого подхода очевидны, он позволяет пользователям, работаю-
щим с различными ОС, без особых затрат обмениватьсяшифрованными
данными.
Так работают пользователи программы Pretty Good Private (PGP),
разработанной Филиппом Зиммерманом в начале 90-х годов и широко
распространенной во всем мире. PGP позволяет вырабатывать индиви-
дуальные ключи пользователей, безопасно ими обмениваться и шифро-
вать данные. В нем реализованы алгоритм блочного шифрования IDEA
и схема открытого распределения ключей RSA.
Если вы не доверяете PGP (и это, по-видимому, правильно), то мо-
жете разработать свои собственные программы шифрования, взяв за
основу только его общую схему.
Для работы в ЛВС эффективнее использовать второй подход. Свя-
зано это с тем, что в локальных сетях происходит достаточно интенсив-
ный информационный обмен, и поэтому предварительное шифрование
оказывается неудобным и занимает много времени.
Прозрачное шифрование пакетов сетевого информационного обмена
обеспечивает защиту не только данных файлов пользователей, но и слу-
жебной информации, передаваемой по каналам ЛВС, о чем пользователь
может и не подозревать. Например, в этом случае будут шифроваться
данные о пароле пользователя, передаваемые на сервер для проверки,
данные о запросах пользователя на доступ к ресурсам системы, а также
данные, посылаемые на печать.
§ 4. Поучимся на чужих ошибках 167
Однако, данный подход значительно сложнее для реализации. Боль-
ше того, в настоящее время среди распространенных на рынке сете-
вых ОС нет ни одной, которая бы предоставляла пользователям такую
возможность. Скорее всего, появление доступных систем прозрачного
шифрования пакетов  дело ближайшего будущего.
В глобальных сетях дела с этим обстоят значительно лучше. Уже
достаточно давно получили широкое распространение программные
продукты, предоставляющие пользователям возможность прозрачного
шифрования данных, передаваемых по сети. Например, Netscape Navigator,
занимающий 75% рынка программ, предназначенных для работы
сWorldWideWeb (WWW) сети Internet и проведения через Internet рас-
четов по кредитным карточкам, включает в себя криптографическую
подсистему.
Netscape используют миллионы людей по всему миру, тем не менее,
в этой программе были найдены существенные ¾дыры¿. Ранние версии
Netscape содержали изъяны в двух основных элементах криптографи-
ческой подсистемы [5]:
– собственно в самом алгоритме шифрования;
– алгоритме генерации ключей.
Первый изъян состоял в том, что для шифрования данных сетевого
информационного обмена в программе Netscape в варианте, предназна-
ченном для экспорта из США (а именно им большинство и пользуется),
реализован алгоритм гаммирования RC4 [6] с ключом 40 бит! Возмож-
ности современной вычислительной техники таковы, что ключ такой
длины можно определить простым перебором в течении нескольких
дней. Какое-то время среди пользователей сети Internet даже развер-
нулось нечто вроде соревнования  кто быстрее сможет найти ключ.
В июле 1994 года ключ шифрования был восстановлен за 8 дней с
использованием объединенных вычислительных ресурсов 120 рабочих
станций и двух параллельных суперкомпьютеров.
В августе 1995 года данная задача была решена за то же время с
использованием около 100 компьютеров.
В декабре 1995 года один суперкомпьютер подобрал ключ за 7 дней.
Вторая ¾дыра¿ в системе защиты была выявлена у программы
Netscape (версия 1.2) двумя студентами Калифорнийского универси-
тета в сентябре 1995 года. Суть ее в том, что были обнаружены суще-
ственные слабости в алгоритме генерации ключей шифрования. Ключ
должен являться случайным числом. В Netscape для его вычисления
был реализован алгоритм генерации ¾случайных¿ чисел, основанный
на показании внутреннего таймера и значениях сетевых адресов. В ре-
зультате анализа ими был предложен алгоритм подбора ключа в тече-
ние всего одной минуты, а программа, реализующая данный алгоритм,
была опубликована в Internet.
168 Гл. 6. Компьютер и криптография
§ 5. Вместо заключения
Полезные советы
1. ¾Бойтесь данайцев, дары приносящих¿. Не верьте тому, кто заве-
ряет вас, что он способен надежно защитить ваши секреты. Он либо без-
надежный глупец, либо ваш конкурент. Специалист в любой ситуации
будет высказывать сомнения в надежности предлагаемой им защиты и
уж, по крайней мере, укажет вам ее возможные слабости.
2. Не будьте самоуверенны и не питайте иллюзий. Не рассчитывайте
полностью на свой интеллект и сообразительность.Со временем вас осе-
нит, и ваше остроумие подскажет вам, в чем слабости в предложенной
вами конструкции велосипеда.
3. Как можно меньше рекламы. Не хвастайтесь своим алгоритмом
и вообще, старайтесь как можно меньше показывать другим свою про-
грамму. Следуйте афоризму Дона Хуана: ¾Не расхваливайте в кругу
друзей достоинств своей супруги. Один из них наверняка захочет в этом
убедиться самостоятельно¿.
4. Не уподобляйтесь ученым. Даже если вам удалось доказать теоре-
му о том, что задача вскрытия вашей системы защиты алгоритмически
неразрешима, не расслабляйтесь. Попробуйте понять, почему не выпол-
няются условия доказанной вами теоремы.
5. Защита защиты. Создав наилучшую систему защиты, проверьте,
защищена ли она.
Ответ на первый вопрос.
Надо так написать программу шифрования, чтобы после N неудач-
ных попыток ввода пароля на доступ к ключевой дискете ключ с диске-
ты стирался. Если число N слишком велико, злоумышленник, возмож-
но, сумеет подобрать пароль. А если N слишком мало, может случиться
так, что вы сами случайно испортите свою ключевую дискету. Целесооб-
разно выбрать значение N в интервале 5 6 N 6 100. Пароль на доступ
к дискете не обязательно делать очень длинным и сложным. Главное,
чтобы его нельзя было угадать за N попыток.
Ответ на второй вопрос.
Надо считать случайной величиной не интервал времени между
последовательными нажатиями клавиш, а сумму n последовательных
интервалов. Другими словами, новый член добавляется в случайную
последовательность не при каждом нажатии пользователем клави-
ши, а при каждом n-ом нажатии. Число n можно взять в диапазоне
5 6 n 6 10. Если n слишком мало, дискретность сохранится, а ес-
ли слишком велико  ключ будет вырабатываться слишком медленно.
§ 5. Вместо заключения 169
Конечно, обе поставленные задачи можно решить и другими способа-
ми.
Литература к главе 6
[1] Д. Кнут. Искусство программирования для ЭВМ. Т. 2, М.: Мир,
1977.
[2] Теория и практика обеспечения информационной безопасности. Под
редакцией П. Д. Зегжды. М.: Издательство Агентства ¾Яхтсмен¿,
1996. 192 с.
[3] Р. Сайка. 56-разрядный код DES ¾расколот¿ на персональном ком-
пьютере. Computerworld Россия, 29 июля 1997.
[4] http://www.softseek.com/
Business_and_Productivity/Microsoft_Office/
Word_Add_Ons/Review_14603_index.html
[5] T. Ylonen, T. Kivinen, M. Saarinen. SSH Transport Layer Protocol.
Internet-Draft, November 1997.
draft-ietf-secsh-transport-03.txt.
[6] Orman H., The Oakley Key Determination Protocol. Version 1, TR97-
92. Department of Computer Science Technical Report, University of
Arizona.
Глава 7
Олимпиады по криптографии для
школьников
Предисловие
C 1991 г. Институт криптографии, связи и информатики Академии ФСБ
Российской Федерации проводит ежегодные олимпиады по криптографии и
математике для школьников г. Москвы и Подмосковья. Год от года растет
популярность этих олимпиад, о чем свидетельствует, например, то, что в по-
следней из них приняло участие более пятисот школьников 9–11 классов.
Олимпиады по криптографии и математике вызывают интерес у школьников
необычностью своего жанра. Кроме того, призерам предоставляются льготы
при поступлении в Институт.
Школьники часто спрашивают, с какой литературой по криптографии им
следует познакомиться, чтобы успешно выступить на олимпиаде. Никаких
специальных знаний для решения задач не требуется  в этом вы убедитесь,
ознакомившись с задачами, которые приводятся в данной главе. Вместе с
тем, мы не можем отрицать, что предварительное знакомство с криптогра-
фией полезно хотя бы чисто психологически, поскольку ¾внешний вид¿ задач
может показаться необычным. Многие задачи нашей олимпиады  крипто-
графические. Часть задач имеет криптографическую окраску, но их суть 
математическая. Отдельные задачи  чисто математические.
При подведении итогов каждой олимпиады мы знакомим участников с об-
щедоступными книгами по криптографии, которых в последние годы появи-
лось достаточно много. Однако эти книги либо слишком сложны для школь-
ников, либо поверхностны или недостаточно полны, либо малодоступны. По-
этому авторы настоящей главы поставили перед собой две основные цели:
во-первых, предложить элементарное введение в криптографию, используя
при этом чудесные детективные сюжеты известных произведений Ж. Верна,
А. Конан Дойла, Э. По, В. Каверина, связанные с зашифрованными сообще-
ниями; во-вторых, привести условия задач всех наших олимпиад с ответами
и решениями.
§ 1. Введение 171
§ 1. Введение
Если вы хотите передать свое текстовое сообщение (последователь-
ность символов некоторого алфавита) адресату так, чтобы оно осталось
тайным для посторонних лиц, то у вас есть, по крайней мере, две воз-
можности. Вы можете попытаться скрыть сам факт передачи текста, то
есть прибегнуть к методам стеганографии, в арсенале которой  симпа-
тические (невидимые) чернила, микроточки и тому подобные средства.
Другая возможность заключается в попытке скрыть смысл сообщения
от посторонних лиц, случайно или намеренно познакомившихся с пе-
редаваемым текстом. В этом случае вы можете прибегнуть к методам
криптографии. Термин ¾криптография¿ происходит от двух греческих
слов: ¾криптос¿  тайна и ¾графейн¿  писать, и означает тайнопись.
¾Тайнопись¿ как раз и подразумевает, что вы скрываете смысл своего
сообщения.
Сообщение, которое вы хотите передать адресату, будем называть
открытым сообщением. Например, в задаче 2.5 (раздел ¾Условия за-
дач¿) одним из открытых сообщений является фраза:
КОРАБЛИ ОТХОДЯТ ВЕЧЕРОМ
Для сохранения сообщения в тайне оно преобразуется криптогра-
фическими методами и только после этого передается адресату. Преоб-
разованное сообщение будем называть шифрованным сообщением (или
зашифрованным сообщением). Другое название зашифрованного сооб-
щения  криптограмма (или шифртекст). В задаче 2.5 зашифрованное
сообщение выглядит так:
ЮПЯТБНЩМСДТЛЖГПСГХСЦЦ
Зашифрованное сообщение не обязательно должно быть последо-
вательностью букв, как в указанной выше задаче. Часто зашифрован-
ное сообщение может представлять собой последовательность цифр или
специальных знаков (например, ¾пляшущих человечков¿).
Процесс преобразования открытого сообщения в шифрованное бу-
дем называть шифрованием или зашифрованием. Адресату заранее со-
общается, как из шифрованного сообщения получить открытое. Этот
процесс получения исходного сообщения называют дешифрованием или
расшифрованием.
При выборе правила шифрования надо стремиться к тому, чтобы по-
сторонние лица, не знающие правила расшифрования, не смогли восста-
новить по криптограмме открытое сообщение. В этом случае вы скроете
смысл сообщения и обеспечите ¾тайнопись¿.
Для удобства дальнейшего изложения обозначим буквой A  от-
крытое сообщение, B  шифрованное сообщение, f  правило шиф-
рования, g  правило расшифрования. В этом случае зашифрование
открытого сообщения A в шифрованное сообщение B можно записать в
172 Гл. 7. Олимпиады по криптографии для школьников
виде f(A) = B. Обратное преобразование (то есть получение открытого
сообщения A путем расшифрования B) запишется в виде соотношения
g(B) = A.
Правило зашифрования f не может быть произвольным. Оно долж-
но быть таким, чтобы по шифртексту B с помощью правила расшифро-
вания g можно было однозначно восстановить открытое сообщение A.
Однотипные правила зашифрования можно объединить в классы. Внут-
ри класса правила различаются между собой по значениям некоторого
параметра, которое может быть числом, таблицей и т. д. В криптогра-
фии конкретное значение такого параметра обычно называют ключом.
По сути дела, ключ выбирает конкретное правило зашифрования из
данного класса правил.
Зачем понадобилось вводить понятие ключа? Есть, по крайней ме-
ре, два обстоятельства, которые позволяют понять необходимость этого.
Во-первых, обычно шифрование производится с использованием специ-
альных устройств. У вас должна быть возможность изменять значе-
ние параметров устройства, чтобы зашифрованное сообщение не смог-
ли расшифровать даже лица, имеющие точно такое же устройство, но
не знающие выбранного вами значения параметра. Во-вторых, много-
кратное использование одного и того же правила зашифрования f для
зашифрования открытых текстов создает предпосылки для получения
открытых сообщений по шифрованным без знания правила расшифро-
вания g. Поэтому необходимо своевременно менять правило зашифро-
вания.
Используя понятие ключа, процесс зашифрования можно описать в
виде соотношения
f() = B,
в котором   выбранный ключ, известный отправителю и адресату.
Для каждого ключа  шифрпреобразование f должно быть обрати-
мым, то есть должно существовать обратное преобразование g, которое
при выбранном ключе  однозначно определяет открытое сообщение A
по шифрованному сообщению B:
g(B) = A.
Совокупность преобразований f и набор ключей, которым они соот-
ветствуют, будем называть шифром.
Среди всех шифров можно выделить два больших класса: шифры
перестановки и шифры замены.
Шифрами перестановки называются такие шифры, преобразова-
ния из которых приводят к изменению только порядка следования
символов исходного сообщения. Примером преобразования, которое мо-
жет содержаться в шифре перестановки, является следующее правило.
Каждая буква исходного сообщения, стоящая в тексте на позиции с
§ 1. Введение 173
четным номером, меняется местами с предшествующей ей буквой. В
этом случае ясно, что и исходное, и шифрованное сообщение состоят из
одних и тех же букв.
Шифрами замены называются такие шифры, преобразования из ко-
торых приводят к замене каждого символа открытого сообщения на
другие символы  шифробозначения, причем порядок следования шиф-
робозначений совпадает с порядком следования соответствующих им
символов открытого сообщения. В качестве примера преобразования,
которое может содержаться в шифре замены, приведем такое правило.
Каждая буква исходного сообщения заменяется на ее порядковый номер
в алфавите. В этом случае исходный буквенный текст преобразуется в
числовой.
Как правило, в задачах олимпиад шифр известен, а использованный
ключ  нет. Для определения исходного текста по шифрованному при
неизвестном ключе возможны два подхода: первый  определить ключ
и затем найти исходное сообщение расшифрованием; второй  найти
исходное сообщение без определения ключа. Получение открытого со-
общения по шифрованному без заранее известного ключа называется
вскрытием шифра, в отличие от расшифрования  когда ключ изве-
стен. Во многих случаях вскрытие шифра возможно, что и демонстри-
руют победители наших олимпиад.
Под стойкостью шифра, как правило, понимается способность про-
тивостоять попыткам провести его вскрытие. При анализе шифра обыч-
но исходят из принципа, сформулированного голландцем Огустом Керк-
гоффсом (1835–1903). Согласно этому принципу при вскрытии крипто-
граммы противнику известно о шифре все, кроме используемого ключа.
Одной из естественных характеристик шифра является число его воз-
можных ключей. Ведь вскрытие шифра можно осуществлять перебо-
ром всех возможных его ключей. Мы уже говорили, что в приводимых
ниже задачах олимпиад, как правило, шифр известен, но неизвестен
выбранный ключ, что соответствует принципу Керкгоффса. Так, в за-
даче 4.4 все дело сводится к перебору 24 различных вариантов ключа,
из которых только один дает читаемый текст. Поэтому многие участ-
ники олимпиады смогли восстановить сообщение на латинском языке,
даже не зная этого языка.
Подчас смешивают два понятия: шифрование и кодирование. Мы
уже договорились, что для шифрования надо знать шифр и секретный
ключ. При кодировании нет ничего секретного, есть только определен-
ная замена букв или слов на заранее определенные символы. Методы
кодирования направлены не на то, чтобы скрыть открытое сообщение, а
на то, чтобы представить его в более удобном виде для передачи по тех-
ническим средствам связи, для уменьшения длины сообщения и т. д. В
принципе, кодирование, конечно же, можно рассматривать как шифр
174 Гл. 7. Олимпиады по криптографии для школьников
замены, для которого ¾набор¿ возможных ключей состоит только из
одного ключа (например, буква ¾а¿ в азбуке Морзе всегда кодируется
знаками • и это не является секретом).
В настоящее время для защиты информации широко используются
электронные шифровальные устройства. Важной характеристикой та-
ких устройств является не только стойкость реализуемого шифра, но и
высокая скорость осуществления процессов шифрования и расшифро-
вания. Для создания и обеспечения грамотной эксплуатации такой тех-
ники широко используются достижения современной криптографии, в
основе которой лежат математика, информатика, физика, электроника
и другие науки.
Современная криптография бурно развивается. В ней появляются
новые направления. Так, с 1976 года развивается ¾открытая крипто-
графия¿. Ее отличительной особенностью является разделение ключей
для зашифрования и расшифрования. При этом ключ для зашифрова-
ния не требуется делать секретным, более того, он может быть обще-
доступным и содержаться в телефонном справочнике вместе с фамили-
ей и адресом его владельца. Подробнее об этом и других современных
задачах криптографии можно прочитать в главах 1, 2, 3 этой книги.
Наряду с термином ¾криптография¿ в литературе встречается тер-
мин ¾криптология¿, также происходящий от греческих корней, означа-
ющих ¾тайный¿ и ¾слово¿. Этот термин используется для обозначения
всей области секретной связи. Криптологию делят на две части: крип-
тографию и криптоанализ. Криптограф пытается найти методы обеспе-
чения секретности сообщений, криптоаналитик пытается при неизвест-
ном ключе выполнить обратную задачу. При этом часто говорят, что
криптоаналитик вскрыл шифр, хотя чаще он вскрывает ключ заранее
известного шифра.
§ 2. Шифры замены
Наиболее известными и часто используемыми шифрами являются
шифры замены. Они характеризуются тем, что отдельные части сооб-
щения (буквы, слова, . . . ) заменяются на какие-либо другие буквы, чис-
ла, символы и т. д. При этом замена осуществляется так, чтобы потом
по шифрованному сообщению можно было однозначно восстановить пе-
редаваемое сообщение.
Пусть, например, зашифровывается сообщение на русском языке
и при этом замене подлежит каждая буква сообщения. Формально в
этом случае шифр замены можно описать следующим образом. Для
каждой буквы  исходного алфавита строится некоторое множество
символов M так, что множества M и M попарно не пересекают-
ся при  6= , то есть любые два различные множества не содержат
§ 2. Шифры замены 175
одинаковых элементов. Множество M называется множеством шифр-
обозначений для буквы .
Таблица
. . .
. . .
(1)
является ключом шифра замены. Зная ее, можно осуществить как за-
шифрование, так и расшифрование.
При зашифровании каждая буква  открытого сообщения, начиная
с первой, заменяется любым символом из множества . Если в сооб-
щении содержится несколько букв , то каждая из них заменяется на
любой символ из . За счет этого с помощью одного ключа (1) можно
получить различные варианты зашифрованного сообщения для одно-
го и того же открытого сообщения. Например, если ключом является
таблица
а б в г д е ж з и к л м н о п р
21 37 14 22 01 24 62 73 46 23 12 08 27 53 35 04
40 26 63 47 31 83 88 30 02 91 72 32 77 68 60 44
10 03 71 82 15 70 11 55 90 69 38 61 54 09 84 45
с т у ф х ц ч ш щ ъ ы ь э ю я
20 13 59 25 75 43 19 29 06 65 74 48 36 28 16
52 39 07 49 33 85 58 80 50 34 17 56 78 64 41
89 67 93 76 18 51 87 66 81 92 42 79 86 05 57
то сообщение ¾я знаком с шифрами замены¿ может быть зашифровано,
например, любым из следующих трех способов:
16 55 54 10 69 09 61 89 29 90 49 44 10 08 02 73 21 32 83 54 74
41 55 77 10 23 68 08 20 66 90 76 44 21 61 90 55 21 61 83 54 42
57 30 27 10 91 68 32 20 80 02 49 45 40 32 46 55 40 08 83 27 42
Так как множества , , , . . . , попарно не пересекаются, то по каждо-
му символу шифрованного сообщения можно однозначно определить,
какому множеству он принадлежит, и, следовательно, какую букву от-
крытого сообщения он заменяет. Поэтому расшифрование возможно и
открытое сообщение определяется единственным образом.
Часто  состоит из одного элемента. Например, в романе Ж. Верна
¾Путешествие к центру Земли¿ в руки профессора Лиденброка попа-
дает пергамент с рукописью из знаков рунического письма. Каждое
множество  состоит из одного элемента. Элемент каждого множества
выбирается из набора символов вида
(2)
В рассказе А. Конан Дойла ¾Пляшущие человечки¿ каждый символ
176 Гл. 7. Олимпиады по криптографии для школьников
изображает пляшущего человечка в самых различных позах
(3)
На первый взгляд кажется, что чем хитрее символы, тем труднее
вскрыть сообщение, не имея ключа. Это, конечно, не так. Если каж-
дому символу однозначно сопоставить какую-либо букву или число, то
легко перейти к зашифрованному сообщению из букв или чисел. В ро-
мане Ж. Верна ¾Путешествие к центру Земли¿ каждый рунический
знак был заменен на соответствующую букву немецкого языка, что об-
легчило восстановление открытого сообщения. С точки зрения крип-
тографов использование различных сложных символов не усложняет
шифра. Однако, если зашифрованное сообщение состоит из букв или
цифр, то вскрывать такое сообщение удобнее.
Рассмотрим некоторые примеры шифров замены. Пусть каждое
множество  состоит из одной буквы. Например,
а б в г д е ж з и к л м н о п р
г л ь п д р а м ц в э ъ х о б н
с т у ф х ц ч ш щ ъ ы ь э ю я
с ж я и ю к щ ф е у ы ч ш т а
(4)
Такой шифр называется шифром простой однобуквенной замены. По
ключу (4) удобно проводить зашифрование и расшифрование: при за-
шифровании каждая буква открытого текста заменяется на соответ-
ствующую букву из второй строки (а на г и т. д.) При расшифровании,
наоборот, г заменяется на а и т. д. При шифровании и расшифровании
надо помнить вторую строчку в (4), то есть ключ.
Запомнить произвольный порядок букв алфавита достаточно слож-
но. Поэтому всегда пытались придумать какое-либо правило, по кото-
рому можно просто восстановить вторую строчку в (4).
Одним из первых шифров, известных из истории, был так называе-
мый шифр Цезаря, для которого вторая строка в (4) является последо-
вательностью, записанной в алфавитном порядке, но начинающейся не
с буквы а:
а б в . . . ь э ю я
г д е . . . я а б в
(5)
В одной из задач (задача 4.4) используется шифр Цезаря. Запом-
нить ключ в этом случае просто  надо знать первую букву второй
строки (4) (последовательность букв в алфавите предполагается из-
вестной). Однако такой шифр обладает большим недостатком. Число
различных ключей равно числу букв в алфавите. Перебрав эти вариан-
ты, можно однозначно восстановить открытое сообщение, так как при
§ 2. Шифры замены 177
правильном выборе ключа получится ¾осмысленный¿ текст. В других
случаях обычно получается ¾нечитаемый¿ текст. Задача 4.4 именно на
это и рассчитана. Несмотря на то, что используется фраза на латин-
ском языке, которого школьники не знают, многие участники олимпи-
ады смогли указать открытое сообщение.
Другим примером шифра замены может служить лозунговый шифр.
Здесь запоминание ключевой последовательности основано на лозун-
ге  легко запоминаемом слове. Например, выберем слово-лозунг ¾учеб-
ник¿ и заполним вторую строку таблицы по следующему правилу: сна-
чала выписываем слово-лозунг, а затем выписываем в алфавитном по-
рядке буквы алфавита, не вошедшие в слово-лозунг. Вторая строка в (4)
примет вид
у ч е б н и к а в г д ж з л м о
п р с т ф х ц ш щ ъ ы ь э ю я
В данном случае число вариантов ключа существенно больше числа
букв алфавита.
Рассмотренные шифры имеют одну слабость. Если в открытом со-
общении часто встречается какая-либо буква, то в шифрованном сооб-
щении часто будет встречаться соответствующий ей символ или бук-
ва. Поэтому при вскрытии шифра замены обычно стараются наиболее
часто встречающимся символам шифрованного сообщения поставить
в соответствие буквы открытого сообщения с наибольшей предпола-
гаемой частотой появления. Если шифрованное сообщение достаточно
большое, то этот путь приводит к успеху, даже если вы не знаете клю-
ча.
Кроме частоты появления букв, могут быть использованы другие
обстоятельства, помогающие раскрыть сообщение. Например, может
быть известна разбивка на слова, как в задаче 4.2, и расставлены зна-
ки препинания. Рассматривая небольшое число возможных вариантов
замены для предлогов и союзов, можно попытаться определить часть
ключа. В этой задаче существенно используется, какие гласные или
согласные могут быть удвоенными: ¾нн¿, ¾ее¿, ¾ии¿ и др.
При анализе шифрованного сообщения следует исходить из того, что
число различных вариантов для части определяемого ключа не такое
уж большое, если вы находитесь на правильном пути. В противном слу-
чае либо вы получите противоречие, либо число вариантов ключа будет
сильно возрастать. Обычно, начиная с некоторого момента определение
открытого сообщения становится делом техники. Так, в задаче 4.2, если
вы определили ¾денно и нощно¿, то дальнейшее определение открытого
текста не представляет труда.
Вообще-то можно сказать, что вскрытие шифров замены является
искусством и достаточно трудно формализовать этот процесс.
Популярные у школьников криптограммы (типа рассмотренной в
178 Гл. 7. Олимпиады по криптографии для школьников
задаче 1.5) по сути дела являются шифром замены с ключом
0 1 2 3 4 5 6 7 8 9
ш и ф р з а м е н ы
в котором каждой цифре ставится в соответствие буква. При этом
должны соблюдаться правила арифметики. Эти правила значительно
облегчают определение открытого текста, так же, как правила синтак-
сиса и орфографии в задаче 4.2 облегчают нахождение четверостишия
В. Высоцкого.
Любые особенности текста, которые могут быть вам известны,  ва-
ши помощники. Например, в задаче 5.2 прямо сказано, что в тексте есть
выражения ¾зпт¿, ¾тчк¿, как часто бывает в реальных телеграммах. И
эта подсказка  путь к решению задачи.
Шифрование даже относительно небольших текстов на одном клю-
че для рассмотренных шифров замены создает условия для вскрытия
открытых сообщений. Поэтому такие шифры пытались усовершенство-
вать. Одно из направлений  построение шифров разнозначной заме-
ны, когда каждой букве ставится в соответствие один или два символа.
(Простейшим примером является шифр, определяемый в задаче 4.2.)
Например,
а б в г д е ж з и к л м н о п р
73 74 51 65 2 68 59 1 60 52 75 61 8 66 58 3
с т у ф х ц ч ш щ ъ ы ь э ю я
69 64 53 54 9 62 71 4 67 56 72 63 55 70 57
Если шифрованное сообщение написано без пробелов между симво-
лами, то появляется дополнительная трудность при разбиении шифро-
ванного сообщения на отдельные символы и слова.
Другое направление создания шифров замены состоит в том, что-
бы множества шифробозначений  содержали более одного элемента.
Такие шифры получили название шифров многозначной замены. Они
позволяют скрыть истинную частоту букв открытого сообщения, что
существенно затрудняет вскрытие этих шифров. Главная трудность,
которая возникает при использовании таких шифров, заключается в
запоминании ключа. Надо запомнить не одну строчку, а для каждой
буквы алфавита   множество ее шифробозначений . Как прави-
ло, элементами множеств  являются числа. Из художественной лите-
ратуры и кинофильмов про разведчиков вам известно, что во время
второй мировой войны часто использовались так называемые книжные
шифры. Множество шифробозначений для каждой буквы определяется
всеми пятизначными наборами цифр, в каждом из которых первые две
цифры указывают номер страницы, третья цифра  номер строки, чет-
вертая и пятая цифры  номер места данной буквы в указанной строке.
Поэтому при поимке разведчика всегда пытались найти книгу, которая
§ 2. Шифры замены 179
могла быть использована им в качестве ключа.
Мы не останавливаемся здесь на более сложных методах постро-
ения шифров замены. Приведенных примеров достаточно, чтобы оце-
нить многообразие таких шифров. Но все они имеют серьезный недоста-
ток  на одном ключе нельзя шифровать достаточно длинные сообще-
ния. Поэтому, как правило, шифры замены используются в комбинации
с другими шифрами. Чаще всего  с шифрами перестановки, о которых
вы прочитаете в следующем разделе.
В заключение, следуя героям известных литературных произведе-
ний, вскроем некоторые шифры замены. Обратите внимание на то, ка-
кие неожиданные обстоятельства при этом используются. Действитель-
но, вскрытие шифров  искусство.
А. Конан Дойл, ¾Пляшущие человечки¿
В этом рассказе Холмсу необходимо было прочитать тексты пяти
записок:
I.
II.
III.
IV.
V.
Первая записка была так коротка, что дала возможность Холмсу
сделать всего лишь одно правдоподобное предположение, оказавшееся
впоследствии правильным. По-видимому, флаги употребляются лишь
для того, чтобы отмечать концы отдельных слов. Больше ничего по
первой записке установить было нельзя. Четвертая записка, по всей
видимости, содержала всего одно слово, так как в ней не было флагов.
Вторая и третья записки начинались, несомненно, с одного и того
же слова из четырех букв. Вот это слово:
Оно кончается той же буквой, какой и начинается. Счастливая мысль:
письма обычно начинаются с имени того, кому письмо адресовано. Че-
ловек, писавший миссис Кьюбит эти послания, был, безусловно, близко
180 Гл. 7. Олимпиады по криптографии для школьников
с ней знаком. Вполне естественно, что он называет ее просто по имени.
А зовут ее Илси. Таким образом, Холмсу стали известны три буквы: И,
Л и С.
В двух записках их автор обращается к миссис Кьюбит по имени
и, видимо, чего-то требует от нее. Не хочет ли он, чтобы она пришла
куда-нибудь, где он мог с ней поговорить? Холмс обратился ко второ-
му слову третьей записки. В нем 7 букв, из которых третья и послед-
няя  И. Холмс предположил, что слово это  ПРИХОДИ, и сразу оказался
обладателем еще 5 букв: П, Р, Х, О, Д.
Тогда он обратился к четвертой записи, которая появилась на двери
сарая. Холмс предположил, что она является ответом и что написала ее
миссис Кьюбит. Подставив в текст уже известные буквы, он получил:
-И-О-Д-. Что же могла миссис Кьюбит ответить на просьбу прийти?
Внезапно Холмс догадался: НИКОГДА
Возвратившись к первой записке, Холмс получил:
- -Д-С- А- СЛ-НИ
Он предположил, что четвертое слово  СЛЕНИ Это  фамилия, чрез-
вычайно распространенная в Америке. Коротенькое слово из двух букв,
стоящее перед фамилией, по всей вероятности, имя. Какое же имя мо-
жет состоять из двух букв? В Америке весьма распространено имя Аб.
Теперь остается установить только первое слово фразы; оно состоит
всего из одной буквы, и отгадать его нетрудно: это  местоимение Я.
Далее Холмс восстанавливает содержание второй записки:
ИЛСИ Я
∗
-И-
◦
-
◦
- -ЛРИД
∗
-А
Здесь указаны границы слов, а снизу одинаковыми символами отмече-
ны одинаковые буквы. Четвертое слово состоит из одной буквы (по-
видимому, это союз или предлог). Буквы О и И уже определены, С,
А и К  тоже. Остаются следующие возможности: это  либо В, ли-
бо У. Вряд ли это  В, так как в этом случае получилось бы ¾нечи-
таемое¿ третье слово -И-В. Поэтому, скорее всего  это предлог У.
Небольшой перебор незадействованных букв дает правдоподобную ги-
потезу о значении третьего слова: ЖИВУ. Скорее всего, последнее слово
(-ЛРИДЖА)  мужское имя, в котором неизвестная буква  Э. Поэтому
вторая записка гласит: ИЛСИ Я ЖИВУ У ЭЛРИДЖА
Холмс послал телеграмму в нью-йоркское полицейское управление с
запросом о том, кто такой Аб Слени. Поступил ответ: ¾Самый опасный
бандит в Чикаго¿.
Сразу после этого появилась последняя (5-я) записка, в которой не
хватало трех букв: ИЛСИ ГО-ОВЬСЯ К С-ЕР-И, из которой сразу опреде-
ляются буквы М и Т:
ИЛСИ ГОТОВЬСЯ К СМЕРТИ
§ 2. Шифры замены 181
Шестая записка была направлена Холмсом преступнику:
Э. По, ¾Золотой жук¿
Найден пергамент с текстом криптограммы. Для удобства пронуме-
руем по порядку все символы этого текста:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
5 3 # # + 3 0 5 ) ) 6 * ; 4 8 2 6 ) 4
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
# • ) 4 # ) ; 8 0 6 * ; 4 8 + 8 
37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
6 0 ) ) 8 5 ; ; ] 8 * ; : # * 8
53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
+ 8 3 ( 8 8 ) 5 * + ; 4 6 ( ; 8 8
70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
* 9 6 * ? ; 8 ) * # ( ; 4 8 5 ) ;
87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
5 * + 2 : * # ( ; 4 9 5 6 * 2 (
103 104 105 106 107 108 109 110 111 112 113 114 115
5 * = 4 ) 8  8 * ; 4 0 6
116 117 118 119 120 121 122 123 124 125 126 127 128
9 2 8 5 ) ; ) 6 + 8 ) 4 #
129 130 131 132 133 134 135 136 137 138 139 140 141 142
# ; 1 ( # 9 ; 4 8 0 8 1 ; 8
143 144 145 146 147 148 149 150 151 152 153 154 155 156
: 8 # 1 ; 4 8 + 8 5 ; 4 ) 4
157 158 159 160 161 162 163 164 165 166 167 168 169
8 5 + 5 2 8 8 0 6 * 8 1 (
170 171 172 173 174 175 176 177 178 179 180 181 182
# 9 ; 4 8 ; ( 8 8 ; 4 ( #
183 184 185 186 187 188 189 190 191 192 193 194 195
? 3 4 ; 4 8 ) 4 # ; 1 6 1
196 197 198 199 200 201 202 203 204
; : 1 8 8 ; # ? ;
Кроме того, на пергаменте изображены череп и козленок. Главный ге-
рой рассказа рассуждал следующим образом. По английски козленок 
kid; череп связан с капитаном Киддом, по английски  kidd. Козленок
182 Гл. 7. Олимпиады по криптографии для школьников
был нарисован на пергаменте в том месте, где ставится подпись. Изобра-
жение черепа в противоположном по диагонали углу наводило на мысль
о печати или гербе. Капитан Кидд владел несметным богатством. Кидд,
насколько мы можем судить о нем, не сумел бы составить истинно слож-
ную криптограмму. По-видимому, это была простая замена. Возникает
только вопрос о языке, на котором был написан текст. В данном случае
трудностей с определением языка не было: подпись давала разгадку.
Игра слов kid и kidd возможна лишь в английском языке.
Текст криптограммы идет в сплошную строку. Задача была бы на-
много проще, если бы отдельные слова были отделены пробелами. Тогда
можно было бы начать с анализа и сличения более коротких слов, и как
только нашлось бы слово из одной буквы (например, местоимение ¾я¿
или союз ¾и¿  для русского языка), начало было бы положено. Но
просветов в строке не было.
Приходится подсчитывать частоты одинаковых символов, чтобы уз-
нать, какие из них чаще, а какие реже встречаются в криптограмме. В
результате получилась таблица частот всех символов:
8 ; 4 ) # * 5 6 ( + 1 0 2 9 : 3 ?  • ] =
34 27 19 16 15 14 12 11 9 8 7 6 5 5 4 4 3 2 1 1 1
В английской письменной речи самая частая буква  e. Далее идут
в нисходящем порядке: a, o, i, d, h, n, r, s, t, u, y, c, f, g,
l, m, w, b, k, p, q, x, z. Буква e, однако, настолько часто встре-
чается, что трудно построить фразу, в которой она не занимала бы гос-
подствующего положения. Итак, уже сразу у нас в руках путеводная
нить. Составленная таблица, вообще говоря, может быть очень полез-
на, но в данном случае она понадобилась лишь в начале работы.
Поскольку символ 8 встречается чаще других, примем его за букву e
английского алфавита. Для проверки этой гипотезы взглянем, встреча-
ется ли этот символ дважды подряд, так как в английском языке буква
e часто удваивается, например, в словах meet, fleet, speed, seen, seed,
been, agree, и т. д. Хотя криптограмма невелика, пара 88 стоит в нем
пять раз.
Самое частое слово в английском языке  определенный артикль
the. Посмотрим, не повторяется ли у нас сочетание из трех символов,
расположенных в одинаковой последовательности и оканчивающихся
символом 8. Если такое найдется, то это будет, по всей вероятности,
the. Приглядевшись, находим семь раз сочетание из трех символов ;48.
Итак, мы имеем право предположить, что символ ;  это буква t, а
4  h; вместе с тем подтверждается, что 8  это действительно e. Мы
сделали важный шаг вперед.
То, что мы расшифровали целое слово, потому так существенно, что
позволяет найти границы некоторых других слов. Для примера возьмем
§ 2. Шифры замены 183
предпоследнее из сочетаний этого рода ;48 (позиции 172–174). Идущий
сразу за 8 символ ; будет, как видно, начальной буквой нового слова.
Выпишем, начиная с него, 6 символов подряд. Только один из них нам
незнаком. Обозначим известные символы буквами и оставим свободное
место для неизвестного символа (обозначим его точкой) t.eeth, ни одно
слово, начинающееся с t и состоящее из 6 букв, не имеет в английском
языке окончания th. В этом легко убедиться, подставляя на свободное
место все буквы по очереди. Попробуем отбросить две последние буквы
и получим t.ee, для заполнения свободного места можно снова взяться
за алфавит. Единственно верным прочтением этого слова будет tree
(дерево). В таком случае мы узнаем еще одну букву  r, она обозна-
чена символом ( и мы можем прочитать два слова подряд the tree, в
дальнейшем эта гипотеза может либо подтвердиться, либо привести к
некоторому ¾нечитаемому¿ фрагменту. В последнем случае следует по-
пытаться восстановить либо слово t.e, либо t.eet, либо слово, целиком
включающее в себя t.eeth
Развиваем успех. Немного далее (186–188) находим уже знакомое
нам сочетание ;48. Примем его опять за границу нового слова и вы-
пишем целый отрывок, начиная с двух расшифрованных нами слов.
Получаем такую запись:
the tree ;4(#?34 the
Заменим уже известные символы буквами:
the tree thr#?3h the
а неизвестные  точками:
the tree thr...h the
Нет никакого сомнения, что неясное слово  through (через). Это от-
крытие дает нам еще три буквы  o, u и g, обозначенные в криптограм-
ме символами # ? и 3.
Надписывая над уже определенными символами криптограммы их
значения, находим вблизи от ее начала (позиции 54–58) группу сим-
волов 83(88, которая читается так egree, это, конечно, слово degree
(градус) без первой буквы. Теперь мы знаем, что буква d обозначена
символом +. Вслед за словом degree через 4 символа встречаем группу
;46(;88*. Заменим известные символы буквами, а неизвестные  точ-
ками th.rtee, по-видимому, перед нами слово thirteen (тринадцать).
К известным нам буквам прибавились i и n, обозначенные в крипто-
грамме символами 6 и *.
Криптограмма начинается так: 53##+. Подставляя буквы и точки,
получаем .good, недостающая буква, конечно, a, и, значит, два первых
слова будут читаться так: a good (хороший). Определены следующие
11 символов:
5 + 8 3 4 6 * # ( ; ?
a d e g h i n o r t u
184 Гл. 7. Олимпиады по криптографии для школьников
На этом анализ Э. По заканчивается.Дальнейшую работу проделаем
самостоятельно.
Четвертый по частоте (16 вхождений) символ ) еще не определен.
Возвратимся к диаграмме встречаемости букв английского языка. Сре-
ди первого десятка букв этой диаграммы у нас не встретилась лишь
буква s. Она  первый претендент на значение символа ). Эта гипотеза
подтверждается тем, что вряд ли ) обозначает гласную букву, так как
в таком случае мы получили бы ¾нечитаемые¿ фрагменты
6 7 8 9 10 11 12
g . a ) ) i n
или
37 38 39 40 41 42
i . ) ) e a
То, что символ )  это буква s, легко проверяется на участке крип-
тограммы с 60-й по 89-ю позиции .and thirteen .inutes north east
and Поэтому полагаем, что символ )  это s. Попутно определилось
значение символа 9, это  m.
Перебирая возможные значения символа 0, стоящего на позициях
7 и 28 криптограммы, убеждаемся в том, что единственно возможным
его значением может быть лишь буква l (glass  стекло, hostel  обще-
житие, гостиница или трактир).
Определяем, далее, значение символа  как v по фрагменту текста
в позициях 107–113.
Теперь на участке текста с 22-й по 70-ю позиции остались неопреде-
ленными лишь значения символов ] и :, встретившихся по одному разу.
Очевидно, что символ ]  это w, а символ :  это y. Теперь на участке
текста с 172-й по 204-ю позиции не выявлено лишь значение символа 1,
которое, как нетрудно заметить, может быть лишь буквой f.
Символ 2, стоящий на позициях 117 и 90, очевидно, заменяет бук-
ву b.
Осталось определить лишь значения символов • и =. Небольшой
перебор еще неустановленных букв показывает, что символ =  это c,
а символ • может обозначать одну из букв k, p, q, x или z. Обратив-
шись к словарю, находим единственное подходящее окончание p слова
bishop (епископ, слон).
Таким образом, однозначно определились значения всех 21 симво-
лов, встречающихся в криптограмме. Получился следующий открытый
текст:
¾A good glass in the bishop’s hostel in the devil’s seat twenty one degrees
and thirteen minutes northeast and by north main branch seventh limb east
side shoot from the left eye of the death’s head a bee line from the tree
through the shot fifty feet out¿.
§ 2. Шифры замены 185
В переводе на русский язык: ¾Хорошее стекло в трактире епископа на чер-
товом стуле двадцать один градус и тринадцать минут северо-северо-восток
главный сук седьмая ветвь восточная сторона стреляй из левого глаза мерт-
вой головы прямая от дерева через выстрел на пятьдесят футов¿.
Восстановленная простая замена:
A B C D E F G H I L M N O P R S T U V W Y
5 2 = + 8 1 3 4 6 0 9 * # • ( ) ; ?  ] :
Ж. Верн, ¾Путешествие к центру Земли¿
В руки профессора Лиденброка попадает пергамент со следующей
рукописью:
¾Это  рунические письмена; знаки эти совершенно похожи на зна-
ки манускрипта Снорре. Но . . . что же они означают?  спрашивает
профессор,  . . .Ведь это все же древнеисландский язык,  бормотал
он себе под нос¿. Изучение рукописи привело профессора к выводу о
том, что это зашифрованное сообщение. Для его прочтения профессор
решил заменить буквы сообщения их аналогами в современном немец-
ком алфавите: ¾А теперь я буду диктовать тебе,  говорит он своему
помощнику,  буквы нашего алфавита, соответствующие каждому из
этих исландских знаков¿. Он называл одну букву за другой, и таким
образом последовательно составлялась таблица непостижимых слов:
m . r n l l s e s r e u e l s e e c J d e
s g t s s m f u n t e i e f n i e d r k e
k t , s a m n a t r a t e S S a o d r r n
e m t n a e I n u a e c t r r i l S a
A t v a a r . n s c r c i e a a b s
c c d r m i e e u t u l f r a n t u
d t , i a c o s e i b o K e d i i I
186 Гл. 7. Олимпиады по криптографии для школьников
Можно было предположить, что таинственная запись сделана одним
из обладателей книги, в которой находился пергамент. Не оставил ли
он своего имени на какой-нибудь странице? На обороте второй страни-
цы профессор обнаружил что-то вроде пятна, похожего на чернильную
кляксу. Воспользовавшись лупой, он различил несколько наполовину
стертых знаков, которые можно было восстановить. Получилась запись
которая читалась как ¾арне сакнус-
сем¿  имя ученого XVI столетия, знаменитого алхимика!
Далее профессор рассуждал так: ¾Документ содержит 132 буквы,
79 согласных и 53 гласных. Приблизительно такое же соотношение су-
ществует в южных языках, в то время как наречия севера бесконечно
богаче согласными. Следовательно, мы имеем дело с одним из южных
языков.¿ ¾. . .Сакнуссем,  продолжал профессор,  был ученый чело-
век; поэтому раз он писал не на родном языке, то, разумеется, должен
был отдавать предпочтение языку, общепринятому среди образованных
умов XVI века, а именно  латинскому. Если я ошибаюсь, то можно бу-
дет испробовать испанский, французский, итальянский, греческий или
еврейский. Но ученые XVI столетия писали обычно по-латински. Та-
ким образом, я вправе признать не подлежащим сомнению, что это 
латынь.¿
¾Всмотримся хорошенько,  сказал он, снова взяв исписанный ли-
сток.  Вот ряд из 132 букв, расположенных крайне беспорядочно. Вот
слова, в которых встречаются только согласные, как, например, первое
m.rnlls; в других, напротив, преобладают гласные, например, в пятом
unteief, или в предпоследнем  oseibo. Очевидно, что эта группиров-
ка не случайна; она произведена автоматически, при помощи неизвест-
ного нам соотношения, которое определило последовательность этих
букв. Я считаю несомненным, что первоначальная фраза была написа-
на правильно, но затем по какому-то принципу, который надо найти,
подверглась преобразованию. Тот, кто владел бы ключом этого шифра,
свободно прочел бы ее. Но что это за ключ?¿
¾При желании затемнить смысл фразы первое, что приходит на ум,
как мне кажется, это написать слова в вертикальном направлении, а не
в горизонтальном¿. Проверяя эту гипотезу, он начал диктовать, назы-
вая сначала первые буквы каждого слова, потом вторые; он диктовал
буквы в таком порядке:
m e s s u n k a S e n r A . i c e f d o K . s e g n i t t a m u r t n e c e
r t s e r r e t t e , r o t a i v s a d u a , e d n e c s e d s a d n e l a k
a r t n i i i l u J s i r a t r a c S a r b m u t a b i l e d m e k m e r e t
a r c s i l u c o I s l e f f e n S n I
С полученным текстом у профессора долго ничего не выходило. Это
почти привело его в отчаяние. Однако ¾. . . совершенно машинально
§ 3. Шифры перестановки 187
я стал обмахиваться этим листком бумаги, так что лицевая и оборот-
ная стороны листка попеременно представали перед моими глазами.
. . .Каково же было мое изумление, когда вдруг мне показалось, что пе-
редо мной промелькнули знакомые, совершенно ясные слова, латинские
слова: craterem, terrestre!¿ Дело в том, что читать этот текст нужно
было не слева направо, как обычно, а наоборот! Таким образом, случай
помог профессору найти ключ к решению задачи. Документ гласил сле-
дующее:
¾In Sneffels Ioculis craterem kem delibat umbra Scartaris Julii intra
calendas descende, audas viator, et terrestre centrum attinges. Kod feci.
Arne Saknussem¿.
В переводе это означало: ¾Спустись в кратер Екуль Снайфедльс,
который тень Скартариса ласкает перед июльскими календами, отваж-
ный странник, и ты достигнешь центра Земли. Это я совершил. Арне
Сакнуссем¿.
§ 3. Шифры перестановки
Шифр, преобразования из которого изменяют только порядок следо-
вания символов исходного текста, но не изменяют их самих, называется
шифром перестановки (ШП).
Рассмотрим преобразование изШП, предназначенное для зашифро-
вания сообщения длиной n символов. Его можно представить с помо-
щью таблицы 
1 2 . . . n
i1 i2 . . . in

, (6)
где i1  номер места шифртекста, на которое попадает первая буква
исходного сообщения при выбранном преобразовании, i2  номер места
для второй буквы и т. д. В верхней строке таблицы выписаны по по-
рядку числа от 1 до n, а в нижней  те же числа, но в произвольном
порядке. Такая таблица называется подстановкой степени n.
Зная подстановку, задающую преобразование, можно осуществить
как зашифрование, так и расшифрование текста. Например, если для
преобразования используется подстановка 
1 2 3 4 5 6
5 2 3 1 4 6

и в соответствии с ней зашифровывается слово МОСКВА, то получится
КОСВМА. Попробуйте расшифровать сообщение НЧЕИУК, полученное в ре-
зультате преобразования с помощью указанной выше подстановки.
В качестве упражнения читателю предлагается самостоятельно вы-
писать подстановки, задающие преобразования в описанных ниже трех
примерах шифров перестановки. Ответы помещены в конце раздела.
188 Гл. 7. Олимпиады по криптографии для школьников
Читатель, знакомый с методом математической индукции, может
легко убедиться в том, что существует 1 · 2 · 3 · . . . · n (обозначается n!,
читается ¾n факториал¿) вариантов заполнения нижней строки табли-
цы (6). Таким образом, число различных преобразований шифра пе-
рестановки, предназначенного для зашифрования сообщений длины n,
меньше либо равно n! (заметим, что в это число входит и вариант пре-
образования, оставляющий все символы на своих местах!).
С увеличением числа n значение n! растет очень быстро. Приведем
таблицу значений n! для первых 10 натуральных чисел:
n 1 2 3 4 5 6 7 8 9 10
n! 1 2 6 24 120 720 5040 40320 362880 3628800
При больших n для приближенного вычисления n! можно пользоваться
известной формулой Стирлинга
n! ≈
√2n
n
e
n
,
где = 2, 718281828 . . . .
Примером ШП, предназначенного для зашифрования сообщений
длины n, является шифр, в котором в качестве множества ключей взято
множество всех подстановок степени n, а соответствующие им преоб-
разования шифра задаются, как было описано выше. Число ключей
такого шифра равно n!.
Для использования на практике такой шифр не удобен, так как при
больших значениях n приходится работать с длинными таблицами.
Широкое распространение получили шифры перестановки, исполь-
зующие некоторую геометрическую фигуру. Преобразования из этого
шифра состоят в том, что в фигуру исходный текст вписывается по хо-
ду одного ¾маршрута¿, а затем по ходу другого выписывается с нее.
Такой шифр называют маршрутной перестановкой. Например, можно
вписывать исходное сообщение в прямоугольную таблицу, выбрав такой
маршрут: по горизонтали, начиная с левого верхнего угла поочередно
слева направо и справа налево. Выписывать же сообщение будем по
другому маршруту: по вертикали, начиная с верхнего правого угла и
двигаясь поочередно сверху вниз и снизу вверх.
Зашифруем, например, указанным способом фразу:
ПРИМЕРМАРШРУТНОЙПЕРЕСТАНОВКИ
используя прямоугольник размера 4 × 7:
П Р И М Е Р М
Н Т У Р Ш Р А
О Й П Е Р Е С
И К В О Н А Т
Зашифрованная фраза выглядит так:
МАСТАЕРРЕШРНОЕРМИУПВКЙТРПНОИ
§ 3. Шифры перестановки 189
Теоретически маршруты могут быть значительно более изощренными,
однако запутанность маршрутов усложняет использование таких шиф-
ров.
Ниже приводятся описания трех разновидностей шифров переста-
новки, встречавшихся в задачах олимпиад.
Шифр ¾Сцитала¿. Одним из самых первых шифровальных при-
способлений был жезл (¾Сцитала¿), применявшийся еще во времена
войны Спарты против Афин в V веке до н. э. Это был цилиндр, на
который виток к витку наматывалась узкая папирусная лента (без про-
светов и нахлестов), а затем на этой ленте вдоль его оси записывался
необходимый для передачи текст. Лента сматывалась с цилиндра и от-
правлялась адресату, который, имея цилиндр точно такого же диамет-
ра, наматывал ленту на него и прочитывал сообщение. Ясно, что такой
способ шифрования осуществляет перестановку местами букв сообще-
ния.
Шифр ¾Сцитала¿, как видно из решения задачи 2.1, реализует не
более n перестановок (n, по прежнему,  длина сообщения). Действи-
тельно, этот шифр, как нетрудно видеть, эквивалентен следующему
шифру маршрутной перестановки: в таблицу, состоящую из m столб-
цов, построчно записывают сообщение, после чего выписывают буквы
по столбцам. Число задействованных столбцов таблицы не может пре-
восходить длины сообщения.
Имеются еще и чисто физические ограничения, накладываемые ре-
ализацией шифра ¾Сцитала¿. Естественно предположить, что диаметр
жезла не должен превосходить 10 сантиметров. При высоте строки в
1 сантиметр на одном витке такого жезла уместится не более 32 букв
(10 < 32). Таким образом, число перестановок, реализуемых ¾Сцита-
лой¿, вряд ли превосходит 32.
Шифр ¾Поворотная решетка¿. Для использования шифра, на-
зываемого поворотной решеткой, изготавливается трафарет из прямо-
угольного листа клетчатой бумаги размера 2m×2k клеток. В трафарете
вырезано mk клеток так, что при наложении его на чистый лист бумаги
того же размера четырьмя возможными способами его вырезы полно-
стью покрывают всю площадь листа.
Буквы сообщения последовательно вписываются в вырезы трафаре-
та (по строкам, в каждой строке слева направо) при каждом из четырех
его возможных положений в заранее установленном порядке.
Поясним процесс шифрования на примере. Пусть в качестве ключа
используется решетка 6 × 10, приведенная на рис. 1.
Зашифруем с ее помощью текст
ШИФРРЕШЕТКАЯВЛЯЕТСЯЧАСТНЫМСЛУЧАЕМШИФРАМАРШРУТНОЙПЕРЕСТАНОВКИ
Наложив решетку на лист бумаги, вписываем первые 15 (по числу вы-
резов) букв сообщения: ШИФРРЕШЕТКАЯВЛЯ.... Сняв решетку, мы увидим
190 Гл. 7. Олимпиады по криптографии для школьников
Рис. 1.
текст, представленный на рис. 2. Поворачиваем решетку на 180◦. В око-
шечках появятся новые, еще не заполненные клетки. Вписываем в них
следующие 15 букв. Получится запись, приведенная на рис. 3. Затем
переворачиваем решетку на другую сторону и зашифровываем остаток
текста аналогичным образом (рис. 4, 5).
Ш
И Ф Р Р
Е Ш Е
Т К
А
Я В Л Я
Ш
И Ф Р Р
Е Ш Е
Т К
А
Я В Л Я
Е Т С Я
Ч
А С
Т Н Ы
М С Л У
Ч
Рис. 2. Рис. 3.
Ш
И Ф Р Р
Е Ш Е
Т К
А
Я В Л Я
Е Т С Я
Ч
А С
Т Н Ы
М С Л У
Ч
А Е М Ш
И
Ф Р
А М А
Р Ш Р У
Т
Ш
И Ф Р Р
Е Ш Е
Т К
А
Я В Л Я
Е Т С Я
Ч
А С
Т Н Ы
М С Л У
Ч
А Е М Ш
И
Ф Р
А М А
Р Ш Р У
Т
Н
О Й П Е
Р Е С
Т А
Н
О В К И
Рис. 4. Рис. 5.
Получатель сообщения, имеющий точно такую же решетку, без тру-
да прочтет исходный текст, наложив решетку на шифртекст по порядку
четырьмя способами.
Можно доказать, что число возможных трафаретов, то есть коли-
чество ключей шифра ¾решетка¿, составляет = 4mk (см. задачу 1.1).
Этот шифр предназначен для сообщений длины n = 4mk. Число всех
перестановок в тексте такой длины составит (4mk)!, что во много раз
§ 3. Шифры перестановки 191
больше числа . Однако, уже при размере трафарета 8 × 8 число воз-
можных решеток превосходит 4 миллиарда.
Широко распространена разновидность шифра маршрутной пе-
рестановки, называемая ¾шифром вертикальной перестановки¿
(ШВП). В нем снова используется прямоугольник, в который со-
общение вписывается обычным способом (по строкам слева напра-
во). Выписываются буквы по вертикали, а столбцы при этом берут-
ся в порядке, определяемом ключом. Пусть, например, этот ключ
таков: (5,4,1,7,2,6,3), и с его помощью надо зашифровать сообще-
ние:
ВОТПРИМЕРШИФРАВЕРТИКАЛЬНОЙПЕРЕСТАНОВКИ
Впишем сообщение в прямоугольник, столбцы которого пронумерованы
в соответствии с ключом:
5 1 4 7 2 6 3
В О Т П Р И М
Е Р Ш И Ф Р А
В Е Р Т И К А
Л Ь Н О Й П Е
Р Е С Т А Н О
В К И - - - -
Теперь, выбирая столбцы в порядке, заданном ключом, и выписывая
последовательно буквы каждого из них сверху вниз, получаем такую
криптограмму:
ОРЕЬЕКРФИЙА-МААЕО-ТШРНСИВЕВЛРВИРКПН-ПИТОТ-
Число ключей ШВП не более m!, где m  число столбцов таблицы.
Как правило, m гораздо меньше, чем длина текста n (сообщение укла-
дывается в несколько строк по m букв), а, значит, и m! много меньше n!.
Пользуясь приведенной выше формулой Стирлинга при больших m
и n, попытайтесь оценить, во сколько раз число возможных переста-
новок ШВП с m столбцами меньше числа всех перестановок на тексте
длины n, кратном m.
В случае, когда ключ ШВП не рекомендуется записывать, его мож-
но извлекать из какого-то легко запоминающегося слова или предложе-
ния. Для этого существует много способов. Наиболее распространенный
состоит в том, чтобы приписывать буквам числа в соответствии с обыч-
ным алфавитным порядком букв. Например, пусть ключевым словом
будет ПЕРЕСТАНОВКА. Присутствующая в нем буква А получает номер 1.
Если какая-то буква входит несколько раз, то ее появления нумеруют-
ся последовательно слева направо. Поэтому второе вхождение буквы
А получает номер 2. Поскольку буквы Б в этом слове нет, то буква В
получает номер 3 и так далее. Процесс продолжается до тех пор, пока
все буквы не получат номера. Таким образом, мы получаем следующий
192 Гл. 7. Олимпиады по криптографии для школьников
ключ:
П Е Р Е С Т А Н О В К А
9 4 10 5 11 12 1 7 8 3 6 2
Перейдем к вопросу о методах вскрытия шифров перестановки.
Проблема, возникающая при восстановлении сообщения, зашифрован-
ного ШП, состоит не только в том, что число возможных ключей ве-
лико даже при небольших длинах текста. Если и удастся перебрать все
допустимые варианты перестановок, не всегда ясно, какой из этих ва-
риантов истинный. Например, пусть требуется восстановить исходный
текст по криптограмме АОГР, и нам ничего не известно, кроме того,
что применялся шифр перестановки. Какой вариант ¾осмысленного¿
исходного текста признать истинным: ГОРА или РОГА? А может быть
АРГО? Приведем пример еще более запутанной ситуации. Пусть требу-
ется восстановить сообщение по криптограмме
ААНИНК-ТЕОМЛ,З.ЬЬЗИВТЛП-ЬЯО
полученной шифром перестановки. Возможны, как минимум, два вари-
анта исходного сообщения:
КАЗНИТЬ,-НЕЛЬЗЯ-ПОМИЛОВАТЬ. и
КАЗНИТЬ-НЕЛЬЗЯ,-ПОМИЛОВАТЬ.
Эти варианты имеют прямо противоположный смысл и в имеющихся
условиях у нас нет возможности определить, какой из вариантов истин-
ный.
Иногда, за счет особенностей реализации шифра, удается получить
информацию об использованном преобразовании (перестановке). Рас-
смотрим шифр ¾Сцитала¿ из задачи 2.1. Выше уже рассматривался
вопрос о количестве перестановок, реализуемых ¾Сциталой¿. Их ока-
залось не более 32. Это число невелико, поэтому можно осуществить
перебор всех вариантов. При достаточной длине сообщения, мы, скорее
всего, получим единственный читаемый вариант текста. Однако, ис-
пользуя информацию о расположении линий, оставленных шифроваль-
щиком, удается определить диаметр стержня, а значит, и возникающую
перестановку букв (см. задачу 2.1).
В рассмотренном примере шифровальщик по неосторожности оста-
вил на папирусе следы, позволяющие нам легко прочитать сообщение.
Возможны и другие ситуации, когда не очень ¾грамотное¿ использова-
ние шифра облегчает вскрытие переписки.
В задаче 5.2 содержится пример текста, зашифрованного ШВП.
По условию пробелы между словами при записи текста в таблицу
опускались. Поэтому заключаем, что все столбцы, содержащие пробел
в последней строке, должны стоять в конце текста. Таким образом,
возникает разбиение столбцов на две группы (содержащие 6 букв, и
содержащие 5 букв). Для завершения восстановления исходного текста
§ 3. Шифры перестановки 193
достаточно найти порядок следования столбцов в каждой из групп в
отдельности, что гораздо проще.
Аналогичная ситуация возникает и при ¾неполном¿ использовании
шифра ¾решетка¿ (см. задачу 4.1). Пусть имеется решетка размера
m × r, и зашифрованное с ее помощью сообщение длины mr − k, не
содержащее пробелов. Незаполненные k мест в решетке при условии,
что k 6 mr/4, соответствуют вырезам в четвертом положении решет-
ки. На основе такой информации, происходит резкое уменьшение числа
допустимых решеток (их будет 4mr/4−k). Читателю предлагается само-
стоятельно подсчитать число допустимых решеток при k > mr/4.
На примере решения задачи 5.2 продемонстрируем еще один подход
к вскрытию шифров вертикальной перестановки  лингвистический.
Он основан на том, что в естественных языках некоторые комбинации
букв встречаются очень часто, другие  гораздо реже, а многие вообще
не встречаются (например  ¾ыьъ¿).
Будем подбирать порядок следования столбцов друг за другом так,
чтобы во всех строках этих столбцов получались ¾читаемые¿ отрезки
текста. В приведенном решении задачи восстановление текста начина-
ется с подбора цепочки из трех столбцов первой группы, содержащей
в последней строке сочетание ТЧК, так как естественно предположить,
что сообщение заканчивается точкой. Далее подбираются столбцы, про-
должающие участки текста в других строках, и т. д.
Сочетание лингвистического метода с учетом дополнительной ин-
формации довольно быстро может привести к вскрытию сообщения.
В заключение рассказа о шифрах перестановки приведем историю
с зашифрованным автографом А. С. Пушкина, описанную в романе
В. Каверина ¾Исполнение желаний¿.
Главный герой романа  студент-историк Н. Трубачевский,  зани-
мавшийся работой в архиве своего учителя  академика Бауэра С. И., 
нашел в одном из секретных ящиков пушкинского бюро фрагмент недо-
писанной Х главы ¾Евгения Онегина¿. Это был перегнутый вдвое по-
лулист плотной голубоватой бумаги с водяным знаком 1829 года. На
листе было написано следующее.
1. Властитель слабый и лукавый 1. Нечаянно пригретый славой
2. Его мы очень смирным знали 2. Орла двуглавого щипали
3. Гроза двенадцатого года 3. Остервенение народа
4. Но Бог помог  стал ропот ниже 4. Мы очутилися в Париже
5. И чем жирнее, тем тяжеле 5. Скажи, зачем ты в самом деле
6. Авось, о Шиболет народный 6. Но стихоплет великородный
7. Авось, аренды забывая 7. Авось по манью Николая
8. Сей муж судьбы, сей странник 8. Сей всадник, папою венчанный
бранный
9. Тряслися грозно Пиринеи 9. Безрукий князь друзьям Мореи
194 Гл. 7. Олимпиады по криптографии для школьников
10. Я всех уйму с моим народом 10. А про себя и в ус не дует
11. Потешный полк Петра Титана 11. Предавших некогда тирана
12. Россия присмирела снова 12. Но искра пламени иного
13. У них свои бывали сходки 13. Они за рюмкой русской водки
14. Витийством резким знамениты 14. У беспокойного Никиты
15. Друг Марса, Вакха и Венеры 15. Свои решительные меры
16. Так было над Невою льдистой 16. Блестит над каменкой
тенистой
17. Плешивый щеголь, враг труда 17. Над нами царствовал тогда
18. Когда не наши повара 18. У Бонапартова шатра
19. Настала  кто тут нам помог? 19. Барклай, зима иль русский бог?
20. И скоро силою вещей 20. А русский царь главой царей
21. О русский глупый наш народ 21. . . . . . . . . . . . . . . . . .
22. Тебе б я оду посвятил 22. Меня уже предупредил
23. Ханжа запрется в монастырь 23. Семействам возвратит Сибирь
24. Пред кем унизились цари 24. Исчезнувший как тень зари
25. Волкан Неаполя пылал 25. Из Кишинева уж мигал
26. Наш царь в конгрессе говорил 26. Ты александровский холоп (?)
27. Дружина старых усачей 27. Свирепой шайке палачей
28. И пуще царь пошел кутить 28. Уже издавна, может быть
29. Они за чашею вина 29. . . . . . . . . . . . . . . . . .
30. Сбирались члены сей семьи 30. У осторожного Ильи
31. Тут Лунин дерзко предлагал 31. И вдохновенно бормотал
32. Но там, где ранее весна 32. И над холмами Тульчина
Без особых усилий Трубачевский прочитал рукопись, и ничего не
понял. Он переписал ее, получилась бессвязная чепуха, в которой одна
строка, едва начавшая мысль, перебивается другой, а та  третьей, еще
более бессмысленной и бессвязной. Он попробовал разбить рукопись
на строфы,  опять не получилось. Стал искать рифмы,  как будто
и рифм не было, хотя на белый стих все это мало похоже. Просчи-
тал строку  четырехстопный ямб, размер, которым написан ¾Евгений
Онегин¿.
Трубачевский с азартом взялся за рукопись, пытался читать ее, про-
пуская по одной строке, потом по две, по три, надеясь случайно угадать
тайную последовательность, в которой были записаны строки. У него
ничего не получалось. Тогда он стал читать третью строку вслед за пер-
вой, пятую за третьей, восьмую за пятой, предположив, что пропуски
должны увеличиваться в арифметической прогрессии. Все то же! От-
чаявшись, он бросил эту затею. Однако, она не давала ему покоя ни на
лекции, ни в трамвае. . . Как шахматист, играющий в уме, он не толь-
ко знал наизусть каждую строчку, он видел ее в десяти комбинациях
сразу.
Прошло время. Однажды, когда он смотрел на светлые пятна
окон подходящего к перрону поезда, каким-то внутренним зрением он
§ 4. Многоалфавитные шифры замены с периодическим ключом 195
увидел перед собой всю рукопись  и с такой необыкновенной отчетли-
востью, как это бывает только во сне.
Сможете ли вы прочитать эти стихи? Ответ вы найдете в романе
В. Каверина.
Ответы к упражнению.
1) Шифр маршрутной перестановки
1 2 3 4 5 6 7 8 9 10 11 12 13 14
25 24 17 16 9 8 1 2 7 10 15 18 23 26
15 16 17 18 19 20 21 22 23 24 25 26 27 28
27 22 19 14 11 6 3 4 5 12 13 20 21 28
2) Шифр ¾решетка¿
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
2 11 15 17 18 22 26 30 34 38 42 53 56 57 60
16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 4 5 8 19 23 27 31 35 39 43 44 46 50 59
31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
3 6 7 10 12 24 28 32 36 40 41 45 47 48 52
46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
9 13 14 16 20 21 25 29 33 37 49 51 54 55 58
3) ШВП
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
23 1 17 34 7 29 12 24 2 18 35 8 30 13 25
16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
3 19 36 9 31 14 26 4 20 37 10 32 15 27 5
31 32 33 34 35 36 37 38
21 38 11 33 16 28 6 22
§ 4. Многоалфавитные шифры замены с
периодическим ключом
Рассмотрим 30-буквенный алфавит русского языка:
А Б В Г Д Е Ж З И К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ь Ы Э Ю Я.
В этом алфавите отсутствуют буквы Ё, Й и Ъ, что практически не
ограничивает возможностей по составлению открытых сообщений на
русском языке. В самом деле, замена буквы Ё на букву Е, буквы Й 
на букву И, а буквы Ъ  на букву Ь позволяет понять смысл открытого
сообщения, написанного с использованием этого алфавита.
196 Гл. 7. Олимпиады по криптографии для школьников
В алфавите любого естественного языка буквы следуют друг за дру-
гом в определенном порядке. Это дает возможность присвоить каждой
букве алфавита ее естественный порядковый номер. Так, в приведенном
алфавите букве А присваивается порядковый номер 1, букве О  поряд-
ковый номер 14, а букве Ы  порядковый номер 27. Если в открытом со-
общении каждую букву заменить ее естественным порядковым номером
в рассматриваемом алфавите, то преобразование числового сообщения
в буквенное позволяет однозначно восстановить исходное открытое со-
общение. Например, числовое сообщение 1 11 20 1 3 9 18 преобразуется
в буквенное сообщение: АЛФАВИТ.
А Б В
Г
Д
Е
Ж
З
И
К
Л
М
Н
Т С Р П О
У
Ф
Х
Ц
Ч
Ш
Щ
Ь
Ы
Э
Ю Я
Рис. 6.
Дополним естественный порядок букв в алфавите. Будем считать,
что за последней буквой алфавита следует его первая буква. Такой по-
рядок букв достигается, если расположить их на окружности в есте-
ственном порядке по часовой стрелке. При таком расположении мож-
но каждой из букв присвоить поряд-
ковый номер относительно любой бук-
вы алфавита. Такой номер назовем от-
носительным порядковым номером. За-
метим, что если число букв в алфавите
равно z, то относительный порядковый
номер данной буквы может принимать
все значения от 0 до (z − 1) в зави-
симости от буквы, относительно кото-
рой он вычисляется. Для примера рас-
смотрим исходный 30-буквенный алфа-
вит русского языка, расположенный на
окружности (см. рис. 6).
В этом случае порядковый номер буквы А относительно буквы А
равен 0, относительно буквы Я он уже равен 1 и так далее, относи-
тельно буквы Б порядковый номер А равен 29. Значения относительных
порядковых номеров букв алфавита из z букв совпадают со значени-
ями всевозможных остатков от деления целых чисел на натуральное
число z. Убедитесь в том, что порядковый номер какой-либо буквы ал-
фавита относительно другой буквы равен остатку от деления разности
их естественных порядковых номеров на число букв в алфавите.
Обозначим символами:
D(N1,N2)  порядковый номер буквы с естественным порядковым но-
мером N1 относительно буквы с естественным порядковым номером N2;
rm(N)  остаток от деления целого числа N на натуральное число m.
При этом справедливо равенство D(N1,N2) = rz(N1 − N2), где z 
число букв в алфавите.
Для удобства обозначим N1N2 = rz(N1 − N2), N1N2 = rz(N1 +
+ N2). Тогда имеют место равенства:
§ 4. Многоалфавитные шифры замены с периодическим ключом 197
D(N1,N2) = N1N2, (7)
N1 = N2D(N1,N2). (8)
Формула (8) непосредственно получается из (7) и ее можно исполь-
зовать для замены буквы с естественным порядковым номером N2 на
букву с естественным порядковым номером N1. Число D(N1,N2) назы-
вается знаком гаммы.
Для уяснения введенных обозначений читателю предлагается само-
стоятельно решить следующие задачи.
1. Докажите, что для любых целых N1, N2 и любого натурального
z справедливо равенство: D(N1,N2) = N1 − N2 −

N1 − N2
z

· z, где
[X]  целая часть числа X (наибольшее целое число, не превосходящее
числа ).
2. Докажите равенство (8) и равенство:
N2 = N1D(N1,N2). (9)
Для зашифрования некоторого открытого сообщения, состоящего из
N букв, с помощью указанной замены требуется N знаков гаммы: по
одному на каждую букву сообщения. Последовательность знаков гам-
мы, необходимая для зашифрования открытого сообщения, является
ключом данного шифра.
Если последовательность знаков гаммы имеет небольшой (по срав-
нению с длиной открытого текста) период, то соответствующий шифр
называется шифром замены с периодическим ключом. Ключом такого
шифра, по существу, является отрезок гаммы, равный по длине перио-
ду.
Число отрезков некоторой длины , состоящих из чисел от 0
до (z − 1) равно z, так как на каждой из позиций отрезка может быть
любое из z чисел (независимо от чисел, находящихся на других пози-
циях). Для наглядности приведем значения z при z = 30 в зависимости
от значений :
1 2 3 4 5 6 7
30 30 900 27000 810000 24300000 0, 729 · 109 0, 2187 · 1011
8 9 10
30 0, 6561 · 1012 0, 19683 · 1014 0, 59049 · 1015
Как видно из приведенной таблицы, число ключей рассматривае-
мого шифра замены с ключом периода 10, достаточно внушительно и
составляет уже сотни триллионов. Это обстоятельство делает практиче-
ски невозможным вскрытие шифра методом перебора всех его ключей
даже при меньших значениях периода гаммы.
198 Гл. 7. Олимпиады по криптографии для школьников
Для рассматриваемого шифра характерно то, что буквы открытого
текста, зашифрованные одним и тем же знаком гаммы, по сути, зашиф-
рованы одним и тем же шифром простой замены. Например, ключевая
таблица этого шифра простой замены при знаке гаммы, равном 1, имеет
вид:
АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЬЫЭЮЯ
БВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЬЫЭЮЯА
Вторую строку этой ключевой таблицы называют алфавитом шифро-
вания, соответствующим данному знаку гаммы. Поскольку в рассмат-
риваемом шифре возможны все значения гаммы от 0 до 29, то данный
шифр можно рассматривать как 30-алфавитный шифр замены. Если
каждому из этих алфавитов поставить в соответствие его первую бук-
ву, то каждый знак гаммы можно заменить этой буквой. В этом случае
ключ рассматриваемого шифра можно взаимнооднозначно заменить со-
ответствующим словом в этом же алфавите. Такой многоалфавитный
шифр замены был описан в 1585 году французом Блезом де Виженером
в его ¾Трактате о шифрах¿:
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
B C D E F G H I J K L M N O P Q R S T U V W X Y Z A
C D E F G H I J K L M N O P Q R S T U V W X Y Z A B
D E F G H I J K L M N O P Q R S T U V W X Y Z A B C
E F G H I J K L M N O P Q R S T U V W X Y Z A B C D
F G H I J K L M N O P Q R S T U V W X Y Z A B C D E
G H I J K L M N O P Q R S T U V W X Y Z A B C D E F
H I J K L M N O P Q R S T U V W X Y Z A B C D E F G
I J K L M N O P Q R S T U V W X Y Z A B C D E F G H
J K L M N O P Q R S T U V W X Y Z A B C D E F G H I
K L M N O P Q R S T U V W X Y Z A B C D E F G H I J
L M N O P Q R S T U V W X Y Z A B C D E F G H I J K
M N O P Q R S T U V W X Y Z A B C D E F G H I J K L
N O P Q R S T U V W X Y Z A B C D E F G H I J K L M
O P Q R S T U V W X Y Z A B C D E F G H I J K L M N
P Q R S T U V W X Y Z A B C D E F G H I J K L M N O
Q R S T U V W X Y Z A B C D E F G H I J K L M N O P
R S T U V W X Y Z A B C D E F G H I J K L M N O P Q
S T U V W X Y Z A B C D E F G H I J K L M N O P Q R
T U V W X Y Z A B C D E F G H I J K L M N O P Q R S
U V W X Y Z A B C D E F G H I J K L M N O P Q R S T
V W X Y Z A B C D E F G H I J K L M N O P Q R S T U
W X Y Z A B C D E F G H I J K L M N O P Q R S T U V
X Y Z A B C D E F G H I J K L M N O P Q R S T U V W
Y Z A B C D E F G H I J K L M N O P Q R S T U V W X
Z A B C D E F G H I J K L M N O P Q R S T U V W X Y
§ 4. Многоалфавитные шифры замены с периодическим ключом 199
Все алфавиты шифрования относительно латинского алфавита были
сведены им в таблицу, получившую впоследствии название ее авто-
ра. Выше приведена таблица Виженера для современного латинско-
го алфавита, она состоит из списка 26 алфавитов шифрования. Спо-
соб зашифрования с помощью таблицы Виженера заключается в том,
что первый из алфавитов соответствует алфавиту открытого текста, а
букве ключевого слова соответствует алфавит шифрования из данно-
го списка, начинающийся с этой буквы. Буква шифрованного текста
находится в алфавите шифрования на месте, соответствующем дан-
ной букве открытого текста. Простота построения таблицы Вижене-
ра делает эту систему привлекательной для практического использо-
вания. Рассмотрим пример вскрытия многоалфавитного шифра заме-
ны с периодическим ключом, содержащийся в рассказе Жюля Верна
¾Жангада¿. Вот текст, который был получен с помощью такого типа
шифра:
С Г У Ч П В Э Л Л З Й Р Т Е П Н Л Н Ф Г И Н Б О Р Г Й У
Г Л Ч Д К О Т Х Ж Г У У М З Д Х Р Ъ С Г С Ю Д Т П Ъ А Р
В Й Г Г И Щ В Ч Э Е Ц С Т У Ж В С Е В Х А Х Я Ф Б Ь Б Е
Т Ф З С Э Ф Т Х Ж З Б З Ъ Г Ф Б Щ И Х Х Р И П Ж Т З В Т
Ж Й Т Г О Й Б Н Т Ф Ф Е О И Х Т Т Е Г И И О К З П Т Ф Л
Е У Г С Ф И П Т Ь М О Ф О К С Х М Г Б Т Ж Ф Ы Г У Ч О Ю
Н Ф Н Ш З Г Э Л Л Ш Р У Д Е Н К О Л Г Г Н С Б К С С Е У
П Н Ф Ц Е Е Е Г Г С Ж Н О Е Ы И О Н Р С И Т К Ц Ь Е Д Б
У Б Т Е Т Л О Т Б Ф Ц С Б Ю Й П М П З Т Ж П Т У Ф К Д Г
Догадавшись, что ключом является натуральное число, персонаж
¾Жангады¿, судья Жаррикес, объясняет сыну обвиняемого Маноэлю,
как был зашифрован документ: ¾Давайте возьмем фразу, все равно
какую, ну хотя бы вот эту:
У СУДЬИ ЖАРРИКЕСА ПРОНИЦАТЕЛЬНЫЙ УМ
А теперь я возьму наудачу какое-нибудь число, чтобы сделать из этой
фразы криптограмму. Предположим, что число состоит из трех цифр,
например, 4, 2 и 3. Я подписываю число 423 под строчкой так, чтобы
под каждой буквой стояла цифра, и повторяю число, пока не дойду до
конца фразы. Вот что получится:
У С У Д Ь И Ж А Р Р И К Е С А П Р О Н И Ц А Т Е Л Ь Н Ы Й У М
4 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4 2 3 4
Будем заменять каждую букву нашей фразы той буквой, которая стоит
после нее в алфавите
АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ
на месте, указанном цифрой. Например, если под буквой А стоит циф-
ра 3, вы отсчитываете три буквы и заменяете ее буквой Г. Если буква
200 Гл. 7. Олимпиады по криптографии для школьников
находится в конце алфавита и к ней нельзя прибавить нужного чис-
ла букв, тогда отсчитывают недостающие буквы с начала алфавита.
Доведем до конца начатую криптограмму, построенную на числе
423, и исходная фраза заменится следующей:
Ч У Ц И Ю Л К В У Ф К Н Й У Г У Т С С К Щ Д Ф И П Ю Р Я Л Ц Р
Но как найти числовой ключ? Подсчет, проведенный Жаррикесом,
показывает, что поиск ключа перебором всех возможных чисел, состо-
ящих не более чем из 10 цифр, потребует более трехсот лет. Судья пы-
тается наудачу отгадать заветное число. Наступает день казни. Обви-
няемого Жоама Дакосту ведут на виселицу. . .
Но все заканчивается благополучно. Помог счастливый случай. Дру-
гуЖоама удается узнать, что автора криптограммы звали Ортега. По-
ставив буквы О, Р, Т, Е, Г, А над последними шестью буквами документа
и подсчитав, на сколько эти буквы по алфавиту сдвинуты относительно
букв криптограммы, судья, наконец, находит ключ к документу:
исходное сообщение О Р Т Е Г А
шифрованное сообщение Т У Ф К Д Г
относительный сдвиг букв 4 3 2 5 1 3
Г.А. Гуревич в статье ¾Криптограмма Жюля Верна¿ (журнал
¾Квант¿ №9, 1985 г.) обращает внимание на то, что судья прошел
практически весь путь до отгадки. Будучи уверенным, что в докумен-
те упоминается имя Жоама Дакосты, судья строит предположение:
¾Если бы строчки были разделены на слова, то мы могли бы выделить
слова, состоящие из семи букв, как и фамилия Дакоста, и, опробуя их
одно за другим, может быть и отыскали бы число, являющееся клю-
чом криптограммы¿. Маноэль, в свою очередь, поняв основную идею
судьи, предлагает опробовать возможные расположения слова ДАКОСТА
в исходном тексте. Поскольку текст состоит из 252 букв, то достаточно
опробовать не более 246 вариантов. В один прекрасный момент, записав
над фрагментом ЙБНТФФЕ слово ДАКОСТА, мы определили бы последо-
вательность цифр 5134325. Естественно предположить, что последняя
цифра 5  начало следующего периода:
исходное сообщение . . . Д А К О С Т А . . .
шифрованное сообщение . . . Й Б Н Т Ф Ф Е . . .
относительный сдвиг букв . . . 5 1 3 4 3 2 5 . . .
Вместо ключа 432513 мы нашли его циклическую перестановку 513432,
что ни в коей мере не мешает расшифрованию текста. Для этого до-
статочно для каждой буквы шифрованного текста определить букву,
относительно которой данная буква сдвинута на величину соответству-
ющей цифры ключа:
§ 4. Многоалфавитные шифры замены с периодическим ключом 201
С Г У Ч П В Э Л Л З Й Р Т Е П Н Л Н Ф Г И Н Б О Р
4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4
Н А С Т О Я Щ И Й В И Н О В Н И К К Р А Ж И А Л М
Г Й У Г Л Ч Д К О Т Х Ж Г У У М З Д Х Р Ъ С Г С Ю
3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3
А З О В И У Б И Й С Т В А С О Л Д А Т О Х Р А Н Ы
Д Т П Ъ А Р В Й Г Г И Щ В Ч Э Е Ц С Т У Ж В С Е В
2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2
В Н О Ч Ь Н А Д В А Д Ц А Т Ь В Т О Р О Е Я Н В А
Х А Х Я Ф Б Ь Б Е Т Ф З С Э Ф Т Х Ж З Б З Ъ Г Ф Б
5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5
Р Я Т Ы С Я Ч А В О С Е М Ь С О Т Д В А Д Ц А Т Ь
Щ И Х Х Р И П Ж Т З В Т Ж Й Т Г О Й Б Н Т Ф Ф Е О
1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1
Ш Е С Т О Г О Г О Д А Н Е Ж О А М Д А К О С Т А Н
И Х Т Т Е Г И И О К З П Т Ф Л Е У Г С Ф И П Т Ь М
3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3
Е С П Р А В Е Д Л И В О П Р И Г О В О Р Е Н Н Ы Й
О Ф О К С Х М Г Б Т Ж Ф Ы Г У Ч О Ю Н Ф Н Ш З Г Э
4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4
К С М Е Р Т И А Я Н Е С Ч А С Т Н Ы Й С Л У Ж А Щ
Л Л Ш Р У Д Е Н К О Л Г Г Н С Б К С С Е П У Н Ф Ц
3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 1 5 3 4 3
И Й У П Р А В Л Е Н И Я А Л М А З Н О Г О О К Р У
Е Е Е Г Г С Ж Н О Е Ы И О Н Р С И Т К Ц Ь Е Д Б У
2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2
Г А Д А Я О Д И Н В Ч Е М И П О Д П И С Ы В А Ю С
Б Т Е Т Л О Т Б Ф Ц С Б Ю Й П М П З Т Ж П Т У Ф К
5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5 1 3 4 3 2 5
Ь С В О И М Н А С Т О Я Щ И М И М Е Н Е М О Р Т Е
Д Г
1 3
Г А
Итак, первая идея состоит в использовании вероятного слова, то есть
слова, которое с большой вероятностьюможет содержаться в данном от-
крытом тексте. Речь идет в том числе и о словах, часто встречающихся
в любых открытых текстах. К ним, например, относятся такие слова
как КОТОРЫЙ, ТОГДА, ЧТО, ЕСЛИ, приставки ПРИ, ПРЕ, ПОД и
т. п.
202 Гл. 7. Олимпиады по криптографии для школьников
Вторая идея основана на том, что буквы открытого сообщения нахо-
дятся в открытом тексте на вполне определенных позициях. Если раз-
ность номеров их позиций окажется кратной периоду гаммы, то стоя-
щие на этих позициях буквы будут зашифрованы одним и тем же зна-
ком гаммы. Это означает, что определенные части открытого текста
окажутся зашифрованными шифром простой замены. Эту идею можно
использовать для определения периода ключа многоалфавитного шиф-
ра замены.
Для определения периода гаммы могут быть применены два способа.
Первый из них известен как тест Казизки, второй способ использует так
называемый индекс совпадения.
Тест Казизки был описан в 1863 году Фридрихом Казизки. Он ос-
нован на следующем наблюдении: два одинаковых отрезка открытого
текста будут соответствовать двум одинаковым отрезкам шифрован-
ного текста, если разность номеров позиций их начал кратна периоду
гаммы. Следовательно, если мы обнаружим два одинаковых отрезка
шифрованного текста, состоящих по крайней мере из трех букв, то с
большой вероятностью им соответствуют одинаковые отрезки откры-
того текста (случайное совпадение маловероятно). Тест Казизки, по су-
ти, заключается в том, что в шифрованном тексте надо найти пары
одинаковых отрезков, вычислить разности номеров позиций их начал и
определить общие делители найденных разностей. Как правило, один
из этих общих делителей равен периоду гаммы.
Для уточнения значения периода гаммы может быть использован
индекс совпадения, предложенный в 1920 году Уильямом Фридманом.
Для последовательности букв индекс совпадения представляет собой
число, равное количеству всех пар номеров позиций последовательно-
сти, на которых находятся одинаковые буквы, деленному на общее ко-
личество всех пар номеров позиций этой последовательности, т. е. сред-
нему числу пар, состоящих из одинаковых букв. Примечательно то, что
при зашифровании последовательности с помощью шифра простой за-
мены указанное число не меняется.
Для иллюстрации этого подхода рассмотрим тот же самый шифро-
ванный текст, записанный в виде последовательности столбцов, содер-
жащих по шесть подряд идущих букв текста в каждом (подряд идущие
буквы текста располагаются в столбцах сверху вниз):
С Э Т Ф Р Ч Ж Д С А И Ц С Я Т Т Ъ Х Т Т Т Х И Ф Ф О М Ы Н Э Д Г С Ф Г Ы И Д Т Ц М Т
Г Л Е Г Г Д Г Х Ю Р Щ С Е Ф Ф Х Г Х З Г Ф Т О Л И Ф Г Г Ф Л Е Г С Ц С И Т Б Л С П У
У Л П И Й К У Р Д В В Т В Б З Ж Ф Р В О Ф Т К Е П О Б У Н Л Н Н Е Е Ж О К У О Б З Ф
Ч З Н Н У О У Ъ Т Й Ч У Х Ь С З Б И Т Й Е Е З У Т К Т Ч Ш Ш К С У Е Н Н Ц Б Т Ю Т К
П Й Л Б Г Т М С П Г Э Ж А Б Э Б Щ П Ж Б О Г П Г Ь С Ж О З Р О Б П Е О Р Ь Т Б Й Ж Д
В Р Н О Л Х З Г Ъ Г Е В Х Е Ф З И Ж Й Н И И Т С М Х Ф Ю Г У Л К Н Г Е С Е Е Ф П П Г
§ 5. Условия задач олимпиад по математике и криптографии 203
Составим для каждой из 6 получившихся строк соответствующий ей
набор частот встречаемости букв в каждой из них:
А Б В Г Д Е Ж З И Й К Л М Н О П
1 строка 1 0 0 2 3 0 1 0 3 0 0 0 2 1 1 0
2 строка 0 1 0 9 1 3 0 1 2 0 0 4 0 0 1 1
3 строка 0 3 4 0 1 3 2 2 1 1 3 2 0 3 4 2
4 строка 0 2 0 0 0 4 0 3 1 2 3 0 0 4 1 0
5 строка 1 6 0 4 1 1 4 1 0 2 0 0 1 0 4 5
6 строка 0 0 2 5 0 5 1 2 3 1 1 2 1 3 1 2
Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я
1 строка 1 4 8 0 4 2 2 1 0 0 1 2 0 2 0 1
2 строка 1 4 2 1 5 3 1 0 0 1 0 0 0 0 1 0
3 строка 2 0 2 4 3 0 0 0 0 0 0 0 0 0 0 0
4 строка 0 2 6 4 0 1 1 3 2 0 1 0 1 0 1 0
5 строка 2 2 2 0 0 0 0 0 0 1 0 0 2 2 0 0
6 строка 1 2 1 1 3 3 0 0 0 0 1 0 0 0 1 0
По этой таблице частот встречаемости букв вычислим для каждой стро-
ки соответствующий ей индекс совпадения:
Номер строки 1 2 3 4 5 6
Индекс совпадения 0,060 0,077 0,045 0,053 0,057 0,057
Для всего шифрованного текста индекс совпадения равен 0,040,
что заметно меньше, чем индекс совпадения для каждой из указан-
ных строк. Это является хорошим подтверждением гипотезы о длине
периода гаммы.
Другие идеи подходов к вскрытию рассматриваемых шифров осно-
ваны на тех или иных особенностях их построения и использования
(см. решения задач 1.2, 2.2, 2.5, 2.6, 3.4, 3.5, 4.6).
§ 5. Условия задач олимпиад по математике и
криптографии
Ниже приводятся задачи семи олимпиад по криптографии и мате-
матике. Нумерация задач двойная: первая цифра  номер олимпиады,
вторая  номер задачи в олимпиаде. Для решения задач не требуется
специальных знаний. Все необходимые определения даны в условиях.
Задачи рассчитаны на учащихся 9, 10 и 11 классов.
1.1. Ключом шифра, называемого ¾поворотная решетка¿, является
трафарет, изготовленный из квадратного листа клетчатой бумаги раз-
мера n×n (n  четно). Некоторые из клеток вырезаются. Одна из сто-
204 Гл. 7. Олимпиады по криптографии для школьников
рон трафарета помечена. При наложении этого трафарета на чистый
лист бумаги четырьмя возможными способами (помеченной стороной
вверх, вправо, вниз, влево) его вырезы полностью покрывают всю пло-
щадь квадрата, причем каждая клетка оказывается под вырезом ровно
один раз.
Буквы сообщения, имеющего длину n2, последовательно вписывают-
ся в вырезы трафарета, сначала наложенного на чистый лист бумаги
помеченной стороной вверх. После заполнения всех вырезов трафарета
буквами сообщения трафарет располагается в следующем положении
и т. д. После снятия трафарета на листе бумаги оказывается зашифро-
ванное сообщение.
Найдите число различных ключей для произвольного четного чис-
ла n.
1.2. В адрес олимпиады пришло зашифрованное сообщение:
Ф В М Е Ж Т И В Ф Ю
Найдите исходное сообщение, если известно, что шифрпреобразование
заключалось в следующем. Пусть x1, x2  корни трехчлена x2 +3x+1.
К порядковому номеру каждой буквы в стандартном русском алфавите
(33 буквы) прибавлялось значение многочлена f(x) = x6 + 3x5 + x4 +
+x3 + 4x2 + 4x + 3, вычисленное либо при x = x1, либо при x = x2
(в неизвестном нам порядке), а затем полученное число заменялось со-
ответствующей ему буквой.
1.3. Для передачи информации от резидента Гарриваса в Нагонии
только что внедренному разведчику был установлен следующий поря-
док.
Все сообщения резидента определены заранее и пронумерованы чис-
лами 1, 2, 3, . . . . Разведчик, обладающий феноменальной памятью,
полностью запомнил соответствие между сообщениями и их номерами.
Теперь для того, чтобы передать информацию разведчику, достаточно
было сообщить ему лишь соответствующее число.
Для передачи числа в условленном месте оставлялась равная этому
числу денежная сумма.
На момент разработки операции в Нагонии имели хождение денеж-
ные купюры достоинством 1,3,7 и 10 бут (бут  денежная единица На-
гонии). Однако в результате денежной реформы купюры достоинством
1 и 3 бут были изъяты из обращения.
Выясните, начиная с какого номера можно передать разведчику лю-
бое сообщение, пользуясь только оставшимися в обращении купюрами.
1.4. Сколько существует упорядоченных пар натуральных чисел a и b,
для которых известны их наибольший общий делитель d = 6 и их наи-
меньшее общее кратное m = 6930. Сформулируйте ответ и в общем
§ 5. Условия задач олимпиад по математике и криптографии 205
случае, используя канонические разложения d и m на простые множи-
тели.
1.5. Дана криптограмма:
ФН × Ы = ФАФ
+ × − ЕЕ + Е = НЗ
= = =
ИША + МР = ИМН
Восстановите цифровые значения букв, при которых справедливы
все указанные равенства, если разным буквам соответствуют различные
цифры. Расставьте буквы в порядке возрастания их цифровых значений
и получите искомый текст.
1.6. Одна фирма предложила устройство для автоматической провер-
ки пароля. Паролем может быть любой непустой упорядоченный набор
букв в алфавите {a, b, c}. Будем обозначать такие наборы большими
латинскими буквами. Устройство перерабатывает введенный в него на-
бор P в набор Q = '(P). Отображение ' держится в секрете, однако
про него известно, что оно определено не для каждого набора букв и
обладает следующими свойствами. Для любого набора букв P
1) '(aP) = P;
2) '(bP) = '(P)a'(P);
3) набор '(cP) получается из набора '(P) выписыванием букв в
обратном порядке.
Устройство признает предъявленный пароль верным, если '(P)=P.
Например, трехбуквенный набор bab является верным паролем, так как
'(bab) = '(ab)a'(ab) = bab. Подберите верный пароль, состоящий более
чем из трех букв.
2.1. В древнем шифре, известном под названием ¾Сцитала¿, использо-
валась полоска папируса, которая наматывалась на круглый стержень
виток к витку без просветов и нахлестов. Далее, при горизонтальном по-
ложении стержня, на папирус построчно записывался текст сообщения.
После этого полоска папируса с записанным на ней текстом посыла-
лась адресату, имеющему точно такой же стержень, что позволяло ему
прочитать сообщение.
В наш адрес поступило сообщение, зашифрованное с помощью шиф-
ра ¾Сцитала¿. Однако ее автор, заботясь о том, чтобы строчки бы-
ли ровные, во время письма проводил горизонтальные линии, которые
остались на полоске в виде черточек между буквами. Угол наклона
этих черточек к краю ленты равен , ширина полоски равна d, а ши-
рина каждой строки равна h. Укажите, как, пользуясь имеющимися
данными, прочитать текст.
206 Гл. 7. Олимпиады по криптографии для школьников
2.2. Исходное цифровое сообщение коммерсант шифрует и передает.
Для этого он делит последовательность цифр исходного сообщения на
группы по пять цифр в каждой и после двух последовательных групп
приписывает еще две последние цифры суммы чисел, изображенных
этими двумя группами. Затем к каждой цифре полученной последова-
тельности он прибавляет соответствующий по номеру член некоторой
целочисленной арифметической прогрессии, заменяя результат сложе-
ния остатком от деления его на 10.
Найдите исходное цифровое сообщение по шифрованному сообще-
нию:
4 2 3 4 6 1 4 0 5 3 1 3
2.3. Рассмотрим преобразование цифрового текста, в котором каждая
цифра заменяется остатком от деления значения многочлена
F() = b(x3 + 7x2 + 3x + a) на число 10, где a, b  фиксированные
натуральные числа.
Выясните, при каких значениях a, b указанное преобразование
может быть шифрпреобразованием (т. е. допускает однозначное рас-
шифрование).
2.4. При установке кодового замка каждой из 26 латинских букв, рас-
положенных на его клавиатуре, сопоставляется произвольное натураль-
ное число, известное лишь обладателю замка. Разным буквам сопостав-
ляются не обязательно разные числа. После набора произвольной ком-
бинации попарно различных букв происходит суммирование числовых
значений, соответствующих набранным буквам. Замок открывается, ес-
ли сумма делится на 26.
Докажите, что для любых числовых значений букв существует ком-
бинация, открывающая замок.
2.5. Сообщение, записанное в алфавите
АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЬЫЭЮЯ
зашифровывается при помощи последовательности букв этого же алфа-
вита. Длина последовательности равна длине сообщения. Шифрование
каждой буквы исходного сообщения состоит в сложении ее порядково-
го номера в алфавите с порядковым номером соответствующей буквы
шифрующей последовательности и замене такой суммы на букву ал-
фавита, порядковый номер которой имеет тот же остаток от деления
на 30, что и эта сумма.
Восстановите два исходных сообщения, каждое из которых содержит
слово КОРАБЛИ, если результат их зашифрования при помощи одной и
той же шифрующей последовательности известен:
ЮПТЦАРГШАЛЖЖЕВЦЩЫРВУУ и ЮПЯТБНЩМСДТЛЖГПСГХСЦЦ
§ 5. Условия задач олимпиад по математике и криптографии 207
2.6. Буквы русского алфавита занумерованы в соответствии с табли-
цей:
А Б В Г Д Е Ж З И К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ь Ы Э Ю Я
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
Для зашифрования сообщения, состоящего из n букв, выбирается ключ
 некоторая последовательность из n букв приведенного выше алфа-
вита. Зашифрование каждой буквы сообщения состоит в сложении ее
номера в таблице с номером соответствующей буквы ключевой после-
довательности и замене полученной суммы на букву алфавита, но-
мер которой имеет тот же остаток от деления на 30, что и эта сум-
ма.
Прочтите шифрованное сообщение: РБЬНТСИТСРРЕЗОХ, если известно,
что шифрующая последовательность не содержала никаких букв, кроме
А, Б и В.
3.1. Установите, можно ли создать проводную телефонную сеть связи,
состоящую из 993 абонентов, каждый из которых был бы связан ровно
с 99 другими.
3.2. Шифрпреобразование простой замены в алфавите A = {a1, a2, . . .
. . . , an}, состоящем из n различных букв, заключается в замене каждой
буквы шифруемого текста буквой того же алфавита, причем разные
буквы заменяются разными. Ключом шифра простой замены называ-
ется таблица, в которой указано, какой буквой надо заменить каждую
букву алфавита A. Если слово СРОЧНО зашифровать простой заменой с
помощью ключа:
А Б В Г Д Е Ж З И К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ь Ы Э Ю Я
Ч Я Ю Э Ы Ь Щ Ш Ц Х Ф У Б Д Т З В Р П М Л К А И О Ж Е С Г Н
то получится слово ВЗДАБД. Зашифровав полученное слово с помощью
того же ключа еще раз, получим слово ЮШЫЧЯЫ. Сколько всего различ-
ных слов можно получить, если указанный процесс шифрования про-
должать неограниченно?
3.3. Сообщение, зашифрованное в пункте А шифром простой замены
в алфавите из букв русского языка и знака пробела (-) между словами,
передается в пункт Б отрезками по 12 символов. При передаче оче-
редного отрезка сначала передаются символы, стоящие на четных ме-
стах в порядке возрастания их номеров, начиная со второго, а затем 
символы, стоящие на нечетных местах (также в порядке возрастания
их номеров), начиная с первого. В пункте B полученное шифрованное
сообщение дополнительно шифруется с помощью некоторого другого
шифра простой замены в том же алфавите, а затем таким же образом,
как и из пункта А, передается в пункт В. По перехваченным в пункте В
отрезкам:
208 Гл. 7. Олимпиады по криптографии для школьников
С О - Г Ж Т П Н Б Л Ж О
Р С Т К Д К С П Х Е У Б
- Е - П Ф П У Б - Ю О Б
С П - Е О К Ж У У Л Ж Л
С М Ц Х Б Э К Г О Щ П Ы
У Л К Л - И К Н Т Л Ж Г
восстановите исходное сообщение, зная, что в одном из переданных от-
резков зашифровано слово КРИПТОГРАФИЯ.
3.4. Дана последовательность чисел C1,C2, . . . ,Cn, . . . в которой Cn
есть последняя цифра числа nn. Докажите, что эта последовательность
периодическая и ее наименьший период равен 20.
3.5. Исходное сообщение, состоящее из букв русского алфавита и зна-
ка пробела (-) между словами, преобразуется в цифровое сообщение
заменой каждого его символа парой цифр согласно следующей табли-
це:
А Б В Г Д Е Ж З И К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ь Ы Э Ю Я -
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
Для зашифрования полученного цифрового сообщения используется
отрезок последовательности из задачи 3.4, начинающийся с некоторого
члена Ck. При зашифровании каждая цифра сообщения складывает-
ся с соответствующей цифрой отрезка и заменяется последней цифрой
полученной суммы. Восстановите сообщение:
2339867216458160670617315588
A
B
C
K
L
M N
P Q
Рис. 7.
3.6. Равносторонний треугольник ABC
разбит на четыре части так, как показано
на рисунке, где M и N  середины сто-
рон AB и BC соответственно. Известно,
что ⊥ MQ и NL ⊥ MQ. В каком от-
ношении точки и Q делят сторону AC,
если известно, что из этих частей можно
составить квадрат?
4.1. Ключом шифра, называемого ¾решеткой¿, является прямоуголь-
ный трафарет размера 6×10 клеток. В трафарете вырезаны 15 клеток
так, что при наложении его на прямоугольный лист бумаги размера
6 × 10 клеток четырьмя возможными способами его вырезы полностью
покрывают всю площадь листа.
Буквы сообщения (без пропусков) последовательно вписываются в
вырезы трафарета (по строкам, в каждой строке слева направо) при
каждом из четырех его возможных положений. Прочтите исходный
текст, если после зашифрования на листе бумаги оказался следующий
текст (на русском языке):
§ 5. Условия задач олимпиад по математике и криптографии 209
Р П Т Е Ш А В Е С Л
О Я Т А Л - Ь З Т -
- У К Т - Я А Ь - С
Н П - Ь Е У - Ш Л С
Т И Ь З Ы Я Е М - О
- Е Ф - - Р О - С М
4.2. Криптограмма
12 2 24 5 3 21 6 29 28 2 20 18 20 21 5 10 27 17 2 11 2 16 
19 2 27 5 8 29 12 31 22 2 16, 19 2 19 5 17 29 8 29 6 29 16:
8 2 19 19 29 10 19 29 14 19 29 29 19 10 2 24 2 11 2 16
10 14 18 21 17 2 20 2 28 29 16 21 29 28 6 29 16.
получена заменой букв на числа (от 1 до 32) так, что разным буквам
соответствуют разные числа. Отдельные слова разделены нескольки-
ми пробелами, буквы  одним пробелом, знаки препинания сохранены.
Буквы ¾е¿ и ¾ё¿ не различаются. Прочтите четверостишие В. Высоц-
кого.
4.3. ¾Шифровальный диск¿ используется для зашифрования число-
вых сообщений. Он состоит из неподвижного диска и соосно вращаю-
щегося на нем диска меньшего диаметра. На обоих дисках нанесены
цифры от 0 до 9, которые расположены в вершинах правильных 10-
угольников, вписанных в диски.
Цифра X на неподвижном диске зашифровывается в цифру Y по-
движного диска, лежащую на том же радиусе, что и X.
Для построения вписанного 10-угольника без транспортира надо
уметь строить угол в 36◦. Попытайтесь вычислить с точностью до 0,1
значение какой-либо тригонометрической функции такого угла без таб-
лиц и калькулятора.
4.4. Зашифрование фразы на латинском языке осуществлено в два
этапа. На первом этапе каждая буква текста заменяется на следую-
щую в алфавитном порядке (последняя Z заменяется на первую A). На
втором этапе применяется шифр простой замены с неизвестным клю-
чом. Его применение заключается в замене каждой буквы шифруемого
текста буквой того же алфавита, при этом разные буквы заменяются
разными буквами. Ключом такого шифра является таблица, в которой
указано, какой буквой надо заменить каждую букву алфавита.
По данному шифртексту
OSZJX FXRE YOQJSZ RAYFJ
восстановите открытое сообщение, если известно, что для использован-
ного (неизвестного) ключа результат шифрования не зависит от по-
рядка выполнения указанных этапов для любого открытого сообщения.
Пробелы в тексте разделяют слова.
Латинский алфавит состоит из следующих 24 букв:
210 Гл. 7. Олимпиады по криптографии для школьников
A B C D E F G H I J L M N O P Q R S T U V X Y Z.
4.5. Для проверки телетайпа, печатающего буквами русского алфави-
та
А Б В Г Д Е Ё Ж З И Й К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я
передан набор из 9 слов, содержащий все 33 буквы алфавита. В резуль-
тате неисправности телетайпа на приемном конце получены слова
ГЪЙ АЭЕ БПРК ЕЖЩЮ НМЬЧ СЫЛЗ ШДУ ЦХОТ ЯФВИ
Восстановите исходный текст, если известно, что характер неисправ-
ности таков, что каждая буква заменяется буквой, отстоящей от нее в
указанном алфавите не дальше, чем на две буквы. Например, буква Б
может перейти в одну из букв {А, Б, В, Г}.
4.6. Исходное сообщение из букв русского алфавита преобразуется в
числовое сообщение заменой каждой его буквы числом по следующей
таблице:
А Б В Г Д Е Ж З И К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ь Ы Э Ю Я
00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
Для зашифрования полученного числового сообщения используется
шифрующий отрезок последовательности A1,A2, . . . подходящей дли-
ны, начинающийся с A100.
При зашифровании каждое число числового сообщения складыва-
ется с соответствующим числом шифрующего отрезка. Затем вычис-
ляется остаток от деления полученной суммы на 30, который по дан-
ной таблице заменяется буквой. Восстановите сообщение КЕНЗЭРЕ, если
шифрующий отрезок взят из последовательности, у которой A1 = 3 и
Ak+1 = Ak + 3(k2 + k + 1) для любого натурального k.
4.7. Чтобы запомнить периодически меняющийся пароль в ЭВМ, ма-
тематики придумали следующий способ. При известном числе a (напри-
мер, номере месяца в году), пароль представляет собой первые шесть
цифр наименьшего решения уравнения
a(x2 − 1) =
r
1 +
x
a
.
(Число меньшей значности дополняется справа необходимым числом
нулей.)
Решите такое уравнение при произвольном a > 0.
5.1. Комбинация (x, y, z) трех натуральных чисел, лежащих в диа-
пазоне от 10 до 20 включительно, является отпирающей для кодового
замка, если выполнено соотношение F(x, y, z) = 99. Найдите все отпи-
рающие комбинации для замка с
F(x, y, z) = 3x2 − y2 − 7z.
§ 5. Условия задач олимпиад по математике и криптографии 211
5.2. Сообщение было построчно записано в таблицу, имеющую 20
столбцов. При этом в каждую клетку таблицы записывалось по одной
букве сообщения, пробелы между словами были опущены, а знаки пре-
пинания заменены на условные комбинации: точка  ТЧК, запятая 
ЗПТ. Затем столбцы таблицы были некоторым образом переставлены, в
результате чего был получен текст:
Я Н Л В К Р А Д О Е Т Е Р Г О М И З Я Е
Й Л Т А Л Ф Ы И П Е У И О О Г Е Д Б О Р
Ч Р Д Ч И Е С М О Н Д К Х И Н Т И К Е О
Н У Л А Е Р Е Б Ы Ы Е Е З И О Н Н Ы Ч Д
Ы Т Д О Е М П П Т Щ В А Н И П Т Я З С Л
И К С И - Т Ч Н О - - Е - Л У Л - Т - Ж
Прочтите исходное сообщение.
5.3. Из точки внутри треугольника ABC на его стороны AB, BC,
AC опущены перпендикуляры OP, OQ, OR. Докажите, что OA+OB+
+ OC > 2(OP + OQ + OR).
5.4. Зашифрование сообщения состоит в замене букв исходного тек-
ста на пары цифр в соответствии с некоторой (известной только от-
правителю и получателю) таблицей, в которой разным буквам алфа-
вита соответствуют разные пары цифр. Криптографу дали задание вос-
становить зашифрованный текст. В каком случае ему будет легче вы-
полнить задание: если известно, что первое слово второй строки  ¾тер-
мометр¿ или что первое слово третьей строки  ¾ремонт¿? Обоснуйте
свой ответ. (Предполагается, что таблица зашифрования криптографу
неизвестна).
5.5. Решите уравнение:
√3x + 1√3x + 71 − (7 + √2x − 1)
q
2x + 14√2x − 1 + 118 = 0.
5.6. При передаче сообщений используется некоторый шифр. Пусть
известно, что каждому из трех шифрованных текстов
ЙМЫВОТСЬЛКЪГВЦАЯЯ
УКМАПОЧСРКЩВЗАХ
ШМФЭОГЧСЙЪКФЬВЫЕАКК
соответствовало исходное сообщение МОСКВА. Попробуйте расшифро-
вать три текста
ТПЕОИРВНТМОЛАРГЕИАНВИЛЕДНМТААГТДЬТКУБЧКГЕИШНЕИАЯРЯ
ЛСИЕМГОРТКРОМИТВАВКНОПКРАСЕОГНАЬЕП
РТПАИОМВСВТИЕОБПРОЕННИГЬКЕЕАМТАЛВТДЬСОУМЧШСЕОНШЬИАЯК
при условии, что двум из них соответствует одно и то же сообщение.
Сообщениями являются известные крылатые фразы.
6.1. В системе связи, состоящей из 1997 абонентов, каждый абонент
связан ровно с N другими. Определите все возможные значения N.
212 Гл. 7. Олимпиады по криптографии для школьников
6.2. Квадратная таблица размером 1997 × 1997 заполнена натураль-
ными числами от 1 до 1997 так, что в каждой строке присутствуют все
числа от 1 до 1997. Найдите сумму чисел, стоящих на диагонали, ко-
торая соединяет левый верхний и правый нижний углы таблицы, если
заполнение таблицы симметрично относительно этой диагонали.
6.3. Текст
М И М О П Р А С Т Е Т И Р А С И С П Д А
И С А Ф Е И И Б О Е Т К Ж Р Г Л Е О Л О
И Ш И С А Н Н С Й С А О О Л Т Л Е Я Т У
И Ц В Ы И П И Я Д П И Щ П Ь П С Е Ю Я Я
получен из исходного сообщения перестановкой его букв. Текст
У Щ Ф М Ш П Д Р Е Ц Ч Е Ш Ю Ш Ч Д А К Е
Ч М Д В К Ш Б Е Е Ч Д Ф Э П Й Щ Г Ш Ф Щ
Ц Е Ю Щ Ф П М Е Ч П М Е Р Щ М Е О Ф Ч Щ
Х Е Ш Р Т Г Д И Ф Р С Я Ы Л К Д Ф Ф Е Е
получен из того же исходного сообщения заменой каждой буквы на дру-
гую букву так, что разные буквы заменены разными, а одинаковые 
одинаковыми. Восстановите исходное сообщение.
6.4. На каждой из трех осей установлено по одной вращающейся ше-
стеренке и неподвижной стрелке. Шестеренки соединены последова-
тельно. На первой шестеренке 33 зубца, на второй  10, на третьей  7.
На каждом зубце первой шестеренки по часовой стрелке написано по
одной букве русского языка в алфавитном порядке:
А Б В Г Д Е Ё Ж З И Й К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я
На зубцах второй и третьей шестеренки в порядке возрастания по
часовой стрелке написаны цифры от 0 до 9 и от 0 до 6 соответственно.
Когда стрелка первой оси указывает на букву, стрелки двух других осей
указывают на цифры.
Буквы сообщения шифруются последовательно. Зашифрование про-
изводится вращением первой шестеренки против часовой стрелки до
первого попадания шифруемой буквы под стрелку. В этот момент по-
следовательно выписываются цифры, на которые указывают вторая и
третья стрелки. В начале шифрования стрелка 1-го колеса указывала
на букву А, а стрелки 2-го и 3-го колес  на цифру 0.
а) зашифруйте слово О Л И М П И А Д А;
б) расшифруйте сообщение 2 4 8 0 9 2 8 3 9 1 1 2 1 1.
6.5. Цифры от 1 до 9 расположены на окружности в некотором неиз-
вестном порядке. При зашифровании цифрового сообщения каждая от-
личная от 0 цифра заменяется на соседнюю с ней цифру на окружности
по часовой стрелке, а при расшифровании  на соседнюю с ней цифру
на окружности против часовой стрелки. Цифра 0 остается без измене-
ния в обоих случаях.
§ 5. Условия задач олимпиад по математике и криптографии 213
Укажите условия, при которых порядок цифр на данной окруж-
ности можно однозначно восстановить по двум цифровым текстам 
результатам расшифрования и зашифрования одного и того же цифро-
вого текста с помощью данной окружности.
6.6. Докажите, что для каждого простого числа последовательность
a1, a2, a3, . . . является периодической с периодом 2, если an равно остат-
ку от деления числа pn+2 на 24 при всех n > 1.
6.7. Найдите все значения параметра a, при которых уравнение 
. . .

|
| {z }
1996 раз
x − a| − a

− . . . −

| {z }
1996 раз
= 1996.
имеет ровно 1997 различных решений.
7.1. Какое наименьшее число соединений требуется для организации
проводной сети связи из 10 узлов, чтобы при выходе из строя любых
двух узлов связи сохранялась возможность передачи информации меж-
ду любыми двумя оставшимися (хотя бы по цепочке через другие узлы)?
7.2. В компьютерной сети используются пароли, состоящие из цифр.
Чтобы избежать хищения паролей, их хранят на диске в зашифрован-
ном виде. При необходимости использования происходит однозначное
расшифрование соответствующего пароля. Зашифрование пароля про-
исходит посимвольно одним и тем же преобразованием. Первая цифра
остается без изменения, а результат зашифрования каждой следующей
цифры зависит только от нее и от предыдущей цифры.
Известен список зашифрованных паролей:
4249188780319, 4245133784397, 5393511, 428540012393,
4262271910365, 4252370031465, 4245133784735
и два пароля 4208212275831, 4242592823026, имеющиеся в зашифрован-
ном виде в этом списке. Можно ли определить какие-либо другие паро-
ли? Если да, то восстановите их.
7.3. В результате перестановки букв сообщения получена криптограм-
ма:
БТИПЧЬЛОЯЧЫЬТОТПУНТНОНЗЛЖАЧОЬОТУНИУХНИППОЛОЬЧОЕЛОЛС
Прочтите исходное сообщение, если известно, что оно было разбито на
отрезки одинаковой длины r, в каждом из которых буквы перестав-
лены одинаково по следующему правилу. Буква отрезка, имеющая по-
рядковый номер ( = 1, 2, . . . , r), в соответствующем отрезке крипто-
граммы имеет порядковый номер f(x) = ax ⊕ b, где a и b  некото-
рые натуральные числа, ax ⊕ b равно остатку от деления суммы ax + b
на r, если остаток не равен нулю, и равно r, если остаток равен ну-
лю.
214 Гл. 7. Олимпиады по криптографии для школьников
Д Л Р И Л П Н Б
У К А О Т У С Т
О О О А Н О И Р
Т Б Г К Т Т У К
К О Е О Р А В О
К Д Г П В Л Е Т
Т А Н Р М А Г О
Е А О В И Д У Л
Рис. 8.
7.4. Знаменитый математик Леонард Эйлер
в 1759 г. нашел замкнутый маршрут обхода
всех клеток шахматной доски ходом коня ров-
но по одному разу. Прочтите текст, вписанный
в клетки шахматной доски по такому маршру-
ту (см. рис. 8). Начало текста в a4.
7.5. При a > 0, b > 0, c > 0 докажите нера-
венство:
a3 + b3 + c3 + 6abc >
1
4
(a + b + c)3.
7.6. Для рисования на большой прямоугольной доске используется
мел с квадратным сечением со стороной 1 см. При движении мела сто-
роны сечения всегда параллельны краям доски. Как начертить выпук-
лый многоугольник площадью 1 м2 с наименьшей площадью границы
(площадь границы не входит в площадь многоугольника)?
7.7. Цифры 0, 1, . . . , 9 разбиты на несколько непересекающихся групп.
Из цифр каждой группы составляются всевозможные числа, для запи-
си каждого из которых все цифры группы используются ровно один раз
(учитываются и записи, начинающиеся с нуля). Все полученные числа
расположили в порядке возрастания и k-ому числу поставили в соот-
ветствие k-ую букву алфавита
АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ
Оказалось, что каждой букве соответствует число и каждому числу со-
ответствует некоторая буква. Шифрование сообщения осуществляется
заменой каждой буквы соответствующим ей числом. Если ненулевое
число начинается с нуля, то при шифровании этот нуль не выписыва-
ется. Восстановите сообщение 873146507381 и укажите таблицу замены
букв числами.
§ 5. Условия задач олимпиад по математике и криптографии 215
Рис. 9.
8.1. На рисунке изображена эмблема олим-
пиады. Она представляет собой замкнутую
ленту, сложенную так, что образовавшиеся
просветы являются одинаковыми равносто-
ронними треугольниками. Если в некотором
месте ленту разрезать перпендикулярно к
ее краям и развернуть, то получится прямо-
угольник. Найдите минимальное отношение
его сторон.
8.2. Сообщение, составленное из нулей и
единиц, шифруется двумя способами. При
первом способе каждый нуль заменяется на
последовательность из k1 нулей и следующих за ними k2 единиц, а
каждая единица заменяется на последовательность из k3 нулей. При
втором способе шифрования каждая единица заменяется на последова-
тельность из k4 единиц и следующих за ними k5 нулей, а каждый нуль
заменяется на последовательность из k6 нулей. При каких натуральных
значениях ki, i = 1, 2, . . . , 6, найдется хотя бы одно сообщение, которое
будет одинаково зашифровано обоими способами? Укажите общий вид
таких сообщений.
8.3. Сообщение, подлежащее зашифрованию, представляет собой циф-
ровую последовательность, составленную из дат рождения 6 членов
оргкомитета олимпиады. Каждая дата представлена в виде после-
довательности из 8 цифр, первые две из которых обозначают день,
следующие две  месяц, а остальные  год. Например, дата рож-
дения великого математика Л.Эйлера 4 апреля 1707 года представ-
ляется в виде последовательности 04041707. Для зашифрования со-
общения строится ключевая последовательность длины 48. Для ее
построения все нечетные простые числа, меньшие 100, выписывают-
ся через запятую в таком порядке, что модуль разности любых двух
соседних чисел есть та или иная степень числа 2. При этом каж-
дое простое число выписано ровно один раз, а числа 3, 5 и 7 запи-
саны в виде 03, 05 и 07 соответственно. Удалив запятые из записи
этой последовательности, получим искомую ключевую последователь-
ность.
При зашифровании цифровой последовательности, представляю-
щей сообщение, ее цифры почленно складываются с соответствующими
цифрами ключевой последовательности, при этом каждая полученная
сумма заменяется ее остатком от деления на 10. В результате зашиф-
рования сообщения получена последовательность:
150220454213266744305682533362327363924975709849
Определите даты рождения членов оргкомитета олимпиады.
216 Гл. 7. Олимпиады по криптографии для школьников
Рис. 10.
8.4. Квадрат размера 13×13 разбит на клет-
ки размера 1×1. В начальный момент некото-
рые клетки окрашены в черный цвет, а осталь-
ные  в белый. По клеткам квадрата прыгает
Криптоша. В момент попадания Криптоши в
очередную клетку происходит изменение цве-
та на противоположный у всех тех клеток, рас-
стояния от центров которых до центра клетки
с Криптошей есть натуральные числа. После
того как Криптоша побывал в каждой клет-
ке квадрата ровно 1999 раз, квадрат оказался
раскрашенным так, как показано на рисунке.
Восстановите цвет всех клеток квадрата в на-
чальный момент.
8.5. Для всех действительных чисел a, b решите уравнение
a
1 − bx
=
b
1 − ax
.
8.6. Разложите число 230 + 1 на простые множители.
9.1. Суммой двух букв назовём букву, порядковый номер которой в
алфавите имеет тот же остаток от деления на число букв в алфавите,
что и сумма порядковых номеров исходных двух букв. Суммой двух
буквенных последовательностей одинаковой длины назовем буквенную
последовательность той же длины, полученную сложением букв исход-
ных последовательностей, стоящих на одинаковых местах.
а) Докажите, что существует последовательность из 33 различных
букв русского алфавита, сумма которой с последовательностью букв,
представляющей собой сам этот алфавит, не содержит одинаковых букв.
б) Докажите, что сумма любой последовательности из 26 различных
букв английского алфавита с последовательностью букв, представляю-
щей собой сам этот алфавит, содержит не менее двух одинаковых букв.
9.2. Некоторую последовательность из букв русского алфавита
А Б В Г Д Е Ё Ж З И Й К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я
19491999 раз прибавили по правилу задачи 9.1 к слову КРИПТОША. Полу-
чили слово АНАЛИТИК. Найдите эту последовательность. Какое наимень-
шее число раз надо прибавить ее к слову АНАЛИТИК, чтобы получить
слово КРИПТОША?
9.3. Каждую букву исходного сообщения заменили ее двузначным по-
рядковым номером в русском алфавите согласно таблице
§ 5. Условия задач олимпиад по математике и криптографии 217
А Б В Г Д Е Ё Ж З И Й К Л М Н О П
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17
Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я
18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
Полученную цифровую последовательность разбили (справа налево) на
трехзначные цифровые группы без пересечений и пропусков. Затем,
каждое из полученных трехзначных чисел умножили на 77 и оставили
только три последние цифры произведения. В результате получилась
следующая последовательность цифр:
317564404970017677550547850355.
Восстановите исходное сообщение.
9.4. Клетки квадрата 4 × 4 пронумеровали так, что клетка в правом
нижнем углу получила номер 1, а все остальные получили разные но-
мера от 2 до 16. Оказалось, что суммы номеров клеток каждой строки,
каждого столбца, а также каждой из двух диагоналей квадрата оди-
наковы (¾магический¿ квадрат). Клетки квадрата заполнили буквами
некоторого сообщения так, что его первая буква попала в клетку с но-
мером 1, вторая  в клетку с номером 2 и т. д. В результате построчно-
го выписывания букв заполненного квадрата (слева направо и сверху
вниз) получилась последовательность букв
Ы Р Е У С Т Е В Ь Т А Б Е В К П.
Восстановите магический квадрат и исходное сообщение.
9.5. Окружность радиуса 5 с центром в начале координат пересекает
ось абсцисс в точках A(−5; 0) и D(5; 0). Укажите все возможные распо-
ложения на окружности точек B, C и , удовлетворяющие одновременно
следующим четырем условиям:
(1) координаты точек , C и  целые числа;
(2) ордината точки меньше нуля, а ординаты точек и C больше
нуля;
(3) абсцисса точки меньше абсциссы точки C;
(4) сумма площадей частей круга, лежащих внутри углов ABE и
ECD равна половине площади круга, ограниченного исходной окруж-
ностью.
9.6. Для всех значений параметра a решите неравенство p
−x2 − x − 0,25 + a2 > 1 +
p
−x2 + x + 3,75 .
218 Гл. 7. Олимпиады по криптографии для школьников
§ 6. Указания и решения
1 2 3 4 5 1
5 6 7 8 6 2
4 8 9 9 7 3
3 7 9 9 8 4
2 6 8 7 6 5
1 5 4 3 2 1
1.1. Все клетки квадрата размера n × n разобьем
на непересекающиеся группы по четыре клетки в
каждой. Отнесем клетки к одной и той же груп-
пе, если при каждом повороте квадрата до его са-
мосовмещения они перемещаются на места клеток
этой же группы. На рисунке показано такое разби-
ение на группы всех клеток квадрата 6 × 6, при-
чем клетки одной группы помечены одной и той же
цифрой. Всего таких групп будет n2/4 (целое, так
как n  четное число). При наложении трафарета на квадрат ровно
одна клетка из каждой группы окажется под его вырезами. Каждому
трафарету поставим в соответствие упорядоченный набор всех клеток
из таких групп, оказавшихся под вырезами трафарета при наложении
его на квадрат помеченной стороной вверх. Такое соответствие являет-
ся взаимнооднозначным, поскольку каждому ключу будет однозначно
соответствовать упорядоченный набор из n2/4 клеток (по одной из каж-
дой группы), вырезанных в трафарете, и наоборот. Всего таких набо-
ров 4n2/4. В самом деле, существует ровно четыре различных варианта
выбора клетки из каждой группы независимо от выбранных клеток из
других таких групп. Таким образом, число различных ключей шифра
¾поворотная решетка¿ при четных значениях n равно 4n2/4.
1.2. Легко видеть, что f(x) = (x2 + 3x + 1)(x4 + x + 1) + 2. Отсюда
f(x1) = f(x2) = 2, где x1, x2  корни многочлена x2 +3x+1. Получаем
Буква ш.с. Ф В М Е Ж Т И В Ф Ю
Номер 22 3 14 7 8 20 10 3 22 32
Номер 20 1 12 5 6 18 8 1 20 30
Буква о.с. Т А К Д Е Р Ж А Т Ь
Ответ: ТАКДЕРЖАТЬ
1.3. Ответ: начиная с 54.
1.4. Разложим числа m и d на простые множители: d = 6 = 2 · 3;
m = 6930 = 2 · 3 · 3 · 5 · 7 · 11. Обозначим буквой t число m/d, равное про-
изведению 3·5·7·11. Найдем все его делители q вида: q = 3x5y7z11u, где
числа x, y, z и u принимают только значения 0 и 1. Тогда, как нетруд-
но видеть, числа q и t/q окажутся взаимно простыми. Полагая = dq
и b = dt/q, получим все искомые пары (a, b). В самом деле, в указан-
ных выше условиях наибольший общий делитель такой пары равен d,
а ее наименьшее общее кратное равно dqt/q = dt = dm/d = m. Таким
§ 6. Указания и решения 219
образом, искомое число упорядоченных пар совпадает с числом всех
делителей q вида: 3x5y7z11u, которое равно числу всех упорядоченных
наборов длины 4 и состоящих только из 0 и 1. Число всех таких наборов
равно 24 = 16, так как для каждого места в наборах существует ров-
но 2 варианта его значений независимо от значений на других местах.
В общем случае число m/d представляется в виде m/d = pirj . . . sh,
где p, r, . . . , s  различные простые числа, а i, j, . . . , h  натуральные
числа. Число всех делителей вида: q = pxry . . . sz, где числа x, y, . . . , z
принимают только по два значения (0 и соответствующий натуральный
показатель степени в представлении числа m/d), равно 2k, где k  чис-
ло всех простых делителей числа m/d. Если число различных простых
множителей в каноническом разложении числа m/d равно k, то число
различных упорядоченных пар (a, b) равно 2k.
Ответ: 16 пар (пары (a, b) и (b, a) разные). В общем случае чис-
ло упорядоченных пар равно 2k, где k  число всех простых делите-
лей m/d.
1.5. Из последней строчки легко заметить, что Ш=0. Тогда из первого
столбца находим, что И=1. Затем из последнего столбца находим Ф=2.
Итак,
2Н × Ы = 2А2
+ × − ЕЕ + Е = НЗ
= = =
10А + МР = 1МН
Из средней строки ясно, что Н>Е. Из первого столбца находим Е=7. Из
средней строки можно вычислить значения Н и З: Н=8 и З=4. Получим
28 × Ы = 2А2
+ × − 77 + 7 = 84
= = =
10А + МР = 1М8
Далее, последовательно вычисляем значения: А=5,Ы=9, М=6, Р=3.
Расставим буквы в порядке возрастания их цифровых значений и по-
лучим текст ШИФРЗАМЕНЫ
Ответ: ШИФРЗАМЕНЫ
1.6. Ответ: например, cbcacbc.
Обозначим '(P)  набор '(P), выписанный в обратном порядке.
'(cbcacbc) ='(bcacbc) = '(cacbc)a'(cacbc) =
='(acbc)a'(acbc) = cbcacbc = cbcacbc = cbcacbc.
220 Гл. 7. Олимпиады по криптографии для школьников
В общем случае можно показать, что множество искомых наборов
состоит из слов вида:
P =


cb |c .{.z. c}
k раз
acb |c .{.z. }c
k раз
k  нечетное;
b |c .{.z. c}
k раз
ab c| .{.z. }c
k раз
k  четное.

A B
D C
E
n · h
d
Рис. 11.
2.1. Рассмотрим один виток ленты на разверт-
ке цилиндра (разрез по горизонтальной линии).
По условию высота CE, опущенная на сторону
AD, равна d. Угол DAC равен (90−)◦. Отсюда
AC равно d/ cos . Так как высота строки равна
h, то всего на одном витке n = d/(h · cos ) букв.
Ответ: чтобы прочитать текст, надо разре-
зать ленту на участки по n = d/(h · cos ) букв и
сложить их рядом.
2.2. Согласно условию, исходное сообщение состоит из двух пятерок
цифр: A1A2A3A4A5 и B1B2B3B4B5. Пусть C1C2  последние две циф-
ры суммы чисел, изображенных этими пятерками. Через a ⊕ b обозна-
чим последнюю цифру суммы чисел a и b. Пусть D обозначает цифру
переноса (цифру десятков) суммы (A5 + B5). По условию имеем, что
A5 ⊕ B5 = C2 и (A4 ⊕ B4) ⊕ D = C1.
Пусть 􀀀1  первый член, а X  разность арифметической прогрес-
сии, которую коммерсант использовал при шифровании. Тогда из усло-
вия получаем:
A1 ⊕ 􀀀1 = 4, (1)
A2 ⊕ (􀀀1 + X) = 2, (2)
A3 ⊕ (􀀀1 + 2X) = 3, (3)
A4 ⊕ (􀀀1 + 3X) = 4, (4)
A5 ⊕ (􀀀1 + 4X) = 6, (5)
B1 ⊕ (􀀀1 + 5X) = 1, (6)
B2 ⊕ (􀀀1 + 6X) = 4, (7)
B3 ⊕ (􀀀1 + 7X) = 0, (8)
B4 ⊕ (􀀀1 + 8X) = 5, (9)
B5 ⊕ (􀀀1 + 9X) = 3, (10)
((A4 ⊕ B4) ⊕ D) ⊕ (􀀀1 + 10X) = 1, (11)
(A5 ⊕ B5) ⊕ (􀀀1 + 11X) = 3. (12)
Обозначим символом A ≡ B равенство остатков от деления на 10
чисел A и B. Тогда записи A⊕B = C и (A+B) ≡ C имеют одинаковый
§ 6. Указания и решения 221
смысл. Если A ≡ B и C ≡ D, то A+B ≡ C +D, A−B ≡ C −D. Bсегда
A ≡ A, так как остаток от деления единствен.
Из соотношений (4), (5), (9) и (10) находим соответственно:
A4 ≡ 4 − (􀀀1 + 3X), (13)
A5 ≡ 6 − (􀀀1 + 4X), (14)
B4 ≡ 5 − (􀀀1 + 8X), (15)
B5 ≡ 3 − (􀀀1 + 9X). (16)
Подставляя эти значения в равенства (11) и (12), получим следующие
равенства: 9 + D − 􀀀 − X ≡ 1 и 9 − 􀀀 − 2X ≡ 3. Отсюда следует, что
X ≡ (−2 − D), (17)
􀀀1 ≡ 2D. (18)
Подставив X из (17) и 􀀀1 из (18) в (1), (2),(3), (13), (14), (6), (7), (8),
(15), (16), найдем выражения для цифр исходного сообщения:
A1 ≡ 4 − 2D,A2 ≡ 4 − D,A3 ≡ 7,A4 ≡ D,A5 ≡ 4 + 2D,
B1 ≡ 1 + 3D,B2 ≡ 6 + 4D,B3 ≡ 4 + 5D,B4 ≡ 1 + 6D,
B5 ≡ 1 + 7D.
Найденные выражения дают два варианта исходных сообщений:
4470416411 (при D = 0),
2371640978 (при D = 1).
2.3. Ответ: a  любое, b  не должно делиться на 2 и на 5.
Указание. Обозначим через f(x)  остаток от деления значения мно-
гочлена F(x) на 10. Для однозначного расшифрования необходимо и
достаточно, чтобы разным значениям x соответствовали разные значе-
ния f(x). Поэтому f(0), f(1), . . . , f(9) принимают все значения от 0 до
9. Найдем эти значения:
f(0) = r10(b(a + 0)) f(1) = r10(b(a + 1))
f(2) = r10(b(a + 2)) f(3) = r10(b(a + 9))
f(4) = r10(b(a + 8)) f(5) = r10(b(a + 5))
f(6) = r10(b(a + 6)) f(7) = r10(b(a + 7))
f(8) = r10(b(a + 4)) f(9) = r10(b(a + 3)),
где r10(y)  остаток от деления числа y на 10.
Отсюда, пользуясь свойствами остатков, замечаем, что b должно
быть нечетным (иначе f(x) будут только четные числа) и b не должно
делиться на 5 (иначе f(x) будут только 0 и 5). Непосредственной провер-
кой можно убедиться, что при любом a и при всех b, удовлетворяющим
приведенным условиям, гарантируется однозначность расшифрования.
2.4. Обозначим через S(n) остаток от деления на 26 суммы чисел,
222 Гл. 7. Олимпиады по криптографии для школьников
которые соответствуют первым n буквам алфавита (n = 1, 2, . . . , 26)
0 6 S(n) 6 25.
Если среди чисел S(1), S(2), . . . , S(26) есть нуль: S(t) = 0, то иско-
мой ключевой комбинацией является цепочка первых t букв алфави-
та.
Если среди чисел S(1), S(2), . . . , S(26) нет нуля, то обязательно най-
дутся два одинаковых числа: S(k) = S(m) (считаем, что k < m). Тогда
искомой ключевой комбинацией является участок алфавита, начинаю-
щийся с (k + 1)-й и заканчивающийся m-й буквой.
2.5. Если две буквы с порядковыми номерами 1 и 2 зашифрованы в
буквы с порядковыми номерами 1 и 2 с помощью одной и той же буквы,
то остатки от деления чисел (1 − 1) и (2 − 2) на 30 равны между собой
и совпадают с порядковым номером шифрующей буквы (порядковым
номером буквы удобно считать число 0). Тогда, с учетом соглашения о
порядковом номере буквы , справедливо, что 1 равен остатку от деления
числа (2 + (1 − 2)) на 30, а, вместе с тем, 2 равен остатку от деления
числа (1+(2−1)) на 30. Если каждое из выражений в скобках заменить
соответствующим остатком от деления на 30, то упомянутая связь не
нарушится.
Представим в виде набора порядковых номеров известные шифро-
ванные сообщения (обозначим их соответственно ш. с. 1 и ш. с. 2) и
слово КОРАБЛИ:
слово К О Р А Б Л И
10 14 16 1 2 11 9
ш.с.1 Ю П Т Ц А Р Г Ш А Л Ж Ж Е В Ц Щ Ы Р В У У
1 29 15 18 22 1 16 4 24 1 11 7 7 6 3 22 25 27 16 3 19 19
ш.с.2 Ю П Я Т Б Н Щ М С Д Т Л Ж Г П С Г Х С Ц Ц
2 29 15 0 18 2 13 25 12 17 5 18 11 7 4 15 17 4 21 17 22 22
Возможны 15 вариантов (номер варианта обозначим буквой k) рас-
положения слова КОРАБЛИ в каждом из двух исходных сообщений (и. с. 1,
и. с. 2).
Вначале для каждого из 15 вариантов расположения слова КОРАБЛИ
в и. с. 1 найдем соответствующий участок и. с. 2. Имеем:
2 − 1 0 0 12 26 1 27 21 18 16 24 11 4 1 1 23 22 7 5 14 3 3
1 10 14 16 1 2 11 9
2 21 22 23 24 25 26 27
Поэтому для участка и. с. 2 получаем следующие 15 вариантов:
§ 6. Указания и решения 223
k 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
21 10 10 22 6 11 7 1 28 26 4 21 14 11 11 3
22 14 26 10 15 11 5 2 0 8 25 18 15 15 7 6
23 28 12 17 13 7 4 2 10 27 20 17 17 9 8 23
24 27 2 28 22 19 17 25 12 5 2 2 24 23 8 6
25 3 29 23 20 18 26 13 6 3 3 25 24 9 7 16
26 28 2 29 27 5 22 15 12 12 4 3 18 16 25 14
27 0 27 25 3 20 13 10 10 2 1 16 14 23 12 12
Теперь для каждого из 15 вариантов расположения слова КОРАБЛИ в
и. с. 2 найдем соответствующий участок и. с. 1. Имеем:
1 − 2 0 0 18 4 29 3 9 12 14 6 19 26 29 29 7 8 23 25 16 27 27
2 10 14 16 1 2 11 9
1 11 12 13 14 15 16 17
Поэтому для участка и. с. 1 получаем следующие 15 вариантов:
k 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
11 10 10 28 14 9 13 19 22 24 16 29 6 9 9 17
12 14 2 18 13 17 23 26 28 20 3 10 13 13 21 22
13 4 20 15 19 25 28 0 22 5 12 15 15 23 24 9
14 5 0 4 10 13 15 7 20 27 0 0 8 9 24 26
15 1 5 11 14 16 8 21 28 1 1 9 10 25 27 18
16 14 20 23 25 17 0 7 10 10 18 19 4 6 27 8
17 18 21 23 15 28 5 8 8 16 17 2 4 25 6 6
Заменим порядковые номера в найденных вариантах участков и. с. 1
и и. с. 2 на буквы русского алфавита. Получаем следующие таблицы:
k 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
К К Ц Е Л Ж А Э Ь Г Х О Л Л В
О Ь К П Л Д Б Я З Щ Т П П Ж Е
участок Э М С Н Ж Г Б К Ы Ф С С И З Ч
и.с.2 Ы Б Э Ц У С Щ М Д Б Б Ш Ч З Е
В Ю Ч Ф Т Ь Н Е В В Щ Ш И Ж Р
Э Б Ю Ы Д Ц П М М Г В Т Р Щ О
Я Ы Щ В Ф Н К К Б А Р О Ч М М
224 Гл. 7. Олимпиады по криптографии для школьников
k 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
К К Э О И Н У Ц Ш Р Ю Е И И С
О Б Т Н С Ч Ь Э Ф В К Н Н Х Ц
участок Г Ф П У Щ Э Я Ц Д М П П Ч Ш И
и.с.1 Д Я Г К Н П Ж Ф Ы Я Я З И Ш Ь
А Д Л О Р З Х Э А А И К Щ Ы Т
О Ф Ч Щ С Я Ж К К Т У Г Е Ы З
Т Х Ч П Э Д З З Р С Б Г Щ Е Е
Из таблиц видно, что осмысленными являются варианты:
и.с.1 = К О Г Д А О Т . . . . . . . К О Р А Б Л И
и.с.2 = К О Р А Б Л И . . . . . . . В Е Ч Е Р О М
Естественно предположить, что в первом исходном сообщении речь
идет об отплытии кораблей. Предположив, что неизвестным участком
первого исходного сообщения является подходящая по смыслу часть
слова ОТПЛЫВАЮТ, находим неизвестную часть второго исходного сооб-
щения: слово ОТХОДЯТ.
2.6. Каждую букву шифрованного сообщения расшифруем в трех
вариантах, предполагая последовательно, что соответствующая буква
шифрующей последовательности есть буква А, Б или буква В:
шифрованное
сообщение
Р Б Ь Н П Т С И Т С Р Р Е З О Х
вариант А П А Щ М О С Р З С Р П П Д Ж Н Ф
вариант Б О Я Ш Л Н Р П Ж Р П О О Г Е М У
вариант В Н Ю Ч К М П О Е П О Н Н В Д Л Т
Выбирая из каждой колонки полученной таблицы ровно по одной букве,
находим осмысленное сообщение НАШКОРРЕСПОНДЕНТ, которое и является
искомым.
Замечание. Из полученной таблицы можно было найти такое ис-
ходное сообщение как
НАШ МОРОЗ ПОПОВ ЕМУ
которое представляется не менее осмысленным, чем приведенное выше.
А если предположить одно искажение в шифрованном сообщении (ска-
жем, в качестве 11-й буквы была бы принята не буква Р, а буква П), то,
наряду с правильным вариантом, можно получить и такой:
НАШ МОРОЗ ПОМОГ ЕМУ
Число всех различных вариантов исходных сообщений без ограничений
на осмысленность равно 316 или 43046721, т. е. более 40 миллионов!
§ 6. Указания и решения 225
3.1. Если каждый из 993 абонентов связан с 99 абонентами, то для
этого потребуется 993 · 99/2 линий связи, которое не может быть целым
числом.
Ответ: нельзя.
3.2. Несложно заметить, что рассматриваемый шифр обладает тем
свойством, что при зашифровании разные буквы заменяются разны-
ми. Следовательно, при зашифровании разных слов получаются разные
слова. С другой стороны, одинаковые буквы заменяются на одинаковые
независимо от цикла шифрования, так как используется один и тот же
ключ. Следовательно, при зашифровании одинаковых слов получают-
ся одинаковые слова. Таким образом, число различных слов, которые
можно получить в указанном процессе шифрования с начальным сло-
вом СРОЧНО, совпадает с наименьшим номером цикла шифрования, да-
ющем это начальное слово.
Так как буква С повторяется в каждом цикле шифрования, номер ко-
торого кратен 5, а буквы Р, О, Ч, Н  в каждом цикле, номера которых
кратны 13, 7, 2 и 3 соответственно, то слово СРОЧНО появится впервые в
цикле с номером, равным (2, 3, 5, 7, 13) =
= 2 · 3 · 5 · 7 · 13 = 2730.
Ответ: 2730.
3.3. Если символы одного отрезка занумеровать последовательно чис-
лами от 1 до 12, то после передачи его из А в Б символы располо-
жатся в порядке (2,4,6,8,10,12,1,3,5,7,9,11), а после передачи этого от-
резка (замена символов не меняет порядка) из Б в В  в порядке
(4,8,12,3,7,11,2,6,10,1,5,9).Переставим символы перехваченных отрезков
в соответствии с их номерами до передачи из пункта А. Получим от-
резки вида:
Л П Г С Ж Н Ж О О Б Т -
Е С К Р У П Д С Б Х К Т
Ю У П - О Б Ф Е Б - П -
Л Ж Е С Ж У О П Л У К -
Щ К Х С П Г Б М Ы О Э Ц
Л К Л У Ж Н - Л Г Т И К
Поскольку в пунктах А и Б одинаковые буквы заменялись одина-
ковыми, а разные  разными, то найденные отрезки можно рассмат-
ривать как замену одинаковых символов исходного текста одинаковы-
ми, а разных  разными. Сравнивая места одинаковых букв слова
226 Гл. 7. Олимпиады по криптографии для школьников
КРИПТОГРАФИЯ и места одинаковых символов в отрезках, находим, что
слово КРИПТОГРАФИЯ зашифровано во втором отрезке. Это дает возмож-
ность найти исходное сообщение, используя гипотезы о частых буквах
русского языка и смысле исходного сообщения.
Ответ:
С О В Р Е М Е Н Н А Я -
К Р И П Т О Г Р А Ф И Я
Э Т О - Н А У К А - О -
С Е К Р Е Т Н О С Т И -
Ш И Ф Р О В А Л Ь Н Ы Х
С И С Т Е М - С В Я З И
3.4. Докажем, что 20 является периодом рассматриваемой последо-
вательности. Заметим, что у двух натуральных чисел и b совпада-
ют цифры единиц тогда и только тогда, когда их разность делится
на 10. Таким образом, мы достигнем цели, если докажем, что раз-
ность (n + 20)n+20 − nn делится на 10 для всех натуральных значе-
ний n. Исходя из того, что pk − qk делится на (p − q), получаем, что
(n + 20)n+20 − nn+20 делится на ((n + 20) − 20) = 20. Кроме того,
nn+20 − nn = nn(n20 − 1) = nn((n4)5 − 1) делится на n(n4 − 1) для
всех n > 1. Вместе с тем,
n(n4 − 1) = n(n − 1)(n + 1)(n2 + 1) = n(n − 1)((n + 2)(n − 2) + 5) =
= (n − 2)(n − 1)n(n + 1)(n + 2) + 5(n − 1)n(n + 1),
где каждое из слагаемых делится на 2 (так как содержит произведение
n(n + 1)) и делится на 5 (поскольку первое слагаемое есть произведе-
ние пяти последовательных чисел, а второе содержит множитель 5).
Следовательно, nn+20 − nn делится на 10. Число
(n + 20)n+20 − nn =
􀀀
(n + 20)n+20 − nn+20
+ (nn+20 − nn)
делится на 10, так как каждое из слагаемых делится на 10.
Проверим, что 20 является наименьшим периодом. Выписывая пер-
вые 20 значений последовательности 1, 2, . . .
1 4 7 6 5 3 6 9 0 1 6 3 6 5 6 7 4 9 0
легко убедиться, что она не имеет периода меньшей длины.
3.5. Для того, чтобы найти исходное сообщение, найдем сначала циф-
ровое сообщение, полученное из него с помощью таблицы замены. Со-
гласно этой таблице на нечетных местах цифрового образа исходно-
го сообщения могут быть только цифры 0, 1, 2 и 3. Последовательно
рассматривая эти значения для каждого нечетного места цифрового
сообщения с использованием соответствующей цифры шифрованного
сообщения, найдем соответствующие варианты значений цифр шиф-
рующего отрезка. Для этого вычислим остатки от деления разностей
цифр шифрованного и варианта цифрового сообщений:
§ 6. Указания и решения 227
порядковый номер места k 1 3 5 7 9 11 13 15 17 19 21 23 25 27
шифрованное сообщение Sk 2 3 8 7 1 4 8 6 6 0 1 3 5 8
вариант 0 для k 2 3 8 7 1 4 8 6 6 0 1 3 5 8
вариант 1 для 􀀀k 1 2 7 6 0 3 7 5 5 9 0 2 4 7
вариант 2 для 􀀀k 0 1 6 5 9 2 6 4 4 8 9 1 3 6
вариант 3 для 􀀀k 9 0 5 4 8 1 5 3 3 7 8 0 2 5
По задаче 3.4 последовательность, из которой выбран шифрующий
отрезок, является периодической с периодом 20. Из таблицы вариантов
значений цифр шифрующего отрезка видим, что 5-я его цифра может
быть равна 5, 6, 7 или 8, а его 25-я цифра  2, 3, 4 или 5. Отсюда
получаем, что 􀀀5 = 􀀀25 = 5. На периоде последовательности, из кото-
рой выбран шифрующий отрезок, есть две цифры 5: 5 и 15. Поэтому
рассмотрим два случая. Если 􀀀5 = 5, то 􀀀7 = 7 = 3. Это противоречит
таблице вариантов значений цифр шифрующего отрезка, в которой 􀀀7
может быть равна 4, 5, 6 или 7. Если же 􀀀5 = 15, то соответствующий
шифрующий отрезок: 1636567490147656369016365674 хорошо согласу-
ется с таблицей вариантов значений его цифр. Вычитая цифры най-
денного отрезка из соответствующих цифр шифрованного сообщения и
заменяя разности их остатками от деления на 10, получим по таблице
замены пар цифр на буквы исходное сообщение:
шифрованное
сообщение 23 39 86 72 16 45 81 60 67 06 17 31 55 88
шифрующий
отрезок 16 36 56 74 90 14 76 56 36 90 16 36 56 74
цифровое
сообщение 17 03 30 08 26 31 15 14 31 16 01 05 09 14
исходное
сообщение С В Я З Ь - П О - Р А Д И О
3.6. Обозначения понятны из рис. 12.
1) MK1P1B центрально симметричен MKPA относительно M.
2) NL1Q1B центрально симметричен NLQC относительно N.
3) P1K2Q1 = PKQ (параллельный перенос).
4) LK1K2L1  квадрат.
5) MT ⊥ AC, NS ⊥ AC.
6) PMT = QNS (MT = NS, PM = QN, ∠T = ∠S = 90◦).
7) Без ограничения общности AB = BC = CA = 1.
8) PT = QS = x, AP =
1
4 ∓ x, PQ =
1
2
, QC =
1
4 ± x.
228 Гл. 7. Олимпиады по криптографии для школьников
A
B
C
K
L
M N
P T Q S
K1
L1
K2
P1 Q1
Рис. 12.
9) PMK = NQL (PM=QN, ∠M=∠Q, ∠K=∠L=90◦) ⇒ MK = QL.
10) MQ = ML + LQ = ML +MK = ML + K1M = K1L = y.
11) Площадь ABC =
√3
4
равна площади LK1K2L1 = y2, y =
√4 3
2
.
12) MT =
√3
4
(половина высоты ABC).
13) QT = PQ − PT =
1
2 ∓ x.
14) MQ2 = MT 2 + QT 2 (теорема Пифагора), т. е.
 
√4 3
2
!2
=
 √3
4
!2
+ (
1
2 ∓ x)2 (x<1/2)
⇐⇒
s
√3
4 −
3
16
=

1
2 − x

⇐⇒
⇐⇒ x =
1
2 −
1
4
q
4√3 − 3.
15) AP : PQ : QC =
1
4
p
4√3 − 3 − 1

:
1
2
:
1
4

3 − (
p
4√3 − 3)

=
=
p
4√3 − 3 − 1

: 2 :

3 −
p
4√3 − 3

.
Замечание. Точки P и Q можно построить с помощью циркуля и
линейки. Подумайте, как это можно сделать.
Ответ: AP : PQ : QC =
p
4√3 − 3 − 1

: 2 :

3 −
p
4√3 − 3

.
4.1. Исходный текст состоит из 48 букв, следовательно, при зашиф-
ровании было использовано три положения решетки полностью и еще
три буквы вписаны в четвертом положении. Значит, незаполненные 12
клеток совпадают с вырезами решетки в четвертом положении. Так
§ 6. Указания и решения 229
как текст вписывается последовательно, то неизвестные нам три выре-
за могут располагаться только в первой строке таблицы и первых пяти
клетках второй строки (до первого известного выреза). Считаем, что
трафарет лежит в четвертом положении. Учитывая, что в одну клет-
ку листа нельзя вписать две буквы, получаем, что вырезы могут быть
только в отмеченных знаком ¾?¿ местах трафарета (¾∗¿  места из-
вестных вырезов):
? ?
? ? ∗ ∗
∗ ∗ ∗
∗ ∗
∗
∗ ∗ ∗ ∗
Очевидно, что из отмеченных в первой строке двух клеток выре-
зается только одна (так как они совмещаются поворотом). Получаем
два возможных варианта решетки (либо первый ¾?¿, либо второй ¾?¿ в
первой строке). Читаемый текст получается при втором варианте.
Ответ: ПОЛЬЗУЯСЬШИФРОМРЕШЕТКАНЕЛЬЗЯОСТАВЛЯТЬПУСТЫЕМЕСТА
4.2. Один из вариантов решения состоит из следующих этапов.
1. 19=н из второй строки (¾19,2 19,5¿).
2. 29=о из третьей строки (¾29,н,10¿) и 10=а или 10=и.
3. 14=щ из ¾но,14,но¿.
4. 8=д, 2=е, 10=и из ¾денно и нощно¿.
Получили текст:
12 е 24 5 3 21 6 о 28 е 20 18 20 21 5 и 27 17 е 11 е 16 
н е 27 5 д о 12 31 22 е 16, н е н 5 17 о д о 6 о 16:
д е н н о и н ощн о о н и е 24 е 11 е 16
ищ18 21 17 е 20 е 28 о 16 21 о 28 6 о 16.
5. 5=а и 27=з из второй строки.
6. 17=в 6=п 16=й  последнее слово второй строки  водопой.
Получили текст:
12 е 24 а 3 21 п о 28 е 20 18 20 21 а и з в е 11 е й 
н е з а д о 12 31 22 е й, н е н а в о д о п о й:
д е н н о и н ощн о о н и е 24 е 11 е й
ищ18 21 в е 20 е 28 о й 21 о 28 п о й.
7. 21=т 18=у 28=л 20=с из последней строки ¾ищут веселой толпой¿.
8. 11=р из ¾з в е 11 е й¿ первой строки.
230 Гл. 7. Олимпиады по криптографии для школьников
Итак,
12 е 24 а 3 т п о л е с у с т а и з в е р е й 
н е з а д о 12 31 22 е й, н е н а в о д о п о й:
д е н н о и н ощн о о н и е 24 е р е й
ищу т в е с е л о й т о л п о й.
9. 24=г из ¾егерей¿.
10. 12=б 3=ю из ¾бегают¿.
11. 31=ы 22=ч из ¾добычей¿.
Ответ: Бегают по лесу стаи зверей 
Не за добычей, не на водопой:
Денно и нощно они егерей
Ищут веселой толпой.
4.3. Ответ: cos 36◦ = (1 + √5)/4 ≈ 0,8.
4.4. Занумеруем буквы латинского алфавита последовательно числа-
ми от 1 до 24. Пусть x  некоторое число от 1 до 24, а f(x)  число, в
которое переходит x на втором этапе. Тогда перестановочность этапов
можно записать в следующем виде:
f(x + 1) = f(x) + 1, т. е. f(x + 1) − f(x) = 1.
Это означает, что соседние числа x и x + 1 на втором этапе переходят
в соседние же числа f(x) и f(x + 1), т. е. второй этап  тоже сдвиг.
Последовательное применение двух сдвигов  очевидно тоже сдвиг и
остается рассмотреть 24 варианта различных сдвигов. Читаемый текст
определяется однозначно. Осложнения, связанные с переходом Z в A,
устраняются либо переходом к остаткам при делении на 24, либо выпи-
сыванием после буквы Z второй раз алфавита AB. . . Z.
Ответ: INTER ARMA SILENT MUSAE
(´интер ´арма с´илент м´узэ 
когда гремит оружие, музы молчат).
4.5. Составим возможные варианты переданных букв:
ГЪЙ АЭЕ БПРК ЕЖЩЮ НМЬЧ СЫЗЛ ШДУ ЦХОТ ЯФВИ
БШЗ АЫВ АНОИ ГЕЧЬ ЛКЪХ ПЩЕЙ ЦВС ФУМР ЭТАЖ
ВЩИ БЬЕ БОПЙ ДЁШЭ МЛЫЦ РЪЖК ЧГТ ХФНС ЮУБЗ
ГЪЙ ВЭЁ ВПРК ЕЖЩЮ НМЬЧ СЬЗЛ ШДУ ЦХОТ ЯФВИ
ДЫК ЮЖ ГРСЛ ЁЗЪЯ ОНЭШ ТЬИМ ЩЕФ ЧЦПУ ХГЙ
ЕЬЛ ЯЗ СТМ ЖИЫ ПОЮЩ УЭЙН ЪЁХ ШЧРФ ЦДК
§ 6. Указания и решения 231
Выбирая вторую и последнюю группу букв (где есть короткие колонки
букв), определяем слова, им соответствующие: ВЯЗ, ЭТАЖ. В исходных
словах 33 буквы, поэтому буквы В, Я, З, Э, Т, А, Ж уже использова-
ны и их можно вычеркнуть из всех колонок:
ГЪЙ АЭЕ БПРК ЕЖЩЮ НМЬЧ СЫЗЛ ШДУ ЦХОТ ЯФВИ
БШ НОИ ГЕЧЬ ЛКЪХ ПЩЕЙ Ц С ФУМР ЭТАЖ
ЩИ БОПЙ ДЁШ МЛЫЦ РЪ К ЧГ ХФНС
ГЪЙ В ПРК Е Щ НМЬЧ СЬ Л ШДУ ЦХО
ГРСЛ Ё Ъ ОН ЬИМ ЩЕФ ЧЦПУ
ЕЬЛ ЯЗ С М ИЫ ПО У ЙН ЪЁХ ШЧРФ
Из нескольких вариантов, например, в третьей группе:
ГНОЙ ГНОМ ГРОМ
выбираем варианты так, чтобы каждая буква использовалась один раз.
Продолжая таким образом, получим ответ.
Ответ: БЫК ВЯЗ ГНОЙ ДИЧЬ ПЛЮЩ СЪЁМ ЦЕХ ШУРФ ЭТАЖ
4.6. Заметим, что Ak+1−Ak = (k+1)3−k3+2 для всех натуральных k.
Складывая почленно эти равенства при k = 1, 2, . . . , (n − 1), получим
An −A1 = n3 −3+2n. По условию A1 = 3. Следовательно, справедливо
соотношение An = n3 + 2n.
Ясно, что при расшифровании так же, как и при зашифровании,
вместо чисел A100, A101, A102, A103, A104, A105, A106 можно восполь-
зоваться их остатками от деления на 30. Так как для каждого целого
неотрицательного i
(100 + i)3 + 2(100 + i) = i3 + 2i + 30z,
где z  некоторое целое число, то получаем следующие остатки при
делении чисел A100, . . . ,A106 на 30:
A100 A101 A102 A103 A104 A105 A106
0 3 12 3 12 15 18
Заключительный этап представлен в таблице:
шифрованное сообщение К Е Н З Э Р Е
числовое шифрованное
сообщение
9 5 12 7 27 15 5
шифрующий отрезок 0 3 12 3 12 15 18
числовое исходное сообщение 9 2 0 4 15 0 17
исходное сообщение К В А Д Р А Т
232 Гл. 7. Олимпиады по криптографии для школьников
4.7. Ответ:
x =
1 + √4a2 + 1
2a
при 0 < a < 1;
x1 =
1 + √4a2 + 1
2a
, x2 = −√4a2 − 3 − 1
2a
при a > 1.
5.1. Указание. Найдите допустимые варианты для остатков от деле-
ния неизвестных x и y на 7. Таких вариантов будет восемь. Учитывая
принадлежность неизвестных к заданному диапазону, найдите допусти-
мые варианты для (x, y) (19 вариантов). Для каждой пары (x, y) най-
дите z. В диапазон 10, . . . , 20 попадают только три решения: (12,16,11),
(13,17,17), (13,18,12).
5.2. Так как при записывании сообщения в таблицу пробелы опуска-
лись, можно сделать вывод, что столбцы, содержащие пробел в послед-
ней клетке, до перестановки стояли в конце таблицы. Таким образом,
столбцы можно разбить на две группы, как показано на рис. 13. При
этом для получения исходного текста потребуется переставлять столб-
цы только внутри групп.
Я Н Л В Р А Л О Е Г О М З Е
Й Л Т А Ф Ы И П И О Г Е Б Р
Ч Р Д Ч Е С М О К И Н Т К О
Н У Л А Р Е Б Ы Е И О Н Ы Д
Ы Т Д О М П П Т А И П Т З Л
И К С И Т Ч Н О Е Л У Л Т Ж
К Е Т Р И Я
Л Е У О Д О
И Н Д Х И Е
Е Ы Е З Н Ч
Е Щ В Н Я С
- - - - - -
Рис. 13.
Естественно предположить, что сообщение оканчивалось точкой. По-
этому на третьем с конца месте в первой группе должен быть столбец,
оканчивающийся на Т, на втором  на Ч, на последнем  на К. Получа-
ем два варианта (рис. 10), из которых первый является явно ¾нечитае-
мым¿.
Р А Н З А Н Я Л В Р Л О Е Г О М Е З А Н Я Т И Е К Р
Ф Ы Л Б Ы Л Й Т А Ф И П И О Г Е Р Б Ы Л О У Д Е Л О
Е С Р К С Р Ч Д Ч Е М О К И Н Т О К С Р Е Д И Н И Х
Р Е У Ы Е У Н Л А Р Б Ы Е И О Н Д Ы Е У Ч Е Н Ы Е З
М П Т З П Т Ы Д О М П Т А И П Т Л З П Т С В Я Щ Е Н
Т Ч К Т Ч К И С И Т Н О Е Л У Л Ж Т Ч К - - - - - -
Рис. 14. Рис. 15.
Таким образом, удалось зафиксировать последние три столбца первой
§ 6. Указания и решения 233
группы. Переставляя столбцы второй группы, ищем ¾читаемые¿ про-
должения зафиксированных столбцов (рис. 11). Действуя далее анало-
гичным образом с оставшимися столбцами первой группы, достаточно
легко получаем исходное сообщение.
Ответ:
Д О Л Г О Е В Р Е М Я З А Н Я Т И Е К Р
И П Т О Г Р А Ф И Е Й Б Ы Л О У Д Е Л О
М О Д И Н О Ч Е К Т Ч К С Р Е Д И Н И Х
Б Ы Л И О Д А Р Е Н Н Ы Е У Ч Е Н Ы Е З
П Т Д И П Л О М А Т Ы З П Т С В Я Щ Е Н
Н О С Л У Ж И Т Е Л И Т Ч К
5.4. Во втором случае известны пары цифр, которыми шифруются
буквы ¾р¿, ¾е¿, ¾м¿, ¾о¿, ¾н¿, ¾т¿, а в первом  пары цифр для тех же
букв, за исключением буквы ¾н¿.
Ответ: во втором случае легче.
5.5. Ответ: 481.
5.6. Можно заметить, что последовательность букв МОСКВА входит как
подпоследовательность в каждый из шифртекстов первой тройки:
й МывОт СьлКъгВц Аяя
укМапОч Ср Кщ Вз Ах
ш МфэОгчСйъКфьВыеАкк
На основе этого наблюдения можно предположить, что шифрование
заключается в следующем. В каждый промежуток между буквами ис-
ходного сообщения (начало и конец также считаются промежутками)
вставляются одна либо две буквы в соответствии с известным только
отправителю и получателю ключом.
Очевидно, что первая буква сообщения должна попасть на 2-е или
3-е место шифрованного текста. Сравнивая буквы, стоящие на указан-
ных местах в подлежащих расшифрованию криптограммах, делаем вы-
вод, что одно и то же исходное сообщение соответствует первому и тре-
тьему шифртексту и что первая буква этого сообщения  П.
Рассуждая далее аналогичным образом, заключаем, что второй бук-
вой повторяющегося сообщения является О (сопоставили ОИ из 1-й крип-
тограммы и ИО из 3-й) и так далее. В итоге получим, что первой и тре-
тьей криптограмме соответствует исходное сообщение
ПОВТОРЕНИЕМАТЬУЧЕНИЯ
Теперь расшифруем вторую криптограмму. Первой буквой сообще-
ния могут быть только С или И. Далее, подбирая к каждой из них воз-
можные варианты последующих букв и вычеркивая заведомо ¾нечита-
емые¿ цепочки букв, получим:
СЕ, СМ, ИМ, ИГ
СЕГ, сео, СМО, СМР, ИМО, ИМР, ИГР, игт
234 Гл. 7. Олимпиады по криптографии для школьников
сегр, сегт, СМОТ, СМОК, смрк, смрр, ИМОТ, ИМОК,
имрк, имрр, игрк, игрр
СМОТР, СМОТО, СМОКО, смокм, ИМОТР, ИМОТО, ИМОКО, имокм
СМОТРМ, СМОТРИ,
смотои, смотот, смокои, смокот, имотрм, имотри,
имотои, имотот, имокои, имокот
СМОТРИВ, СМОТРИА
СМОТРИВВ, СМОТРИВК, СМОТРИАК, СМОТРИАН и так далее.
В итоге получим исходное сообщение СМОТРИВКОРЕНЬ.
Ответ: 1,3  ПОВТОРЕНИЕМАТЬУЧЕНИЯ
2  СМОТРИВКОРЕНЬ
5.7. Обратив внимание на то, что некоторые символы в тексте условий
задач пятой олимпиады набраны выделенным шрифтом, и выписав эти
символы в порядке их следования, получаем текст:
задачасемьпояснитекаквынашлитекстзадачи
6.1. Так как каждый из 1997 абонентов связан ровно с N другими,
то общее число направлений связи равно 1997N. Отсюда общее число
связанных пар абонентов равно 1997N/2, так как каждая связанная па-
ра имеет ровно 2 направления связи. Поскольку число 1997N/2 должно
быть целым, а число 1997  нечетное, то число N должно быть четным.
Докажем, что для каждого N = 2T существует система связи из
1997 абонентов, в которой каждый связан ровно с N другими. В самом
деле, расположив всех абонентов на окружности и связав каждого из
них с ближайшими к нему по часовой стрелке и с ближайшими к нему
против часовой стрелки, получим пример такой сети связи.
6.2. Покажем, что на диагонали присутствуют все числа от 1 до 1997.
Пусть число a ∈ {1, . . . , 1997} не стоит на диагонали. Тогда, в силу сим-
метрии таблицы, число a встречается четное количество раз. С другой
стороны, так как число a по одному разу встречается в каждой строке,
всего в таблице чисел a нечетное количество (1997). Получили проти-
воречие.
Всего на диагонали 1997 клеток, поэтому каждое число из множест-
ва {1, . . . , 1997} встретится на диагонали ровно по одному разу. Вычис-
ляя сумму арифметической прогрессии, находим ответ.
Ответ: 1995003.
6.3. Ответ: ШЕСТАЯОЛИМПИАДАПОКРИПТОГРАФИИПОСВЯЩЕНАСЕМИДЕСЯТИ
ПЯТИЛЕТИЮСПЕЦИАЛЬНОЙСЛУЖБЫРОССИИ
Указание. Пусть некоторая буква  при зашифровании первым спо-
собом заменялась на букву . Тогда количество повторов буквы  в
первой криптограмме будет равно числу повторов буквы  во второй
криптограмме.
§ 6. Указания и решения 235
6.4. а) Определим моменты остановок после начала шифрования.
Для этого каждой букве русского алфавита припишем ее порядковый
номер: А  0, Б  1, и т. д. Тогда буквам из шифруемого слова бу-
дут соответствовать номера: О  15, Л  12, И  9, М  13, П 16,
А  0, Д  4. Моменты остановок будем указывать числом одношаго-
вых (на один зубец) поворотов I колеса до соответствующей останов-
ки.
№остановки 1 2 3 4 5 6 7 8 9
Буква I колеса О Л И М П И А Д А
Число одношаговых
поворотов
от начала до остановки
15 45 75 79 82 108 132 136 165
Цифра II колеса 5 5 5 1 8 2 8 4 5
Цифра III колеса 1 2 5 2 5 3 6 3 4
Искомый шифртекст: 515355128523864354
б) Пусть tk  количество одношаговых поворотов I колеса от начала
до остановки с номером k, k = 1, 2, . . . ,
ak  цифра, на которую указывает стрелка II колеса в момент оста-
новки с номером k,
bk  цифра III колеса, на которую указывает стрелка III колеса в
момент остановки с номером k.
Тогда, учитывая, что начальное положение стрелок соответствует
букве А на первом колесе и 0 на II и III колесах, справедливы равенства
tk = 10mk − ak, k = 1, 2, . . . (1)
tk = 7nk + bk, k = 1, 2, . . . (2)
для подходящих неотрицательных целых чисел mk и nk.
Заметим, что 1 = 7 · 3 − 10 · 2. Отсюда справедливы равенства
ak = 7 · (3ak) − 10 · (2ak), k = 1, 2, . . .
bk = 7 · (3bk) − 10 · (2bk), k = 1, 2, . . .
Подставляя эти значения в равенства (1) и (2), получим
tk = 10(mk + 2ak) − 7(3ak), k = 1, 2, . . .
tk = 7(nk + 3bk) − 10(2bk), k = 1, 2, . . .
Следовательно,
10(mk + 2ak) − 7(3ak) = 7(nk + 3bk) − 10(2bk), k = 1, 2, . . .
Правая и левая части делятся на 70, то есть имеют вид 70sk для под-
ходящего неотрицательного целого sk. Поэтому
mk = 7sk − 2(ak + bk), k = 1, 2, . . .
nk = 10sk − 3(ak + bk), k = 1, 2, . . .
236 Гл. 7. Олимпиады по криптографии для школьников
Подставляя mk в (1), получим
tk = 70sk − 21ak − 20bk, k = 1, 2, . . . .
Учитывая условие 0 < t1 < t2 < · · · < t7 и то, что остановка колес
происходит в момент первого появления шифруемой буквы под стрел-
кой I колеса, имеем
k 1 2 3 4 5 6 7
ak 2 8 9 8 9 1 1
bk 4 0 2 3 1 2 1
−(21ak + 20bk) −122 −168 −229 −228 −209 −61 −41
tk 18 42 51 52 71 79 99
Буквы C И С Т Е М А
6.5. Указание. Рассмотрим некоторую расстановку ненулевых цифр
на окружности. Упорядоченную пару (a, b) соседних цифр на этой ок-
ружности назовем 1-соседней, если b является соседней с a по часовой
стрелке. Пару (a, c) назовем 2-соседней, если существует цифра b, для
которой пары (a, b) и (b, c) являются 1-соседними.
Каждой расстановке ненулевых цифр на окружности однозначно со-
ответствует цепочка 1-соседних пар вида: (1, a1), (a1, a2), (a2, a3), . . . ,
(a7, a8), (a8, 1), которой, в свою очередь, однозначно соответствует це-
почка 2-соседних пар вида:
(1, a2), (a2, a4), (a4, a6), (a6, a8), (a8, a1)(a1, a3)(a3, a5)(a5, a7)(a7, 1), (∗)
где a2, a3, . . . , a8 ∈ {2, . . . , 9} и ai 6= aj при i 6= j.
Если из цепочки (∗) удалить любую пару, то по оставшимся парам
она восстанавливается однозначно.
Если из цепочки (∗) удалить две соседние пары, то она также вос-
станавливается однозначно.
Удаление из (∗) любых трех пар приводит к неоднозначности восста-
новления цепочки (∗). В этом можно убедиться, рассмотрев следующие
фрагменты цепочки вида (∗):
(a, b)(b, c)(c, d) и (a, c)(c, b)(b, d), (a, b, c, d  различные цифры),
(a, b)_(c, d)(d, e) и (a, d)(d, b)_(c, e), (a, b, c, d, e  различные цифры),
(a, b)_(c, d)_(e, f) и (a, d)(e, b)_(c, f), (a, b, c, d, e, f  различные
цифры).
Таким образом, при наличии двух указанных в условии задачи циф-
ровых текстов нам будут известны некоторые 2-соседние пары, в ко-
торых первая цифра берется из первой криптограммы, а вторая  из
второй. Поэтому с учетом вышесказанного получаем условие однознач-
ного восстановления порядка расстановки цифр на данной окружно-
сти.
§ 6. Указания и решения 237
Ответ: для однозначного восстановления расстановки цифр на ок-
ружности необходимо и достаточно, чтобы в одном из цифровых тек-
стов было не менее 7 ненулевых цифр (это соответствует удалению из
цепочки 2-соседних пар вида (∗) не более двух из них).
6.6. Последовательность остатков от деления чисел a1, a2, . . . на 24 
периодическая с периодом 2, так как для любого натурального n спра-
ведливо:
an+2 − an = pn+4 − pn+2 =

24 · 2n−1, при p = 2
pn+1(p3 − p), при p > 3
.
Кроме того, p3 − p = (p − 1)p(p+ 1) кратно 24, то есть остатки у an+2 и
an равны.
6.7. Ответ: a = 1996; все решения имеют вид ±3992k + 1996,
k = 0, 1, . . . , 998.
Указание. При a 6 0 рассматриваемое уравнение равносильно
|x − a| − 1995a = 1996, которое имеет не более двух решений.
При a > 0 из графика функции в левой части уравнения видно, что
если 1996 ∈ (0, a), число решений будет четным, поэтому не может быть
равно 1997. Если 1996 ∈ (a,+∞), то уравнение имеет ровно 2 решения.
Если же a = 1996, то уравнение имеет ровно 1997 решений.
7.1. Для того, чтобы сохранилась связь при выходе из строя любых
двух узлов, необходимо, чтобы в каждый узел входило не менее трех
линий связи. Ситуация
A
B
C
недопустима, ибо при выходе из строя узлов B и C узел A становится
недоступным. Значит, всего линий должно быть не менее
10 × 3
2
= 15.
Вот два примера, удовлетворяющие условиям задачи с 15-ю линиями
связи:
Приведем доказательство для первого примера. Если вышли из строя
два узла на одном пятиугольнике, то связь сохранится через другие
пятиугольники. Если вышли из строя по одному узлу на разных пя-
тиугольниках, то связь сохранится по линиям, соединяющим эти пяти-
угольники.
Ответ: 15.
238 Гл. 7. Олимпиады по криптографии для школьников
7.2. Процедура зашифрования может быть полностью описана квад-
ратной таблицей 10×10. На пересечении строки с номером i и столбца с
номером j записываем цифру, в которую при зашифровании переходит
цифра j, если она стоит в пароле после цифры i. Из однозначности рас-
шифрования следует, что в каждой строке каждая цифра встречается
ровно один раз.
Обозначим через 1, 2, . . . , 7 и 1, 2 зашифрованные пароли и два из-
вестных пароля в порядке, определяемом условием задачи. Процедура
зашифрования сохраняет длину, поэтому 3 и 4 не могут соответство-
вать ни 1, ни 2. Предположив, что 1 соотвествует 1, получим часть таб-
лицы, в которой в одной строке две одинаковые цифры. Это означает,
что предположение неверно. Составляя таблицы, убеждаемся, что 2 не
шифруется ни в 6, ни в 7, ни в 5. В результате таких рассуждений оста-
ется только один вариант перехода 1 − 2, 2 − 5. Заполнение таблицы
будет следующим:
0 1 2 3 4 5 6 7 8 9
0 5
1 3
2 4 3 7 8
3 7
4 2
5 3
6
7 4
8 1 9
9
0 1 2 3 4 5 6 7 8 9
0 6 5
1 3
2 4 3 7 0 6 2 5 8 9
3 3 7
4 2
5 3 7
6
7 4
8 1 9
9 1
Очевидно, что в строке с номером 2 в последней клетке стоит 1.
Знание этой таблицы позволяет однозначно расшифровать 3: получит-
ся 5830829. Пароли, соответствующие 1, 4, 6, 7, восстанавливаются не
полностью.
Ответ: полностью можно расшифровать только 5393511, получится
5830829.
7.3. Сообщение состоит из 3 × 17 = 51 буквы. Поэтому r = 3 или
r = 17 (при r = 1 и r = 51  получается нечитаемый текст). При
r = 3 не получается осмысленного текста при всех шести возможных
вариантах перестановки букв (a = 1, 2, b = 0, 1, 2). Рассмотрим случай
r = 17:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
Б Т И П Ч Ь Л О Я Ч Ы Ь Т О Т П У
Н Т Н О Н З Л Ж А Ч О Ь О Т У Н И
У Х Н И П П О Л О Ь Ч О Е Л О Л С
§ 6. Указания и решения 239
Соседние буквы при перестановке переходят в буквы, отстоящие
друг от друга на одинаковое расстояние: буква на -м месте переходит на
место, определяемое остатком от деления ax+b на 17, а буква на (+1)-м
месте  на место, определяемое остатком от деления (ax+b)+a на 17.
Это верно для любого . Поэтому есть всего 16 вариантов переходов со-
седних букв (исходный текст нечитаем), которые определяют однознач-
но переходы всех остальных букв. Перебирая их, получаем нечитаемые
тексты во всех случаях, кроме одного, который дает текст:
Ч И Т Ь П Я Т Ь Ч Т О Б Ы П О Л У
Ч Н О З Н А Т Ь Н У Ж Н О О Т Л И
Ь Н Е П Л О Х О П О Л У Ч И Л О С
Из трех вариантов начала текста легко определяется истинный ва-
риант.
Ответ:
ЧТОБЫПОЛУЧИТЬПЯТЬНУЖНООТЛИЧНОЗНАТЬПОЛУЧИЛОСЬНЕПЛОХО
7.4. Последовательность обхода доски показана на рисунке:
37 62 43 56 35 60 41 50
44 55 36 61 42 49 34 59
63 38 53 46 57 40 51 48
54 45 64 39 52 47 58 33
1 26 15 20 7 32 13 22
16 19 8 25 14 21 6 31
27 2 17 10 29 4 23 12
18 9 28 3 24 11 30 5
Ответ:
Кавалергардов век недолог
И потому так сладок он.
Труба трубит, откинут полог. . .
7.5. Из однородности всех членов следует, что неравенство эквива-
лентно неравенству a3 + b3 + c3 + 6abc > 1/4 при условии a + b + c = 1,
a > 0, b > 0, c > 0.
Пусть  минимальное из чисел a, b, c (0 < c 6 1/3) и a = x. Тогда
A = a3 + b3 + c3 + 6abc −
1
4
=
= x3 + (1 − c − x)3 + c3 + 6x(1 − c − x)c −
1
4
=
240 Гл. 7. Олимпиады по криптографии для школьников
= 3(1 − 3c)x2 − 3(1 − c)(1 − 3c)x + (1 − c)3 + c3 −
1
4
.
Находим минимум квадратного трехчлена с параметром и поло-
жительным коэффициентом при 2. Минимум достигается в точке x =
(1 − c)/2, при этом значение A будет положительным.
7.6. Если мелом с квадратным сечением нарисовать на доске отрезок
прямой так, чтобы стороны сечения были параллельны краям доски, то
площадь полученной линии будет равна площади ступенчатой линии с
такими же концами (см. рис. 16).
Если на доске нарисовать некоторый (выпуклый) многоугольник, то
найдутся такие граничные ¾точки¿ этого многоугольника, которые яв-
ляются ближайшими к одному из краев доски. Площадь границы пря-
моугольника, содержащей все такие ¾точки¿, равна площади границы
нарисованного выпуклого многоугольника (см. рис. 17).
s
s
s
s
s1
s1
Л
Н
П
В
Рис. 16. Рис. 17.
Такой прямоугольник назовем окаймляющим. Ясно, что площадь
окаймляющего прямоугольника не меньше площади соответствующего
многоугольника. Значит, для любого многоугольника данной площади
найдется прямоугольник такой же площади, но с площадью границы
не большей, чем площадь границы исходного многоугольника.
Если многоугольник со сторонами a и b имеет площадь 10000 см2,
то площадь его границы равна
2a + 2b + 4 = 2a +
20000
a
+ 4 = 2(√a −
100
√a
)2 + 404.
Минимум достигается в случае, когда возводимое в квадрат выражение
равно 0. В этом случае a = 100, что влечет b = 100. Таким образом, наи-
меньшую площадь границы, равную 404 см2, имеет квадрат со стороной
1 м.
Ответ: квадрат со стороной 1 м; площадь его границы  404 см2.
7.7. Если группа цифр, из которой образуются числа, состоит из k
цифр, то существует ровно k! различных чисел, для записи которых
§ 6. Указания и решения 241
используются все цифры группы ровно по одному разу. Группу из k
цифр будем обозначать Gk.
Поскольку в сообщении отсутствуют цифры 2 и 9, эти цифры обра-
зуют либо две группы по одной цифре, либо одну группу из двух цифр.
В обоих случаях эти цифры могут быть использованы для зашифрова-
ния ровно двух букв алфавита.
Так как 31 = 1! + 3! + 4!, то {1, 3, 4, 5, 6, 7, 8, 0} = G1 ∪ G3 ∪ G4.
Если G1 6= {1}, то из сообщения находим:
а) G4 = {1, 3, 7, 8}, G3 = {0, 5, 6}, G1 = {4} либо
б) G4 = {1, 3, 7, 8}, G3 = {4, 5, 6}, G1 = {0}.
Случай а Случай б Случай а Случай б Случай а Случай б
А 2 (4) 0 К 1738 1738 Х 7183 7183
Б 4 (29) 2 (29) Л 1783 1783 Ц 7318 7318
В 9 (56) 9 (92) М 1837 1837 Ч 7381 7381
Г 56 (65) 456 Н 1873 1873 Ш 7813 7813
Д 65 (92) 465 О 3178 3178 Щ 7831 7831
Е 506 546 П 3187 3187 Ъ 8137 8137
Ё 605 564 Р 3718 3718 Ы 8173 8173
Ж 650 645 С 3781 3781 Ь 8317 8317
З 650 654 Т 3817 3817 Э 8371 8371
И 1378 1378 У 3871 3871 Ю 8713 8713
Й 1387 1387 Ф 7138 7138 Я 8731 8731
Сообщение после расшифрования имеет вид: а) ЯАЗЧ или б) ЯДАЧ,
т. е. не читается.
Если G1 = {1}, то из сообщения находим G3 = {3, 7, 8}, G4 =
= {0, 4, 5, 6}. В этом случае таблица замены букв числами имеет вид:
А 1 Ё 465 Л 783 С 4560 Ч 5460 Э 6450
Б 2(29) Ж 546 М 837 Т 4605 Ш 5604 Ю 6504
В 9(92) З 564 Н 873 У 4650 Щ 5640 Я 6540
Г 378 И 645 О 4056 Ф 5046 Ъ 6045
Д 387 Й 654 П 4065 Х 5064 Ы 6054
Е 456 К 738 Р 4506 Ц 5406 Ь 6405
Сообщение легко прочитать: НАУКА.
242 Гл. 7. Олимпиады по криптографии для школьников
2
2
2
2
2
2
2
2
2
2
2
0 0
2
2
0
0 0 0
0
0
0
0
0
0
A B
D C
Рис. 18.
8.1. Проведем прямые, проходящие через точки пересечения границ
сложенной ленты параллельно ее краям. Очевидно, что тогда лента
разобьется на равные равносторонние треугольники. Отметим цифрой
0 все просветы, а цифрой 2 все треугольники, которые получились на-
ложением друг на друга двух треугольников в сложенной ленте. По-
строим дополнительно ряд треугольников вне эмблемы, как показано
на рисунке 18. В полученной фигуре число треугольников, отмеченных
цифрой 2, равно числу треугольников, отмеченных цифрой 0. Поэтому
площадь всей ленты равна площади трапеции ABCD. Количества тре-
угольников в горизонтальных рядах ABCD являются 9 последователь-
ными членами арифметической прогрессии с первым членом, равным 3
(нижний ряд), и разностью 2. Следовательно, общее число треугольни-
ков равно
N =
2 · 3 + (9 − 1) · 2
2 · 9 = 99.
Если h  ширина ленты, то пло-
щадь одного равностороннего тре-
угольника с высотой h равна
S0 = h2 ctg 60◦ = h2/√3.
С другой стороны, если длина пря-
моугольника, полученного после
разрезания ленты, равна l, то S =
= lh. Отсюда находим искомую ве-
личину: l/h = 33√3.
Ответ: 33√3.
8.2. Последовательность из k нулей или k единиц обозначим соответ-
ственно через 0k или 1k. Тогда шифрование каждого знака сообщения
состоит в замене
0→0k11k2
1→0k3 для I способа,

1→1k40k5
0→0k6 для II способа. (1)
В зашифрованном сообщении все серии из единиц имеют длину k2
для первого способа и длину k4 для второго способа, поэтому, для сов-
падения результатов зашифрования необходимо, чтобы
k2 = k4. (2)
Теперь легко получить, что в сообщении должно быть одинаковое
число нулей и единиц.
Пусть n  число нулей в сообщении. Тогда число нулей в зашифро-
ванном I способом сообщении равно nk1+nk3, а II способом  nk5+nk6.
Таким образом,
nk1 + nk3 = nk5 + nk6. (3)
§ 6. Указания и решения 243
Из (1) видно, что сообщение должно начинаться с нуля и оканчи-
ваться единицей. Пусть перед первой единицей сообщения расположено
a нулей. Тогда первые +1 знаков сообщения представляются при шиф-
ровании в виде:
при = 1

0k11k20k3 для I способа,
0k61k40k5 для II способа,
при > 1

0k11k20k11k2 . . . 0k11k20k3 для I способа,
0ak61k40k5 для II способа.
(4)
При a = 1 получаем необходимость равенства k1 = k6, а значит, с
учетом (3)  равенства k3 = k5.
При > 1 получаем условия:
k1 = ak6,  натуральное,
k1 = k5 + bk6, b  натуральное или нуль.
Подставляя k1 = k5 + bk6 в (3), получаем равенство k3 = (1 − b)k6,
которое при натуральных k3, k6 и b > 0 возможно лишь в случае b = 0.
Следовательно, k3 = k6, а значит, с учетом (3) k1 = k5.
Таким образом, при > 1 необходимы условия k2 = k4, k5 = k1 =
= ak6 = ak3, где a  натуральное. Из (4) следует, что сообщение должно
иметь вид 0 . . . 01 . . . 1, где число нулей и число единиц равно a.
Ответ: При k2 = k4, k1 = k6, k3 = k5 сообщения вида 0101 . . . 01
шифруются одинаково.
При k2 = k4, k5 = k1 = ak6 = ak3, где a  натуральное, сообще-
ния вида (0 . . . 01 . . . 1) . . . (0 . . . 01 . . . 1) (группы из a нулей и a единиц)
шифруются одинаково.
Примечание. Первый ответ не является частным случаем второго
при a = 1.
8.3. Естественно предположить, что все члены оргкомитета родились
в ХХ веке. Отсюда сразу замечаем, что на 3, 7, 11, 15, 19 и 23 местах
последовательности простых чисел расположены числа 11, 17, 47, 53,
83 и 89 соответственно.
Выясним, какие числа являются соседними с указанными шестью
числами. Для этого составим таблицу их возможных ¾соседей¿. В соот-
ветствии с условием имеем:
число соседи
11 13, 19, 43, 7, 3
17 13, 19
47 79, 43, 31
53 61, 37
83 79, 67, 19
89 97, 73.
244 Гл. 7. Олимпиады по криптографии для школьников
Учитывая, что первая цифра в номере месяца принимает значения
только 0 или 1, построим следующую таблицу:
15 02 20 45 42 13 26 67 44 30 56 82 53 33 62 32 73 63 92 49 75 70 98 49
19 19 19 19 19 19
11 17 31 47 37 53 61 67 83 73 89 97
03 03 13 13 43 19
07 07 19 19 79 79
13
19
43
где в первой строке расположено шифрованное сообщение, во второй
строке  известные участки исходного сообщения, в третьей строке 
ставшие известными участки ключевой последовательности, в осталь-
ных строках  возможные варианты ключевой последовательности в
соответствующих позициях. При составлении таблицы учитывалось,
что каждое число должно встретиться ровно один раз. Позиции чисел
31, 37, 67, 73 определяются однозначно. Их расположение однозначно
определяет места для простых чисел 61 и 97.
Снова выпишем известные числа последовательности простых чисел
и варианты для их соседей (первые две строки таблицы на этом шаге
не понадобятся):
11 17 31 47 37 53 61 67 83 73 89 97
03 03 13 13 43 19
07 07 19 19 79 79
13
19
43
Возможные соседи для числа 61  лишь 59 и 29, а для 67  лишь
59 и 3. Поэтому между 61 и 67 может находиться только число 59.
Возможными соседями для числа 73 являются 89, 71 и 41. Ни одно из
этих чисел не может быть соседом для 19, а для 79 может быть только
71. Таким образом, однозначно определяется расположение чисел 71 и
79. Для числа 47 остался только один кандидат в соседи справа  число
43. Общим соседом для 43 и 37 может быть только 41. Скорректируем
таблицу с учетом сделанных выводов:
11 17 31 47 43 41 37 53 61 59 67 83 79 71 73 89 97
03 03 13 13 29
07 07 19 19 23
13
19
Участок последовательности 17 ∗ ∗ 31 имеет только два варианта
доопределения: (а) 17−19−23−31 и (б) 17−13−29−31. Рассмотрим оба
случая.
§ 6. Указания и решения 245
а) Выпишем фрагмент таблицы для первого случая:
11 13 17 19 23 31
03 03
07 07
Очевидно, что числа 3 и 7 должны обязательно быть соседними с чис-
лом 11. Число 29 еще не встречалось, значит оно должно располагаться
либо на первом месте, либо на пятом. И то и другое невозможно, так
как в обоих позициях оно является соседом либо для числа 3, либо для
числа 7, что не соответствует условию (отличие соседних чисел на сте-
пень двойки). Следовательно, рассматриваемый случай невозможен.
б) Выпишем фрагмент таблицы для второго случая:
05 11 23 19 17 13 29 31
03 03
07 07
Очевидно, что числа 3 и 7 должны обязательно быть соседями для чис-
ла 11. Число 5 может попасть только на первую позицию (т.к. оно не
может находиться рядом с 19). Значит, в пятой позиции должно быть
число 23. Ясно, что числа 3 и 7 теперь расставляются однозначно.
Таким образом, приходим к выводу, что возможен всего один ва-
риант ключевой последовательности. Получим окончательный вариант
таблицы и найдем ответ:
15 02 20 45 42 13 26 67 44 30 56 82 53 33 62 32 73 63 92 49 75 70 98 49
10 09 19 48 29 04 19 54 25 09 19 49 12 06 19 71 24 06 19 70 04 07 19 52
05 03 11 07 23 19 17 13 29 31 47 43 41 37 53 61 59 67 83 79 71 73 89 97
Ответ: 10.09.1948 29.04.1954 25.09.1949 12.06.1971 24.06.1970 04.07.1952
8.4. Занумеруем горизонтали и вертикали квадрата натуральными
числами от 1 до 13 сверху вниз и слева направо соответственно. Тогда
каждая клетка квадрата однозначно определяется парой чисел (i; j), где
i  номер горизонтали, а j  номер вертикали, в которых находится
клетка.
Расстояние между центром клетки (a; b) и центром клетки (c; d) рав-
но
p
(a − c)2 + (b − d)2. Заметим, что |a − c| ∈ {0, 1, . . . , 12} и |b − d| ∈
∈ {0, 1, . . . , 12}. Обозначим x = |a − c|, y = |b − d|, z =
p
x2 + y2. Тогда
z  число натуральное, если x2 = (z + y)(z − y). Отсюда получаем, что
1 = (z + y)(z − y) ⇐⇒

z = 1
y = 0
;
22 = (z + y)(z − y) ⇐⇒

z = 2
y = 0
;
32 = (z + y)(z − y) ⇐⇒

z = 3
y = 0
или

z = 5
y = 4
; и т. д.
246 Гл. 7. Олимпиады по криптографии для школьников
122 = (z + y)(z − y) ⇐⇒

z = 12
y = 0
или

z = 15
y = 9
или

z = 20
y = 16
или

z = 37
y = 35
или

z = 13
y = 5
.
В общем случае, если x2 = mn, то 


z =
m + n
2
y =

m − n
2

.
Ясно, что m и n должны быть одинаковой четности. По условию, y 6 12,
поэтому искомыми решениями будут только пары
(x; y) ∈ A ={(3; 4), (4; 3), (6; 8), (8; 6), (9; 12), (12; 9), (5; 12), (12; 5)}
∪{(0; a), (a; 0), a = 1, . . . , 12}.
Клетку (a; b) назовем существенной для клетки (c; d), если выполне-
но условие (|a − c|; |b − d|) ∈ A. Ясно, что цвет данной клетки менялся
лишь тогда, когда Криптоша находился в какой-либо существенной для
нее клетке. А так как в каждой клетке Криптоша побывал ровно 1999
раз (нечетное число), то цвет данной клетки изменился, если общее чис-
ло существенных для нее клеток нечетно.
Для определения четности числа всех существенных клеток для дан-
ной клетки воспользуемся тем, что у симметричных клеток относитель-
но той или иной диагонали квадрата или относительно центрально-
го вертикального или центрального горизонтального рядов эти числа
будут одинаковы. Это, в частности, означает, что достаточно опреде-
лить указанную четность только для клеток (a; b), где a = 1, . . . , 5, b =
= a + 1, . . . , 6 (этих клеток 15, занумеруем их, как показано на рис. 19).
Кроме того, отметим, что у каждой из клеток на диагоналях квадрата,
а также у каждой из клеток центрального вертикального и горизон-
тального рядов обязательно будет четное число существенных для нее
клеток.
Зоной асимметрии для той или иной клетки мы назовем множество
тех клеток, которые в пределах исходного квадрата не имеют клеток,
симметричных относительно вертикального, горизонтального и правого
диагональных рядов, содержащих данную клетку. Ясно, что для данной
клетки число существенных клеток, не лежащих в ее зоне асимметрии,
четно.
На рис. 19 показана зона асимметрии для клетки 1, а также все
клетки верхнего левого угла 6 × 6, меняющие свой цвет.
Ответ на рис. 20.
8.5. При решении этого уравнения надо учитывать возможные огра-
ничения: a 6= 0, b 6= 0, a − b 6= 0, a + b 6= 0. Поэтому целесообразно
выделить их сразу.
§ 6. Указания и решения 247
1
1
2
2
3
3
4
4
5
5
6
6
7
7
8
8
9
9
10
10
11
11
12
12
13
13
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
Рис. 19. Для клетки 1 жирными линиями выделена зона асимметрии.
Серым цветом отмечены клетки верхнего левого угла 6 × 6, меняющие
свой цвет
Рис. 20.
1. Пусть = 0, b = 0. Уравнение имеет вид 0
1 − 0x
=
0
1 − 0x
, то есть
x  любое число.
2. Пусть a = 0, b 6= 0. Уравнение имеет вид 0
1 − bx
=
b
1 − 0x
, или
0 = b, то есть не имеет решений.
3. Аналогично, при b = 0, a 6= 0 нет решений.
4. При a 6= 0, b 6= 0 удобно рассмотреть три случая: а) a = b, b)
a = −b, c) a 6= ±b.
a) a = b: a
1 − ax
=
a
1 − ax
, x 6=
1
a
,
x  любое, кроме 1
a
.
248 Гл. 7. Олимпиады по криптографии для школьников
b) a = −b: a
1 + ax
= −a
1 − ax
, x 6= ±
1
a
, 1
a
+ x = −
1
a
+ x, 2
a
= 0, решений
нет.
c) a 6= ±b:
a
1 − bx
=
b
1 − ax
, x 6=
1
a
, x 6=
1
b
,
1
a −
b
a
x =
1
b −
a
b
x,
x

a
b −
b
a

=
1
b −
1
a
,
x =
(a − b)ab
ab(a2 − b2 =
1
a + b
.
Ответ. При a = b = 0 x  любое число.
При a = b 6= 0 x ∈ (−∞;
1
a
) ∪ (
1
a
;∞).
При a = 0, b 6= 0 или a 6= 0, b = 0 или a = −b 6= 0 решений нет.
При


a 6= −b
a 6= 0
b 6= 0
a 6= +b
x =
1
a + b
.
8.6. Число 230+1 представляет собой сумму кубов, сумму пятых степе-
ней, а также из него можно выделить полный квадрат. Каждое из этих
представлений позволяет найти некоторые делители исходного числа:
230 + 1 =210×3 + 13 = (210 + 1)(220 − 210 + 1) = 1025 × (220 − 210 + 1) =
=41 × 25 × (220 − 210 + 1).
230 + 1 =26×5 + 15 = (26 + 1)(224 − 218 + 212 − 26 + 1) =
=65 × (224 − 218 + 212 − 26 + 1) =
=13 × 5 × (224 − 218 + 212 − 26 + 1).
230 + 1 =(215 + 1)2 − 2 × 215 = (215 + 28 + 1)(215 + 1 − 28) =
=33025 × 32513 = 25 × 1321 × 32513.
Таким образом, установлено, что среди простых делителей числа
230 +1 содержатся 41, 13, 5. Непосредственной проверкой получаем ра-
венство 32513 = 41 × 793 = 41 × 13 × 61.
Осталось проверить, что 1321 - простое число. Для этого достаточно
показать, что 1321 не делится ни на одно простое число, меньшее 37
(372 = 1369, 1369 > 1321).
Ответ: 230 + 1 = 5 × 5 × 13 × 41 × 61 × 1321.
§ 6. Указания и решения 249
9.1. а) Для доказательства достаточно указать хотя бы одну последо-
вательность из 33 различных букв, сумма которой с русским алфавитом
из 33 букв не содержит одинаковых букв. В качестве искомой последова-
тельности возьмем сам алфавит. Докажем, что сумма алфавита с самим
собой не содержит одинаковых букв. Пусть m и n  порядковые номера
различных букв алфавита. Тогда по определению сложения букв доста-
точно показать, что числа 2m и 2n имеют разные остатки от деления
на 33. В самом деле, если бы они были одинаковы, то число 2m−2n де-
лилось бы на 33 без остатка. В силу того что (2, 33) = 1, разность m−n
также делилась бы на 33 без остатка, что невозможно. Утверждение
пункта а) доказано.
Замечание. Утверждение пункта а) остается в силе для любого
алфавита из нечетного числа букв.
б) При сложении двух последовательностей сумма порядковых номеров
всех букв получаемой при этом последовательности и сумма порядко-
вых номеров всех букв обоих слагаемых имеет один и тот же остаток от
деления на 26. Значит, разность упомянутых сумм должна делиться на
26 без остатка. Докажем утверждение пункта б) методом от противно-
го. В самом деле, если такая последовательность из 26 различных букв
существует, то упомянутая разность равна сумме порядковых номеров
букв алфавита. Однако сумма 1+2+· · ·+26 = 13 · 27 = 26 · 13+13 при
делении на 26 имеет остаток 13. Это доказывает утверждение пункта б).
Замечание. Утверждение пункта б) остается в силе для любого
алфавита из четного числа букв.
Представляет интерес доказательство пункта б), предложенное
участниками олимпиады.
При делении на любое четное число суммы двух четных или двух
нечетных чисел получается четный остаток, а при делении суммы чет-
ного и нечетного чисел  нечетный остаток.
Соответствующие буквы складываемых последовательностей могут
быть как одинаковой, так и различной четности. (Для краткости мы
называем букву четной, если ее номер четен, и нечетной  если номер
нечетен.) Будем решать задачу от противного. Предположим, что тре-
буемая последовательность существует. Всего в сложении участвуют 52
буквы. Пар букв одинаковой и различной четности должно быть одина-
ковое количество, а именно 13 (так как в результате сложения должно
получиться 13 четных и 13 нечетных букв). Пары букв различной чет-
ности включают в себя 26 букв. Оставшиеся 26 букв входят в 13 пар
букв одинаковой четности. Однако, 13 пар букв одинаковой четности
не могут содержать одинаковое количество четных и нечетных букв
(так как 13  нечетное число). Полученное противоречие доказывает
утверждение пункта б).
250 Гл. 7. Олимпиады по криптографии для школьников
9.2. В этой задаче условимся писать a ≡ b, если числа a и b имеют
одинаковые остатки при делении на 33. Пусть n  номер первой буквы
искомой последовательности. Эту букву указанное число раз прибавили
к букве К, в результате получили букву А. Запишем соответствующее
уравнение:
12 + 19491999 · n ≡ 1. (1)
Имеем следующую цепочку соотношений:
19491999 ≡ 25·399+4 ≡ (−1)399 · 16 ≡ −16 ≡ 17.
Уравнение (1) принимает вид: 12 + 17 · n ≡ 1, или
17 · n ≡ 22. (2)
Пользуясь арифметикой остатков, несложно составить следующую таб-
лицу
А Б В Г Д Е Ё Ж З И Й К Л М Н О П Р С Т У Ф
17 1 18 2 19 3 20 4 21 5 22 6 23 7 24 8 25 9 26 10 27 11
Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я
28 12 29 13 30 14 31 15 32 16 0
Здесь под каждой буквой подписан остаток от деления на 33 результата
умножения ее номера на 17. Как видно из таблицы, уравнение 2 имеет
единственное решение n = 11, т. е. первая буква искомой последова-
тельности  Й. Аналогично могут быть найдены и остальные буквы.
Искомая последовательность имеет вид
. (3)
Если последовательность (3) прибавить 17 раз к слову КРИПТОША, то
получится слово АНАЛИТИК. Ясно, что если последовательность (3) при-
бавить к слову КРИПТОША 33 раза, то вновь получится КРИПТОША. Значит,
если (3) прибавить 16 раз к слову АНАЛИТИК, то получится КРИПТОША.
Получить слово КРИПТОША меньше чем за 16 прибавлений не удастся.
Действительно, рассмотрим предпоследние буквы в этих словах и в по-
следовательности (3): Ш, И, А. Очевидно, что для получения буквы Ш из
буквы И необходимо букву А прибавить к И по крайней мере 16 раз.
Ответ: ЙЩНЧЛЖАФ; 16 раз.
9.3. В этой задаче условимся писать a ≡ b, если числа a и b имеют
одинаковые остатки при делении на 1000. Для нахождения последней
буквы исходного сообщения необходимо решить уравнение
77 · n ≡ 355. (1)
Здесь n  пока неизвестное трехзначное число. Пусть n = 100·a+10·b+c
(a, b, c  цифры). Тогда
§ 6. Указания и решения 251
(100 · a + 10 · b + c) · 77 ≡ 355 ⇐⇒
⇐⇒ 7000 · a + 700 · b + 70 · c + 700 · a + 70 · b + 7 · c ≡ 355 ⇐⇒
⇐⇒ 700 · (a + b) + 70 · (b + c) + 7 · c ≡ 355.
Значит, = 5. Далее,
700 · (a + b) + 70 · b + 30 ≡ 0.
Отсюда b = 1. Тогда
700 · a + 800 ≡ 0.
Значит, a = 6 и поэтому n = 615.
Уравнение (1) могло быть решено иначе. Умножив обе части (1) на
13, получим 1001 · n ≡ 13 · 355. Ясно, что последние три цифры чис-
ла, стоящего в левой части равенства, совпадают с тремя последними
цифрами самого числа n. Вычислив 13 · 355 = 4615, найдем n = 615. Те-
перь аналогично решаем уравнение (1), в правой части которого стоят
другие трехзначные цифровые группы шифрсообщения (850, 547, 550 и
т. д.).
Искомая цифровая последовательность имеет вид
121332252610221801150111050615.
Ответ: КЛЮЧШИФРАНАЙДЕН.
9.4. Сначала восстановим магический квадрат. Сумма чисел во всех
клетках квадрата равна 1+2+. . .+16 =
16 · 17
2
= 136, значит, в каждом
столбце (а также в строке, на диагонали) сумма чисел составляет 136 :
4 = 34. Попытаемся построить магические квадраты с суммой на линии,
равной 34, и единицей в правом нижнем углу. Имеется несколько таких
квадратов. Например,
4 10 7 13
5 15 2 12
9 3 14 8
16 6 11 1
10 5 11 8
6 9 7 12
3 4 14 13
15 16 2 1
12 2 5 15
7 13 10 4
9 3 8 14
6 16 11 1
16 3 2 13
5 10 11 8
9 6 7 12
4 15 14 1
Расставляя буквы в соответствии с условием, только в одном случае,
отвечающем четвертому квадрату, получаем читаемый текст:
Ы Р Е У
С Т Е В
Ь Т А Б
Е В К П
П Е Р Е
С Т А В
Ь Т Е Б
У К В Ы
Ответ:
16 3 2 13
5 10 11 8
9 6 7 12
4 15 14 1
, .
252 Гл. 7. Олимпиады по криптографии для школьников
9.5. Пусть ∠AOB = , ∠COD = , ∠AOE = 
, r радиус окружности
(см. рис. 21). Условие (4) задачи эквивалентно равенству
SABE + SCED = SAED.
С учетом выражений SAOB + SAOE − SBOE = SABE и SEOD + SOCD −
− SCOE = SECD, это равенство можно записать в виде:
r2(sin +sin 
)−r2 sin(+
)+r2(sin  +sin 
)−r2 sin(180◦−
 +) =
= 2r2 sin 
 ⇐⇒ sin  + sin  = sin( + 
) + sin(
 − ) ⇐⇒
⇐⇒ (1 − cos 
) · sin  + (1 + cos 
) · sin  = sin 
 · (cos  + cos ). (1)
 


O
A D
C
B
E
Рис. 21.
Без ограничения общности можно считать, что 
 6 90◦. Далее, по-
скольку координаты точки E  целые числа, меньшие 5, могут иметь
место три случая.
Случай 1. sin 
 = 1. Равенство (1) примет вид: sin +sin  = cos +
+cos . Это дает два варианта расположения точек: 1) B(−3; 4), C(4; 3),
E(0;−5); 2) B(−4; 3), C(3; 4), E(0;−5).
Случай 2. sin 
 =
3
5
, cos 
 =
4
5
. Из (1) получаем: sin  + 9 · sin  =
= 3 · cos  + 3 · cos . Последнее равенство невозможно, так как правая
часть равенства строго меньше 6, а левая часть равенства не меньше,
чем 3
5
+ 9 ·
3
5
= 6.
Случай 3. sin 
 =
4
5
, cos 
 =
3
5
. Равенство (1) запишется в виде: sin +
+ 4 · sin  = 2 · cos  + 2 · cos . Это равенство невозможно, так как
sin  + 4 · sin  >
3
5
+ 4 ·
3
5
и 2 · cos  + 2 · cos  6 2 ·
4
5
.
Ответ: 1) B(−3; 4), C(4; 3), E(0;−5); 2) B(−4; 3), C(3; 4), E(0;−5).
§ 6. Указания и решения 253
9.6. Выделим под знаками радикала полный квадрат: s
−

x +
1
2
2
+ a2 > 1 +
s
−

x −
1
2
2
+ 4.
В результате замены x +
1
2
= t неравенство примет вид:
p
a2 − t2 > 1 +
p
4 − (t − 1)2.
Для решения последнего неравенства изучим взаимное расположе-
ние на плоскости (t, y) полуокружностей
y1(t) =
p
a2 − t2 (центр (0; 0), радиус |a|)
и
y2(t) = 1 +
p
4 − (t − 1)2 (центр (1; 1), радиус 2).
Точки пересечения полуокружностей (если этих точек две) распо-
ложены симметрично относительно прямой, соединяющей их центры.
В данном случае это прямая y = t. Рассмотрим вначале качественно
возможные взаимные расположения полуокружностей. Если величина
|a| мала, то полуокружности не пересекаются (рис. 22). С ростом |a| у
O t
y
y = 1
y1(t)
y2(t)
A
B
t0 O t
C(1; 3)
y
y1(t)
y2(t)
A
Рис. 22. Рис. 23.
O t1 t2 t
y = t
y
−1 O 3 t
y
y1(t)
y2(t)
Рис. 24. Рис. 25.
полуокружностей появляется общая точка B (с абсциссой t0) (рис. 23).
При дальнейшем увеличении |a| точка пересечения B ¾движется¿ по
окружности y2(t) по часовой стрелке. Значение |a|, при котором точка
254 Гл. 7. Олимпиады по криптографии для школьников
B совпадает с точкой C(1; 3), является критическим, так как при даль-
нейшем увеличении |a| полуокружности имеют две точки пересечения
(рис. 24). И, наконец, при |a|, превосходящем некоторое значение, по-
луокружности вновь не пересекаются (рис. 25). Рассмотрим указанные
случаи подробно.
Случай 1. При |a| < OA = √2 полуокружности не пересекаются, и
неравенство решений не имеет (рис. 22).
Случай 2. Полуокружности имеют единственную точку пересечения
с абсциссой t0 < 1 (рис. 23). При этом √2 6 |a| < OC = √10. Решение
неравенства имеет вид t ∈ [−1; t0].
Случай 3. Полуокружности имеют две точки пересечения (рис. 24).
При этом √10 6 |a| 6 2 + √2. Решение неравенства имеет вид t ∈
∈ [−1; t1]∪[t2; 3]. При |a| = 2+√2 имеет место касание полуокружностей
(можно считать, что точек пересечения по-прежнему две, но просто они
совпадают).
Случай 4. При |a| > 2 + √2 полуокружности вновь не имеют общих
точек, и t ∈ [−1; 3].
Найдем теперь точные выражения для абсцисс t1, t2 точек пересече-
ния окружностей. Эти величины удовлетворяют системе

t2 + y2 = a2
(t−1)2 + (y−1)2 = 4 ⇐⇒
(
t2 + y2 = a2
t + y =
a2−2
2
=⇒ t2+

a2−2
2 −t
2
= a2.
Решая квадратное уравнение, находим
t1,2 =
a2 − 2 ∓ √12 · a2 − a4 − 4
4
.
Итак, решение неравенства имеет вид:
1. |a| < √2 =⇒ решений нет.
2. √2 6 |a| < √10 =⇒ t ∈ [−1; t1].
3. √10 6 |a| 6 2 + √2 =⇒ t ∈ [−1; t1] ∪ [t2; 3].
4. |a| > 2 + √2 =⇒ t ∈ [−1; 3].
Переходя к переменной x и используя явные выражения для t1, t2,
получаем окончательный
Ответ:
1. |a| < √2 =⇒ решений нет.
2. √2 6 |a| < √10 =⇒ x ∈ [−
3
2
;
a2 − 2 − √12 · a2 − a4 − 4
4
].
3. √10 6 |a| 6 2 + √2 =⇒
x ∈ [−
3
2
;
a2 − 2 −
√12 · a2 − a4 − 4
4
] ∪ [
a2 − 2 + √12 · a2 − a4 − 4
4
;
5
2
].
4. |a| > 2 + √2 =⇒ x ∈ [−
3
2
;
5
2
].
§ 6. Указания и решения 255
Литература к главе 7
[1] М. Гарднер. От мозаик Пенроуза к надежным шифрам. М.: Мир,
1993.
[2] У. Болл, Г. Кокстер. Математические эссе и развлечения. М.: Мир,
1986.
[3] С. А. Дориченко, В. В. Ященко. 25 этюдов о шифрах. М.: ТЭИС,
1994.
[4] В. Жельников. Криптография от папируса до компьютера. М.:
ABF, 1996.
[5] Г. Фролов. Тайны тайнописи. М., 1992.
[6] Ч. Уэзерелл. Этюды для программистов. М.: Мир, 1982.
[7] А. Саломаа. Криптография с открытым ключом. М.: Мир, 1995.
[8] Т. А. Соболева. Тайнопись в истории России (История криптогра-
фической службы России XVIII – начала XX в.). М., 1994.
[9] Б. Анин, А. Петрович. Радиошпионаж. М.: Международные отно-
шения, 1996.
[10] Г. А. Гуревич. Криптограмма Жюля Верна. // Квант, №9, 1985.
[11] В. Каверин. Собрание сочинений в 6 т., т. 2. ¾Исполнение желаний¿
С. 211–552. М.: Художественная литература, 1964.
[12] Э. По. Стихотворения. Проза (¾Золотой жук¿ С. 433–462). М.: Ху-
дожественная литература, 1976.
[13] А. Конан Дойл. Записки о Шерлоке Холмсе. ¾Пляшущие человеч-
ки¿ С. 249–275. М.: Правда, 1983.
[14] Ж. Верн. Собрание сочинений в 12 т. ¾Путешествие к центру Зем-
ли¿ С. 7–225. М.: Художественная литература, 1995.
[15] Ж. Верн. Жангада. Библиотечка приключений. Т. 9. М.: Детская
литература, 1967.
Приложение А
Отрывок из статьи К. Шеннона ¾Теория
связи в секретных системах¿
Материал, изложенный в данной статье, первоначально составлял
содержание секретного доклада ¾Математическая теория крипто-
графии¿, датированного 1 сентября 1945 г., который в настоящее
время2) рассекречен.
1. Введение и краткое содержание
Вопросы криптографии и секретных систем открывают возмож-
ность для интересных применений теории связи. В настоящей статье
развивается теория секретных систем. Изложение ведется в теорети-
ческом плане и имеет своей целью дополнить положения, приводимые
в обычных работах по криптографии. В этих работах детально изуча-
ются многие стандартные типы кодов и шифров, а также способы их
расшифровки. Мы будем иметь дело с общей математической структу-
рой и свойствами секретных систем.
Наше изложение будет ограничено в нескольких отношениях. Во-
первых, имеются три общих типа секретных систем: 1) системы мас-
кировки, которые включают применение таких методов, как невиди-
мые чернила, представление сообщения в форме безобидного текста
или маскировки криптограммы, и другие методы, при помощи которых
факт наличия сообщения скрывается от противника; 2) тайные систе-
мы (например, инвертирование речи), в которых для раскрытия сооб-
щения требуется специальное оборудование; 3) ¾собственно¿ секретные
системы, где смысл сообщения скрывается при помощи шифра, кода
и т. д., но само существование сообщения не скрывается и предпола-
гается, что противник обладает любым специальным оборудованием,
1)Печатается по изданию: К. Шеннон ¾Работы по теории информации и киберне-
тике¿, М., ИЛ, 1963, с. 333–369 (перевод В. Ф. Писаренко).
2)1949 год  прим. ред.
К. Шеннон. Теория связи в секретных системах 257
необходимым для перехвата и записи переданных сигналов. Здесь бу-
дет рассмотрен только третий тип систем, так как системы маскировки
представляют в основном психологическую проблему, а тайные систе-
мы  техническую проблему.
Во-вторых, наше изложение будет ограничено случаем дискретной
информации, где сообщение, которое должно быть зашифровано, состо-
ит из последовательных дискретных символов, каждый из которых вы-
бран из некоторого конечного множества. Эти символы могут быть бук-
вами или словами некоторого языка, амплитудными уровнями ¾кван-
тованной¿ речи или видеосигнала и т. д., но главное ударение будет сде-
лано на случае букв.
Статья делится на три части. Резюмируем теперь кратко основные
результаты исследования. В первой части излагается основная мате-
матическая структура секретных систем. В теории связи считается,
что язык может рассматриваться как некоторый вероятностный про-
цесс, который создает дискретную последовательность символов в со-
ответствии с некоторой системой вероятностей. С каждым языком свя-
зан некоторый параметр D, который можно назвать избыточностью
этого языка. Избыточность измеряет в некотором смысле, насколь-
ко может быть уменьшена длина некоторого текста в данном языке
без потери какой-либо части информации. Простой пример: так как
в словах английского языка за буквой q всегда следует только буква
u, то u может быть без ущерба опущена. Значительные сокращения
в английском языке можно осуществить, используя его статистиче-
скую структуру, частую повторяемость определенных букв или слов,
и т. д. Избыточность играет центральную роль в изучении секретных
систем.
Секретная система определяется абстрактно как некоторое множе-
ство отображений одного пространства (множества возможных сооб-
щений) в другое пространство (множество возможных криптограмм).
Каждое конкретное отображение из этого множества соответствует спо-
собу шифрования при помощи конкретного ключа.
Предполагается, что отображения являются взаимнооднозначными,
так что если известен ключ, то в результате процесса расшифровки
возможен лишь единственный ответ.
Предполагается далее, что каждому ключу (и, следовательно,
каждому отображению) соответствует некоторая априорная вероят-
ность  вероятность выбрать этот ключ. Аналогично каждому возмож-
ному сообщению соответствует априорная вероятность, определяемая
задающим сообщение вероятностным процессом. Эти вероятности раз-
личных ключей и сообщений являются фактически априорными веро-
ятностями для шифровальщика противника и характеризуют его апри-
258 Приложение А
орные знания относительно интересующей его проблемы.
Чтобы использовать такую секретную систему, сначала выбирается
некоторый ключ и посылается в точку приема. Выбор ключа опреде-
ляет конкретное отображение из множества отображений, образующих
систему. Затем выбирается сообщение и с помощью отображения, со-
ответствующего выбранному ключу, из этого сообщения формируется
криптограмма. Эта криптограмма передается в точку приема по неко-
торому каналу и может быть перехвачена противником. На приемном
конце с помощью отображения, обратного выбранному, из криптограм-
мы восстанавливают первоначальное сообщение.
Если противник перехватит криптограмму, он может с ее помощью
сосчитать апостериорные вероятности различных возможных сообще-
ний и ключей, которые могли быть использованы для составления та-
кой криптограммы. Это множество апостериорных вероятностей обра-
зует его сведения о ключах и сообщениях после перехвата. ¾Сведения¿,
таким образом, представляют собой некоторое множество предположе-
ний, которым приписаны вероятности. Вычисление апостериорных ве-
роятностей является общей задачей расшифровки.
Проиллюстрируем эти понятия простым примером. В шифре про-
стой подстановки со случайным ключом имеется 26! отображений, со-
ответствующих 26! способам, которыми мы можем заменить 26 различ-
ных букв. Все эти способы равновозможны, и поэтому каждый имеет
априорную вероятность 1/26! Если такой шифр применяется к ¾нор-
мативному английскому языку¿ и предполагается, что шифровальщик
противника не знает ничего об источнике сообщений, кроме того, что
он создает английский текст, то априорными вероятностями различных
сообщений из N букв являются просто их относительные частоты в
нормативном английском тексте.
Если противник перехватил такую криптограмму из N букв, его
апостериорные вероятности изменятся. Если N достаточно велико (ска-
жем, 50 букв), имеется обычно единственное сообщение с апостери-
орной вероятностью, близкой к единице, в то время как все дру-
гие сообщения имеют суммарную вероятность, близкую к нулю. Та-
ким образом, имеется, по существу, единственное ¾решение¿ такой
криптограммы. Для меньших N (скажем, N = 15) обычно най-
дется много сообщений и ключей, вероятности которых сравнимы,
и не найдется ни одного сообщения и ключа с вероятностью, близ-
кой к единице. В этом случае ¾решение¿ криптограммы неоднознач-
но.
В результате рассмотрения секретных систем, которые могут быть
представлены как совокупность отображений одного множества элемен-
тов в другое, возникают две естественные операции комбинирования,
К. Шеннон. Теория связи в секретных системах 259
производящие из двух данных систем третью. Первая операция комби-
нирования называется операцией ¾умножения¿ (произведением) и со-
ответствует зашифровке сообщения с помощью системы R с последу-
ющей зашифровкой полученной криптограммы с помощью системы S,
причем ключи R и S выбираются независимо. Полный результат этой
операции представляет собой секретную систему, отображения которой
состоят из всех произведений (в обычном смысле произведений отобра-
жений) отображений из S на отображения из R. Вероятности резуль-
тирующих отображений являются произведениями вероятностей двух
исходных отображений.
Вторая операция комбинирования является ¾взвешенным сложени-
ем¿:
T = pR + qS, p + q = 1.
Она представляет собой следующее. Сначала делается предваритель-
ный выбор, какая из систем R или S будет использоваться, причем си-
стема R выбирается с вероятностью p, а система S с вероятностью q. По-
сле этого выбранная система используется описанным выше способом.
Будет показано, что секретные системы с этими двумя операция-
ми комбинирования образуют, по существу, ¾линейную ассоциативную
алгебру¿ с единицей,  алгебраический объект, подробно изучавшийся
математиками.
Среди многих возможных секретных систем имеется один тип с мно-
гочисленными особыми свойствами. Этот тип назовем ¾чистой¿ систе-
мой. Система является чистой, если все ключи равновероятны и если
для любых трех отображений Ti, Tj, Tk из множества отображений дан-
ной системы произведение
TiT−1
j Tk
также является отображением из этого множества. То есть зашифровка,
расшифровка и снова зашифровка с любыми тремя ключами должна
быть эквивалентна зашифровке с некоторым ключом.
Можно показать, что для чистого шифра все ключи по существу эк-
вивалентны  все они приводят к тому же самому множеству апостери-
орных вероятностей. Больше того, каждой криптограмме соответству-
ет некоторое множество сообщений (¾остаточный класс¿), из которых
могла бы получиться эта криптограмма, а апостериорные вероятности
сообщений в этом классе пропорциональны априорным вероятностям.
Вся информация, которую противник получил бы в результате пере-
хвата криптограммы, заключается в установлении остаточного класса.
Многие из обычных шифров являются чистыми системами, в том числе
простая подстановка со случайным ключом. В этом случае остаточный
класс состоит из всех сообщений с таким же набором буквенных повто-
260 Приложение А
рений, как в перехваченной криптограмме.
По определению, две системы R и S являются ¾подобными¿, если
существует фиксированное отображение A (имеющее обратное A−1) та-
кое, что
R = AS.
Если R и S подобны, то между получающимися в результате примене-
ния этих систем множествами криптограмм можно установить взаимно-
однозначное соответствие, приводящее к тем же самым апостериорным
вероятностям. Такие две системы аналитически записываются одина-
ково.
Во второй части статьи рассматривается проблема ¾теоретической
секретности¿. Насколько легко некоторая система поддается раскры-
тию при условии, что для анализа перехваченной криптограммы про-
тивник располагает неограниченным количеством времени и специа-
листов? Эта проблема тесно связана с вопросами связи при наличии
шумов, и понятия энтропии и неопределенности, введенные в теории
связи, находят прямое применение в этом разделе криптографии.
¾Совершенная секретность¿ определяется следующими требовани-
ями к системе. Требуется, чтобы апостериорные вероятности различ-
ных сообщений, полученные после перехвата противником данной крип-
тограммы, были бы в точности равны априорным вероятностям тех
же сообщений до перехвата. Покажем, что ¾совершенная секретность¿
возможна, но требует в случае конечного числа сообщений того же
самого числа возможных ключей. Если считать, что сообщение созда-
ется с данной ¾скоростью¿ R (понятие скорости будет определено поз-
же), то ключ должен создаваться с той же самой или с большей скоро-
стью.
Если используется секретная система с конечным ключом и пере-
хвачены N букв криптограммы, то для противника будет существо-
вать определенное множество сообщений с определенными вероятно-
стями, которые могли бы создать эту криптограмму. С увеличением N
это множество обычно сужается до тех пор, пока в конце концов не
получится единственного ¾решения¿ криптограммы: одно сообщение с
вероятностью, близкой к единице, а все остальные с вероятностями,
практически равными нулю. В работе определяется величина H(N),
названная ненадежностью. Эта величина измеряет (в статистическом
смысле), насколько близка средняя криптограмма из N букв к един-
ственному решению, т. е. насколько неточно известно противнику ис-
тинное сообщение после перехвата криптограммы из N букв. Далее
выводятся различные свойства ненадежности, например: ненадежность
ключа не возрастает с ростом N. Эта ненадежность является теорети-
К. Шеннон. Теория связи в секретных системах 261
ческим показателем секретности  теоретическим, поскольку она поз-
воляет противнику дешифрировать криптограмму лишь в том случае,
если он обладает неограниченным запасом времени.
В этой же части определяется функция H(N) для некоторых иде-
ализированных типов шифров, называемых случайными шифрами. С
некоторыми видоизменениями эта функция может быть применена ко
многим случаям, представляющим практический интерес. Это дает спо-
соб приближенного вычисления количества материала, который требу-
ется перехватить, чтобы получить решение секретной системы.
Из подобного анализа следует, что для обычных языков и обыч-
ных типов шифров (но не кодов) это ¾расстояние единственности¿ рав-
но приблизительно H(K)/D. Здесь H(K)  число, измеряющее ¾объ-
ем¿ пространства ключей. Если все ключи априори равновероятны,
то H(K) равно логарифму числа возможных ключей. Вводимое число
D  это избыточность языка. Оно измеряет количество ¾статистиче-
ских ограничений¿, налагаемых языком. Для простой подстановки со
случайным ключом наше H(K) равно log10 26! или приблизительно 20,
а D (в десятичных единицах на букву) для английского языка равно
приблизительно 0,7. Таким образом, единственность решения достига-
ется приблизительно при 30 буквах.
Для некоторых ¾языков¿ можно построить такие секретные системы
с конечным ключом, в которых неопределенность не стремится к нулю
при N → ∞. В этом случае противник не получит единственного ре-
шения такого шифра, сколько бы материала он не перехватил, и у него
будет оставаться много альтернатив с довольно большими вероятностя-
ми. Такие системы назовем идеальными системами. В любом языке
можно аппроксимировать такую ситуацию, т. е. отсрочить приближе-
ние H(N) к нулю до сколь угодно больших N. Однако такие системы
имеют много недостатков, таких как сложность и чувствительность к
ошибкам при передаче криптограммы.
Третья часть статьи посвящена ¾практической секретности¿. Две
системы с одинаковым объемом ключа могут быть обе разрешимы един-
ственным образом, когда перехвачено N букв, но они могут значительно
отличаться по количеству времени и усилий, затрачиваемых для по-
лучения решения. На основе анализа основных недостатков секретных
систем предлагаются методы построения систем, для решения которых
требуются большие затраты времени и сил. Наконец, рассматривается
проблема несовместимости различных желательных качеств секретных
систем.
262 Приложение А
Ча с т ь I
МАТЕМАТИЧЕСКАЯ СТРУКТУРА СЕКРЕТНЫХ
СИСТЕМ
2. Секретные системы
Чтобы приступить к математическому анализу криптографии, необ-
ходимо ввести удовлетворительную идеализацию и определить мате-
матически приемлемым способом, что будет пониматься под термином
секретная система. Схематическая структура секретной системы пока-
зана на рис. 1.
На передающем конце имеются два источника информации  источ-
ник сообщений и источник ключей. Источник ключей отбирает
Источник
ключей
Шифро-
вальщик
TK
Шифро-
вальщик
T−1
K
Источник
сообщений
Сообще-
ние
M
Ключ
K K
Крипто-
грамма
E E
E
Сообщение
M
Шифровальщик
противника
Рис. 1. Схема общей секретной системы.
конкретный ключ среди всех возможных ключей данной системы. Этот
ключ передается некоторым способом на приемный конец, причем пред-
полагается, что его нельзя перехватить (например, ключ передается по-
сыльным). Источник сообщений формирует некоторое сообщение (неза-
шифрованное), которое затем зашифровывается, и готовая криптограм-
ма передается на приемный конец, причем криптограмма может быть
перехвачена (например, пересылается по радио). На приемном конце
шифровальщик с помощью ключа по криптограмме восстанавливает
исходное сообщение.
Очевидно, шифровальщик на передающем конце выполняет некото-
рую функциональную операцию. Если M  сообщение, K  ключ и
E  зашифрованное сообщение (криптограмма), то имеем
E = f(M,K),
К. Шеннон. Теория связи в секретных системах 263
т. е. E является функцией от M и K. Удобнее, однако, понимать E не
как функцию двух переменных, а как (однопараметрическое) семейство
операций или отображений, и записывать его в виде:
E = TiM.
Отображение Ti, примененное к сообщению M, дает криптограмму E.
Индекс i соответствует конкретному используемому ключу.
Вообще мы будем предполагать, что имеется лишь конечное число
возможных ключей, каждому из которых соответствует вероятность pi.
Таким образом, источник ключей является статистическим процессом,
или устройством, которое выбирает одно из множества отображений
T1, . . . , Tm с вероятностями p1, . . . pm соответственно. Будем также пред-
полагать, что число возможных сообщений конечно и эти сообщения
M1, . . .Mn имеют априорные вероятности q1, . . . , qn. Например, возмож-
ными сообщениями могли бы быть всевозможные последовательности
английских букв, включающих по N букв каждая, а соответствующими
вероятностями тогда были бы относительные частоты появления таких
последовательностей в нормативном английском тексте.
Должна иметься возможность восстанавливатьM на приемном кон-
це, когда известны E и K. Поэтому отображение Ti из нашего се-
мейства должно иметь единственное обратное отображение T−1
i , так
что TiT−1
i = I, где I  тождественное отображение. Таким обра-
зом:
M = T−1
i E.
Во всяком случае, это обратное отображение T−1
i должно существо-
вать и быть единственным для каждого E, которое может быть
получено из M с помощью ключа i. Приходим, таким образом, к
следующему определению: секретная система есть семейство одно-
значно обратимых отображений Ti множества возможных сообще-
ний во множество криптограмм, при этом отображение Ti имеет ве-
роятность pi. Обратно, любое множество объектов такого типа бу-
дет называться ¾секретной системой¿. Множество возможных сооб-
щений для удобства будет называться ¾пространством сообщений¿,
а множество возможных криптограмм  ¾пространством крипто-
грамм¿.
Две секретные системы совпадают, если они образованы одним и
тем же множеством отображений Ti и одинаковыми пространствами
сообщений и криптограмм, причем вероятности ключей в этих системах
также совпадают.
Секретную систему можно представлять себе как некоторую маши-
ну с одним или более переключающими устройствами. Последователь-
ность букв (сообщение) поступает на вход машины, а на выходе ее полу-
264 Приложение А
чается другая последовательность. Конкретное положение переключа-
ющих устройств соответствует конкретному используемому ключу. Для
выбора ключа из множества возможных ключей должны быть заданы
некоторые статистические методы.
Для того чтобы нашу проблему можно было рассмотреть математи-
чески, предположим, что противнику известна используемая система.
Иными словами, он знает семейство отображений Ti и вероятности вы-
бора различных ключей. Можно было бы, во-первых, возразить, что
такое предположение нереалистично, так как шифровальщик против-
ника часто не знает, какая система использовалась или чему равны
рассматриваемые вероятности. На это возражение имеется два отве-
та.
1. Наложенное ограничение слабее, чем кажется с первого взгляда,
из-за широты нашего определения секретной системы. Предположим,
что шифровальщик перехватывает сообщение и не знает, использова-
лась ли здесь подстановка, или транспозиция, или шифр типа Вижене-
ра. Он может считать, что сообщение зашифровано с помощью системы,
в которой часть ключа является указанием того, какой из трех типов
имеющихся ключей был использован, а следующая часть  конкретный
ключ этого типа. Указанным трем различным возможностям шифро-
вальщик приписывает вероятности, учитывая при этом все имеющиеся
у него сведения об априорных вероятностях использования шифроваль-
щиком противника соответствующих типов шифров.
2. Наше ограничение обычно в криптографических исследованиях.
Оно является пессимистичным, но безопасно, и в конечном счете ре-
алистично, так как можно ожидать, что противник рано или поздно
раскроет любую секретную систему. Поэтому даже в том случае, когда
разработана совершенно новая система, так что противник не может
приписать ей никаких априорных вероятностей, если только он ее уже
не раскрыл, нужно иметь в виду его возможную осведомленность.
Эта ситуация аналогична ситуации, возникающей в теории игр, где
предполагается, что партнер ¾обнаруживает¿ используемую стратегию
игры. В обоих случаях это предположение служит для более четкого
описания сведений, которыми располагает противная сторона.
Второе возможное возражение против нашего определения секрет-
ной системы состоит в том, что в нем не принимаются в расчет ис-
пользуемые обычно на практике вставки в сообщение посторонних ну-
левых знаков и использование многократных подстановок. В таких
случаях для данного сообщения и ключа имеется не единственная крип-
тограмма и шифровальщик может выбрать по своему желанию одну из
нескольких различных криптограмм. Эту ситуацию можно было бы
рассмотреть, но это только внесло бы дополнительные усложнения на
К. Шеннон. Теория связи в секретных системах 265
данном этапе рассуждений без существенного изменения каких-либо из
основных выводов.
Если сообщения создаются марковским процессом, то вероятности
разных сообщений определяются структурой этого марковского про-
цесса. Однако подойдем к вопросу с более общей точки зрения и будем
трактовать сообщения просто как абстрактное множество объектов, ко-
торым приписаны вероятности, причем эти объекты не обязательно со-
стоят из последовательностей букв и не обязательно создаются марков-
ским процессом.
Следует подчеркнуть, что далее во всех случаях секретная систе-
ма означает не одно, а целое множество отображений. После того как
выбран ключ, используется только одно из этих отображений и отсюда
можно было бы прийти к определению секретной системы как един-
ственного преобразования языка. Однако противник не знает, какой
ключ выбран, и остальные возможные ключи столь же важны для
него, как и истинный. Именно существование этих других возмож-
ных ключей и придает системе секретность. Так как мы интересуем-
ся в первую очередь секретностью, то вынуждены предпочесть данное
нами определение понятия секретной системы. Тип ситуации, когда
остальные возможности так же важны, как и осуществившаяся, часто
встречается в стратегических играх. Ход шахматной игры в большой
степени контролируется угрозами, которые не осуществляются. Нечто
подобное представляет из себя ¾фактическое существование¿ нереали-
зованных возможностей в теории игр.
Следует отметить, что система, состоящая из единственной опера-
ции над языком, представляет собой при нашем определении вырож-
денный тип секретной системы. Это  система с единственным ключом,
который имеет вероятность, равную единице. В такой системе нет сек-
ретности  шифровальщик противника находит сообщение, применяя к
перехваченной криптограмме обратное отображение, также единствен-
ное в такой системе. В этом случае шифровальщик противника и шиф-
ровальщик получателя информации располагают одинаковой информа-
цией. В общем же случае единственное различие их сведений состоит в
том, что последнему известен конкретно использовавшийся ключ, в то
время как первому известны лишь априорные вероятности различных
ключей из данного множества. Процесс расшифровки для получателя
информации состоит в применении к криптограмме отображения, об-
ратного по отношению к конкретному отображению, использованному
для составления криптограммы. Процесс расшифровки для противни-
ка представляет собой попытку определить сообщение (или конкретный
ключ), имея в распоряжении только криптограмму и априорные веро-
ятности различных ключей и сообщений.
266 Приложение А
Существует много трудных эпистемологических вопросов, связан-
ных с теорией секретности, или вернее с любой теорией, связанной с
реальным применением вопросов теории вероятностей (так обстоит де-
ло, в частности, с априорными вероятностями, теоремой Байеса и т. д.).
Трактуемая абстрактно теория вероятности может быть изложена на
строгих логических основах с использованием современной теории ме-
ры. Однако в применениях к физическим ситуациям, особенно когда
дело касается ¾субъективных¿ вероятностей и неповторимых экспери-
ментов, возникают многочисленные вопросы, связанные с логическим
обоснованием. Например, при нашем подходе к проблеме секретности
допускается, что априорные вероятности различных ключей и сообще-
ний известны шифровальщику противника, но как он может определить
их эффективным способом даже при использовании всех своих сведе-
ний о данной обстановке?
Можно создать искусственные криптографические ситуации типа
¾урны и игральной кости¿, в которых априорные вероятности имеют
вполне определенный смысл и идеализация, использованная здесь, яв-
ляется наверняка подходящей. Но в других случаях, которые можно
себе представить, например, при перехвате сообщений, передаваемых
между собой марсианами, высадившимися на Землю, априорные веро-
ятности были бы настолько неопределенными, что не имели бы ника-
кого значения.
Наиболее часто встречающиеся на практике криптографические за-
дачи лежат где-то между этими крайними пределами. Шифроваль-
щик противника может иметь желание разделить возможные сообще-
ния на категории ¾приемлемых¿, ¾возможных, но малоправдоподоб-
ных¿ и ¾неприемлемых¿, но чувствуется, что более подробное подраз-
деление не имело бы смысла.
К счастью, на практике только очень большие ошибки в априорных
вероятностях ключей и сообщений могут вызвать заметные ошибки в
важных параметрах. Это происходит из-за того, что число сообщений и
криптограмм ведет себя как экспоненциальная функция, а измеряется
логарифмической мерой.
3. Способы изображения систем
Секретная система, в том виде как она определена выше, может быть
изображена различными способами. Один из них (удобный для целей
иллюстрации) использует линейные схемы, изображенные на рис. 2 и
рис. 4. Возможные сообщения представляются точками слева, а возмож-
ные криптограммы  точками справа. Если некоторый ключ, скажем,
ключ 1, отображает сообщение M2 в криптограмму E2, то M2 и E2 со-
К. Шеннон. Теория связи в секретных системах 267
M1
M2
M3
M4
E1
E2
E3
E4
1
3
2
2
1
3
3
2
1
2
3
1
E1
E2
E3
M1
M2
2
1
3
3
2
1
Замкнутая система Незамкнутая система
Рис. 2. Схемы простых систем.
единяются линией, обозначенной значком 1 и т.д. Для каждого ключа
из каждого сообщения должна выходить ровно одна линия. Если это
же верно и для каждой криптограммы, скажем, что система является
замкнутой.
Более общий способ описания системы состоит в задании операции, с
помощью которой, применяя к сообщению произвольный ключ, можно
получить криптограмму. Аналогично неявным образом можно опреде-
лить вероятности различных ключей или с помощью задания способа
выбора ключей, или с помощью описания сведений о том, как обыч-
но выбирает ключи противник. Вероятности сообщений определяются
просто посредством изложения наших априорных сведений о языке про-
тивника, тактической обстановке (которая будет влиять на возможное
содержание сообщений) и любой специальной информации, касающейся
криптограммы.
4. Примеры секретных систем
В данном разделе рассматриваются несколько примеров шифров. В
дальнейшем в целях иллюстрации будем часто ссылаться на эти при-
меры.
1. Шифр простой подстановки.
В таком шифре производится замена каждой буквы сообщения на
некоторый определенный символ (обычно также на букву).
Таким образом, сообщение
M = m1m2m3m4 . . . ,
268 Приложение А
где m1,m2, . . .  последовательные буквы, переходит в
E = e1e2e3e4 · · · = f(m1)f(m2)f(m3)f(m4) . . . ,
причем функция f(m) имеет обратную функцию. Ключ является просто
перестановкой алфавита (если буквы заменяются на буквы), например,
XGUACDTBFHRSLMQV Y ZWIEJOKNP.
Первая буква  X заменяет букву A, G заменяет B и т. д.
2. Транспозиция с фиксированным периодом d.
В этом случае сообщение делится на группы символов длины d и к
каждой группе применяется одна и та же перестановка. Эта перестанов-
ка является ключом; она может быть задана некоторой перестановкой
первых d целых чисел.
Таким образом, для d = 5 в качестве перестановки можно взять
2 3 1 5 4. Это будет означать, что
m1m2m3m4m5m6m7m8m9m10 . . .
переходит в
m2m3m1m5m4m7m8m6m10m9 . . . .
Последовательное применение двух или более транспозиций будет на-
зываться составной транспозицией. Если периоды этих транспозиций
d1, . . . , ds, то, очевидно, в результате получится транспозиция перио-
да d, где d  наименьшее общее кратное d1, . . . , ds.
3. Шифр Виженера и его варианты.
В шифре Виженера ключ задается набором из d букв. Такие набо-
ры подписываются с повторением под сообщением и полученные две
последовательности складываются по модулю 26 (каждая буква рас-
сматриваемого алфавита нумеруется от A = 0 до Z = 25).
Таким образом,
li = mi + ki (mod 26),
где ki  буква ключа, полученная сокращением числа i по модулю d.
Например, с помощью ключа GAH получаем
Сообщение N O W I S T H E
Повторяемый ключ G A H G A H G A
Криптограмма T O D O S A N E
Шифр Виженера с периодом 1 называется шифром Цезаря. Он пред-
ставляет собой простую подстановку, в которой каждая буква сообще-
ния M сдвигается вперед на фиксированное число мест по алфавиту.
Это число и является ключом; оно может быть любым от 0 до 25. Так
называемый шифр Бофора (Beaufort) и видоизмененный шифр Бофо-
ра подобны шифру Виженера. В них сообщения зашифровываются с
К. Шеннон. Теория связи в секретных системах 269
помощью равенств
li = ki − mi (mod 26) и
li = mi − ki (mod 26)
соответственно. Шифр Бофора с периодом 1 называется обратным
шифром Цезаря.
Повторное применение двух или более шифров Виженера будет на-
зываться составным шифром Виженера. Он имеет уравнение
li = mi + ki + li + · · · + si (mod 26),
где ki, li, . . . , si вообще говоря, имеют различные периоды. Период их
суммы ki +li +· · ·+si, как и в составной транспозиции, будет наимень-
шим общим кратным отдельных периодов.
Если используется шифр Виженера с неограниченным неповторяю-
щимся ключом, то мы имеем шифр Вернама, в котором
li = mi + ki (mod 26)
и ki выбираются случайно и независимо среди чисел 0, 1, . . . , 25. Если
ключом служит текст, имеющий смысл, то имеем шифр ¾бегущего клю-
ча¿.
4. Диграммная, триграммная и n-граммная подстановки.
Вместо подстановки одной буквы можно использовать подстановку
диграмм, триграмм и т. д. Для диграммной подстановки в общем ви-
де требуется ключ, состоящий из перестановок 262 диграмм. Он может
быть представлен с помощью таблицы, в которой ряд соответствует пер-
вой букве диграммы, а столбец  второй букве, причем клетки таблицы
заполнены заменяющими символами (обычно также диграммами).
5. Шифр Виженера с перемешанным один раз алфавитом.
Такой шифр представляет собой простую подстановку с последую-
щим применением шифра Виженера
li = f(mi) + ki,
mi = f−1(li − ki).
¾Обратным¿ к такому шифру является шифр Виженера с последу-
ющей простой подстановкой
li = g(mi + ki),
mi = g−1(li) − ki.
6. Матричная система
Имеется один метод подстановки n-грамм, который заключается в
применении к последовательным n-граммам некоторой матрицы, име-
ющей обратную. Предполагается, что буквы занумерованы от 0 до 25
270 Приложение А
и рассматриваются как элементы некоторого алгебраического коль-
ца. Если к n-грамме сообщения применить матрицу aij , то получится
n-грамма криптограммы
li =
Xn
j=1
aijmj , i = 1, . . . , n.
Матрица aij является ключом, и расшифровка выполняется с помо-
щью обратной матрицы. Обратная матрица будет существовать тогда и
только тогда, когда определитель |aij | имеет обратный элемент в нашем
кольце.
7. Шифр Плэйфер
Этот шифр является частным видом диграммной подстановки, ко-
торая производится с помощью перемешанного алфавита из 25 букв,
записанных в виде квадрата 5×5. (Буква J часто опускается при крип-
тографической работе, так как она редко встречается, и в тех случаях,
когда она встречается, ее можно заменить буквой I). Предположим,
что ключевой квадрат записывается следующим образом:
L Z Q C P
A G N O U
R D M I F
K Y H V S
X B T E W.
В этом случае диграмма AC, например, заменяется на пару букв, распо-
ложенных в противоположных углах прямоугольника, определяемого
буквами A и C, т. е. на LO, причем L взята первой, так как она выше A.
Если буквы диграммы расположены на одной горизонтали, то исполь-
зуются стоящие справа от них буквы. Таким образом, RI заменяется
на DF, RF заменяется на DR. Если буквы расположены на одной вер-
тикали, то используются буквы, стоящие под ними. Таким образом, PS
заменяется на UW. Если обе буквы диграммы совпадают, то можно
использовать для их разделения нуль или же одну из букв опустить
и т. п.
8. Перемешивание алфавита с помощью многократной подстановки.
В этом шифре используются последовательно d простых подстано-
вок. Так, если d = 4, то
m1m2m3m4m5m6 . . .
заменяется на
f1(m1)f2(m2)f3(m3)f4(m4)f1(m5)f2(m6) . . .
и т. д.
9. Шифр с автоключом.
К. Шеннон. Теория связи в секретных системах 271
Шифр типа Виженера, в котором или само сообщение или результи-
рующая криптограмма используются в качестве ¾ключа¿, называется
шифром с автоключом. Шифрование начинается с помощью ¾первич-
ного ключа¿ (который является настоящим ключом в нашем смысле)
и продолжается с помощью сообщения или криптограммы, смещенной
на длину первичного ключа, как в указанном ниже примере, где пер-
вичным ключом является набор букв COMET . В качестве ¾ключа¿
используется сообщение:
Сообщение S E N D S U P P L I E S . . .
Ключ C O M E T S E N D S U P . . .
Криптограмма U S Z H L M T C O A Y H . . .
Если в качестве ¾ключа¿ использовать криптограмму, то получит-
ся1)
Сообщение S E N D S U P P L I E S . . .
Ключ C O M E T U S Z H L O H . . .
Криптограмма U S Z H L O H O S T T S . . .
10. Дробные шифры.
В этих шифрах каждая буква сначала зашифровывается в две (или
более) буквы или в два (или более) числа, затем полученные символы
каким-либо способом перемешиваются (например, с помощью транспо-
зиции), после чего их можно снова перевести в первоначальный ал-
фавит. Таким образом, используя в качестве ключа перемешанный
25-буквенный алфавит, можно перевести буквы в двухзначные пяте-
ричные числа с помощью таблицы:
0 1 2 3 4
0 L Z Q C P
1 A G N O U
2 R D M I F
3 K Y H V S
4 X B T E W
Например, букве B соответствует ¾число¿ 41. После того как полу-
ченный ряд чисел подвергнут некоторой перестановке, его можно снова
разбить на пары чисел и перейти к буквам.
11. Коды.
В кодах слова (или иногда слоги) заменяются группами букв. Иногда
затем применяется шифр того или иного вида.
1)Эта система является тривиальной с точки зрения секретности, так как, за ис-
ключением первых d букв, в распоряжении противника имеется весь ¾ключ¿.
272 Приложение А
5. Оценка секретных систем
Имеется несколько различных критериев, которые можно было бы
использовать для оценки качества предлагаемой секретной системы.
Рассмотрим наиболее важные из этих критериев.
1. Количество секретности.
Некоторые секретные системы являются совершенными в том смыс-
ле, что положение противника не облегчается в результате перехвата
любого количества сообщений. Другие системы, хотя и дают противни-
ку некоторую информацию при перехвате очередной криптограммы, но
не допускают единственного ¾решения¿. Системы, допускающие един-
ственное решение, очень разнообразны как по затрате времени и сил,
необходимых для получения этого решения, так и по количеству мате-
риала, который необходимо перехватить для получения единственного
решения.
2. Объем ключа.
Ключ должен быть передан из передающего пункта в приемный
пункт таким способом, чтобы его нельзя было перехватить. Иногда его
нужно запомнить. Поэтому желательно иметь ключ настолько малый,
насколько это возможно.
3. Сложность операции шифрования и дешифрирования.
Операции шифрования и дешифрирования должны быть, конечно,
по возможности простыми. Если эти операции производятся вручную,
то их сложность приводит к потере времени, появлению ошибок и т. д.
Если они производятся механически, то сложность приводит к исполь-
зованию больших и дорогих устройств.
4. Разрастание числа ошибок.
В некоторых типах шифров ошибка в одной букве, допущенная при
шифровании или передаче, приводит к большому числу ошибок в рас-
шифрованном тексте. Такие ошибки разрастаются в результате опера-
ции дешифрирования, вызывая значительную потерю информации и
часто требуя повторной передачи криптограммы. Естественно, жела-
тельно минимизировать это возрастание числа ошибок.
5. Увеличение объема сообщения.
В некоторых типах секретных систем объем сообщения увеличива-
ется в результате операции шифрования. Этот нежелательный эффект
можно наблюдать в системах, в которых делается попытка потопить
статистику сообщения в массе добавляемых нулевых символов, или где
используются многократные замены. Он имеет место также во многих
системах типа ¾маскировки¿ (которые не являются обычными секрет-
ными системами в смысле нашего определения).
К. Шеннон. Теория связи в секретных системах 273
6. Алгебра секретных систем
Если имеются две секретные системы T и R, их часто можно ком-
бинировать различными способами для получения новой секретной си-
стемы S. Если T и R имеют одну и ту же область (пространство сооб-
щений), то можно образовать своего рода ¾взвешенную сумму¿
S = pT + qR,
где p + q = 1. Эта операция состоит, во-первых, из предварительного
выбора систем T или R с вероятностями p и q. Этот выбор является
частью ключа S. После того как этот выбор сделан, системы T или
R применяются в соответствии с их определениями. Полный ключ S
должен указывать, какая из систем T или R выбрана и с каким ключом
используется выбранная система.
Если T состоит из отображений T1, . . . , Tm с вероятностями p1, . . .
. . . , pm, а R  из R1, . . . ,Rk с вероятностями q1, . . . , qk, то система S =
= pT +qR состоит из отображений T1, . . . , Tm,R1, . . . ,Rk с вероятностя-
ми pp1, . . . . . . , ppm, qq1, . . . , qqk соответственно.
Обобщая далее, можно образовать сумму нескольких систем
S = p1T + p2R + · · · + pmU,
X
pi = 1.
Заметим, что любая система T может быть записана как сумма фикси-
рованных операций
T = p1T1 + p2T2 + · · · + pmTm,
где Ti  определенная операция шифрования в системе T , соответству-
ющая выбору ключа i, причем вероятность такого выбора равна pi.
Второй способ комбинирования двух секретных систем заключается
в образовании ¾произведения¿, как показано схематически на рис. 3.
Предположим, что T и R  такие две системы, что область опреде-
ления (пространство языка) системы R может быть отождествлена с
областью определения (пространством криптограмм) системы T . Тогда
можно применить сначала систему T к нашему языку, а затем систему
R к результату этой операции, что дает результирующую операцию S,
которую запишем в виде произведения
S = RT.
Ключ системы S состоит как из ключа системы T , так и из ключа систе-
мы R, причем предполагается, что эти ключи выбираются соответствен-
но их первоначальным вероятностям и независимо. Таким образом, если
m ключей системы T выбирается с вероятностями
p1, p2, . . . , pm,
а n ключей системы R имеют вероятности
p′
1, p′
2, . . . , p′
n,
274 Приложение А
то система S имеет самое большее mn ключей с вероятностями pip′
j . Во
многих случаях некоторые из отображений RiTj будут одинаковыми и
могут быть сгруппированы вместе, а их вероятности при этом сложатся.
Произведение шифров используется часто; например, после подста-
новки применяют транспозицию или после транспозиции  код Виже-
нера; или же применяют код к тексту и зашифровывают результат с
помощью подстановки, транспозиции, дробным шифром и т. д.
Можно заметить, что такое умножение, вообще говоря, некоммута-
тивно (т. е. не всегда RS = SR), хотя в частных случаях (таких, как
подстановка и транспозиция) коммутативность имеет место. Так как
наше умножение представляет собой некоторую операцию, оно по опре-
делению ассоциативно, т. е. R(ST ) = (RS)T = RST . Кроме того, верны
законы
p(p′T + q′R) + qS = pp′T + pq′R + qS
(взвешенный ассоциативный закон для сложения);
T (pR + qS) = pTR + qTS
(pR + qS) = pRT + qST
(право- и левосторонние дистрибутивные законы), а также справедливо
равенство
p1T + p2T + p3R = (p1 + p2)T + p3R.
Следует подчеркнуть, что эти операции комбинирования сложения
и умножения применяются к секретным системам в целом. Произведе-
ние двух систем TR не следует смешивать с произведением отображе-
ний в системах TiRj , которое также часто используется в настоящей
работе. Первое является секретной системой, т. е. множеством отобра-
жений с соответствующими вероятностями; второе  является фик-
сированным отображением. Далее, в то время как сумма двух систем
pR+qT является системой, сумма двух отображений не определена. Си-
стемы T и R могут коммутировать, в то время как конкретные Rj и Ti не
коммутируют. Например, если R  система Бофора данного периода,
T R R−1 T−1
K1 K2
Рис. 3. Произведение двух систем S = RT .
К. Шеннон. Теория связи в секретных системах 275
все ключи которой равновероятны, то, вообще говоря,
RiRj 6= RjRi,
но, конечно, произведение RR не зависит от порядка сомножителей;
действительно
RR = V
является системой Виженера того же самого периода со случайным
ключом. С другой стороны, если отдельные отображения Ti и Rj двух
систем T и R коммутируют, то и системы коммутируют.
Системы, у которых пространстваM и E можно отождествить (этот
случай является очень частым, если последовательности букв преобра-
зуются в последовательности букв), могут быть названы эндоморфны-
ми. Эндоморфная система T может быть возведена в степень T n.
Секретная система T , произведение которой на саму себя равно T ,
т. е. такая, что
T T = T,
будет называться идемпотентной. Например, простая подстановка,
транспозиция с периодом p, система Виженера с периодом p (все с рав-
новероятными ключами) являются идемпотентными.
Множество всех эндоморфных секретных систем, определенных в
фиксированном пространстве сообщений, образует ¾алгебраическую си-
стему¿, т. е. некоторый вид алгебры, использующей операции сложе-
ния и умножения. Действительно, рассмотренные свойства сложения и
умножения можно резюмировать следующим образом.
Множество эндоморфных шифров с одним и тем же простран-
ством сообщений и двумя операциями комбинирования  операцией
взвешенного сложения и операцией умножения  образуют линейную
ассоциативную алгебру с единицей, с той лишь особенностью, что ко-
эффициенты во взвешенном сложении должны быть неотрицатель-
ными, а их сумма должна равняться единице.
Эти операции комбинирования дают способы конструирования мно-
гих новых типов секретных систем из определенных данных систем, как
это было показано в приведенных примерах. Их можно также исполь-
зовать для описания ситуации, с которой сталкивается шифровальщик
противника, когда он пытается расшифровать криптограмму неизвест-
ного типа. Фактически он расшифровывает секретную систему типа
T = p1A + p2B + · · · + prS + p′X,
X
pi = 1,
где A,B, . . . , S в данном случае  известные типы шифров с их апри-
орными вероятностями pi, а p′X соответствует возможности использо-
вания совершенно нового неизвестного шифра.
276 Приложение А
7. Чистые и смешанные шифры
Некоторые типы шифров, такие как простая подстановка, транспо-
зиция с данным периодом, система Виженера с данным периодом, систе-
ма Виженера со смешанным алфавитом и т. д. (все с равновероятными
ключами), обладают некоторой однородностью по отношению к ключу.
Каков бы ни был ключ, процессы шифрования, дешифрирования адре-
сатом и дешифрирования противником являются по существу теми же
самыми. Эти системы можно противопоставить системе с шифром
pS + qT,
где S  простая подстановка, а T  транспозиция с данным периодом. В
таком случае процессы шифрования и дешифрирования адресатом или
противником полностью меняются в зависимости от того, используется
подстановка или транспозиция.
Причина однородности таких систем лежит в групповом свойстве:
заметим, что в приведенных выше примерах однородных шифров про-
изведение TiTj любых двух отображений из множества равно третьему
отображению Tk из этого же множества. С другой стороны, TiSj не
Остаточные
классы
сообщений
Остаточные
классы
криптограмм
C1


M1
M2
M3
M4
E1
E2
E3
E4
1
2
4 3
4 12
3
3 41
2
2
34
1


C′
1
C2


M5
M6
E5
E6
1
2
4 3
4 3
2
1


C′
2
C3
"
M7 E7
1
2 3
4
#
C′
3
Чистая система
Рис. 4.
К. Шеннон. Теория связи в секретных системах 277
равно какому-нибудь отображению для шифра
pS + qT,
который содержит только подстановки и транспозиции, но не их про-
изведения.
Было бы можно, таким образом, определить ¾чистый¿ шифр как
шифр, в котором Tj образуют группу. Однако это было бы слишком
сильным ограничением, так как тогда потребовалось бы, чтобы про-
странство E совпадало с пространством M, т. е. чтобы система была
эндоморфной. Дробная транспозиция так же однородна, как и обычная
транспозиция, но она не эндоморфна. Подходящим является следую-
щее определение: шифр T является чистым, если для каждых Ti, Tj , Tk
имеется такое Ts, что
TiT−1
j Tk = Ts,
и все ключи равновероятны. В противном случае шифр является сме-
шанным. Шифры на рис. 2 являются смешанными, а на рис. 4  чи-
стыми, если только все ключи равновероятны.
Теорема 1. В чистом шифре операции T−1
i Tj , отображающие про-
странство сообщений в себя, образуют группу, порядок которой равен
m  числу различных ключей.
Так как
T−1
j TkT−1
k Tj = I,
то каждый элемент имеет обратный. Ассоциативный закон верен, так
как это операции, а групповое свойство следует из того, что
T−1
i TjT−1
k Tl = T−1
s TkT−1
k Tl = T−1
s Tl,
где предполагалось, что T−1
i Tj = T−1
s Tk для некоторого s.
Операция T−1
i Tj означает шифрование сообщения с помощью клю-
ча j с последующим дешифрованием с помощью ключа i, что приводит
нас назад к пространству сообщений. Если система T эндоморфна, т. е.
Ti отображают пространство 
M в само себя (что имеет место для боль-
шинства шифров, в которых и пространство сообщений, и пространство
криптограмм состоит из последовательностей букв), и если Ti образуют
группу и равновероятны, то T  чистый шифр, так как
TiT−1
j Tk = TiTr = Ts.
Теорема 2. Произведение двух чистых коммутирующих шифров яв-
ляется чистым шифром.
278 Приложение А
Если T и R коммутируют, то TiRj = RlTm для любых i, j при соот-
ветствующих l,m. Тогда
TiRj(TkRl)−1TmRn = TiRjR−1
l T−1
k TmRn = RuR−1
v RwTrT−1
s Tt = RhTg.
Условие коммутирования не является, однако, необходимым для того,
чтобы произведение было чистым шифром.
Система, состоящая из одного ключа, т. е. из единственной опреде-
ленной операции T1, является чистым шифром, т. е. при единственном
возможном выборе индексов имеем
T1T−1
1 T1 = T1.
Таким образом, разложение шифра в сумму таких простых отображе-
ний представляет собой разложение в его сумму чистых шифров.
Исследование примера, приведенного на рис. 4, вскрывает некото-
рые свойства чистого шифра. Сообщения распадаются на определен-
ные подмножества, которые мы будем называть остаточными клас-
сами, и возможные криптограммы также распадаются на соответству-
ющие им остаточные классы. От каждого сообщения в любом клас-
се к каждой криптограмме в соответствующем классе имеется не ме-
нее одной линии и нет линий между несоответствующими классами.
Число сообщений в классе является делителем полного числа клю-
чей. Число ¾параллельных¿ линий от сообщения M к криптограмме
в соответствующем классе равно числу ключей, деленному на чис-
ло сообщений в классе, содержащем это сообщение (или криптограм-
му).
В приложении1) показывается, что это верно для чистых шифров и
в общем случае. Резюмируя сказанное, мы имеем
Теорема 3. В чистой системе сообщения можно разделить на мно-
жество ¾остаточных классов¿ C1, . . . ,Cs, а криптограммы  на
соответствующее множество остаточных классов C′
1 , . . . ,C′
s. Эти
классы будут иметь следующие свойства:
1. Остаточные классы сообщений взаимно исключают друг друга и
содержат все возможные сообщения. Аналогичное утверждение верно
и для остаточных классов криптограмм.
2. Если зашифровать любое сообщение из класса Ci с помощью лю-
бого ключа, то получится криптограмма из класса C′
i . Дешифрирова-
ние любой криптограммы из класса C′
i с помощью любого ключа при-
водит к сообщению из класса Ci.
3. Число сообщений в классе Ci, скажем, 'i, равно числу крипто-
грамм в классе C′
i и является делителем k  числа ключей.
1)Имеется в виду приложение к полному тексту работы К.Шеннона.  прим. ред.
К. Шеннон. Теория связи в секретных системах 279
4. Каждое сообщение из класса Ci может быть зашифровано в
каждую криптограмму из класса C′
i при помощи точно k/'i различ-
ных ключей. То же самое верно и для дешифрирования.
Смысл понятия чистый шифр (и причина для выбора такого терми-
на) лежит в том, что в чистом шифре все ключи являются по существу
одинаковыми. Какой бы ключ ни использовался для заданного сообще-
ния, апостериорные вероятности всех сообщений будут теми же самыми.
Чтобы показать это, заметим, что два различных ключа, примененных
к одному сообщению, дадут в результате две криптограммы из одного
остаточного класса, скажем C′
i . Поэтому эти две криптограммы могут
быть расшифрованы с помощью k/'i ключей в каждое из сообщений
в классе Ci и больше ни в какие возможные сообщения. Так как все
ключи равновероятны, то апостериорные вероятности различных сооб-
щений равны
PE(M) =
P(M) · PM(E)
P(E)
=
P(M) · PM(E)
MP(M)PM(E)
=
P(M)
P(Ci)
,
где M  сообщение из класса Ci, E  криптограмма из класса C′
i и
сумма берется по всем M из класса Ci. Если E и M не принадлежат
соответствующим остаточным классам, то PE(M) = 0.
Аналогично можно показать, что набор апостериорных вероятно-
стей различных ключей всегда одинаков, но эти вероятности ставятся
в соответствие ключам лишь после того, как уже использован некото-
рый ключ. При изменении частного ключа это множество чисел PE(K)
подвергается перестановке. Иными словами, имеем:
Теорема 4. В чистой системе апостериорные вероятности различ-
ных сообщений PE(M) не зависят от выбора ключа. Апостериорные
вероятности ключей PE(K) образуют один и тот же набор величин,
но подвергаются перестановке в результате различных выборов клю-
ча.
Грубо говоря, можно считать, что любой выбор ключа в чистом
шифре приводит к одинаковым трудностям при дешифрировании. По-
скольку различные ключи все приводят к формированию криптограмм
из одного и того же остаточного класса, то все криптограммы из одного
остаточного класса эквивалентны с точки зрения сложности дешифри-
рования  они приводят к тем же самым апостериорным вероятностям
сообщений и, если учитывать перестановки, к тем же самым вероятно-
стям ключей.
В качестве примера чистого шифра может служить простая подста-
новка с равновероятными ключами. Остаточный класс, соответствую-
щий данной криптограмме E, является множеством всех криптограмм,
280 Приложение А
которые могут быть получены из E с помощью операций TjT−1
k E. В
рассматриваемом случае операция TjT−1
k сама является подстановкой
и поэтому любая подстановка переводит криптограмму E в другой член
того же самого остаточного класса; таким образом, если криптограмма
представляет собой
E = XCPPGCFQ,
то
E1 = RDHHGDSN,
E2 = ABCCDBEF и т. д.
принадлежат к тому же остаточному классу. В этом случае очевид-
но, что криптограммы по существу эквивалентны. Все существенное
в простой подстановке со случайным ключом заключено в характе-
ре повторения букв, в то время как сами буквы являются несуще-
ственной маскировкой. В действительности можно бы полностью обой-
тись без них, указав характер повторений букв в E следующим обра-
зом:
Это обозначение описывает остаточный класс, но устраняет всю инфор-
мацию относительно конкретных членов этого класса; таким образом,
оно представляет как раз ту информацию, которая имеет значение для
шифровальщика противника. Это связано с одним из методов подхода
к раскрытию шифров типа простой подстановки методом характерных
слов.
В шифре типа Цезаря имеют значение только первые разности крип-
тограммы по модулю 26. Две криптограммы с теми же самыми разно-
стями (ei) принадлежат к одному остаточному классу. Этот шифр
можно раскрыть путем простого процесса выписывания двадцати ше-
сти сообщений из этого остаточного класса и выбора того из них, кото-
рое имеет смысл.
Шифр Виженера с периодом d со случайным ключом представляет
собой другой пример чистого шифра. Здесь остаточный класс сообще-
ний состоит из всех последовательностей с теми же первыми разностя-
ми, что и у криптограммы для букв, отстоящих на расстояние d. Для
К. Шеннон. Теория связи в секретных системах 281
d = 3 остаточный класс определяется с помощью равенств
m1 − m4 = e1 − e4
m2 − m5 = e2 − e5
m3 − m6 = e3 − e6
m4 − m7 = e4 − e7
. . . . . . . . .
где E = e1e2 . . .  криптограмма, а m1m2 . . . является любым сообще-
нием M в соответствующем остаточном классе.
В транспозиции с периодом d со случайным ключом остаточный
класс состоит из всех способов расстановок символов криптограммы,
в которых никакое ei не выдвигается из своего блока длины d и любые
два ei с расстоянием d остаются на таком же расстоянии. Это исполь-
зуется для раскрытия шифра следующим образом: криптограмма за-
писывается в виде последовательных блоков длины d один под другим,
как показано ниже (для d = 5)
e1 e2 e3 e4 e5
e6 e7 e8 e9 e10
e11 e12 . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .
Затем столбцы переставляются до тех пор, пока не получится осмыс-
ленный текст. После того как криптограмма разбита на столбцы, остав-
шейся существенной информацией является только остаточный класс
криптограммы.
Теорема 5. Если шифр T  чистый, то TiT−1
j T = T , где Ti, Tj 
любые два отображения из T . Обратно, если это выполняется для
любых принадлежащих шифру Ti, Tj , то шифр T является чистым.
Первая часть этой теоремы следует, очевидно, из определения чи-
стого шифра. Чтобы доказать вторую часть, заметим сначала, что если
TiT−1
j T = T , то TiT−1
j Ts является отображением из T . Остается пока-
зать, что все ключи равновероятны. Имеем T =
P
s psTs и
X
s
psTiT−1
j Ts =
X
s
psTs.
Слагаемое в стоящей слева сумме с s = j дает pjTi. Единственным
слагаемым с Ti в правой части является piTi. Так как все коэффициенты
неотрицательны, то отсюда следует, что
pj 6 pi.
282 Приложение А
То же самое рассуждение остается справедливым, если i и j поме-
нять местами. Следовательно,
pi = pj
и T  чистый шифр. Таким образом, условие TiT−1
j T = T можно было
бы использовать в качестве другого определения чистого шифра.
8. Подобные системы
Две секретные системы R и S будем называть подобными, если су-
ществует отображение A, имеющее обратное A−1, такое, что
R = AS.
Это означает, что шифрование с помощью R даст то же, что шифро-
вание с помощью S с последующим применением отображения A. Если
использовать запись R ≈ S для обозначения того, что R подобно S, то,
очевидно, из R ≈ S следует S ≈ R. Кроме того, из R ≈ S и S ≈ T следу-
ет, что R ≈ T и, наконец, R ≈ R. Резюмируя вышеизложенное, можно
сказать, что подобие систем является соотношением эквивалентности.
Криптографический смысл подобия состоит в том, что если R ≈ S,
то R и S  эквивалентны с точки зрения дешифрирования. Действи-
тельно, если шифровальщик противника перехватывает криптограмму
из системы S, он может перевести ее в криптограмму из системы R про-
стым применением к ней отображения A. Обратно, криптограмма из
системы R переводится в криптограмму из системы S с помощью A−1.
Если R и S применяются к одному и тому же пространству сообщений
или языку, то имеется взаимооднозначное соответствие между получаю-
щимися криптограммами. Соответствующие друг другу криптограммы
дают одинаковое апостериорное распределение вероятностей для всех
сообщений.
Если имеется некоторый способ раскрытия системы R, то любая си-
стема S, подобная R, может быть раскрыта после приведения ее к R с
помощью операции A. Этот способ часто используется на практике.
В качестве тривиального примера рассмотрим простую подстановку,
в которой буквы сообщения заменяются не буквами, а произвольными
символами. Она подобна обычной простой подстановке с заменой на
буквы. Вторым примером могут служить шифр Цезаря и обратный
шифр Цезаря. Последний иногда раскрывают, переводя его сначала
в шифр Цезаря. Это можно сделать, обратив алфавит в криптограм-
ме. Шифры Виженера, Бофора и вариант Бофора все подобны, если
ключ является случайным. Шифр с ¾автоключом¿ (т. е. сообщением,
используемым в качестве ¾ключа¿) с используемыми вначале ключами
К. Шеннон. Теория связи в секретных системах 283
K1K2 . . .Kd подобен шифру Виженера с ключом, поочередно склады-
ваемым и вычитаемым по модулю 26. Отображение A в этом случае
представляет собой ¾дешифровку¿ автоключа с помощью последова-
тельности из d таких отображений для каждого из начальных ключей.
Ча с т ь II
ТЕОРЕТИЧЕСКАЯ СЕКРЕТНОСТЬ
9. Введение
Рассмотрим вопросы, связанные с ¾теоретической секретностью¿
систем. Насколько устойчива некоторая система, если шифровальщик
противника не ограничен временем и обладает всеми необходимыми
средствами для анализа криптограмм? Имеет ли криптограмма един-
ственное решение (даже если для нахождения этого решения может
потребоваться такой объем работ, что его практически нельзя будет
выполнить), а если нет, то сколько она имеет приемлемых решений?
Какой объем текста, зашифрованного в данной системе, нужно пере-
хватить для того, чтобы решение стало единственным? Существуют ли
секретные системы, в которых вообще нельзя найти единственного ре-
шения независимо от того, каков объем перехваченного зашифрованно-
го текста? Существуют ли секретные системы, в которых противник не
получает никакой информации, сколько бы он ни перехватывал зашиф-
рованного текста? В анализе этих вопросов найдут широкое применение
понятия энтропии, избыточности, а также и другие понятия, введенные
в работе ¾Математическая теория связи¿1).
10. Совершенная секретность
Предположим, что имеется конечное число возможных сообщений
M1, . . . ,Mn с априорными вероятностями P(M1), . . . , P(Mn) и что эти
сообщения преобразуются в возможные криптограммы E1, . . . ,Em, так
что
E = TiM.
После того как шифровальщик противника перехватил некоторую
криптограмму E, он может вычислить, по крайней мере в принципе,
апостериорные вероятности различных сообщений PE(M). Естественно
определить совершенную секретность с помощью следующего условия:
для всех E апостериорные вероятности равны априорным вероятностям
1)Перевод этой работы см. в книге К. Шеннон ¾Работы по теории информации и
кибернетике¿, М., ИЛ, 1963, с. 243–332.  Прим. ред.
284 Приложение А
независимо от величины этих последних. В этом случае перехват сооб-
щения не дает шифровальщику противника никакой информации1). Те-
перь он не может корректировать никакие свои действия в зависимости
от информации, содержащейся в криптограмме, так как все вероятно-
сти, относящиеся к содержанию криптограммы, не изменяются. С дру-
гой стороны, если это условие равенства вероятностей не выполнено,
то имеются такие случаи, в которых для определенного ключа и опре-
деленных выборов сообщений апостериорные вероятности противника
отличаются от априорных. А это в свою очередь может повлиять на
выбор противником своих действий и, таким образом, совершенной сек-
ретности не получится. Следовательно, приведенное определение неиз-
бежным образом следует из нашего интуитивного представления о со-
вершенной секретности.
Необходимое и достаточное условие для того, чтобы система была
совершенно секретной, можно записать в следующем виде. По теореме
Байеса
PE(M) =
P(M) · PM(E)
P(E)
,
где
P(M)  априорная вероятность сообщения M;
PM(E)  условная вероятность криптограммы E при условии, что
выбрано сообщение M, т. е. сумма вероятностей всех тех ключей, кото-
рые переводят сообщение M в криптограмму E;
P(E)  вероятность получения криптограммы E;
PE(M)  апостериорная вероятность сообщенияM при условии, что
перехвачена криптограмма E.
Для совершенной секретности системы величины PE(M) и P(M)
должны быть равны для всех E и M. Следовательно, должно быть
выполнено одно из равенств: или P(M) = 0 [это решение должно быть
отброшено, так как требуется, чтобы равенство осуществлялось при лю-
бых значениях P(M)], или же
PM(E) = P(E)
для любых M и E.
Наоборот, если PM(E) = P(E), то
PE(M) = P(M),
1)Пурист мог бы возразить, что противник получил некоторую информацию, а
именно он знает, что послано какое-то сообщение. На это можно ответить следую-
щим образом. Пусть среди сообщений имеется ¾чистый бланк¿, соответствующий
¾отсутствию сообщения¿. Если не создается никакого сообщения, то чистый бланк
зашифровывается и посылается в качестве криптограммы. Тогда устраняется даже
эта крупинка информации.
К. Шеннон. Теория связи в секретных системах 285
и система совершенно секретна. Таким образом, можно сформулировать
следующее:
Теорема 6. Необходимое и достаточное условие для совершенной сек-
ретности состоит в том, что
PM(E) = P(E)
для всех M и E, т. е. PM(E) не должно зависеть от M.
Другими словами, полная вероятность всех ключей, переводящих
сообщение Mi в данную криптограмму E, равна полной вероятности
всех ключей, переводящих сообщение Mj в ту же самую криптограмму
E для всех Mi,Mj и E.
Далее, должно существовать по крайней мере столько же крипто-
грамм E, сколько и сообщений M, так как для фиксированного i отоб-
ражение Ti дает взаимнооднозначное соответствие между всеми M и
некоторыми из E. Для совершенно секретных систем для каждого из
этих E и любого M PM(E) = P(E) 6= 0. Следовательно, найдется по
крайней мере один ключ, отображающий данное M в любое из E. Но
все ключи, отображающие фиксированное M в различные E, должны
быть различными, и поэтому число различных ключей не меньше чис-
ла сообщений M. Как показывает следующий пример, можно получить
совершенную секретность, когда число сообщений точно равно числу
ключей. Пусть Mi занумерованы числами от 1 до n, так же как и Ei, и
пусть используются n ключей. Тогда
TiMj = Es,
где s = i + j (mod n). В этом случае оказывается справедливым ра-
венство PE(M) = 1
n = P(E) и система является совершенно секретной.
Один пример такой системы показан на рис. 5, где
s = j + i − 1 (mod 5).
Совершенно секретные системы, в которых число криптограмм рав-
но числу сообщений, а также числу ключей, характеризуются следую-
щими двумя свойствами: 1) каждое M связывается с каждым E только
одной линией; 2) все ключи равновероятны. Таким образом, матричное
представление такой системы является ¾латинским квадратом¿.
В ¾Математической теории связи¿ показано, что количественно ин-
формацию удобно измерять с помощью энтропии. Если имеется некото-
рая совокупность возможностей с вероятностями p1, . . . , pn, то энтропия
дается выражением
H = −
X
pi log pi.
286 Приложение А
M1
M2
M3
M4
M5
E1
E2
E3
E4
E5
1
234
5
5 12
4 3
4 51
2
3
3
45
1
2
2
34
5
1
Рис. 5. Совершенная система.
Секретная система включает в себя два статистических выбора: выбор
сообщения и выбор ключа. Можно измерять количество информации,
создаваемой при выборе сообщения, через H(M)
H(M) = −
X
P(M) log P(M),
где суммирование выполняется по всем возможным сообщениям. Ана-
логично, неопределенность, связанная с выбором ключа, дается выра-
жением
H(K) = −
X
P(K) log P(K).
В совершенно секретных системах описанного выше типа количе-
ство информации в сообщении равно самое большее log n (эта величина
достигается для равновероятных сообщений). Эта информация может
быть скрыта полностью лишь тогда, когда неопределенность ключа не
меньше log n. Это является первым примером общего принципа, кото-
рый будет часто встречаться ниже: существует предел, которого нельзя
превзойти при заданной неопределенности ключа  количество неопре-
деленности, которое может быть введено в решение, не может быть
больше чем неопределенность ключа.
Положение несколько усложняется, если число сообщений бесконеч-
но. Предположим, например, что сообщения порождаются соответству-
ющим марковским процессом в виде бесконечной последовательности
букв. Ясно, что никакой конечный ключ не даст совершенной секрет-
ности. Предположим тогда, что источник ключа порождает ключ ана-
логичным образом, т. е. как бесконечную последовательность символов.
К. Шеннон. Теория связи в секретных системах 287
Предположим далее, что для шифрования и дешифрирования сообще-
ния длины LM требуется только определенная длина ключа LK. Пусть
логарифм числа букв в алфавите сообщений будет RM, а такой же ло-
гарифм для ключа  RK. Тогда из рассуждений для конечного случая,
очевидно, следует, что для совершенной секретности требуется, чтобы
выполнялось неравенство
RMLM 6 RKLK.
Такой вид совершенной секретности реализован в системе Вернама.
Эти выводы делаются в предположении, что априорные вероятности
сообщений неизвестны или произвольны. В этом случае ключ, требуе-
мый для того, чтобы имела место совершенная секретность, зависит от
полного числа возможных сообщений.
Можно было бы ожидать, что если в пространстве сообщений име-
ются фиксированные известные статистические связи, так что имеется
определенная скорость создания сообщений R в смысле, принятом в
¾Математической теории связи¿, то необходимый объем ключа мож-
но было бы снизить в среднем в R/RM раз, и это действительно вер-
но. В самом деле, сообщение можно пропустить через преобразователь,
который устраняет избыточность и уменьшает среднюю длину сооб-
щения как раз во столько раз. Затем к результату можно применить
шифр Вернама. Очевидно, что объем ключа, используемого на бук-
ву сообщения, статистически уменьшается на множитель R/RM, и в
этом случае источник ключа и источник сообщений в точности согла-
сован  один бит ключа полностью скрывает один бит информации
сообщения. С помощью методов, использованных в ¾Математической
теории связи¿, легко также показать, что это лучшее, чего можно до-
стигнуть.
Совершенно секретные системы могут применяться и на практике,
их можно использовать или в том случае, когда полной секретности
придается чрезвычайно большое значение, например, для кодирования
документов высших военных инстанций управления или же в случа-
ях, где число возможных сообщений мало. Так, беря крайний пример,
когда имеются в виду только два сообщения  ¾да¿ или ¾нет¿,  мож-
но, конечно, использовать совершенно секретную систему со следующей
таблицей отображений:
M K A B
да 0 1
нет 1 0
Недостатком совершенно секретных систем для случая корреспон-
денции большого объема является, конечно, то, что требуется посылать
эквивалентный объем ключа. В следующих разделах будет рассмотрен
288 Приложение А
вопрос о том, чего можно достигнуть при помощи меньших объемов
ключа, в частности, с помощью конечного ключа.
11. Ненадежность
Предположим теперь, что для английского текста используется
шифр простой подстановки и что перехвачено определенное число, ска-
жем N, букв зашифрованного текста. Если N достаточно велико, ска-
жем более 50, то почти всегда существует единственное решение шифра,
т. е. единственная последовательность, имеющая смысл на английском
языке, в которую переводится перехваченный материал с помощью про-
стой подстановки. Для меньших N шансы на неединственность решения
увеличиваются; для N = 15, вообще говоря, будет существовать неко-
торое число подходящих отрывков осмысленного английского текста, в
то время как для N = 8 окажется подходящей значительная часть (по-
рядка 1/8) всех возможных значащих английских последовательностей
такой длины, так как из восьми букв редко повторится больше чем
одна. При N = 1, очевидно, возможна любая буква и апостериорная
вероятность любой буквы будет равна ее априорной вероятности. Для
одной буквы система является совершенно секретной.
Это происходит, вообще говоря, со всеми разрешимыми шифрами.
Прежде чем перехвачена криптограмма, можно представить себе апри-
орные вероятности, связанные с различными возможными сообщени-
ями, а также с различными ключами. После того как материал пере-
хвачен, шифровальщик противника вычисляет их апостериорные веро-
ятности. При увеличении числа N вероятности некоторых сообщений
возрастают, но для большинства сообщений они убывают до тех пор,
пока не останется только одно сообщение, имеющее вероятность, близ-
кую к единице, в то время как полная вероятность всех других близка
к нулю.
Для самых простых систем эти вычисления можно эффективно вы-
полнить. Таблица I дает апостериорные вероятности для шифра Цезаря,
примененного к английскому тексту, причем ключ выбирался случайно
из 26 возможных ключей. Для того чтобы можно было использовать
обычные таблицы частот букв, диграмм и триграмм, текст был начат
в случайном месте (на страницу открытой наугад книги был случайно
опущен карандаш). Сообщение, выбранное таким способом, начинает-
ся с ¾creases to¿ (карандаш опущен на третью букву слова increases).
Если известно, что сообщение начинается не с середины, а с начала
некоторого предложения, то нужно пользоваться иной таблицей, соот-
ветствующей частотам букв, диграмм и триграмм, стоящих в начале
предложения.
К. Шеннон. Теория связи в секретных системах 289
Таблица I. Апостериорные вероятности для криптограммы типа
Цезаря
Расшифровки N = 1 N = 2 N = 3 N = 4 N = 5
CREAS 0,028 0,0377 0,1111 0,3673 1
DSFBT 0,038 0,0314
ETGCU 0,131 0,0881
FUNDV 0,029 0,0189
GV IEW 0,020
HWJFX 0,053 0,0063
IXKGY 0,063 0,0126
JY LHZ 0,001
KZMIA 0,004
LANJB 0,034 0,1321 0,2500
MBOKC 0,025 0,0222
NCPLD 0,071 0,1195
ODQME 0,080 0,0377
PERNF 0,020 0,0818 0,4389 0,6327
QFSOG 0,001
RGTPH 0,068 0,0126
SHUQI 0,061 0,0881 0,0056
T IV RJ 0,105 0,2830 0,1667
UJWSK 0,025
V KXTL 0,009
WLY UM 0,015 0,0056
XMZVN 0,002
Y NAWO 0,020
ZOBXP 0,001
APCY Q 0,082 0,0503
BQDZR 0,014
H(десятичных единиц) 1,2425 0,9686 0,6034 0,285 0
290 Приложение А
Шифр Цезаря со случайным ключом является чистым, и выбор
частного ключа не влияет на апостериорные вероятности. Чтобы опре-
делить эти вероятности, надо просто выписать возможные расшифров-
ки с помощью всех ключей и вычислить их априорные вероятности.
Апостериорные вероятности получатся из этих последних в результа-
те деления их на их сумму. Эти возможные расшифровки, образующие
остаточный класс этого сообщения, найдены с помощью стандартного
процесса последовательного ¾пробегания алфавита¿, в таблице I они
даны слева. Для одной перехваченной буквы апостериорные вероятно-
сти равны априорным вероятностям для всех букв1) (они приведены в
таблице под рубрикой N = 1).
Для двух перехваченных букв эти вероятности равны априорным
вероятностям диграмм, пронормированным на их сумму (они приведе-
ны в столбце N = 2). Триграммные частоты получены аналогично и
приведены в столбце N = 3. Для четырех- и пятибуквенных последова-
тельностей вероятности находились из триграммных частот с помощью
умножения, так как с некоторым приближением
p(ijkl) = p(ijk)pjk(l).
Заметим, что для трех букв число возможных сообщений снижается
до четырех сообщений достаточно высокой вероятности, причем веро-
ятности всех других сообщений малы по сравнению с вероятностями
этих четырех сообщений. Для четырех букв имеются два возможных
сообщения и для пяти  только одно, а именно правильная дешифров-
ка.
В принципе это может быть проведено для любой системы, одна-
ко в том случае, когда объем ключа не очень мал, число возможных
сообщений настолько велико, что вычисления становятся практически
невыполнимыми.
Получаемое таким образом множество апостериорных вероятностей
описывает, как постепенно, по мере получения зашифрованного матери-
ала, становятся более точными сведения шифровальщика противника
относительно сообщения и ключа.
Это описание, однако, является слишком исчерпывающим и слиш-
ком сложным для наших целей. Хотелось бы иметь упрощенное описа-
ние такого приближения к единственности возможного решения.
Аналогичная ситуация возникает в теории связи, когда передавае-
мый сигнал искажается шумом. Здесь необходимо ввести подходящую
меру неопределенности того, что действительно было передано, при
1)Вероятности в приводимой таблице были взяты из таблиц частот, данных в книге
Рratt F., Secret and Urgent, Blue Ribbon Books, New York, 1939. Хотя эти таблицы и
не являются полными, но для настоящих целей их достаточно.
К. Шеннон. Теория связи в секретных системах 291
условии, что известен только искаженный шумом вариант  принятый
сигнал.
В ¾Математической теории связи¿ показано, что естественной мате-
матической мерой этой неопределенности является условная энтропия
передаваемого сигнала при условии, что принятый сигнал известен. Эта
условная энтропия для удобства будет называться ненадежностью.
С криптографической точки зрения секретная система почти тожде-
ственна системе связи при наличии шума. На сообщение (передаваемый
сигнал) действует некоторый статистический элемент (секретная систе-
ма с ее статистически выбранным ключом). В результате получается
криптограмма (аналог искаженного сигнала), подлежащая дешифри-
рованию. Основное различие заключается в следующем: во-первых, в
том, что преобразование при помощи шифра имеет обычно более слож-
ную природу, чем возникающее за счет шума в канале; и, во-вторых,
ключ в секретной системе обычно выбирается из конечного множества,
в то время как шум в канале чаще является непрерывным, выбранным
по существу из бесконечного множества.
Учитывая эти соображения, естественно использовать ненадеж-
ность в качестве теоретической меры секретности. Следует отметить,
что имеются две основные ненадежности: ненадежность ключа и нена-
дежность сообщения. Они будут обозначаться через HE(K) и HE(M)
соответственно. Их величины определяются соотношениями
HE(K) = −
X
E,K
P(E,K) log PE(K),
HE(M) = −
X
E,M
P(E,M) log PE(M),
где E, M и K  криптограмма, сообщение и ключ;
P(E,K)  вероятность ключа K и криптограммы E;
PE(K)  апостериорная вероятность ключа K, если перехвачена
криптограмма E;
P(E,M) и PE(M)  аналогичные вероятности, но не для ключа, а
для сообщения.
Суммирование в HE(K) проводится по всем возможным крипто-
граммам определенной длины (скажем, N) и по всем возможным клю-
чам. Для HE(M) суммирование проводится по всем сообщениям и крип-
тограммам длины N. Таким образом, HE(K) и HE(M) являются функ-
циями от N  числа перехваченных букв. Это будет иногда указываться
в обозначении так: HE(K,N), HE(M,N). Заметим, что эти ненадежно-
сти являются ¾полными¿, т. е. не делятся на N с тем, чтобы получить
292 Приложение А
скорость ненадежности, которая рассматривалась в работе ¾Математи-
ческая теория связи¿.
Те же самые рассуждения, которые были использованы в ¾Мате-
матической теории связи¿ для обоснования введения ненадежности в
качестве меры неопределенности в теории связи, применимы и здесь.
Так, из того, что ненадежность равна нулю, следует, что одно сообще-
ние (или ключ) имеет единичную вероятность, а все другие  нулевую.
Этот случай соответствует полной осведомленности шифровальщика.
Постепенное убывание ненадежности с ростом N соответствует увели-
чению сведений об исходном ключе или сообщении. Кривые ненадеж-
ности сообщения и ключа, нанесенные на график как функции от N,
мы будем называть характеристиками ненадежности рассматриваемой
секретной системы.
Величины HE(K,N) и HE(M,N) для криптограммы шифра Цезаря,
рассмотренной выше, сосчитаны и приведены в нижней строке табл. I.
Числа HE(K,N) и HE(M,N) в этом случае равны и даны в десятич-
ных единицах (т. е. при вычислениях в качестве основания логарифма
бралось 10). Следует отметить, что ненадежность здесь сосчитана для
частной криптограммы, так как суммирование ведется только по M
(или K), но не по E. В общем случае суммирование должно было бы
проводиться по всем перехваченным криптограммам длины N, в резуль-
тате чего получилась бы средняя неопределенность. Вычислительные
трудности не позволяют сделать это практически.
Приложение Б
Аннотированный список рекомендованной
литературы
Читатель, познакомившийся с криптографией по нашей книге и жела-
ющий это знакомство продолжить, найдет здесь список книг и статей,
на которые мы советуем обратить внимание. Предлагаемые краткие ан-
нотации помогут ориентироваться в многообразии криптографической
литературы. При составлении списка мы не ставили задачу рецензиро-
вания включаемой в него литературы.
1. О. А. Логачёв, А. А. Сальников, В. В. Ященко. Булевы функции
в теории кодирования и криптологии. МЦНМО, М., 2004.
В книге систематически излагается теория булевых функций с точ-
ки зрения ее приложений в криптографии и теории кодирования. Книга
состоит из следующих глав: арифметика конечных полей и полиномов;
булевы функции; классификации булевых функций; линейные коды над
полем F2; коды Рида Маллера; нелинейность; корреляционная иммун-
ность и устойчивость; коды, булевы отображения и криптографические
свойства; элементы криптографического анализа. Отметим, что первая
глава содержит используемые в книге сведения из алгебры, что делает
книгу доступной студентам-математикам младших курсов.
2. О. Н. Василенко. Теоретико-числовые алгоритмы в криптогра-
фии. МЦНМО, М., 2003 (1-е изд.), 2006 (2-е изд.).
Книга посвящена алгоритмической теории чисел. Она содержит опи-
сания большого числа теоретико-числовых алгоритмов вместе с обос-
нованием их корректности и оценками трудоемкости этих алгоритмов.
Второе издание книги состоит из следующих глав: тестирование чисел
на простоту и построение больших простых чисел; факторизация целых
чисел с экспоненциальной сложностью; факторизация целых чисел с
субэкспоненциальной сложностью; применение эллиптических кривых
для проверки простоты и факторизации целых чисел; алгоритмы дис-
кретного логарифмирования; факторизация многочленов над конечны-
ми полями; приведенные базисы решеток и их приложения; фактори-
зация многочленов над полем рациональных чисел с полиномиальной
294 Приложение Б
сложностью; дискретное преобразование Фурье и его приложения; це-
лочисленная арифметика многократной точности; решение систем ли-
нейных уравнений над конечными полями.
3. Б. Шнайер. Прикладная криптография. Протоколы, алгоритмы,
исходные тексты на языке Си. Издательство ТРИУМФ, М., 2002.
Книга адресована программистам и инженерам. Она содержит по-
дробный справочник по криптографическим протоколам (часть 1), ме-
тодам криптографии (часть 2) и криптографическим алгоритмам (часть 3).
Далее, в части 4 рассматриваются вопросы практической реализации
криптографических протоколов и алгоритмов, а также политические
вопросы. Кроме того, как указано в заголовке, приводятся исходные
тексты (на языке C) некоторых используемых на практике криптогра-
фических алгоритмов (часть 5). Изложение ведется на неформальном
уровне. Представляет ценность большой список литературы, содержа-
щий 1653 названия.
4. Х. К. А. ван Тилборг. Основы криптологии. Профессиональное
руководство и интерактивный учебник. Мир, М., 2006.
Как и книга Шнайера ¾Прикладная криптография¿, эта книга ад-
ресована программистам и инженерам, но написана как учебное посо-
бие и поэтому содержит большое число примеров и упражнений. Ос-
новные темы книги: классические криптосистемы, последовательности,
порождаемые регистрами сдвига, блоковые шифры, теория Шеннона,
техника сжатия данных, криптография с открытым ключом, схемы,
основанные на различных теоретико-числовых и теоретико-кодовых за-
дачах, теоретико-числовые алгоритмы, хэш-функции, аутентификация
сообщений, протоколы с нулевым разглашением, схемы разделения сек-
рета. В приложениях приводятся основные сведения из теории чисел и
алгебры, а также краткие биографии ряда знаменитых математиков.
Особенностью рассматриваемой книги является систематическое ис-
пользование в примерах псевдокода системы Mathematica. К книге при-
лагается CD-ROM с ее электронной версией. Последнюю можно исполь-
зовать в качестве интерактивного учебника, позволяющего выполнить
в системе Mathematica примеры книги с различными параметрами.
5. Н. Коблиц. Курс теории чисел и криптографии. Научное изда-
тельство ТВП, М., 2001.
Книга предназначена для первоначального знакомства с криптоси-
стемами, основанными на теоретико-числовых задачах, и с теоретико-
числовыми алгоритмами. Изложены также основы элементарной тео-
рии чисел (для студентов младших курсов). Книга состоит из следу-
ющих глав: некоторые вопросы элементарной теории чисел; конечные
поля и квадратичные вычеты; криптография; открытый ключ; просто-
та и факторизация; эллиптические кривые.
Аннотированный список рекомендованной литературы 295
6. Т. В. Кузьминов. Криптографические методы защиты информа-
ции. Наука, Сибирское предприятие РАН, Новосибирск, 1998.
Рассмотрены следующие основные темы: основные понятия мате-
матической криптографии (односторонняя функция, псевдослучайный
генератор, шифрование, электронная подпись), конкретные криптосис-
темы (как с секретным, так и с открытым ключом), некоторые виды
криптографических протоколов (в том числе групповых), доказатель-
ства с нулевым разглашением. Изложение ведется не очень формально,
но математически грамотно. Кроме того, автор использует свою соб-
ственную терминологию, отличную от принятой в настоящей книге. На-
пример, доказательства с нулевым разглашением (см. раздел 5 главы 2
настоящей книги) называются доказательствами с нулевым раскрыти-
ем.
7. Н. П. Варновский. Математическая криптография. Несколько
этюдов. Московский университет и развитие криптографии в России.
Материалы конференции в МГУ 17–18 октября 2002 г., МЦНМО, М.,
2003, с. 98–121.
Статья рассказывает о следующих малоизвестных темах математи-
ческой криптографии: методы генерации входных данных с известным
решением для вычислительно трудных задач, инкрементальная крипто-
графия, односторонность конечных функций, неподатливая криптогра-
фия, вычислительная сложность в среднем. Изложение носит обзорный
характер.
8. Н. П. Варновский, Е. А. Голубев, О. А. Логачёв. Современные
направления стеганографии.Математика и безопасность информацион-
ных технологий. Материалы конференции в МГУ 28–29 октября 2004 г.,
МЦНМО, М., 2005, с. 32–64.
Обзорная статья, посвященная математическим исследованиям в
стеганографии (термин ¾стеганография¿ разъясняется в разделе 1 гла-
вы 1 настоящей книги). Следует отметить, что математическая стегано-
графия, в отличие от математической криптографии, все еще находится
на стадии становления.
9. Н. П. Варновский, В. А. Захаров, Н. Н. Кузюрин. Математиче-
ские проблемы обфускации. Математика и безопасность информацион-
ных технологий. Материалы конференции в МГУ 28–29 октября 2004 г.,
МЦНМО, М., 2005, с. 65–90.
Обзорная статья, посвященная математической теории обфускации.
Говоря неформально, под обфускацией здесь понимается преобразова-
ние программы в другую программу, которая вычисляет ту же функ-
цию, что и исходная (возможно, с незначительным увеличением потреб-
ляемых ресурсов), но в некотором смысле является трудной для пони-
мания.
296 Приложение Б
10. О. В. Вербiцький. Вступ до криптологi¨ı. Видавництво науково-
технiчно¨ı лiтератури, Львiв, 1998 (на укр. яз.).
Книга написана на основе курса лекций, который автор читал на
механико-математическом факультете Львовского национального уни-
верситета им. И. Франко. В ней на достаточно высоком математическом
уровне изложены некоторые разделы математической криптографии.
Мы рекомендуем эту книгу украиноязычным читателям для изучения
основ математической криптографии.
11. Н. П. Варновский. Курс лекций по математической криптогра-
фии. Доступно в электронной форме по адресу http://thecrypto.ru/
wiki/index.php/Курс_Н._П._Варновского; приводимая аннотация от-
носится к версии, находящейся по этому адресу в январе 2010 г.
Конспект, примерно соответствующий курсу лекций, которые ав-
тор читает студентам четвертого курса отделения информационной
безопасности кафедры математической кибернетики факультета ВМиК
МГУ и четвертого курса факультета управления и прикладной матема-
тики МФТИ. Изложение ведется на математическом уровне строгости.
От читателя не требуется владения теорией сложности вычислений;
необходимые понятия и факты этой теории приводятся в самом курсе.
Рассматриваются следующие темы: основные понятия теории сложно-
сти вычислений, сильные и слабые односторонние функции, трудные
предикаты функций, псевдослучайные генераторы, схемы привязки к
битам, генераторы псевдослучайных функций и псевдослучайных пе-
рестановок, схемы электронной подписи, универсальные семейства од-
носторонних хэш-функций, доказательства с нулевым разглашением,
криптосистемы с открытым ключом, системы электронных платежей.
Следует заметить, что на момент написания аннотации конспект явля-
ется рабочим материалом, периодически подвергаемым правке.
12. Э. А. Гирш. Курс лекций ¾Сложностная криптография¿. До-
ступно в электронной форме по адресу http://logic.pdmi.ras.ru/
˜infclub/?q=courses/cryptography; приводимая аннотация относится
к версии, находящейся по этому адресу в январе 2010 г.
Презентации и видеозаписи курса лекций, прочитанных автором в
PDMI Computer Science Club (клубе по математической кибернетике
ПОМИ РАН) весной 2008 г. По указанному электронному адресу име-
ется также ссылка на конспекты лекций по той же теме, которые автор
читал ранее на матмехе СПбГУ. Терминология автора несколько отли-
чается от терминологии курса Н. П. Варновского; так, например, в дан-
ном курсе для стойкости криптосистем ошибочно используется термин
¾надежность¿. По тематике данный курс близок к курсу Н. П. Варнов-
ского, но все же отличается от него. Следует также отметить, что курс
лекций Э. А. Гирша содержит много упражнений.
Аннотированный список рекомендованной литературы 297
13. Ю. Лифшиц. Курс лекций ¾Современные задачи криптогра-
фии¿. Доступно в электронной форме по адресу http://yury.name/
cryptography/; приводимая аннотация относится к версии, находящей-
ся по этому адресу в январе 2010 г.
Презентации и конспекты курса лекций, прочитанных автором на
на матмехе СПбГУ осенью 2005 г. Особенностью данного курса явля-
ется рассмотрение тем, редко встречающихся в материалах по мате-
матической криптографии на русском языке. К таким темам относят-
ся византийское соглашение, покер по телефону, электронные выборы,
электронные деньги, забывчивая передача данных (oblivious transfer, в
другой терминологии  неведомая передача), проверяемое разделение
секрета, многосторонние секретные вычисления (multi-party secure computation,
в другой терминологии  конфиденциальные вычисления).
Кроме того, рассматриваются протоколы разделения секрета, привязки
к биту, подбрасывания монеты, доказательства с нулевым разглашени-
ем, а также псевдослучайные генераторы и псевдослучайные функции.
14. O. Goldreich. Foundations of cryptography. Volume 1 (Basic tools).
Volume 2 (Basic applications). Cambridge University Press, Cambridge,
United Kingdom, 2001 (v. 1), 2004 (v. 2).
Обстоятельная монография по математической криптографии. Ос-
новные темы: вычислительная сложность, псевдослучайные генерато-
ры, доказательства с нулевым разглашением, шифрование, электрон-
ные подписи, аутентификация сообщений, общая теория криптографи-
ческих протоколов. Особое внимание уделено различным разновидно-
стям доказательств с нулевым разглашением (см. раздел 5 главы 2 на-
стоящей книги для первоначального ознакомления с этой темой). Во
многих отношениях рассматриваемая книга является № 1 в мировой
литературе по математической криптографии. Именно эту книгу мы
рекомендуем читателю-математику для систематического изучения ма-
тематической криптографии. Отметим, что на личной WWW-странице
автора (http://www.wisdom.weizmann.ac.il/˜oded/) доступны пред-
варительные версии фрагментов рассматриваемой книги.
15. M. Luby. Pseudorandomness and cryptographic applications. Princeton
University Press, Princeton, New Jersey, 1996.
Книга написана на основе курса лекций для аспирантов, прочитан-
ного автором в Калифорнийском университете (Беркли) в осеннем се-
местре 1990 г. Рассмотрены следующие темы: односторонние функции,
псевдослучайные генераторы, шифрование, статистическая и вычисли-
тельная неотличимость, энтропия, генераторы псевдослучайных функ-
ций и перестановок, функции с секретом, универсальные семейства од-
носторонних хэш-функций, электронные подписи, интерактивные дока-
зательства (в том числе с нулевым разглашением), привязка к биту. Эта
298 Приложение Б
книга меньше книги Гольдрайха по объему и отличается от последней
тематикой. Изложение строится вокруг псевдослучайности (что отра-
жено в названии книги), а интерактивным доказательствам посвящена
только одна лекция. Многие результаты изложены ¾из первых рук¿:
автор книги принимал участие в их доказательстве. Насколько нам из-
вестно, книга Луби  единственная, где приводится конструкция псев-
дослучайного генератора на основе произвольной односторонней функ-
ции (в неоднородной модели вычислений) с полным обоснованием.
16. S. Goldwasser,M. Bellare. Lecture notes on cryptography.Доступно
в электронной форме на личнойWWW-странице Беллара (http://cseweb.ucsd.edu/
users/mihir/papers/gb.pdf); приводимая аннотация относится к вер-
сии, датированной июлем 2008 г.
Основные темы: односторонние функции, функции с секретом, псев-
дослучайные генераторы, блоковые шифры, псевдослучайные функ-
ции, шифрование (как с секретным, так и с открытым ключом), хэш-
функции, аутентификация сообщений, электронные подписи, распреде-
ление ключей, криптографические протоколы. Основное внимание уде-
ляется математическим проблемам, возникающим при изучении прак-
тических криптографических конструкций. В этом состоит главное от-
личие данного материала от книг Гольдрайха и Луби. Кроме того, из-
ложение ведется гораздо менее формально, чем в указанных книгах. В
приложениях кратко изложены основные определения и факты теории
сложности вычислений и теории чисел (включая теоретико-числовые
алгоритмы). Это делает материал более доступным для студентов.
Приложение В
Словарь криптографических терминов
Криптография, как научная дисциплина, возникла сравнительно недав-
но. Поэтому естественно, что создание научно обоснованной терминоло-
гии для криптографии представляет собой одну из основных нерешен-
ных проблем. Здесь следует подчеркнуть, что адекватной терминологии
на данный момент не существует не только на русском, но и на англий-
ском языке.
Предлагаемый читателю толковый словарь криптографических тер-
минов представляет собой результат многолетних усилий сотрудников
Института проблем информационной безопасности МГУ по разработке
научно обоснованной криптографической терминологии.
При первом знакомстве с предлагаемым словарем следует иметь в
виду, что любые аргументы, основанные на популярности того или ино-
го термина в литературе, с научной точки зрения никакого значения не
имеют.
Статьи словаря упорядочены, насколько это возможно, иерархиче-
ски по взаимосвязи и подчиненности терминов. Например, после тер-
мина ¾криптосистема¿ идут все специфические термины, относящиеся
к криптосистемам.
Для удобства читателя к словарю прилагаются два индекса терми-
нов  на русском и английском языках, упорядоченные по алфавиту. В
индексах после каждого из терминов указано число, которое представ-
ляет собой порядковый номер соответствующей статьи в словаре.
В статьях словаря ссылки на другие термины, включенные в сло-
варь, выделены прямым курсивом. После некоторых ссылок на термин
в квадратных скобках приводятся синонимы этого термина.
1. Криптография
Cryptography
Прикладная инженерно-техническая дисциплина, которая занима-
ется разработкой, анализом и обоснованием стойкости криптографи-
ческих средств защиты информации от угроз со стороны противника,
решая тем самым три задачи криптографии  обеспечения конфиден-
300 Приложение В
циальности, целостности, неотслеживаемости. В отличие от фи-
зических и организационных методов защиты информации, к категории
криптографических относятся средства, основанные на математических
методах преобразования защищаемой информации. Криптография, с
некоторой долей условности, делится на две части: криптосинтез и
криптоанализ.
Комментарий. Существует альтернативная точка зрения, согласно
которой термин ¾криптография¿ является наиболее общим и включа-
ет в себя как указанную прикладную инженерно-техническую дисци-
плину, так и теоретическую криптографию. Принятие этой точки
зрения потребует унификации терминологии, т. е. перехода в практиче-
ской криптографии на терминологию криптографии математической,
где за каждым термином стоят математически строгие определения и
результаты, не допускающие произвола в изменении трактовок.
Сам термин ¾криптография¿ лингвистически неудачен, и в буду-
щем, вероятно, будет восприниматься как исторический казус. По-гречески
криптография означает тайнопись. Но с течением времени в научной
дисциплине, изучающей математические методы защиты информации,
все больше и больше задач и моделей, не имеющих к тайнописи ни
малейшего отношения.
2. Криптология
Синонимы: математическая криптография, теоретическая крипто-
графия
Cryptology, mathematical cryptography, theoretical cryptography
Отрасль дискретной математики или математической кибернетики,
которая изучает математические модели криптографических схем.
Также как и криптография, условно делится на две части: крипто-
синтез и криптоанализ.
Комментарий. Альтернативная точка зрения состоит в разделении
понятий ¾теоретическая криптография¿ и ¾математическая криптогра-
фия¿. В таком случае теоретическая криптография включает в себя все
области и направления научных исследований, связанных с криптогра-
фией, в т. ч. и математическую криптографию.
3. Криптосинтез
Условно выделяемая часть криптографии (криптологии), занима-
ющаяся разработкой и обоснованием стойкости криптографических
средств защиты информации. В противоположность криптоанализу
задача криптосинтеза состоит в защите информации.
4. Криптоанализ
Cryptanalysis
Условно выделяемая часть криптографии (криптологии), предо-
ставляющая противнику подходы, средства и методы для взлома
Словарь криптографических терминов 301
криптографических средств защиты информации.
5. Криптографический протокол
Cryptographic protocol
Основное понятие теоретической криптографии [криптологии].
Под протоколом понимается распределенный алгоритм с двумя или
более участниками. Протокол является криптографическим, если он
решает по крайней мере одну из трех задач криптографии  обеспе-
чение конфиденциальности, целостности, неотслеживаемости.
Определение криптографического протокола включает в себя различ-
ные компоненты, из которых важнейшими являются следующие: участ-
ники протокола, каналы связи между участниками, а также либо алго-
ритмы, используемые участниками, либо постановка той задачи, кото-
рую протокол призван решать. В первом варианте речь идет о конкрет-
ном криптографическом протоколе, во втором  протокол определяется
с точностью до типа.
Теоретическому понятию криптографического протокола в практи-
ческой криптографии соответствует понятие криптографической схе-
мы.
6. Криптографическая схема
Cryptographic scheme
Спецификация криптографического средства защиты информации
на уровне последовательности криптографических преобразований,
используемых при этом данных, пересылаемых сообщений и т. д. Крип-
тографическая схема в совокупности с криптографическими алго-
ритмами для всех используемых криптографических преобразова-
ний представляет собой криптографический протокол.
7. Криптографическое преобразование
Cryptographic transform
Математическое преобразование, используемое в криптографиче-
ских схемах и существенное для их стойкости. Класс криптографи-
ческих преобразований не поддается сколь-нибудь точному описанию.
Как правило, криптографическое преобразование применяется к защи-
щаемой информации и ключу (например, шифрование), либо к резуль-
тату ранее примененного преобразования и ключу (дешифрование).
Существую также криптографические преобразования, не требующие
ключей (например, в схемах разделения секрета).
Комментарий. Возможно, следует ввести еще специальный термин
¾криптографическая процедура¿ для некоторых компонентов крипто-
графических схем. Например: процедура проверки электронной подпи-
си.
302 Приложение В
8. Криптографический алгоритм
Cryptographic algorithm
Алгоритм, реализующий криптографическое преобразование.
Комментарий. Использование термина ¾криптографический алго-
ритм¿ как синонима термина криптографическая схема с научной
точки зрения некорректно.
9. Раунд
Round
В криптологии  понятие, характеризующее одну из мер сложно-
сти криптографических протоколов. В протоколах с двумя участни-
ками раунд  временной интервал, в котором активен только один из
участников. Если в данном раунде активна Алиса, то раунд заверша-
ется отсылкой сообщения Бобу, переходом Алисы в состояние ожида-
ния и активизацией Боба. В протоколах с тремя и более участниками в
синхронном случае раунд  период времени между двумя точками син-
хронизации. К очередной точке синхронизации каждый участник дол-
жен отослать все сообщения, которые ему предписано передать другим
участникам в текущем раунде. В асинхронном случае понятие раунда
условно.
В криптографии термин применяется в отношении криптографи-
ческого преобразования, если оно определяется как многократная ите-
рация одного и того же базового преобразования. Раундом называется
одна итерация (одно применение базового преобразования). Термин ис-
пользуется преимущественно в описаниях блоковых шифров и крип-
тографических хэш-функций.
Комментарий. В некоторых работах по математической криптогра-
фии раундом протокола с двумя участниками считается один полный
цикл активности обоих участников. В таком случае число сообщений,
посланных в одном раунде, равно двум и возможны протоколы с неце-
лым количеством раундов.
10. Транскрипция протокола
Синоним: транскрипция диалога
View
Последовательность всех сообщений, пересылаемых участниками
протокола друг другу в процессе выполнения протокола, записанная
в хронологическом порядке. В отношении частного случая протокола
с двумя участниками применяется также специальный термин ¾тран-
скрипция диалога¿.
11. Защищенный канал
Private channel
Канал связи, обеспечивающий конфиденциальность пересылаемой
по нему информации, т. е. ее недоступность пассивному противнику.
Словарь криптографических терминов 303
Создание защищенного канала  задача криптосистем (в более об-
щей постановке  протоколов конфиденциальной передачи сообще-
ний). Для других типов криптографических протоколов защищен-
ный канал может служить криптографическим примитивом.
12. Аутентифицированный канал
Authenticated channel
Канал связи, обеспечивающий целостность пересылаемой по нему
информации. Создание аутентифицированного канала  задача про-
токолов аутентификации. Для других типов криптографических
протоколов аутентифицированный канал может служить криптогра-
фическим примитивом.
13. Участник (протокола)
Party
Субъект, участвующий в той или иной форме в выполнении прото-
кола. Участники делятся на законных участников и внешних против-
ников. Во многих случаях при подсчете числа участников протокола
противник, или противники, не учитываются. Так, протокол конфиден-
циальной передачи сообщений считается протоколом с двумя участ-
никами, хотя на самом деле участников трое: отправитель сообщений,
их получатель и противник.
14. Честный участник
Honest party
Участник криптографического протокола, владеющий всей необ-
ходимой информацией, в т. ч., если требуется, секретными ключами
(законный участник) и выполняющий только действия, предписанные
протоколом. Нечестный участник  это либо внешний противник, либо
законный участник, отклоняющийся от действий, предписанных прото-
колом.
15. Центр доверия
Authority, trusted authority
Особый участник криптографического протокола, которому долж-
ны доверять все остальные участники. Протокол с центром доверия
может быть стойким только в том случае, если центр доверия не от-
клоняется от действий, предписанных протоколом. В отличие от Боль-
шого Брата, центр доверия не является неконтролируемым: всякий
участник протокола, которому был нанесен ущерб действиями центра
доверия, может обнаружить этот факт и доказать его третьим лицам
(арбитру).
16. Большой Брат
Big Brother
Принятое в литературе наименование особого участника крипто-
304 Приложение В
графического протокола, действия которого не поддаются контролю
со стороны других участников протокола. Даже если нечестность Боль-
шого Брата может быть обнаружена, она недоказуема.
17. Алиса
Alice
Алиса и Боб  типичные имена участников, принятые для описа-
ния криптографических протоколов в работах по математической
криптографии [криптологии]. В случае криптосистем противник
обычно выступает под именем Ева (от английского eavesdropper  под-
слушивающий), реже  под каким-либо другим именем (но практиче-
ски всегда под женским, так что местоимение ¾она¿ как правило отно-
сится к противнику).
18. Боб
Bob
См. Алиса.
19. Ева
Eve
См. Алиса.
20. Противник
Adversary
Участник, выполняющий действия, не предписанные криптографи-
ческим протоколом, с целью нарушения его конфиденциальности,
целостности, неотслеживаемости (в любой комбинации, в зависи-
мости от типа протокола). Противник может быть внешним, как напри-
мер, в случае криптосистем. Во многих типах криптографических
протоколов законные участники не доверяют друг другу и каждый из
них рассматривается как потенциальный противник. В криптографи-
ческих протоколах с тремя и более участниками противником может
быть коалиция из нескольких участников.
21. Пассивный противник
Passive adversary
Противник, который может получать некоторую информацию о
процессе выполнения криптографического протокола, но не может в
него вмешиваться. Полный анализ результатов неоднократного выпол-
нения криптографического протокола не позволяет обнаружить при-
сутствие пассивного противника.
22. Активный противник
Active adversary
Противник, который может вмешиваться в ход выполнения крип-
тографического протокола. Как правило, полный анализ результа-
Словарь криптографических терминов 305
тов однократного выполнения криптографического протокола позволя-
ет обнаружить присутствие активного противника.
23. Динамический противник
Dynamic adversary
Для некоторых типов криптографических протоколов рассмат-
риваются противники, представляющие собой коалиции, состоящие из
не более чем t участников. Такой противник называется динамическим,
если состав коалиции может меняться в ходе выполнения протокола, но
таким образом, что в любой момент времени в нее входит не более t
участников.
24. Атака
Attack
Совокупность предположений о противнике, в которых анализи-
руется стойкость криптографического протокола. Включает в себя
информацию, которую противник может получить в ходе выполнения
протокола, и активные действия по вмешательству в процесс выполне-
ния протокола, которые противник может осуществить.
Комментарий. В криптографической литературе термин атака ши-
роко используется как синоним метода криптоанализа, что с научной
точки зрения некорректно.
25. Угроза
Threat
Задача по нарушению конфиденциальности, целостности, неот-
слеживаемости (в любой комбинации, в зависимости от типа крип-
тографического протокола), стоящая перед противником.
26. Конфиденциальность
Синоним: секретность
Confidentiality, privacy, secrecy
Обеспечение такой организации хранения информации и ее исполь-
зования в криптографическом протоколе, при которых эта инфор-
мация остается недоступной противнику.
27. Целостность
Integrity
Целостность в криптографии определяется отдельно для каждого
из участников данного конкретного криптографического протокола
и означает гарантию, что в процессе выполнения протокола не было
вмешательства активного противника, повлекшего за собой нежела-
тельные для данного участника последствия.
306 Приложение В
28. Целостность сообщения
Message integrity
Гарантируемая получателю возможность удостовериться, что сооб-
щение поступило от данного отправителя и в неискаженном виде.
29. Неотслеживаемость
Untraceability
Определяется для сложных криптографических систем с большим
количеством участников, таких как системы электронных плате-
жей, системы доступа к электронным информационным фондам и т. п.
Означает, что противник не может создавать досье, содержащие су-
щественную часть действий участников. Родственные понятия  ано-
нимность и несвязываемость.
30. Несвязываемость
Unlinkability
Понятие, родственное неотслеживаемости. Означает, что про-
тивник не только не может установить, кто именно выполнил данное
конкретное действие, но даже выяснить, были ли данные два или более
действий выполнены одним и тем же участником.
31. Анонимность
Anonymity
Понятие, родственное неотслеживаемости. Означает, что участ-
никам предоставляется возможность выполнять какое-либо действие
анонимно, т. е. не идентифицируя себя. При этом, однако, участник
обязан доказать свое право на выполнение этого действия. Анонимность
бывает абсолютной и отзываемой. В последнем случае в системе есть
выделенный участник, арбитр, который при определенных условиях
может нарушать анонимность и идентифицировать участника, выпол-
нившего данное конкретное действие.
32. Стойкость
Security
Стойкость криптографического протокола (криптографической
схемы)  способность протокола (схемы) противостоять воздействию
противника. Понятие стойкости индивидуально для каждого типа
криптографического протокола (и, как правило, для разновидностей
внутри данного типа) и может быть определено только относительно
конкретной пары (атака, угроза). Определение стойкости криптогра-
фического протокола должно содержать определение модели против-
ника, включающее в себя, помимо атаки и угрозы, предположение о
вычислительных ресурсах, которыми располагает противник.
В криптологии стойкость обосновывается путем доказательства,
как правило при каком-либо криптографическом предположении,
Словарь криптографических терминов 307
утверждения, что данный криптографический протокол удовлетворяет
данному математически строгому определению стойкости.
В криптографии мерой стойкости данной криптографической схе-
мы является трудоемкость самого эффективного из известных алгорит-
мов ее взлома.
Под стойкостью криптографического примитива понимается вы-
полнение основного криптографического свойства, определяющего дан-
ный примитив. Например, стойкость односторонней функции означа-
ет отсутствие эффективных алгоритмов ее инвертирования. Определе-
ние стойкости криптографического примитива не требует модели про-
тивника.
В теоретической криптографии [криптологии] имеются два ос-
новных подхода к определению стойкости:теоретико-информационный
и теоретико-сложностной.
Комментарий. Специфический для криптографии термин стой-
кость не является синонимом более универсального термина ¾безопас-
ность¿. Использование атрибута ¾стойкость¿ по отношению к крипто-
графическим алгоритмам с научной точки зрения некорректно.
33. Метод криптоанализа
Cryptanalytic technique
Математический метод решения какой-либо из задач криптоана-
лиза. Составляет теоретическую основу алгоритмов, разрабатываемых
противником для осуществления угрозы стойкости криптографиче-
ского протокола (криптографической схемы).
Комментарий. См. комментарий к термину атака.
34. Стойкость теоретико-информационная
Синонимы: стойкость безусловная, стойкость шенноновская
Information-theoretic security, unconditional security, Shannon security
Способность криптографического протокола (криптографиче-
ской схемы) противостоять воздействию противника, который для
достижения своих целей (осуществления угрозы) может использовать
произвольный алгоритм (без ограничений на вычислительные ресурсы).
35. Стойкость теоретико-сложностная
Complexity-theoretic security, complexity-based security
Способность криптографического протокола (криптографиче-
ской схемы) противостоять воздействию противника, который для
достижения своих целей (осуществления угрозы) может использовать
только такие алгоритмы, которые удовлетворяют заданным ограниче-
ниям на вычислительные ресурсы. Как правило, требуется, чтобы ал-
горитм завершал свою работу за время, ограниченное полиномом от
параметра стойкости.
308 Приложение В
36. Модель со случайным оракулом
Random oracle model
Расширенная математическая модель криптографического про-
токола, в которой все участники имеют доступ к оракулу, вычисляю-
щему случайную функцию. При каждом новом запросе значение функ-
ции на данном аргументе выбирается случайным образом. При этом
оракул запоминает пару (аргумент, значение) и при повторном запросе
для этого аргумента, независимо от того, кто из участников его выдал,
будет возвращено все то же запомненное значение.
Модель со случайным оракулом была введена для протоколов элек-
тронной подписи, где случайная функция заменила хэш-функцию.
Впоследствии модель была обобщена на криптографические прото-
колы различных типов и в настоящее время в криптологии значи-
тельная часть результатов о стойкости доказывается именно в этой
модели.
37. Параметр стойкости
Security parameter
В теоретической криптографии  основной целочисленный па-
раметр криптографического протокола или криптографического
примитива. Как правило, принимается равным длине секретного
ключа, реже  длине блока сообщения и т. п. Сложность всякого алго-
ритма (будь то криптоалгоритм протокола или алгоритм, используемый
противником), а также вероятность успеха противника рассматрива-
ются как функции от параметра стойкости.
Комментарий. В отечественной литературе используется термин ¾па-
раметр безопасности¿. См. комментарий к термину стойкость.
38. Ключ
Синоним: криптографический ключ
Key
Специальный параметр криптографического протокола (крип-
тографической схемы). Выбирается независимо от защищаемой ин-
формации и параметризует криптографические преобразования. Су-
ществуют два типа криптографических ключей  секретные ключи
и открытые ключи.
39. Секретный ключ
Private key
Специальный параметр криптографического протокола (крип-
тографической схемы), известный одному или нескольким участни-
кам и не известный противнику. Отсутствие у противника информа-
ции о значении секретного ключа  необходимое условие стойкости
Словарь криптографических терминов 309
большинства криптографических протоколов (криптографических
схем).
40. Открытый ключ
Public key
Специальный параметр криптографического протокола (крип-
тографической схемы), известный всем участникам, включая про-
тивника. Находится в определенном соответствии с секретным клю-
чом и позволяет участникам, не знающим секретный ключ, выполнять
некоторые криптографические преобразования.
41. Пренебрежимо малая функция
Negligible function
Функция из множества натуральных чисел в отрезок [0, 1], которая
убывает при n → ∞ быстрее чем 1/p(n) для любого полинома p. В
криптологии понятие пренебрежимо малой вероятности форма-
лизует интуитивное представление о тех шансах взлома, которые есть
у противника в подавляющем большинстве случаев (например, шанс
случайно угадать секретный ключ) и которыми можно пренебречь при
анализе стойкости.
42. Пренебрежимо малая вероятность
Negligible probability
См. пренебрежимо малая функция.
43. Взлом
Синоним: раскрытие
Cracking, breaking
Осуществление противником угрозы стойкости криптографиче-
ского протокола (криптографической схемы), т. е. решение той за-
дачи, которая определяет данную угрозу.
44. Полное раскрытие
Total breaking, total cracking
Угроза стойкости некоторых типов криптографических схем. Со-
стоит в определении противником секретного ключа схемы.
45. Прикладной криптографический протокол
Протокол, который сам по себе используется, или потенциально
может использоваться, для решения практических задач. Примеры:
протокол конфиденциальной передачи сообщений, протокол элек-
тронной подписи, система электронных платежей, протокол го-
лосования.
46. Примитивный криптографический протокол
Протокол, который не имеет самостоятельного прикладного значе-
ния, но используется как компонент при построении более сложных
310 Приложение В
прикладных криптографических протоколов. Примеры: протокол
привязки к биту, протокол подбрасывания монеты, протокол неведо-
мой передачи.
47. Криптографический примитив
Cryptographic primitive
Криптографические примитивы  математические понятия и кон-
струкции, которые изучаются в математической криптографии [крип-
тологии] и используются в качестве компонентов при построении крип-
тографических протоколов. Примеры: односторонняя функция,
функция с секретом, псевдослучайный генератор, хэш-функция.
48. Криптографическое предположение
Cryptographic assumption
В теоретической криптографии [криптологии]  предположе-
ние о вычислительной сложности какой-либо математической задачи,
на основе которого доказывается стойкость криптографических про-
токолов. Делятся на общие: о существовании односторонних функ-
ций, функций с секретом и т. п.; теоретико-числовые: о вычисли-
тельной трудности задачи дискретного логарифмирования или факто-
ризации целых чисел; и прочие, например, о вычислительной трудности
задачи о рюкзаке.
49. Односторонняя функция
One-way function
1. В криптологии  одно из основных понятий, важнейший крип-
тографический примитив. Функция называется односторонней, если
она эффективно вычислима, но задача ее инвертирования является вы-
числительно трудной. Односторонняя функция, как и все ее разновид-
ности,  гипотетический объект.
2. В криптографии  всякая конкретная легко вычислимая функ-
ция, для которой не известно эффективных алгоритмов инвертирова-
ния.
50. Сильно односторонняя функция
Синоним: сильная односторонняя функция
Strong one-way function, strongly one-way function
В криптологии  гипотетический объект, эффективно вычисли-
мая функция, которую всякий эффективный алгоритм может инверти-
ровать лишь с пренебрежимо малой вероятностью. Обычно силь-
ные односторонние функции называют просто односторонними. Термин
сильная односторонняя функция используют в тех случаях, когда необ-
ходимо подчеркнуть отличие от слабой односторонней функции.
Словарь криптографических терминов 311
51. Слабо односторонняя функция
Синоним: слабая односторонняя функция
Weak one-way function, weakly one-way function
В криптологии  гипотетический объект, эффективно вычисли-
мая функция, которую всякий эффективный алгоритм может инвер-
тировать на входах длины n с вероятностью не более 1 − 1/p(n) для
некоторого фиксированного полинома p.
52. Односторонняя перестановка
One-way permutation
Взаимно однозначная односторонняя функция. Как правило, пред-
полагается, что односторонняя перестановка сохраняет длину.
53. Генератор функций с секретом
Trapdoor function generator
Эффективный алгоритм, генерирующий пары, состоящие из описа-
ния функции из некоторого семейства и соответствующего ему (опи-
санию) секрета. Знание секрета позволяет эффективно инвертировать
данную функцию. Семейство, рассматриваемое как единая функция,
обладает свойствами односторонней функции.
54. Семейство функций с секретом
Trapdoor function family
Семейство функций, для которого существует генератор функций
с секретом.
55. Функция с секретом
Trapdoor function
Семейство функций с секретом, рассматриваемое как единая
(параметризованная) функция.
56. Семейство перестановок с секретом
Trapdoor permutation family
Семейство функций с секретом, в котором каждая функция яв-
ляется перестановкой.
57. Перестановка с секретом
Trapdoor permutation
Семейство перестановок с секретом, рассматриваемое как еди-
ная (параметризованная) функция.
58. Псевдослучайный генератор
Pseudorandom generator
1. В криптографии  эффективный алгоритм, генерирующий (псев-
дослучайные) величины, обладающие некоторыми свойствами случай-
ных величин.
312 Приложение В
2. В криптологии  гипотетический объект, эффективный алго-
ритм, генерирующий сущности (последовательности, функции), кото-
рые неотличимы от аналогичных случайных сущностей никаким алго-
ритмом с заданными ограничениями на вычислительные ресурсы.
3. В криптологии  синоним (сокращенный вариант) термина крип-
тографически стойкий генератор псевдослучайных последователь-
ностей.
59. Криптографически стойкий генератор псевдослучайных
последовательностей
Cryptographically strong pseudorandom bit generator
В математической криптографии [криптологии]  эффектив-
ный алгоритм, получающий на вход чисто случайные строки длины n и
порождающий на выходе строки длины m, где m > n, не отличимые ни-
каким эффективным алгоритмом от чисто случайных строк длины m.
Обычно, если не оговорено противное, под эффективными алгоритмами
понимаются полиномиальные.
Понятие криптографически стойкого генератора псевдослучайных
последовательностей формализует свойства, которым должен удовле-
творять алгоритм, порождающий псевдослучайные последовательности
для потоковых шифров [потоковых криптосистем].
60. Тест следующего бита
Next-bit test
Псевдослучайная последовательность проходит тест следующего би-
та, если не существует эффективного метода предсказания по началь-
ному отрезку последовательности ее следующего бита. Тест следующе-
го бита является универсальным; формальное определение последова-
тельности, проходящей тест следующего бита, используется в крипто-
логии как основа для альтернативного (эквивалентного) определения
криптографически стойкого генератора псевдослучайных после-
довательностей.
61. Генератор псевдослучайных функций
Pseudorandom function generator
Пара эффективных алгоритмов для семейства псевдослучайных
функций. Первый из них случайным образом выбирает описание функ-
ции из семейства, а второй по заданным аргументу и описанию вычис-
ляет значение функции, соответствующей этому описанию, на данном
аргументе.
62. Семейство псевдослучайных функций
Pseudorandom function family
Семейство функций, обладающее следующим свойством. Функция,
выбранная наудачу из семейства, неотличима никаким эффективным
Словарь криптографических терминов 313
алгоритмом от случайной функции. При этом обе функции  и выбран-
ная из семейства псевдослучайных функций, и случайная функция 
заданы алгоритму в виде ¾черного ящика¿, т. е. алгоритм может полу-
чать значения функции на выбираемых им значениях аргумента. Инте-
рес представляют только такие семейства псевдослучайных функций,
для которых существуют генераторы псевдослучайных функций, по-
этому псевдослучайными обычно называют семейства с генераторами.
63. Псевдослучайная функция
Pseudorandom function
Семейство псевдослучайных функций, рассматриваемое как еди-
ная (параметризованная) функция.
64. Семейство псевдослучайных перестановок
Pseudorandom permutation family
Семейство псевдослучайных функций, в котором каждая функ-
ция является перестановкой.
65. Генератор псевдослучайных перестановок
Pseudorandom permutation generator
Генератор псевдослучайных функций для семейства, в котором
каждая функция является перестановкой.
66. Хэш-функция криптографическая
Синоним: хэш-функция
Cryptographic hash function
Эффективно вычислимая функция, сжимающая входные строки,
для которой задача поиска коллизий является вычислительно труд-
ной. В теоретической криптографии [криптологии] формализует-
ся либо как односторонняя хэш-функция, либо как хэш-функция с
трудно обнаружимыми коллизиями.
67. Коллизия
Collision
Пара значений (x, y) аргумента хэш-функции h такая, что x 6= y и
h(x) = h(y). В теоретической криптографии [криптологии] опре-
деляется в двух вариантах: специфическая коллизия и экзистенци-
альная коллизия.
68. Специфическая коллизия
Specific collision
Для хэш-функции h и заданного значения x ее аргумента  значе-
ние y, y 6= x такое, что h(x) = h(y).
314 Приложение В
69. Экзистенциальная коллизия
Existential collision
Определяется для хэш-функции, рассматриваемой как семейство
{hn} подфункций, где hn переводит входные строки в хэш-значения
длины n. Экзистенциальной коллизией для данного n называется пара
значений (x, y) таких, что x 6= y и hn(x) = hn(y).
70. Хэш-значение
Hash-code, imprint
Значение хэш-функции для данного аргумента.
71. Хэш-функция односторонняя
One-way hash function
Хэш-функция, для которой вычислительно трудной является зада-
ча поиска специфических коллизий.
72. Хэш-функция с трудно обнаружимыми коллизиями
Collision-intractable hash function
Хэш-функция, для которой вычислительно трудной является зада-
ча поиска экзистенциальных коллизий.
Комментарий. В литературе для данного типа хэш-функций ши-
роко используется синоним ¾хэш-функция, свободная от коллизий¿
(collision–free hash function). С математической точки зрения этот тер-
мин абсурден.
73. Функция сжатия
Compression function
Функция, отображающая входные данные, состоящие из текущего
хэш-значения и очередного блока хэшируемого сообщения, в новое
хэш-значение. Используется в итеративных конструкциях криптогра-
фических хэш-функций, позволяющих хэшировать сообщения произ-
вольной длины.
74. Пара перестановок с трудно обнаружимыми зубцами
Claw-free permutation pair
Криптографический примитив, пара перестановок f и g, для ко-
торых вычислительно трудно найти аргументы x, y такие, что f(x) =
g(y). В криптологии формализуется как семейство пар перестановок
с трудно обнаружимыми зубцами. Гипотеза о существовании таких се-
мейств относится к категории общих криптографических предполо-
жений.
75. Доказательство интерактивное
Interactive proof
Понятие теории сложности вычислений, составляет основу понятия
доказательства с нулевым разглашением. Интерактивное доказа-
Словарь криптографических терминов 315
тельство  протокол с двумя участниками, доказывающим и проверя-
ющим, в котором цель доказывающего состоит в демонстрации истин-
ности некоторого утверждения. Конкретное утверждение определяется
входным словом, которое одинаково для обоих участников. Протокол
должен удовлетворять двум требованиям: если утверждение истинно,
то проверяющий принимает доказательство (полнота); если же утверж-
дение ложно, то проверяющий принимает доказательство лишь с пре-
небрежимо малой вероятностью (корректность).
Комментарий. Термин не слишком удачен, поскольку для приложе-
ний, в т. ч. криптографических, наибольший интерес представляет как
раз неинтерактивный вариант протокола.
76. Доказывающий
Prover
См. интерактивное доказательство.
77. Проверяющий
Verifier
См. интерактивное доказательство.
78. Игра Артур  Мерлин
Arthur–Merlin game, public-coin proof system
Частный случай интерактивного доказательства, в котором
роль проверяющего ограничивается генерацией случайных величин,
отсылкой их доказывающему, и выработкой окончательного решения,
принимать или отвергать доказательство.
79. Мультиинтерактивное доказательство
Multi-prover interactive proof
Обобщение понятия интерактивного доказательства на случай,
когда два или более доказывающих совместными усилиями доказы-
вают истинность заданного утверждения одному проверяющему. При
этом доказывающие используют заранее согласованную стратегию, но
не могут общаться между собой в процессе выполнения протокола.
80. Протокол доказательства знания
Proof of knowledge
Модификация понятия интерактивного доказательства, в ко-
торой целью доказывающего является демонстрация знания некоторой
информации. В типичном сценарии общим входом участников является
открытый ключ и доказывающий должен продемонстрировать зна-
ние соответствующего секретного ключа. К категории доказательств
знания относятся все протоколы интерактивной аутентификации.
316 Приложение В
81. Доказательство знания неинтерактивное
Noninteractive proof of knowledge
Протокол доказательства знания, выполняемый за один раунд:
доказывающий посылает сообщение проверяющему и последний, на
основе анализа этого сообщения, либо принимает, либо отвергает дока-
зательство.
82. Доказательство с нулевым разглашением
Zero-knowledge proof
Протокол интерактивного доказательства, который в случае,
когда доказываемое утверждение истинно, удовлетворяет следующему
дополнительному требованию. Проверяющий, даже нечестный, не по-
лучает в результате выполнения протокола никакой полезной для себя
дополнительной информации, за исключением самого факта, что ут-
верждение истинно (свойство нулевого разглашения). Это требование
формализуется следующим условием: проверяющий получает в неко-
тором, математически строгом, смысле ¾почти нулевую¿ информацию.
Отсюда название. В криптологии доказательства с нулевым разгла-
шением используются в качестве: математической модели для иссле-
дования вопросов стойкости; примитивных криптографических
протоколов; формализации понятия стойкости протоколов интерак-
тивной аутентификации. Термин ¾доказательство с нулевым раз-
глашением¿ используется в трех различных смыслах: как обобщенный
термин для всех протоколов, обладающих указанными свойствами; в
качестве названия протоколов, обеспечивающих безусловную стойкость
для проверяющего (свойство корректности), в противоположность ар-
гументам с нулевым разглашением; как синоним термина доказа-
тельство с вычислительно нулевым разглашением.
83. Доказательство с вычислительно нулевым разглашени-
ем
Computational zero-knowledge proof
Протокол доказательства с нулевым разглашением, в котором
свойство корректности безусловно, а свойство нулевого разглашения ос-
новывается на каком-либо криптографическом предположении.
84. Доказательство со статистически нулевым разглашени-
ем
Statistical zero-knowledge proof
Протокол доказательства с нулевым разглашением, в котором
оба свойства  корректность и нулевое разглашение  безусловны.
85. Доказательство с абсолютно нулевым разглашением
Perfect zero-knowledge proof
Предельный случай доказательства со статистически нуле-
Словарь криптографических терминов 317
вым разглашением, в котором количество дополнительной информа-
ции, которую может получить проверяющий в результате выполнения
протокола, в точности нулевое, а не ¾почти нулевое¿, как в общем слу-
чае.
86. Аргумент с вычислительно нулевым разглашением
Computational zero-knowledge argument
Протокол доказательства с нулевым разглашением, в котором
оба свойства  корректность и нулевое разглашение  основываются
на каких-либо криптографических предположениях.
87. Аргумент со статистически нулевым разглашением
Statistical zero-knowledge argument
Протокол доказательства с нулевым разглашением, в котором
свойство нулевого разглашения безусловно, а свойство корректности ос-
новывается на каком-либо криптографическом предположении.
88. Аргумент с абсолютно нулевым разглашением
Perfect zero-knowledge argument
Предельный случай аргумента со статистически нулевым раз-
глашением, в котором количество дополнительной информации, кото-
рую может получить проверяющий в результате выполнения протокола,
в точности нулевое, а не ¾почти нулевое¿, как в общем случае.
89. Мультиинтерактивное доказательство с нулевым раз-
глашением
Multi-prover zero-knowledge proof
Обобщение понятия доказательства с нулевым разглашением
на случай мультиинтерактивных доказательств. В мультиинтер-
активном случае представляет интерес только абсолютно нулевое раз-
глашение (тот факт, что абсолютно нулевое разглашение всегда мо-
жет быть обеспечено, доказывается и не вытекает из определений непо-
средственно), поэтому для мультиинтерактивных доказательств термин
¾нулевое¿ разглашение используется как синоним абсолютно нулевого
разглашения.
90. Доказательство знания с нулевым разглашением
Zero-knowledge proof of knowledge
Модификация понятия доказательства с нулевым разглашени-
ем, применимая к протоколам доказательства знания.
91. Неинтерактивное доказательство с нулевым разглаше-
нием
Noninteractive zero-knowledge proof
Протокол доказательства с нулевым разглашением, выполняе-
мый за один раунд: доказывающий посылает сообщение проверяюще-
318 Приложение В
му и последний, на основе анализа этого сообщения, либо принимает,
либо отвергает доказательство. Для нетривиальности протоколов дан-
ного типа требуется расширение модели. Известны два таких расшире-
ния: модель с общей случайной строкой и модель с предобработ-
кой.
92. Модель с общей случайной строкой
Common reference string model
Модель для определения неинтерактивного доказательства с
нулевым разглашением, в которой участникам, помимо общего вход-
ного слова, предоставлен еще доступ (только на чтение) к общей слу-
чайной строке.
93. Модель с предобработкой
Non-interactive zero-knowledge with preprocessing
Модель для определения неинтерактивного доказательства с
нулевым разглашением, в которой участники на этапе инициализации
выполняют специальный интерактивный протокол, называемый предо-
бработкой. Информация, которой обменялись участники в ходе выпол-
нения этого протокола, впоследствии используются для выполнения
(многократного) протокола неинтерактивного доказательства с нуле-
вым разглашением.
94. Мера разглашения
Complexity knowledge
Функция, дающая количественную оценку той дополнительной ин-
формации, которую может получить проверяющий в результате вы-
полнения протокола интерактивного доказательства. Для доказа-
тельств с нулевым разглашением мера разглашения равна нулю.
95. Доказательство с минимальным разглашением
Minimum-knowledge proof
Криптографический протокол, решающий задачу распознавания
языка, и удовлетворяющий требованиям к стойкости, которые анало-
гичны требованиям к стойкости доказательств с нулевым разгла-
шением. В доказательстве с минимальным разглашением для данно-
го фиксированного языка L общим входом доказывающего и прове-
ряющего может быть произвольная строка x. Доказывающий должен
определить, принадлежит ли эта строка языку L, и доказать соответ-
ствующее утверждение, x ∈ L или x /∈ L, проверяющему. При этом
проверяющий, даже нечестный, не получает в результате выполнения
протокола никакой дополнительной информации, за исключением одно-
го бита, соответствующего истинности или ложности отношения x ∈ L.
Для внешнего противника, подслушивающего сеанс выполнения про-
токола, случаи x ∈ L и x /∈ L должны быть неразличимы.
Словарь криптографических терминов 319
96. Доказательство с неразличимыми догадками
Witness indistinguishable proof
Криптографический протокол, представляющий собой модифи-
кацию понятия доказательства с нулевым разглашением, в кото-
рой требование нулевого разглашения ослаблено следующим образом.
Пусть x  общее входное слово доказывающего и проверяющего и
доказывается принадлежность этого слова данному фиксированному
языку из класса NP. Далее, пусть w(x)  множество всех догадок (NP-
доказательств) для x. Свойство неразличимости догадок определяет-
ся требованием эффективной неразличимости транскрипций диалога
для любых w1,w2 ∈ w(x). Данное свойство нетривиально только в том
случае, когда множество w(x) содержит более одного элемента.
97. Доказательство, скрывающее догадки
Witness hiding proof
Криптографический протокол, представляющий собой модифи-
кацию понятия доказательства с нулевым разглашением, в кото-
рой требование нулевого разглашения ослаблено следующим образом.
Пусть для данного языка из класса NP существует эффективный ве-
роятностный алгоритм G, генерирующий пары (x,w), где w  догадка
(NP-доказательство) для слова x. Протокол доказательства скрывает
догадки относительно алгоритма G, если его выполнение на слове x не
помогает найти догадку (все равно какую) для этого слова.
98. Неинтерактивное доказательство с неразличимыми до-
гадками
Noninteractive witness indistinguishable proof
Однораундовый протокол доказательства с неразличимыми до-
гадками.
99. Неинтерактивное доказательство, скрывающее догадки
Noninteractive witness hiding proof
Однораундовый протокол доказательства, скрывающего догад-
ки.
100. Нулевое разглашение относительно честного проверя-
ющего
Honest-verifier zero-knowledge
Ослабленный вариант определения свойства нулевого разглашения.
Требуется, чтобы протокол интерактивного доказательства не да-
вал никакой дополнительной информации только честному проверяю-
щему, т. е. выполняющему только действия, предписанные протоколом.
С криптографической точки зрения данное свойство защищает доказы-
вающего не от нечестного проверяющего, а от внешнего противника,
который подслушивает сеанс выполнения протокола.
320 Приложение В
101. Протокол конфиденциальной передачи сообщений
Secure message transmission (protocol)
Криптографический протокол, как правило с двумя участника-
ми, обеспечивающий конфиденциальность сообщений, пересылаемых
участниками по сети связи, не защищенной от пассивного противни-
ка. Важнейшим для криптографии является неинтерактивный вари-
ант протокола конфиденциальной передачи сообщений, известный под
названием криптографическая система или криптосистема.
102. Криптографическая система
Синонимы: криптосистема, шифр, система шифрования
Cryptographic system, cryptosystem, cipher
Важнейший тип криптографического протокола (криптографи-
ческой схемы). Криптосистема представляет собой неинтерактивный
протокол конфиденциальной передачи сообщений. Имеются два ос-
новных типа криптосистем  с секретным и с открытым ключом. Суще-
ствуют также бесключевые криптосистемы, называемые иногда крип-
тосистемами типа 3.
Комментарий. Альтернативная точка зрения распространяет тер-
мин ¾криптографическая система¿ на все криптографические прото-
колы и схемы. В таком случае следует говорить: криптографическая
система для электронной подписи, криптографическая система для под-
брасывания монеты по телефону и т. п. Этот вариант вполне соответ-
ствует общенаучной трактовке понятия системы.
Основной недостаток данного подхода состоит даже не в том, что
он вступает в конфликт с общепринятой практикой трактовки термина
¾криптографическая система¿ как синонима термина ¾система шиф-
рования¿, а в громоздкости возникающих терминов. Вместо слишком
длинных выражений стали бы писать: схема электронной подписи, про-
токол подбрасывания монеты по телефону и т. п. А термин ¾криптогра-
фическая система¿, скорее всего, просто вышел бы из употребления.
Кроме того, расширительная трактовка термина ¾криптосистема¿
усугубляет и без того нелегкую ситуацию с неправомерным (лингви-
стически) использованием термина ¾криптография¿. Возникнут еще
системы тайнописи для подбрасывания монеты по телефону, для обме-
на секретами и т. п.
103. Открытый текст
Plaintext
Сообщение, содержащее конфиденциальную информацию, пересы-
лаемое по незащищенному от пассивного противника каналу связи
и защищаемое с помощью криптосистемы [системы шифрования].
Открытый текст, вместе с ключом шифрования, составляет исходные
данные для алгоритма шифрования.
Словарь криптографических терминов 321
104. Шифртекст
Ciphertext
Результат применения алгоритма шифрования к открытому
тексту.
105. Криптограмма
Cryptogram
В криптологии  синоним термина шифртекст.
В криптографии шифртекст, дополненный необходимой с прак-
тической точки зрения служебной информацией.
106. Блоковая криптосистема
Синоним: блоковый шифр
Block cryptosystem, block cipher
Криптографическая система, в которой открытый текст раз-
бивается на блоки и каждый блок шифруется отдельно таким обра-
зом, что при любом фиксированном ключе шифрования криптограм-
ма каждого блока инвариантна относительно перестановок блоков от-
крытого текста.
Комментарий. В отечественной литературе используются термины
¾блочная криптосистема¿ и ¾поточная криптосистема¿. Смысл от это-
го не меняется. Но с точки зрения русского языка, термины неудачные.
Прилагательное ¾блочный¿ уместно в отношении объектов, которые са-
ми состоят из блоков: блочный дом, блочный лук и т. п.
107. Потоковая криптосистема
Синоним: потоковый шифр
Stream cryptosystem, stream cipher
Криптографическая система, в которой криптограмма любого
фиксированного фрагмента открытого текста зависит не только от
ключа шифрования, но и, вообще говоря, от положения этого фрагмен-
та в открытом тексте.
Комментарий. См. комментарий к термину блоковая криптоси-
стема.
108. Криптосистема с секретным ключом
Private-key cryptosystem
Тип криптосистемы [шифра], в которой всякий участник, имею-
щий возможность шифровать открытые тексты, может эффективно
расшифровывать криптограммы.
Комментарий. В криптографической литературе широко распро-
странены термины ¾симметричная криптосистема¿ и ¾асимметричная
криптосистема¿, используемые как синонимы терминов ¾криптосисте-
ма с секретным ключом¿ и ¾криптосистема с открытым ключом¿ со-
ответственно. С научной точки зрения эта терминология некорректна.
322 Приложение В
Нетрудно построить примеры криптосистем, в которых ключи отправи-
теля и получателя асимметричны в следующем смысле: знание ключа
отправителя не позволяет эффективно вычислить ключ получателя. Но
ключ отправителя не может быть опубликован, поскольку он позволяет
дешифровать криптограммы.
109. Криптосистема с открытым ключом
Public-key cryptosystem
Тип криптосистемы [шифра], в которой возможность шифровать
открытые тексты предоставляется всем желающим (включая про-
тивника), но эффективно дешифровать криптограммы может толь-
ко один выделенный участник (группа выделенных участников), вла-
деющий секретным ключом.
Комментарий. См. комментарий к термину криптосистема с сек-
ретным ключом.
110. Полиномиальная стойкость
Polynomial security
В криптологии  одно из определений стойкости криптосисте-
мы. Было введено для криптосистем вероятностного шифрования с от-
крытым ключом. Полиномиальная стойкость определяется следующей
угрозой. Противник, располагающий полиномиально ограниченными
вычислительными ресурсами, выбирает два сообщения, m0 и m1 (оди-
наковой длины), и затем получает криптограмму сообщения m, где
бит  выбран случайным образом и неизвестен противнику. Требуется
определить бит  с вероятностью, отделенной от 1/2, т. е. не меньшей
для всех достаточно больших n, чем 1/2 + 1/p(n), где p  некоторый
фиксированный полином, n  параметр стойкости. Полиномиаль-
ная стойкость эквивалентна стойкости семантической.
111. Семантическая стойкость
Semantic security
В криптологии  одно из определений стойкости криптосисте-
мы. Было введено для криптосистем вероятностного шифрования с от-
крытым ключом. Семантическая стойкость представляет собой ресурсо-
ограниченный аналог шенноновской абсолютной стойкости:шифртекст
не дает противнику, при данных ограничениях на его вычислительные
ресурсы, никакой информации об открытом тексте. Эквивалентна
стойкости полиномиальной.
112. Шифрование
Encryption, enciphering
Основное криптографическое преобразование в криптосисте-
мах [системах шифрования], выполняется отправителем конфиден-
Словарь криптографических терминов 323
циальной информации. Преобразование шифрования переводит пару
(открытый текст, ключ шифрования) в шифртекст.
Комментарий. С лингвистической точки зрения термин неудачный.
Слово ¾шифрование¿ является производным от цифры. Этот термин
был уместен в те давние времена, когда все попытки защиты информа-
ции сводились к замене букв в текстах на естественных языках цифра-
ми. Следовало бы заменить термин шифрование на ¾криптование¿. С
учетом греческих корней этого слова, оно означает превращение явного
в тайное.
113. Алгоритм шифрования
Encryption algorithm
Криптографический алгоритм, реализующий преобразованиешиф-
рования.
114. Дешифрование
Синоним: Расшифрование
Decryption, deciphering
Криптографическое преобразование в криптосистемах, обратное
преобразованию шифрования. Выполняется получателем конфиденци-
альной информации. Преобразование дешифрования переводит пару
(шифртекст, ключ дешифрования) в открытый текст.
Комментарий. В отечественной практической криптографии для
данного преобразования используется термин ¾расшифрование¿ , а де-
шифрование означает взлом или раскрытие. Эта терминология абсурд-
на и, по-существу, единственный аргумент в ее защиту состоит в том,
что она применяется уже очень давно. Аргументы же против демон-
стрируют ее несостоятельность.
Во-первых, представьте себе проблемы переводчика (в особенности
синхронного), которому англоязычные термины decryption и cracking
(breaking) нужно переводить на русский язык как расшифрование и
дешифрование соответственно. При переводе с русского на английский
проблема еще более тяжелая.
Во-вторых, для английского термина cracking (breaking) необходим
универсальный аналог, применимый ко всем типам криптографических
протоколов, а не только к системам шифрования. Кстати, возникает
интересный вопрос к защитникам данной терминологии. Если против-
нику удалось получить секретный ключ криптосистемы, то что он после
этого выполняет над криптограммами: расшифрование или дешифро-
вание?
В-третьих, с лингвистической точки зрения слово ¾дешифрование¿
отличается от слова ¾расшифрование¿ только приставкой ¾де¿. Если
перевести ее с греческого, получим. . . расшифрование! Можно ли двум
формам одного и того же слова приписывать различную, едва ли не
324 Приложение В
противоположную семантику? Это не более разумно, чем настаивать на
противоположном смысле, скажем, слов декомпозиция и разложение.
115. Алгоритм дешифрования
Decryption algorithm
Криптографический алгоритм, реализующий преобразование де-
шифрования.
116. Аутентификация
Authentication
Задача, решаемая протоколом аутентификации.
117. Протокол аутентификации
Authentication protocol
Основной тип криптографических протоколов, предназначенных
для обеспечения целостности. Имеются две основные разновидно-
сти  протокол аутентификации участника (абонента сети), называе-
мый также протоколом интерактивной аутентификации, и про-
токол аутентификации сообщений.
118. Теория аутентификации
Authentication theory
Теория безусловно стойких протоколов аутентификации, разра-
ботанная Г. Симмонсом, аналог теории К. Шеннона систем (безусловно
стойких) секретной связи. Основу теории аутентификации составляют
модель схемы аутентификации, определения атак  имитация и под-
мена – на протоколы аутентификации, и нижние границы длин ключей
в безусловно стойких протоколах аутентификации.
119. Код аутентификации
Authentication code
1. Безусловно стойкий протокол аутентификации.
2. Специальная информация, посылаемая вместе с сообщением от-
правителем получателю в протоколе аутентификации сообщений с
секретным ключом. В таком протоколе отправитель и получатель до-
веряют друг другу и защищаются от внешнего активного противника.
Эта специальная информация используется для проверки аутентично-
сти сообщения и сокращенно называетсяMAC (в литературе на русском
языке также используется термин имитовставка).
Комментарий. Термин неудачный. Он вызывает ассоциации с теори-
ей кодирования. Несмотря на внешнее сходство кодов аутентификации с
обычными кодами, есть по крайней мере два принципиальных отличия:
присутствие противника и наличие у участников протокола секретной
информации, которая предполагается недоступной противнику.
Словарь криптографических терминов 325
120. Имитация
Impersonation
Угроза для протокола аутентификации, состоящая в посылке
противником сообщения получателю, когда отправитель на самом де-
ле никаких сообщений не посылал.
121. Подмена
Substitution
Принятое в литературе название пары (атака, угроза), опреде-
ляемой для протокола аутентификации. Атака состоит в перехва-
те противником сообщения, посланного отправителем получателю, а
угроза  в замене его другим сообщением. При этом выбор последнего
может зависеть от перехваченного сообщения.
122. Протокол аутентификации сообщений
Message authentication protocol
Предназначен для обеспечения целостности сообщений. В слу-
чае, когда участники протокола доверяют друг другу и защищаются от
внешнего противника, протоколы аутентификации сообщений строят-
ся на основе кодов аутентификации сообщений (2). Если же участ-
ники друг другу не доверяют, то для аутентификации сообщений тре-
буется протокол электронной подписи.
123. Протокол электронно-цифровой подписи
Синоним: протокол электронной подписи
Digital signature protocol
Протокол аутентификации сообщений для не доверяющих друг
другу участников. Существует только в варианте с открытым клю-
чом. Неотъемлемой частью протокола электронной подписи является
процедура арбитража, с помощью которой третья сторона  арбитр 
разрешает споры о подлинности электронной подписи.
Комментарий. В литературе широко распространен термин ¾цифро-
вая подпись¿ (в английском варианте  digital signature), используемый
вместо термина электронная подпись. Термин ¾цифровая подпись¿
весьма неудачен:
– собственноручная подпись (на бумаге) не обязательно должна
быть чем-то вроде фамилии, это может быть любое изображение,
в т. ч. набор цифр;
– возникает терминологическое несоответствие, т. к. к документу
прикладывается ¾цифровая подпись¿, но сам документ именуется
электронным;
– термин ¾цифровая подпись¿ выпадает из ряда общепринятых тер-
минов: электронная почта, электронные деньги, электронный до-
кументооборот и т. п.
326 Приложение В
Расширительная трактовка термина электронная подпись недо-
пустима. Поскольку подписи (как собственноручные, так и электрон-
ные) могут приниматься в суде как доказательства подлинности до-
кументов, ¾подпись¿ (с любыми прилагательными) должна свидетель-
ствовать, что ее автор намеренно авторизовал данный документ. Этому
требованию не удовлетворяют, например, отпечатки пальцев, в т. ч. и
электронные.
Термин ¾цифровой¿ (digital) стал популярен в середине прошло-
го века в связи с появлением цифровых компьютеров. Первоначально
он использовался, чтобы отличать такие компьютеры от ранее суще-
ствовавших аналоговых. Последние применялись для решения систем
дифференциальных уравнений. Программирование состояло в сборке
электрической цепи, описываемой данной системой уравнений. Решение
можно было получить, измеряя параметры цепи в процессе ее работы. В
настоящее время термин ¾цифровой¿ уже стал отчасти анахронизмом;
он имеет смысл только в том случае, когда информация (например, зву-
ковой сигнал) может быть представлена и в цифровой, и в аналоговой
форме.
124. Схема электронной подписи
Digital signature scheme
Криптографическая схема, предназначенная для обеспечения це-
лостности сообщений в сценарии с не доверяющими друг другу
участниками.
См. протокол электронно-цифровой подписи.
125. Алгоритм проверки электронной подписи
Signature verification algorithm
Компонент протокола электронной подписи. На вход алгоритма
подаются электронная подпись, открытый ключ и другие открытые
параметры схемы электронной подписи. В протоколах электронной
подписи с восстановлением сообщения результатом работы алгорит-
ма является заключение о корректности подписи и, если она коррект-
на,  само сообщение, извлеченное из подписи. В остальных случаях со-
общение является частью входных данных и алгоритм проверки выдает
лишь заключение о корректности подписи. В некоторых разновидно-
стях протоколов электронной подписи для проверки подписи требуется
интерактивный протокол.
126. Алгоритм генерации электронной подписи
Синоним: алгоритм формирования электронной подписи
Signature generation algorithm
Компонент протокола электронной подписи. Алгоритм, вообще
говоря рандомизированный, на вход которого подаются подписывае-
мое сообщение, секретный ключ, а также открытые параметры схемы
Словарь криптографических терминов 327
электронной подписи. Результатом работы алгоритма является элек-
тронная подпись. В некоторых разновидностях схем электронной подпи-
си для генерации подписи требуется протокол (не обязательно интерак-
тивный).
127. Арбитраж
Arbitration
Процедура разрешения споров о трактовке результатов выполнения
криптографического протокола. Такая процедура необходима для
многих прикладных криптографических протоколов, в т. ч. прото-
колов электронной подписи, протоколов подписания контракта,
систем электронных платежей и т. п., и должна рассматриваться
как неотъемлемая часть этих протоколов. Участник протокола, выпол-
няющий процедуру арбитража, называется арбитром. Для самой про-
цедуры арбитража требуется либо алгоритм, выполняемый арбитром
на входных данных, предоставленных ему заявителем (заявителями),
либо специальный протокол с участием всех заинтересованных сторон.
128. Арбитр
Arbiter
См. арбитраж.
129. Протокол с арбитром
Arbitrated protocol
Криптографический протокол, в котором для разрешения споров
между участниками требуется арбитраж. Протоколы с арбитром де-
лятся на два класса. В пессимистических протоколах арбитр должен
участвовать в каждом сеансе выполнения протокола. В оптимистиче-
ских  участие арбитра требуется только в случае возникновения кон-
фликтов между участниками.
130. Подделка подписи
Forgery
Угроза стойкости схем электронной подписи. Противник, не
владеющий секретным ключом, создает пару (сообщение, подпись),
которая будет принята как корректная алгоритмом проверки подпи-
си. В зависимости от того, для каких сообщений противник может под-
делывать подписи, различают универсальную, селективную и экзи-
стенциальную подделку.
131. Универсальная подделка подписи
Universal forgery
Угроза стойкости схем электронной подписи. Противник, не
владеющий секретным ключом, создает алгоритм, функционально
эквивалентный алгоритму генерации подписи. Тем самым он может
подделывать подписи для любых сообщений.
328 Приложение В
132. Селективная подделка подписи
Selective forgery
Угроза стойкости схем электронной подписи. Противник, не
владеющий секретным ключом, выбирает сообщение (отсюда назва-
ние угрозы), и затем, получив открытый ключ, подделывает подпись
для этого сообщения.
133. Экзистенциальная подделка подписи
Existential forgery
Угроза стойкости схем электронной подписи. Противник, не
владеющий секретным ключом, получает открытый ключ и созда-
ет пару (сообщение, подпись), которая будет принята как корректная
алгоритмом проверки подписи. При этом противник никак не кон-
тролирует выбор того сообщения, для которого в итоге будет подделана
подпись. Вероятно, это сообщение будет бессмысленным. Экзистенци-
альная подделка  самая слабая из угроз стойкости схем электронной
подписи, следовательно, стойкость против этой угрозы является наибо-
лее высокой. Стойкость против экзистенциальной подделки  основная
тема теоретических исследований протоколов электронной подписи.
134. Электронная подпись с восстановлением сообщения
Message recovery signature
Разновидность протокола электронной подписи, в которой полу-
чателю передается только подпись, а само сообщение извлекается из
нее алгоритмом проверки электронной подписи.
135. Схема электронной подписи вслепую
Blind signature scheme
Схема электронной подписи, в которой алгоритм генерации подпи-
си выполняется вслепую в том смысле, что этот алгоритм применяется
к случайному сообщению, не несущему в себе никакой информации о
том сообщении, которое будет извлечено из него, вместе с корректной
подписью, получателем. Используется в системах электронных пла-
тежей как средство обеспечения неотслеживаемости.
136. Законная схема электронной подписи вслепую
Fair blind signature scheme
Схема электронной подписи вслепую, в которой неотслежива-
емость получателей подписей может быть, при определенных усло-
виях, отозвана. В системах электронных платежей такие схемы
используются для предотвращения так называемых ¾идеальных¿ пре-
ступлений (безусловная неотслеживаемость электронных платеж-
ных средств обеспечивает преступникам возможность безопасного по-
лучения выкупа или отмывания денег).
Словарь криптографических терминов 329
137. Схема электронной подписи с доказуемостью подделки
Fail-stop signature scheme
Схема электронной подписи, в которой каждому открытому
ключу соответствует множество секретных ключей достаточно боль-
шой мощности. При этом подпись зависит от используемого секретного
ключа. Подписывающий знает, по модулю некоторого криптографи-
ческого предположения, только один секретный ключ из указанного
множества и при обнаружении подделки подписи может почти всегда
доказать этот факт третьим лицам.
138. Схема конфиденциальной электронной подписи
Undeniable signature scheme
Схема электронной подписи, в которой сам факт подписания того
или иного сообщения является конфиденциальным и может быть уста-
новлен только в том случае, если подписывающий согласен сотрудни-
чать. В схемах конфиденциальной подписи алгоритм проверки элек-
тронной подписи замещается парой протоколов, с помощью которых
подписывающий доказывает с нулевым разглашением, что подпись кор-
ректна, либо, напротив, некорректна. Как и в других схемах электрон-
ной подписи, споры о подлинности подписей решаются с помощью про-
цедуры арбитража.
139. Схема групповой электронной подписи
Group signature scheme
Криптографическая схема, относящаяся к групповой криптогра-
фии. В схеме групповой электронной подписи функция генерации подпи-
си распределена между группой подписывающих. Корректная элек-
тронная подпись может быть получена только в том случае, если все
члены группы приняли участие в выполнении протокола генерации
подписи.
140. Интерактивная аутентификация
Синоним: протокол интерактивной аутентификации
Interactive authentication
Прикладной криптографический протокол, как правило с двумя
участниками  доказывающим и проверяющим. Цель доказывающе-
го  доказать свою аутентичность, а цель проверяющего  ее прове-
рить. Существуют две разновидности протоколов интерактивной аутен-
тификации  с открытым ключом и с секретным ключом. В первом
случае общим входным словом участников служит открытый ключ до-
казывающего и он должен продемонстрировать проверяющему знание
соответствующего секретного ключа. Во втором случае у доказывающе-
го и проверяющего имеется общий секретный ключ, что позволяет вы-
полнять как одностороннюю, так и взаимную аутентификацию.
330 Приложение В
В математической криптографии стойкость протоколов аутенти-
фикации определяется на основе понятия доказательства знания с
нулевым разглашением.
141. Аутентификация взаимная
Mutual authentication
Протокол интерактивной аутентификации, в котором каждый
из участников является одновременно и доказывающим, и проверяю-
щим. Это позволяет за один сеанс выполнения протокола каждому из
участников доказать свою аутентичность другому участнику.
142. Аутентификация односторонняя
One-way authentication
Протокол интерактивной аутентификации, в котором один из
участников является доказывающим, а другой  проверяющим. Термин
¾односторонняя¿ используют, чтобы отличить ее от аутентификации
взаимной.
143. Протокол Диффи  Хеллмана
Diffie–Hellman key agreement
1. В широком смысле  протокол выработки общего секретного
ключа двумя участниками, которые не имеют изначально никакой об-
щей секретной информации и обмениваются сообщениями по не защи-
щенному от подслушивания, но аутентифицированному каналу свя-
зи. Более корректный термин для этого класса  протоколы типа про-
токола Диффи  Хеллмана.
2. В узком смысле  реализация протокола п. 1 на основе задачи
дискретного логарифмирования, предложенная Диффи и Хеллманом в
их основополагающей работе.
144. Протокол конфиденциальных вычислений
Multi-party secure computation
Наиболее общий тип криптографических протоколов, изучаемых
в криптологии. Типичная постановка задачи такова. Имеются n участ-
ников, которые могут обмениваться сообщениями по каналам связи. За-
даны входные слова x1, . . . , xn участников, функция f и целое число t.
Требуется вычислить y = f(x1, . . . , xn) таким образом, чтобы все участ-
ники узнали значение y, но никакая коалиция из не более чем t участни-
ков не получила в результате выполнения протокола никакой информа-
ции о входных словах других участников сверх того, что можно извлечь
из значения y и входных слов данной коалиции. Существуют и другие
постановки задачи. В частности, можно потребовать, чтобы значение y
стало известно лишь участникам из заданного подмножества. Известны
также многочисленные вариации модели в зависимости от предположе-
Словарь криптографических терминов 331
ний о сети связи: защищенные или незащищенные каналы, синхронный
или асинхронный случай и т. п.
145. Протокол византийского соглашения
Byzantine agreement
Протокол решения следующей задачи, формулируемой традиционно
на историческом примере армии Византийской империи периода упадка
(задача о византийских генералах). Имеются n + 1 участник  главно-
командующий и n генералов. Главнокомандующий посылает каждому
генералу приказ, который имеет всего два возможных варианта: ата-
ковать или отступать. Часть генералов, в т. ч. и главнокомандующий,
могут оказаться предателями. Честные генералы, обмениваясь сообще-
ниями по каналам связи (которые обычно предполагаются защищенны-
ми) должны достигнуть соглашения о единых действиях  атаковать
или отступать. Нетривиальной задачу делает следующее требование:
если главнокомандующий честный, то все честные генералы обязаны
выполнить его приказ.
146. Протокол подписания контракта
Contract signing protocol
Прикладной криптографический протокол, как правило, с дву-
мя участниками, которые, обмениваясь сообщениями по каналам свя-
зи, должны подписать контракт, существующий только в электронной
форме. Основное требование к стойкости протокола подписания кон-
тракта таково: при любом прерывании выполнения протокола шансы
каждого из участников получить контракт, подписанный другим, и при
этом не подписаться самому, ничтожно малы. В этом смысле прото-
кол подписания контракта является разновидностью протокола обме-
на секретами. Имеются и другие требования к стойкости протокола, в
частности так называемая защита от злоупотреблений (abuse). Послед-
няя означает, что если выполнение протокола было прервано и контракт
остался неподписанным, то ни один из участников не сможет доказать
третьим лицам, что другой участвовал в выполнении протокола (а, сле-
довательно, имел намерение подписать данный контракт).
147. Протокол обмена секретами
Secret exchange protocol
Примитивный криптографический протокол с двумя участни-
ками. Входные слова участников называются секретами. Необходимо
организовать обмен секретами таким образом, чтобы в случае прерыва-
ния протокола (вне зависимости по какой причине) знания участников
о секретах друг друга были приблизительно одинаковыми.
332 Приложение В
148. Протокол голосования
Election scheme, voting scheme, voting protocol
Прикладной криптографический протокол, обеспечивающий про-
цедуру голосования, в которой избирательные бюллетени существуют
только в электронной форме. Протокол является криптографическим,
т. к. необходимо обеспечить, чтобы голосование было тайным. Основное
свойство протоколов голосования  универсальная проверяемость, под
которой понимается предоставление возможности всякому желающему,
включая сторонних наблюдателей, в любой момент времени проверить
правильность подсчета голосов. Существует также ряд требований к
протоколу голосования, которые обусловлены его электронной специ-
фикой и отсутствуют при традиционных формах организации выборов.
В частности, протокол голосования не должен давать избирателю ника-
кой информации, которая позволяла бы ему в дальнейшем доказывать,
что он голосовал так, а не иначе. Тем самым предотвращается скупка
голосов.
149. Протокол электронных платежей
Синоним: система электронных платежей
Electronic cash system, e-cash system
Прикладной криптографический протокол, предназначенный для
реализации платежной системы, в которой средства платежа существу-
ют только в электронной форме. Создание системы электронных пла-
тежей требует решения всех трех задач криптографии  обеспечения
конфиденциальности, целостности, неотслеживаемости. Суще-
ствует обширный и регулярно пополняемый список требований к стой-
кости протоколов электронных платежей. Важнейшим из них является
невозможность подделки электронных денег. Второе по значимости
требование  неотслеживаемость платежей. Система электронных
платежей состоит из набора протоколов, из которых основными явля-
ются протоколы, реализующие транзакцию снятия со счета и транзак-
цию платежа. Если для выполнения транзакции платежа необходимо
участие банка-эмитента электронных денег, то система электронных
платежей называется централизованной, в противном случае  ав-
тономной.
150. Централизованная система электронных платежей
On-line e-cash system
Система электронных платежей [протокол электронных пла-
тежей], в которой транзакция платежа выполняется с участием банка-
эмитента электронных денег.
151. Автономная система электронных платежей
Off-line e-cash system
Система электронных платежей [протокол электронных пла-
Словарь криптографических терминов 333
тежей], в которой транзакцию платежа выполняют покупатель и про-
давец, без участия банка-эмитента. В такой системе требуется допол-
нительная транзакция, транзакция депозита, с помощью которой про-
давец может положить полученные электронные деньги на свой счет
в банке.
152. Электронные деньги
E-cash
Общее название всех электронных платежных средств, используе-
мых в системах электронных платежей.
153. Электронная монета
E-coin
Название электронных платежных средств, используемых в авто-
номных системах электронных платежей. Такая трактовка тер-
мина не является общепринятой.Многие авторы называют электронной
монетой любое электронное платежное средство.
154. Протокол привязки к биту
Bit commitment protocol
Примитивный криптографический протокол с двумя участни-
ками (отправителем и получателем), посредством которого отправитель
передает бит информации, упакованный в так называемый блоб таким
образом, что выполняются следующие два условия:
1. После того как блоб передан получателю (выполнен этап привяз-
ки), отправитель уже не может изменить значение заключенного в нем
бита.
2. Получатель не может самостоятельно извлечь из блоба значение
бита и узнает его только после того, как отправитель выполнит этап
раскрытия блоба.
В целом протокол привязки к биту напоминает шифрование, но мо-
жет быть интерактивным и, кроме того, не требуется существования
эффективного алгоритма извлечения бита из блоба (при известном клю-
че).
Комментарий. Русскоязычный термин предлагается как временный.
Проблема замены его на более удачный остается нерешенной уже много
лет.
155. Блоб
Blob
Информация, получаемая от отправителя в результате выполнения
этапа привязки в протоколе привязки к биту (в некотором смысле,
аналог криптограммы).
334 Приложение В
156. Схема разделения секрета
Secret sharing scheme
Определяется структурой доступа и парой алгоритмов, называе-
мых алгоритмом разделения секрета и алгоритмом восстановления сек-
рета. Входом алгоритма разделения секрета служит секрет s, а выхо-
дом  набор долей секрета s1, . . . , sn. Доля si передается i-му участ-
нику. Всякая разрешенная коалиция может однозначно восстановить
секрет s, исходя из своих долей, с помощью алгоритма восстановления
секрета, а совокупность долей секрета, полученных любой запрещенной
коалицией, не позволяет этого сделать.
157. Структура доступа
Access structure
Одна из составляющих схемы разделения секрета, состоит из ко-
нечного множества участников S и двух семейств подмножеств множе-
ства S. Множества из первого семейства называются разрешенными, а
множества из второго  запрещенными коалициями.
158. Доля секрета
Share, secret share
Информация о значении секрета, получаемая отдельным участни-
ком схемы разделения секрета.
159. Пороговая схема разделения секрета
Threshold secret sharing scheme
Схема разделения секрета для структуры доступа, в которой
разрешенными коалициями являются все множества участников мощ-
ности не менее t для некоторого натурального t, а запрещенными коа-
лициями  все остальные множества участников.
160. Совершенная схема разделения секрета
Perfect secret sharing scheme
Схема разделения секрета, в которой доли секрета любой за-
прещенной коалиции содержат в совокупности нулевую информацию о
значении секрета. Такие схемы называют совершенными, чтобы отли-
чить их от тех схем разделения секрета, где эта информация ¾почти
нулевая¿.
161. Идеальная схема разделения секрета
Ideal secret sharing scheme
Схема разделения секрета, в которой длина каждой доли секре-
та является минимально возможной.
162. Протокол разделения секрета
Secret sharing protocol
Криптографический протокол, реализующий схему разделения
Словарь криптографических терминов 335
секрета в модели, где участники являются абонентами сети связи. В
этой модели имеется дополнительный участник, называемый дилером
(или лидером), которому известно значение секрета. Дилер генерирует
доли секрета и раздает их остальным участникам. Всякая разрешен-
ная коалиция может восстановить секрет, выполнив протокол восста-
новления секрета. Протоколы разделения секрета могут найти приме-
нение в организации хранения конфиденциальной информации, напри-
мер, криптографических ключей, а также как примитивные крипто-
графические протоколы.
163. Протокол проверяемого разделения секрета
Verifiable secret sharing protocol
Примитивный криптографический протокол. От общего случая
протокола разделения секрета отличается тем, что участники не до-
веряют друг другу, в т. ч. и дилеру. Для защиты от нечестного диле-
ра протокол предоставляет каждому из остальных участников возмож-
ность проверить, что от дилера получена корректная доля секрета.
Стойкость протоколов проверяемого разделения секрета всегда осно-
вывается на каких-либо криптографических предположениях (т. е.
не может быть безусловной).
Алфавитный указатель русскоязычных тер-
минов
А
Автономная система электронных
платежей 151
Активный противник 22
Алгоритм генерации электронной
подписи 126
Алгоритм дешифрования 115
Алгоритм проверки электронной
подписи 125
Алгоритм формирования
электронной
подписи 126
Алгоритм шифрования 113
Алиса 17
Анонимность 31
Арбитр 128
Арбитраж 127
Аргумент с абсолютно нулевым
разглашением 88
Аргумент с вычислительно
нулевым
разглашением 86
Аргумент со статистически
нулевым
разглашением 87
Атака 24
Аутентификация 116
Аутентификация взаимная 141
Аутентификация
односторонняя 142
Аутентифицированный канал 12
Б
Блоб 155
Блоковая криптосистема 106
Блоковый шифр 106
Боб 18
Большой Брат 16
В
Взлом 43
Г
Генератор псевдослучайных
перестановок 65
Генератор псевдослучайных
функций 61
Генератор функций с секретом 53
Д
Дешифрование 114
Динамический противник 23
Доказательство знания
неинтерактивное 81
Доказательство знания с нулевым
разглашением 90
Доказательство интерактивное 75
Доказательство с абсолютно
нулевым
разглашением 85
Доказательство с вычислительно
нулевым
разглашением 83
Доказательство с минимальным
разглашением 95
Доказательство с неразличимыми
догадками 96
Доказательство с нулевым
разглашением 82
Доказательство со статистически
нулевым
разглашением 84
Доказательство, скрывающее
догадки 97
Доказывающий 76
Доля секрета 158
Е
Ева 19
З
Законная схема электронной
подписи вслепую 136
Защищенный канал 11
Алфавитный указатель русскоязычных терминов 337
И
Игра Артур  Мерлин 78
Идеальная схема разделения
секрета 161
Имитация 120
Интерактивная
аутентификация 140
К
Ключ 38
Код аутентификации 119
Коллизия 67
Конфиденциальность 26
Криптоанализ 4
Криптограмма 105
Криптографическая система 102
Криптографическая схема 6
Криптографически стойкий
генератор
псевдослучайных
последовательностей 59
Криптографический алгоритм 8
Криптографический ключ 38
Криптографический примитив 47
Криптографический протокол 5
Криптографическое
предположение 48
Криптографическое
преобразование 7
Криптография 1
Криптология 2
Криптосинтез 3
Криптосистема 102
Криптосистема с открытым
ключом 109
Криптосистема с секретным
ключом 108
М
Математическая криптография 2
Мера разглашения 94
Метод криптоанализа 33
Модель с общей случайной
строкой 92
Модель с предобработкой 93
Модель со случайным
оракулом 36
Мультиинтерактивное
доказательство 79
Мультиинтерактивное
доказательство с
нулевым
разглашением 89
Н
Неинтерактивное доказательство
с неразличимыми
догадками 98
Неинтерактивное доказательство
с нулевым
разглашением 91
Неинтерактивное доказательство,
скрывающее догадки 99
Неотслеживаемость 29
Несвязываемость 30
Нулевое разглашение
относительно честного
проверяющего 100
О
Односторонняя перестановка 52
Односторонняя функция 49
Открытый ключ 40
Открытый текст 103
П
Пара перестановок с трудно
обнаружимыми
зубцами 74
Параметр стойкости 37
Пассивный противник 21
Перестановка с секретом 57
Подделка подписи 130
Подмена 121
Полиномиальная стойкость 110
Полное раскрытие 44
Пороговая схема разделения
секрета 159
Потоковая криптосистема 107
Потоковый шифр 107
Пренебрежимо малая
вероятность 42
Пренебрежимо малая функция 41
338 Приложение В
Прикладной криптографический
протокол 45
Примитивный
криптографический
протокол 46
Проверяющий 77
Противник 20
Протокол аутентификации 117
Протокол аутентификации
сообщений 122
Протокол византийского
соглашения 145
Протокол голосования 148
Протокол Диффи 
Хеллмана 143
Протокол доказательства
знания 80
Протокол интерактивной
аутентификации 140
Протокол конфиденциальной
передачи сообщений 101
Протокол конфиденциальных
вычислений 144
Протокол обмена секретами 147
Протокол подписания
контракта 146
Протокол привязки к биту 154
Протокол проверяемого
разделения секрета 163
Протокол разделения секрета 162
Протокол с арбитром 129
Протокол электронно-цифровой
подписи 123
Протокол электронной
подписи 123
Протокол электронных
платежей 149
Псевдослучайная функция 63
Псевдослучайный генератор 58
Р
Раскрытие 43
Расшифрование 114
Раунд 9
С
Секретность 26
Секретный ключ 39
Селективная подделка
подписи 132
Семантическая стойкость 111
Семейство перестановок с
секретом 56
Семейство псевдослучайных
перестановок 64
Семейство псевдослучайных
функций 62
Семейство функций с секретом 54
Сильная односторонняя
функция 50
Сильно односторонняя
функция 50
Система шифрования 102
Система электронных
платежей 149
Слабая односторонняя
функция 51
Слабо односторонняя функция 51
Совершенная схема разделения
секрета 160
Специфическая коллизия 68
Стойкость 32
Стойкость безусловная 34
Стойкость теоретико-
информационная 34
Стойкость теоретико-
сложностная 35
Стойкость шенноновская 34
Структура доступа 157
Схема групповой электронной
подписи 139
Схема конфиденциальной
электронной
подписи 138
Схема разделения секрета 156
Схема электронной подписи 124
Схема электронной подписи
вслепую 135
Схема электронной подписи с
доказуемостью
подделки 137
Т
Теоретическая криптография 2
Алфавитный указатель русскоязычных терминов 339
Теория аутентификации 118
Тест следующего бита 60
Транскрипция диалога 10
Транскрипция протокола 10
У
Угроза 25
Универсальная подделка
подписи 131
Участник (протокола) 13
Ф
Функция с секретом 55
Функция сжатия 73
Х
Хэш-значение 70
Хэш-функция 66
Хэш-функция
криптографическая 66
Хэш-функция односторонняя 71
Хэш-функция с трудно
обнаружимыми
коллизиями 72
Ц
Целостность 27
Целостность сообщения 28
Центр доверия 15
Централизованная система
электронных
платежей 150
Ч
Честный участник 14
Ш
Шифр 102
Шифрование 112
Шифртекст 104
Э
Экзистенциальная коллизия 69
Экзистенциальная подделка
подписи 133
Электронная монета 153
Электронная подпись с
восстановлением
сообщения 134
Электронные деньги 152
Алфавитный указатель англоязычных тер-
минов
A
Access structure 157
Active adversary 22
Adversary 20
Alice 17
Anonymity 31
Arbiter 128
Arbitrated protocol 129
Arbitration 127
Arthur–Merlin game 78
Attack 24
Authenticated channel 12
Authentication 116
Authentication code 119
Authentication protocol 117
Authentication theory 118
Authority 15
B
Big Brother 16
Bit commitment protocol 154
Blind signature scheme 135
Blob 155
Block cipher 106
Block cryptosystem 106
Bob 18
Breaking 43
Byzantine agreement 145
C
Cipher 102
Ciphertext 104
Claw-free permutation pair 74
Collision 67
Collision-intractable hash
function 72
Common reference string model 92
Complexity knowledge 94
Complexity-based security 35
Complexity-theoretic security 35
Compression function 73
Computational zero-knowledge
argument 86
Computational zero-knowledge
proof 83
Confidentiality 26
Contract signing protocol 146
Cracking 43
Cryptanalysis 4
Cryptanalytic technique 33
Cryptogram 105
Cryptographic algorithm 8
Cryptographic assumption 48
Cryptographic hash function 66
Cryptographic primitive 47
Cryptographic protocol 5
Cryptographic scheme 6
Cryptographic system 102
Cryptographic transform 7
Cryptographically strong
pseudorandom bit
generator 59
Cryptography 1
Cryptology 2
Cryptosystem 102
D
Deciphering 114
Decryption 114
Decryption algorithm 115
Diffie–Hellman key agreement 143
Digital signature protocol 123
Digital signature scheme 124
Dynamic adversary 23
E
E-cash 152
E-cash system 149
E-coin 153
Election scheme 148
Electronic cash system 149
Enciphering 112
Encryption 112
Алфавитный указатель англоязычных терминов 341
Encryption algorithm 113
Eve 19
Existential collision 69
Existential forgery 133
F
Fail-stop signature scheme 137
Fair blind signature scheme 136
Forgery 130
G
Group signature scheme 139
H
Hash-code 70
Honest party 14
Honest-verifier zero-knowledge 100
I
Ideal secret sharing scheme 161
Impersonation 120
Imprint 70
Information-theoretic security 34
Integrity 27
Interactive authentication 140
Interactive proof 75
K
Key 38
M
Mathematical cryptography 2
Message authentication
protocol 122
Message integrity 28
Message recovery signature 134
Minimum-knowledge proof 95
Multi-party secure computation 144
Multi-prover interactive proof 79
Multi-prover zero-knowledge
proof 89
Mutual authentication 141
N
Negligible function 41
Negligible probability 42
Next-bit test 60
Non-interactive zero-knowledge
with preprocessing 93
Noninteractive proof of
knowledge 81
Noninteractive witness hiding
proof 99
Noninteractive witness
indistinguishable proof 98
Noninteractive zero-knowledge
proof 91
O
Off-line e-cash system 151
On-line e-cash system 150
One-way authentication 142
One-way function 49
One-way hash function 71
One-way permutation 52
P
Party 13
Passive adversary 21
Perfect secret sharing scheme 160
Perfect zero-knowledge argument 88
Perfect zero-knowledge proof 85
Plaintext 103
Polynomial security 110
Privacy 26
Private channel 11
Private key 39
Private-key cryptosystem 108
Proof of knowledge 80
Prover 76
Pseudorandom function 63
Pseudorandom function family 62
Pseudorandom function
generator 61
Pseudorandom generator 58
Pseudorandom permutation
family 64
Pseudorandom permutation
generator 65
Public key 40
Public-coin proof system 78
Public-key cryptosystem 109
342 Приложение В
R
Random oracle model 36
Round 9
S
Secrecy 26
Secret exchange protocol 147
Secret share 158
Secret sharing protocol 162
Secret sharing scheme 156
Secure message transmission
(protocol) 101
Security 32
Security parameter 37
Selective forgery 132
Semantic security 111
Shannon security 34
Share 158
Signature generation algorithm 126
Signature verification algorithm 125
Specific collision 68
Statistical zero-knowledge
argument 87
Statistical zero-knowledge proof 84
Stream cipher 107
Stream cryptosystem 107
Strong one-way function 50
Strongly one-way function 50
Substitution 121
T
Theoretical cryptography 2
Threat 25
Threshold secret sharing
scheme 159
Total breaking 44
Total cracking 44
Trapdoor function 55
Trapdoor function family 54
Trapdoor function generator 53
Trapdoor permutation 57
Trapdoor permutation family 56
Trusted authority 15
U
Unconditional security 34
Undeniable signature scheme 138
Universal forgery 131
Unlinkability 30
Untraceability 29
V
Verifiable secret sharing
protocol 163
Verifier 77
View 10
Voting protocol 148
Voting scheme 148
W
Weak one-way function 51
Weakly one-way function 51
Witness hiding proof 97
Witness indistinguishable proof 96
Z
Zero-knowledge proof 82
Zero-knowledge proof of
knowledge 90