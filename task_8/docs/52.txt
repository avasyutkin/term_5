Федеральное агентство по образованию
Сибирский государственный аэрокосмический университет
имени академика М. Ф. Решетнева
АКТУАЛЬНЫЕ ПРОБЛЕМЫ БЕЗОПАСНОСТИ
ИНФОРМАЦИОННЫХ ТЕХНОЛОГИЙ
Сборник материалов II Международной научно-практической
конференции
Красноярск 2008
2
Федеральное агентство по образованию
Сибирский государственный аэрокосмический университет
имени академика М. Ф. Решетнева
АКТУАЛЬНЫЕ ПРОБЛЕМЫ БЕЗОПАСНОСТИ
ИНФОРМАЦИОННЫХ ТЕХНОЛОГИЙ
Материалы II Международной научно-практической конференции
(9-12 сентября 2008, г. Красноярск)
Красноярск 2008
3
А43
УДК 004.056
ББК 32.973.26-018.2
А43
Редакционная коллегия:
Жданов О.Н., Жуков В.Г., Золотарев В.В., Ханов В.Х.
(Сибирский государственный аэрокосмический университет)
Актуальные проблемы безопасности информационных технологий:
материалы II Международной научно-практической конференции (9-12 сентября
2008, г. Красноярск) / под общей ред. О.Н. Жданова, В. В. Золотарева; Сиб. гос.
аэрокосмич. ун-т. – Красноярск, 2008. – 100 с.
В представленных материалах отражены достижения как студенческой
научной деятельности в различных вузах России, так и результаты исследований
отечественных и зарубежных ученых и специалистов.
Сборник предназначен для научных работников, аспирантов, студентов.
УДК 004.056
ББК 32.973.26-018.2
© Сибирский государственный
аэрокосмический университет
имени академика М. Ф. Решетнева, 2008
© Коллектив авторов, 2008
4
ОГЛАВЛЕНИЕ
От оргкомитета 6
Секция 1. «Криптографические методы и средства защиты информации»
М.М. Глухов
О ПРИМЕНЕНИЯХ КВАЗИГРУПП В КРИПТОГРАФИИ 7
Е. А. Глущенко, И. В. Юрин
ОЦЕНКА УЯЗВИМОСТИ АУТЕНТИФИКАЦИИ С ИСПОЛЬЗОВАНИЕМ МАС –
АДРЕСОВ В БЕСПРОВОДНЫХ СЕТЯХ СТАНДАРТА 802.11
12
П.О. Джунковский, М.В. Дубовицкая
ПЛАТФОРМА ЗАЩИЩЕННОГО ИНФОРМАЦИОННОГО ОБМЕНА С МОБИЛЬНЫМИ
КЛИЕНТАМИ НА БАЗЕ ТЕХНОЛОГИЙ JAVA
14
С.В. Запечников
ОБЕСПЕЧЕНИЕ ВЫСОКОЙ ДОСТУПНОСТИ КЛЮЧЕВОГО МАТЕРИАЛА
КРИПТОСИСТЕМ В УСЛОВИЯХ ВОЗДЕЙСТВИЯ ДЕСТАБИЛИЗИРУЮЩИХ
ФАКТОРОВ
18
Е. В. Игоничкина
ИССЛЕДОВАНИЕ СТАТИСТИЧЕСКИХ СВОЙСТВ КАНДИДАТОВ
КОНКУРСА ESTREAM (ПРОФИЛЬ 1)
22
Д. Н. Пичулин
ВИРТУАЛЬНАЯ ЛОКАЛЬНАЯ СЕТЬ В СЕТИ ИНТЕРНЕТ 26
В. Х. Ханов, А. В. Шахматов, А.С. Шаранок
РЕАЛИЗАЦИЯ АЛГОРИТМОВ ШИФРОВАНИЯ НА ЭЛЕМЕНТНОЙ БАЗЕ
ПЛИС
29
Секция 2. «Оптимизация, моделирование и разработка систем защиты
информации. Подготовка специалистов в области безопасности информационных
технологий. Информационные технологии: теоретические и прикладные аспекты»
А. М. Попов, В. В. Золотарев, А.М. Кукарцев, И. А. Лубкин
МЕТОДИКА СТАТИСТИЧЕСКОГО РАСПОЗНАВАНИЯ ИСПОЛНИМОГО
КОДА ПРОГРАММ
33
Н.И. Мартынов, И.О. Федоров
О МЕТОДОЛОГИИ Н.И.МУСХЕЛИШВИЛИ В ТЕОРИИ УПРУГОСТИ
НЕОДНОРОДНОЙ СРЕДЫ
40
С.С. Барильник, Н.Е. Герасимов, И.В. Минин, О.В. Минин
НОВЫЕ ПОДХОДЫ К ПРОГРАММНО-ТЕХНИЧЕСКОЙ ЗАЩИТЕ СЕТЕВЫХ
ПУБЛИКАЦИЙ
49
Э.Р. Бейбутов
АНАЛИЗ ЗАЩИЩЕННОСТИ КОРПОРАТИВНЫХ СИСТЕМ НА ОСНОВЕ
ВЕРОЯТНОСТНЫХ СЕТЕЙ ПЕТРИ
53
А.А.Бойчук, А.Е. Бердиев, В.С. Дорофеев
ОРГАНИЗАЦИЯ ЛАБОРАТОРИИ КОНТРОЛЛЕРОВ КТ-51
56
Е. Н. Горошкин, В. Г. Жуков
ПРИМЕНЕНИЕ САМООРГАНИЗУЮЩИХСЯ КАРТ КОХОНЕНА ДЛЯ
АНАЛИЗА ИНЦИДЕНТОВ ИБ
60
В. В. Золотарев, Т.А. Лемешонок
КОНЦЕПЦИЯ ЯДРА СТАБИЛЬНОСТИ ИНФОРМАЦИОННО-УПРАВЛЯЮЩЕЙ
СИСТЕМЫ
65
А. А. Маковецкий, Е. В. Филькин
ВЕКТОРНЫЙ АНАЛИЗ ПРОБЛЕМ ИНФОРМАЦИОННОЙ БЕЗОПАСНОСТИ 67
Н.С. Меньшагина
АЛГОРИТМИЗАЦИЯ ФОРМИРОВАНИЯ АВТОМАТИЗИРОВАННЫХ
СРЕДСТВ АНАЛИЗА ИНФОРМАЦИОННЫХ РИСКОВ
73
В. М. Нечунаев 78
5
КЛАССИФИКАЦИЯ УГРОЗ КОРПОРАТИВНОЙ ИНФОРМАЦИОННОЙ
СИСТЕМЫ
А.А. Пономарёв
РЕШЕНИЕ ЗАДАЧИ ОЦЕНКИ ВРЕМЕНИ ПРЕОДОЛЕНИЯ СИСТЕМ ЗАЩИТЫ
ИНФОРМАЦИИ
81
Н.А. Федорова, Ф.А. Косолапов
АТТЕСТАЦИЯ ОБЪЕКТОВ ИНФОРМАТИЗАЦИИ ПО ТРЕБОВАНИЯМ
БЕЗОПАСНОСТИ ИНФОРМАЦИИ: ПЕРЕХОД НА ГОСТ Р ИСО/МЭК 15408-
2002
85
К. Е. Шудрова
АНАЛИЗ ВИДОВ БАЛАНСИРОВКИ НАГРУЗКИ СЕТИ 87
Решение конференции 91
Информация об участниках конференции 92
Информационное письмо конференции «АПроБИТ-2009» 95
6
ОТ ОРГКОМИТЕТА
Комплексное обеспечение информационной безопасности автоматизированных систем
представляет собой непрерывный процесс анализа, проектирования, эксплуатации и
оценки систем защиты информации. Специалист, подготовленный для выполнения
подобной профессиональной деятельности, должен иметь широкий кругозор и
аналитическое мышление, позволяющие решать сложные задачи. Проектирование систем
защиты основано на глубоком знании принципов их разработки, построения и
использования, на сравнительном анализе эффективности методов защиты информации,
их применимости в конкретных задачах и своевременном реагировании на возникающие
угрозы безопасности информации.
Защита информации с помощью различных методов и средств приводит не только к
затратам экономических ресурсов. Такие компоненты автоматизированной системы могут
обслуживаться только квалифицированным персоналом, под непосредственным
руководством высшего управляющего звена организации. Кроме того, специалисту по
комплексному обеспечению информационной безопасности автоматизированных систем
приходится решать задачи защиты государственной тайны Российской Федерации.
Важным аспектом обеспечения информационной безопасности может стать и
требование комплексности.
Причиной проведения данной конференции стал ощутимый недостаток
специализированных научных и научно-практических конференций и семинаров,
доступных широкому кругу участников, в Сибири и на Дальнем Востоке. Кроме того,
существующая на настоящий момент структура образовательных учреждений в
Красноярске (образование Сибирского федерального университета, развитие научного
сотрудничества между Сибирским государственным аэрокосмическим университетом и
крупнейшими предприятиями Красноярска и Красноярского края) позволяет эффективно
обмениваться современными научными результатами.
Цель проведения конференции – в развитии и укреплении научного сотрудничества
между различными вузами, научными и образовательными структурами России и
ближнего зарубежья, развитие комплексной всероссийской системы обмена опытом через
проведение специализированных научных конференций.
Результаты научных исследований, представленные в сборнике, отражают развитие
технологий в области защиты информации. На конференции обсуждались следующие
темы и направления исследований.
Криптографические методы и средства защиты информации.
Оптимизация, моделирование и разработка систем защиты информации.
Подготовка специалистов в области безопасности информационных технологий.
Информационные технологии: теоретические и прикладные аспекты.
Организаторы и участники конференции надеются на дальнейшее сотрудничество и
расширение представительства в 2009 году. Приглашаем к сотрудничеству также и
ведущих ученых в предметной области.
7
УДК 004.042
М.М. Глухов
О ПРИМЕНЕНИЯХ КВАЗИГРУПП В КРИПТОГРАФИИ
Приводится краткий обзор опубликованных результатов по теме доклада.
Первые известные нам работы с явным указанием на применение квазигрупп, или
латинских квадратов, в криптографии относились к построению кодов аутентификации,
короче, А-кодов ( см. [1,2-7], [13-14], [24-25], [27]). Во всех этих работах обсуждалась и
модифицировалась схема, предложенная в работе [3]. Опишем основную конструкцию
этой схемы по работе [7]. В ней в качестве сообщений рассматриваются слова длины,
кратной m, в q-ичном алфавите Q, а в качестве подписи к сообщению s длины mt - слово
a1…am длины m в том же алфавите, образованное следующим образом. Слово s
разбивается по некоторому правилу на t слов s
(1)
,…,s
(t)
 длины m, и по слову s
(i)
вырабатывается буква ai c помощью квазигруппы (Q,*), которая является ключом. А
именно, если s
(i)
=s1…sm, то буква ai находится по формуле:
ai=(…((s1*s2)*s3)*…)*sm.
Пользуясь лишь определением квазигруппы, легко показать что произведение
(…((s1*s2)*s3)*…)*sm принимает в качестве значений каждый элемент из Q одно и то же
число раз. Отсюда следует, что при равномерном распределении вероятностей на
множестве сообщений построенный А-код имеет минимальную вероятность успешной
имитации, равную 1/q
m
. Особо рассматривается практически наиболее интересный,
двоичный, случай, когда q=2k
. Приводится естественная модификация схемы в случае,
когда длина сообщений не кратна m. Исследуется также вариант, в котором алфавит
подписи имеет большую мощность по сравнению с алфавитом сообщений.
В [4] анализируется возможность восстановления сообщения или ключевой
квазигруппы в указанной схеме по ряду сообщений с определенными совпадениями букв
в сообщениях и подписях. Рассматривается два метода. В первом из них слова s
(1)
,…,s
(t)

являются отрезками слова-сообщения s, во втором - предполагается, что сообщение имеет
длину q
2
, t полагается равным q, а слова s
(1)
,…,s
(t)
образуются с использованием
сообщения s и квазигруппы Q(*). Указываются условия, при которых в первом случае
возможно восстановление открытого текста, и даже ключевой квазигруппы. Схема
второго типа является более стойкой к рассмотренной атаке.
В работе [4] рассматривается также вопрос об эквивалентности ключей, который
сводится к рассмотрению определенных автотопий квазигруппы Q(*).
В [1] описанная выше схема аутентификации претерпевает дальнейшее усложнение с
точки зрения образования слова s(1),…,s(t)
. В ней рассматривается лишь случай, когда
порядок q алфавита есть степень двойки, t=q
2
, сообщение s имеет длину q
2
и
представляется в виде квадратной матрицы М порядка q. По ключевой квазигруппе Q(*)
строится система из q/2 попарно ортогональных квазигрупп, изотопных квазигруппе Q(*).
С использованием матрицы М и таблиц Кэли имеющихся (q/2)+1 квазигрупп и строится
последовательность слов s
(1)
,…,s
(q)
. Авторы высказывают гипотезу, что построенная ими
схема в некотором смысле является оптимальной.
Более общий подход к использованию квазигрупп для шифрования был предложен в
работах [14, 19]. В [14] вводится так называемое квзигрупповое преобразование
множества Q
+
всех конечных наборов букв конечного алфавита Q (Quasigroup String
Processing). Оно определяется следующим образом. Сначала по заданной квазигруппе
(Q,*) и любому ее элементу (лидеру) a определяется преобразвание Еа
(1)
 множества Q+
:
Еа
(1)(х1,…,хk)=(y1,…,yk), (1)
где y1=a*x1, yi+1=yi*xi+1, i=1,…,k-1. Затем берется композиция n таких преобразований,
соответствующих квазигруппам (Q,*i) и выбранным лидерам ai, i=1,…,n. Итоговое 
8
преобразование обозначается в виде ( )
,..., 1
n
a a n
E . Преобразование Еа
(1)
 обратимо, и обратное
к нему преобразование Dа
(1)
 определяется следующим образом:
Dа
(1)(х1,…,хk)=(y1,…,yk),
где y1=a\x1, yi+1=xi\xi+1, i=1,…,k-1. Отсюда легко находится обратное преобразование и
для ( )
,..., 1
n
a a n
E . Оно обозначается в виде ( )
,..., 1
n
a an
D . Предлагается использовать преобразование
( )
,..., 1
n
a a n
E для шифрования информации. При этом в качестве ключей предлагается
использовать операции *i .
В работах [14], [19] изучаются свойства соответственно преобразований ( )
,..., 1
n
a a n
E и
( )
,..., 1
n
a a n
D и делается вывод о том, что указанные преобразования обладают некоторыми
нужными для криптографии качествами. В частности, при любых фиксированных (Q,*i),
ai , сi, i=1,…,n, уравнение

( )
,..., 1
n
a a n
E (x1,…,xk)=(c1,…,ck) (2)
имеет единственное решение относительно неизвестных x1,…,xk; по соотношению (2) при
известных a1,…,ak, x1,…,xk, c1,…,ck для нахождения ключей (*i) необходимо произвести
столько проб, сколько существует наборов из n-1 квазигрупповых операций; выходные
последовательности обладают хорошими статистическими свойствами, а именно, при
любом заданном вероятностном распределении букв во входных последовательностях
предельные распределения s-грамм в выходных последовательностях длины k являются
равномерными при k  и s≤n.
В ряде работ квазигрупповые преобразования слов используются для построения
поточных шифров, криптографическая стойкость которых основана на сложности
решения таких задач, как факторизации целых чисел или дискретного логарифмирования
в конечных полях. Рассмотрим один из таких шифров, предлагаемый и анализируемый в
работе [16]. Он получается путем комбинирования шифра типа ЭльГамаля и поточного
квазигруппового шифра. Приведем его подробное описание.
Шифр типа ЭльГамаля хорошо известен.
В качестве поточного квазигруппового шифра берется шифр в алфавите Q=Zp
* с
функциями шифрования ( )
,..., 1
n
a a n
E и расшифрования ( )
,..., 1
n
a an
D из [14], [19], которые
обозначаются здесь в виде E и E
-1 при  =(a1,…,an). Предполагается, что они определены
для случая, когда все квазигруппы (Q,*i) совпадают с одной и той же квазигруппой (Q,*).
В [16] указывается также и способ получения квазигрупповой операции * на Q. Она
определяется следующим образом. Для произвольного К{1,…,p-2} задается
отображение fK:QQ по формуле
fK(j)=(1/(1+(K+j)(mod p-1))(mod p),
и полагается
i * j=ifK(j)(mod p).
Нетрудно проверить, что отображение fK является подстановкой, а группоид (Q,*) –
квазигруппой с левой обратной операцией
i \ j=((ij
-1
(mod p)-1-K)(mod p-1)
при условии, что вместо 0 берется р-1.
Предлагаемый алгоритм имеет две части. В нем установление связи, выработка
ключей и передача ключей осуществляется с помощью шифра ЭльГамаля, а шифрование
исходного открытого сообщения и его расшифрование - с помощью квазигруппового
шифра. В итоге получается существенный выигрыш в скорости по сравнению с
известными асимметричными шифрами.
Проблема стойкости для первой части шифра решается точно также, как для шифра
ЭльГамаля. Поэтому автор анализирует стойкость лишь второй части шифра, а именно
рассматривается задача нахождения числа К, определяющего квазигруппу (Q,*), и
лидеров аiQ, i=1,…,k , по открытому тексту и соответствующему ему шифртексту. 
9
Показано, что эта задача сводится к решению системы полиномиальных уравнений над
полем Zp при большом простом чиле р. Вид такой системы зависит от числа k
используемых лидеров. При k=1 и k=2 получаются соответственно системы уравнений 2-
ой и 3-ей степеней и они могут быть эффективно решены. При k>2 получаются системы
уравнений более высоких степеней. В общем случае эта задача является NP-трудной. В
рассматриваемом случае возникающие системы уравнений имеют определенную
специфику и задача их решения остается открытой.
Отметим еще, что в рассматриваемой работе для получения квазигрупповой операции,
или, что то же самое, латинского квадрата, на Zp
*
указывается на способ, предложенный
в [22].
В работе [22] предлагалось использовать квазигруппы для построения преобразований
типа «Все или ничего» (“All-Or-Nothing Transformation”, сокращенно AONT). Такие
преобразования были введены в 1997 г. Р. Райвестом с целью повышения стойкости
блочных шифров с постоянной длиной блоков к методам, использующим свойства
открытого текста.
Преобразование Т последовательности сообщений (блоков) m=(m1,…,ms) в
последовательность m`==(m1`,…,mt`), ts, является преобразованием типа «Все или
ничего» ((“All-Or-Nothing” transformation, сокращенно AONT), если Т обратимо, Т и Т-1
эффективно вычислимы (т.е. вычислимы за полиномиальное время) и невозможно
получение какой-либо информации о любом блоке mi, если неизвестен хотя бы один
блок mj`.
В качестве AONT Райвест предложил так называемое пакетное преобразование,
которое может быть описано следующим образом.
Дана входная последовательность сообщений m=(m1,…,ms), в котором mi – отрезок из
b бит, i=1,…,s.
1. Выбираем случайно ключ К для пакетного преобразования в блочном шифре.
2. Вычисляем последовательность m`==(m1`,…,ms+1`) по правилу
mi`=miEK(i), i=1,…,s; ms+1=Kh1…hs, hi=EK`(mi`i), i=1,…,s,
где K` - фиксированный открытый ключ, а EK – функция зашифрования рассматриваемого
блочного шифра при реальном ключе К.
Легко видеть, что пакетное преобразование обратимо, т.е. по m` однозначно находятся
К и m. При этом если хотя бы один из блоков mi` неизвестен, то невозможно вычислить К,
а потому и любой блок mi.
В отличие от сообщения m последовательность m` называют псевдосообщением.
Предполагается, что далее псевдосообщение шифруется обычным образом. Таким
образом, пакетное преобразование является предварительным преобразованием открытого
сообщения. Оно не уменьшает криптографическую стойкость основного шифра и в то же
время не позволяет найти исходное открытое сообщение при любом неполном
дешифровании псевдосообщения. В последующие годы преобразования такого типа и их
использование в криптографии рассматривались и обсуждались многими авторами (см.,
например, [2,22,26,27]).
Следует иметь в виду, что методы шифрования с использованием АОNT имеют и
недостатки. А именно, АОNT размножают ошибки и отрицательно влияют на скорость
шифрования. По сути дела в схеме Райвеста пакетное преобразование требует не меньше
времени, чем последующее шифрование псевдосообщения. Для борьбы с первым
недостатком предлагается использовать корректирующие коды и хорошие каналы связи.
Для уменьшения второго недостатка в работе [22] предлагается использовать новый
способ построения псевдосообщения, основанный на комбинировании AONТ и
квазигруппового шифрования. С этой целью авторы предлагают следующий способ
быстрого получения квазигрупп (латинских квадратов) порядка n=p-1, где р – простое
число. В работе рассматривается случай n=256, р=257, и квазигруппа строится на
множестве Q={1,…,256}.
10
Сначала выбирается случайная перестановка (а11,…,а1n) чисел из Q, которая
принимается за первую строку латинского квадрата и таблицы Кэли нужной
квазигруппы. Затем строятся остальные строки по правилу:
aij= i
.
a1j(mod p), i=2,…,n; j=1,…,n.
Очевидно, что в итоге получится латинский квадрат и таблица Кэли квазигруппы (Q,*).
Далее по сообщению u=(u1…uk), где ui – байты, являющиеся двоичными записями
чисел из Q, строится псевдосообщение v=(v1…vk) следующим образом. Случайно
выбирается произвольный элемент a1Q, называемый лидером, и полагается
v1=a1*u1, vi+1=vi*ui+1, i=2,…,k.
После этого полученное псевдосообщение расширяется путем добавления перед ним
лидера a1 и первой строки квазигруппы. Далее расширенное псевдосообщение шифруется
обычным образом.
Из построения расширенного псевдосообщения видно, что по нему однозначно
восстанавливается исходное открытое сообщение. При этом используется левая обратная
операция для операции * . Кроме того, видно также, что описанное предварительное
преобразование открытого текста является преобразованием типа «Все или ничего».
Вернемся к вопросу об использовании квзигрупповых преобразований. В работе [29]
предлагается использовать квазигрупповые преобразования для построения
однонаправленных функций и подстановок. С этой целью автор выбирает квазигруппу
(Q,*) и определяет два преобразования
Ri :Q
N→Q
N
, i=1,2,
с использованием введенного ранее преобразования еа=Еа (см. (1)). А именно, для набора
А=(a0,…,aN-1) определяются:
R1(A)= (...( ( ( )))...)
1 1 0
ea
ea
ea A N 
,
R2(A)= (...( ( ( ( ))))...) 1 1 1 0
ea
ea
ea R A N 
.
Автор доказывает,что если исходная квазигруппа не коммутативна и не ассоциативна, то
для нахождения прообраза в преобразованиях R1, R2 при использовании лишь таблицы
Кэли квазигруппы Q понадобится соответственно O(s
[N/2]) и О(s
N
) квазигрупповых
операций. Исходя из этого, автор считает введенные функции серьезными кандидатами в
однонаправленные функции. Далее преобразование R2 используются для построения
других, более сложных, кандидатов в однонаправленные функции.
В работе [9] предлагается и исследуется вариант построения сжимающих хэшфункций итеративного типа с использованием в боксах так называемых
мультиподстановок на множестве Е2
, где
Е= m F2 ={e0, e1, …, et}, t=2k
-1,
F2 – поле из двух элементов. Предлагаемые функции, обозначаемые автором в виде gk,s,
являются равновероятными отображениями 2t
-й степени множества Е в его 2t-1
-ю степень.
Функция gk,s определяется с использованием 2k-1
(s+1) боксов Bi,j, i=0,…,2k-1
-1, j=0,…,s,
объединенных определенным образом в сеть, состоящую из s+1 ярусов по 2k-1
боксов в
каждом ярусе. В ярус с номером j входят боксы Bi,j со значениями
i=i0+2i1+…+2k-1
ik-1 при ij=0.
Боксы Bi,0 – входные, боксы Bi,s – выходные. Каждый бокс осуществляет подстановку на
множестве Е2
.
Множество Е разбивается на два подмножества Н и М, где Н={еi: i0=0} –
множество хэш-входов, М={еi: i0=1} – множество входов-сообщений. На вход бокса Bi,j
подаются элементы еiН и еi(j)М, отличающиеся лишь цифрами j-х разрядов.
Предполагается, что на выходе блока Bi,j получается также пара из НМ, компоненты
которой поступают соответственно на блоки Bi,j+1 и Bi(j),j+1. В итоге все входы-сообщения
(а также и все хэш-входы) будут сниматься каждом ярусе с разных блоков.
11
Далее, путем итерации преобразования gk,s авторы определяют искомую хэшфункцию hk,s следующим образом. Сообщение М в битах дополняется некоторым
образом до числа бит, кратного m2
k-1
и представляется в виде М=М1М2…Мn, где Мi –
набор длины m2
k-1
. Теперь фиксируется начальное значение хэш-входа Н0 и вычисляются
Hi= gk,s(Hi-1,Mi), i=1,…,n,
и в качестве значения хэш фунеции hk,sM) берется Нn.
В [8] исследуются свойства построенных таким образом хэш-функций в случае, когда
в качестве боксов Bi,j используются так называемые мультиподстановки множества Е2
.
Под мультиподстановкой авторы понимают биективное отображение В: Е2Е
2
, при
котором В(a,b)=(B1(a,b), B2(a,b)) и функции В1, В2 являются подстановочными по каждому
переменному. Это равносильно тому, что функции B1(a,b), B2(a,b) задают ортогональные
квазигруппы на множестве Е. В этом случае авторы указывают алгоритмы решения
уравнения
h(H,M)=H`
относительно М при известных Н, Н` и нахождения коллизий. Находят верхние оценки
сложности и выражают надежду, что эти оценки близки к нижним.
Для построения пар ортогональных квазигрупп авторы рекомендуют использовать
ортоморфизмы групп (см. выше). В частности, доказана теорема о том, что отображение
Lc: Е2Е
2
, при котором
Lc(a,b)=(a b, a  bс  R
n
(b)),
где R – сдвиг вектора на 1 бит вправо, является мультиподстановкой тогда и только тогда,
когда для любого i{1,…,m} среди векторов R
nq(с), q=1,2,…,m, найдутся векторы с
различными i-ми координатами.
Литература
1. Bakhtiari S, Safavi-Naini R., Pieprzyk J. A message Authentication Code based on Latin
Squares.// Proc. Australasian on Information Security and Privacy, 1997, 194-203,
{valer,trung}@exp-math.uni-essen.de
2. Canda V., van Trung T. A New Mode of Using All-Or-Nothing Transforms.// 2001, 1-6.
3. Carter S, Wegman M.N. Universal Class of Hash Function.// J. of Computer and System
Sciences, 1979,v. 18, № 2, 143-154.
4. Dawson E., Donovan D, Offer A. Quasigrops, isotopism and authentication
schemes.//The Australasian journal of combinatorics, 1996, v. 13, 75-88.
5. Denes J., Keedwell A.D. Latin Squares. New Developments in the Theory and
Applications.// Nord-Holland Publishing Co., Amsterdam, 1981.
6. Denes J., Petroczki P. A digital encrypting communication systems.// Hungarian Patent,
1990, № 201437А,.
7. Denes J., Keedwell A.D. A new Authentication Scheme based in Latin Squares.//Discrete
Mathematics. //1992, 106/107, 157-162.
8. Vandenay S. On the Need for Multipermutations: Cryptoanalysis of MD4 and SAFER.
//Proc. Fast Software Encryption, 1994, 286-297.
9. Schnorr C.P., Vandenay S. Black box cryptoanalysis of hash networks based on
multipermutations.//Lecture Notes in Computer Science, 950, 1995. 47-57.
10. Koscielny C. A metod of constructing quasigroup-based stream-ciphers.//Appl. Math.
And Comp Sci., 1996, 6, 109-121.
11. Krawczyk H. LFSR-based and Authentication.// 1994, EUROCRYPT-94, 129-139.
12. Krawczyk H. New Hash Function for Message Authentication.// 1995, EUROCRYPT-95,
301-310
13. Markovski S, Gligoroski D., Andova S. Using quasigroups for one-one secure
encoding.//Proc. VIII Conf. Logic and Comp. Sci. “LIRA 97”, Novi Sad, 1997, 157-162.
12
14. Markovski S, Gligoroski D., Bakeva V. Quasigroup String Processing: Part 1.// Proc. of
Maked. Academ. Of Sci. and Arts for Math. And Tech. Sci.. 1999, XX, 1-2, 13-28.
15. Denes J. and Owens P.J. Some new latin power sets not based on groups.// J. Combin.
Theory, ser A, 1999, 85, 69-82.
16. Gligoroski D. Stream cipher based on quasigroup string transformation in Zp
*
. //
Universitet “St. Cyril and Methodious”, Faculty of Natural Sciences, Institute of Informatics,
P.O. Box 162, Scopje, Republic of Macedonia. ArXiv:cs.CR/0403043 v2 22Apr 2004.
gligoroski@yahoo.com
17. Gligoroski D., Markovski S., Bakeva V. Quasigroup and Hash Functions.// Discr. Math.
And Appl. Proc. of the 6th ICDMA, Bansko, 2001, 43-50.
18. Gligoroski D., Markovski S., Bakeva V. On infinite Class of strongly Collision
Resistant Hash Functions “EDON-F” with Variable Length of Output.// Proc. 1st International
Conference on Mathematics and Informatics for Industry. Thessaloniki, Greece, 2003.
19. Markovski S, Kusacatov V. Quasigroup String Processing: Part 2.// Proc. of Maked.
Academ. Of Sci. and Arts for Math. And Tech. Sci.. XXI, 1-2, 2000, 15-32.
20. Markovski S, Gligoroski D., Stojcevska B. Secure two-way on-line communication by
using quasigroup enciphering with almost public key. Novi Sad Journal of Mathematics, 2000,
30.
21. Markovski S. Quasigroup String Processing and Application in Cryptography.// Invited
talk. Proc1st International Conference on Mathematics and Informatics for Industry.
Thessaloniki, Greece, 2003.
22. Marnas S.I., Angelis L., Bleris G.L. All-Or-Nothing Transform using quasigroups.// Proc.
1
st Balkan Conference in Informatics, 2003, 183-191.
23. Rogaway P. Bucket Hashing and its Application to Fast Message.// 1995, CRYPTO-95,
30-42.
24. Shoup V. On Fast and Provably Sequre Message Authentication based on Universal
Hashing. 1996, CRYPTO-96, 313-338.
25. Stinson D.R. Universal Hashing and Authentication Codes. Design.// Codes and
Cryptography, 1994, v. 4, 369-380.
26. Stinson D.R. Something about All-Or-Nothing (Transform). Design.// Codes and
Cryptography, 2001, 133-138.
27. Taylor R. Near optimal Unconditionally Sequre Authentication.// 1994, EUROCRYPT94, 245-255.
28. Wegman M.N., Carter S. New Hash Functions and their Use in Authentication and Set
Equality.// J. of Computer and System Sciences 1981, v. 22, 265-279.
29. Gligoroski D. Candidate One-Way Functions and One-Way Permutations Based on
Quasigroup String Transformations.// 2005, gligoroski@yahoo.com
УДК 004.056
Е. А. Глущенко, И. В. Юрин
ОЦЕНКА УЯЗВИМОСТИ АУТЕНТИФИКАЦИИ С ИСПОЛЬЗОВАНИЕМ
МАС – АДРЕСОВ В БЕСПРОВОДНЫХ СЕТЯХ СТАНДАРТА 802.11
Рассматривается целесообразность применения опции включения фильтрации по
MAC-адресам в беспроводных маршрутизаторах с целью существенного усиления
защиты беспроводной сети крупной организации. Уделяется внимание непосредственной
подстановке ложного MAC-адреса легального клиента злоумышленником.
Во всех беспроводных точках доступа и маршрутизаторах существует функция,
позволяющая ограничить доступ к беспроводной сети, которую они обеспечивают, в
зависимости от MAC-адреса (от англ. от англ. Media Access Control — управление
доступом к носителю) сетевого адаптера клиента, сделавшего запрос на соединение.
13
В спецификации данного стандарта оговорено, что адреса пересылаются с помощью
незашифрованных фреймов стандарта 802.11. То есть с помощью программ-сканеров
радиоэфира можно перехватить пакеты и вычислить так называемый уникальный адрес
легального сетевого адаптера. Узнав его, преступник с помощью специальной утилиты,
или же встроенными средствами операционной системы, заменяет MAC-адрес своей
сетевой карты на адрес легального пользователя. Но в этом случае следует каким-либо
способом отключить от сети работающий компьютер, с которого перехватывалась
информация о его уникальном адресе. Все зависит от целей злоумышленника и
особенностей организации сети, в которую он собирается проникнуть. Можно либо
дождаться, когда его отключат, либо совершить атаку отказа в обслуживании. В этом
случае можно воспользоваться утилитами wlanjak ( платформа Linux), omerta (платформа
Linux), AirJack (платформа Linux), dinjekt-disas (платформа Open BSD). Однако,
практически не существует программ, выполняющих те же функции под платформой
Windows.
Следует отметить, что получение легального сетевого адреса в случае, если в сети
используется WEP или WPA – шифрование, дает право только видеть существующую
защищенную криптопротоколом сеть и иметь возможность для взлома ключа доступа
полным перебором, или используя найденные уязвимости протоколов защиты.
Естественно, на компьютере атакующего должен быть отключен протокол ARP и
брандмауэр, так как необходимо будет следить, что отправляется в сеть, что бы хостжертва не отсылал слишком много пакетов TCP RST и сообщений о недоступности порта
по протоколу ICMP.
Так же имитация MAC-адреса возможна только для тех типов сетевых адаптеров,
которые позволяют заменять универсально-назначенный адрес (universally administered
address, UAA) локально-назначенным (locally administered address, LAA). В данном
контексте под универсальным адресом подразумевается адрес, жестко назначенный
компанией-производителем сетевой карты.
Просканировав сеть, злоумышленник вместе с MAC-адресом получает еще и
информацию о компании-производителе точки доступа или маршрутизатора, а так же
вычисляет идентификатор сети (SID), который ставится производителем по умолчанию.
Если рассматривать саму структуру MAC-адреса, то она приведена на рис.1.
Стандарты IEEE определяют 48-разрядный (6 октетов) MAC-адрес, который разделен
на четыре части. Первые 3 октета (в порядке их передачи по сети: старшие 3 октета, если
рассматривать их в традиционной бит-реверсной шестнадатиричной записи MACадресов) содержат 24-битный уникальный идентификатор организации (OUI,
Organizationally Unique Identifier), который производитель получает в IEEE. При этом
используются только младшие 22 разряда (бита), 2 старшие имеют специальное
назначение:
первый бит указывает, для одиночного (0) или группового (1) адресата предназначен
кадр.
следующий бит указывает, является ли MAC-адрес глобально (0) или локально (1)
администрируемым.
Следующие три октета выбираются изготовителем для каждого экземпляра устройства.
Рис.1. Выбираемые октеты
14
Сканирование сети для поиска пакетов желательно производить из операционных
систем на основе Linux. Но подмену MAC-адреса с целью дальнейшего подключения к
беспроводной сети в качестве нелегального пользователя можно осуществить так же и при
помощи утилиты на платформе Windows. Эта программа SMAC 2.0.
Естественно, набор программных и аппаратных средств для обнаружения и подмены
универсальных адресов сетевых плат, точек доступа и маршрутизаторов беспроводной
сети не ограничивается представленными в данной статье. На сегодняшний день
появилось программное обеспечение для карманных компьютеров для анализа и взлома
слабозащищенных беспроводных сетей. И не исключено, что в скором времени появятся
аналогичные продукты и для смартфонов.
В данной статье показано, что без особых временных и материальных затрат можно
легко обойти такой рубеж защиты беспроводной сети, как фильтрация по MAC-адресам.
Администратору сети следует задуматься, нужно ли включать данную опцию в
маршрутизаторе или же ограничиться мощным шифрованием WAP2, которое невозможно
вскрыть никак иначе, чем полным перебором всех возможных комбинаций. Дело в том,
что если в беспроводной сети достаточно большое число беспроводных клиентов, то
ведение списка MAC-адресов (кроме ключей, которые можно хранить на сменном
носителе) может снизить скорость подключения нового абонента и будет требоваться
вмешательство администратора безопасности для добавления новой записи в список
разрешенных MAC-адресов.
Таким образом, данный вид аутентификации имеет очень серьезную уязвимость и
может применяться только совместно с другими способами защиты беспроводной сети
стандарта 802.11 и преимущественно в тех организациях, где работает небольшое
количество сотрудников, пользующихся данным видом связи.
Библиографический список
1. Владимиров А.А., Гавриленко К. В., Михайловский А.А. Wi-Fu «боевые» приемы
взлома и защиты беспроводных сетей М.: NT Press, 2005. – 463с.
2. Педжман Рошан, Джонатан Лиэри. Основы построении беспроводных локальных
сетей стандарта 802.11 М.: Издательский дом «Вильямс», 2004. - 304с.
УДК 004.056
П.О. Джунковский, М.В. Дубовицкая
ПЛАТФОРМА ЗАЩИЩЕННОГО ИНФОРМАЦИОННОГО ОБМЕНА С МОБИЛЬНЫМИ
КЛИЕНТАМИ НА БАЗЕ ТЕХНОЛОГИЙ JAVA
Данная работа представляет собой реализацию платформы защищенного
информационного обмена c мобильными клиентами на базе технологий J2ME и J2SE.
Платформа является основой для построения бизнес-приложений и обеспечивает
аутентификацию всех участников информационного обмена и конфиденциальность
передаваемой информации на базе отечественных криптографических алгоритмов.
С момента появления в начале 80-х годов прошлого столетия, мобильный телефон
прошел долгий путь технического совершенствования - из средства передачи
голосовой информации постепенно превращался в многофункциональное устройство,
мобильного компаньона и средство планирования и управления бизнесом.
В настоящее время многие банки, коммерческие организации, платежные
системы и дилинговые центры предоставляют своим клиентам разнообразные
мобильные сервисы для проведения безналичных расчетов, управления торговыми и
банковскими счетами. Использование мобильных устройств в подобных сервисах
требует обеспечения конфиденциальности передаваемой информации (такой, как 
15
номера кредитных карт, PIN-кодов, различных паролей и прочей информации
пользователя).
Возможности злоумышленников также возрастали, появились средства
перехвата голосового и информационного трафика, разнообразные атаки на протоколы
передачи данных, в том числе связанные с подменной клиентской или серверной
сторон («человек по середине») и т.д. Существующие протоколы безопасной связи,
используемые в мобильных устройствах, не обеспечивают аутентификации всех
сторон информационного обмена. Мобильное устройство часто не имеет средств
криптографической защиты информации и ЭЦП.
Платформа J2ME не имеет достаточных средств и функций, способных
обеспечить необходимую безопасность передаваемой и хранимой в мобильном
устройстве информации. J2ME, следуя концепции Java, предназначена для разработки
прикладных программ и имеет очень ограниченные возможности для низкоуровневого
взаимодействия со средой. В частности, мидлет не имеет непосредственного доступа к
памяти SIM-карты. Таким образом, исключена возможность хранения секретной
информации и ключей непосредственно в SIM модуле. Кроме того, оператор сотовой
связи имеет доступ к SIM-карте абонента. Хранение конфиденциальной информации в
хранилище файлов в открытом виде (с помощью RMS API или файлового
ввода/вывода FCOP/JSR-72 FileConnection API) невозможно, так как в случае потери
или кражи мобильного устройства доступ к информации может быть получен при
помощи стандартных средств.
Сетевая безопасность мобильных телефонов представлена реализацией протокола
SSL/TLS для HTTP, однако имеется только односторонняя аутентификация
(аутентификация сервера). При этом используется предустановленный набор
доверенных сертификатов. Аутентификация клиента проводиться иным образом на
уровне приложения (с помощью ввода логина и пароля, используя методы HTTP
POST/GET).
Иными словами, перед разработчиком встают следующие проблемы:
 нет возможности так или иначе хранить секретную информацию (в т.ч.
ключевую) в памяти телефона в открытом виде. Телефон может быть украден или
потерян;
 нет возможности чтения/записи в память SIM карты непосредственно из
приложения;
 встроенные протоколы безопасной связи имеют ограничения с целью
увеличения быстродействия;
 реализация прочих протоколов и криптографических алгоритмов часто
ограничена из-за вычислительной способности процессора мобильного устройства.
Предлагаемая платформа позиционируется как основа для построения
бизнес-систем для мобильных пользователей на базе платформы J2ME, а также
расширения функциональности существующих систем для работы с мобильными
клиентами. Основой данной платформы является защищенный протокол,
обеспечивающий регистрацию пользователя в системе, двустороннюю («строгую»)
аутентификацию на базе ИОК, и конфиденциальность передаваемой информации.
Таким образом, данная платформа ориентирована на использовании в системах
электронной коммерции, платежных системах, системах мобильного банкинга и
других системах, где требуется обеспечение аутентичности пользователя и
конфиденциальности данных.
Требования, предъявляемые к данной платформе:
 обеспечение двухсторонней «строгой» аутентификации на базе
отечественных криптографических алгоритмов и цифровых сертификатов X.509;
 обеспечение конфиденциальности передаваемой информации с помощью
отечественных алгоритмов шифрования;
16
 обеспечение удаленной регистрации пользователей и жизненного цикла
ключа;
 независимость от оператора;
 функционирование в общедоступных сетях связи.
Функционирование систем на базе данной платформы возможно в мобильных
сетях общего пользования (GSM 2G/2.5G) с распространенной технологией пакетной
передачи данных (GPRS/EDGE). При этом затраты на развертывание данной системы
минимальны, так как не требуется доступ к оборудованию оператора сотовой связи.
Система предназначена для функционирования в открытых IP сетях.
Данная система состоит из клиентской части на базе технологии J2ME и
комплекса серверных компонент на базе платформы J2EE. Система предусматривает
строгую аутентификацию как клиента, так и сервера на основе цифровых сертификатов
X.509 и отечественного алгоритма ЭЦП ГОСТ Р 34.10-94 (по аналогии с SSL версии 1.0
RFC 2246 [1]).
В качестве мобильного терминала, используется мобильное устройство J2ME с
поддержкой TCP сокет соединения (большинство мобильные телефонов, имеющих
профиль мобильного устройства MIDP1.0/1.1). Для хранения ключевого контейнера
используется локальное хранилище RMS или (если поддерживается устройством) JSR72 FileConnection API. Ключевой контейнер защищен буквенно-цифровым паролем,
чувствительным к регистру букв и может содержать специальные символы. Ввод
пароля пользователем необходим каждый раз при обращении к секретному ключу.
Серверная часть платформы представляет собой комплекс J2EE-компонент на
базе сервера приложений JBoss (или другого, например WebSphere). Компонентами
системы являются (представлено на рис. 1):
 центр сертификации;
 центр регистрации;
 сервер БД;
 консоли пользователей и администраторов;
 XML-RPC сервер;
 сетевой шлюз;
 компонент бизнес-логики.
Шлюз обеспечивает взаимодействие с мобильными клиентами по защищенному
протоколу. Далее информационный поток пользователей инкапсулируется в XML-RPC
запросы поверх HTTPS. Таким образом, обеспечивается интеграция с другими
системами на базе J2EE-платформы, так как нет необходимости встраивания
собственных сокет-серверов в J2EE сервер приложений.
17
Рис. 1 Архитектура системы.
Центр регистрации обеспечивает управление учетными данными пользователей
(регистрационная информация пользователя, статус сертификата пользователя, история
отозванных сертификатов и т.д.) и взаимодействием с сервером БД (поддерживается
широкий спектр БД: Hypersoniq, MySQL, PostgreSQL, Orcale и MS-SQL2000).
Центр сертификации обеспечивает издание сертификатов пользователей и
сертификата аутентификации сервера.
С помощью консоли пользователя, клиент системы может узнать информацию о
текущем статусе сертификата и подать запрос на отзыв сертификата в случае потери
устройства.
С помощью консоли администратора производится управление учетными
записями пользователей, изменением статусов сертификатов или их отзыв, а также
общее управление системой.
Компонент бизнес-логики представляет собой собственно интерфейс
взаимодействия с бизнес системой, для которой обеспечивается безопасность работы с
мобильными пользователями.
Регистрация пользователя происходит в два этапа. На первом этапе пользователь
получает одноразовый пароль в конверте, с помощью которого будет происходить
первичная аутентификация пользователя на сервере. На втором этапе происходит
генерация ключевой пары пользователем и создание запроса на сертификат.
После получения запроса, сервер получает регистрационные данные пользователя
из БД и происходит издание сертификата пользователя. Клиенту сертификата
отправляется блок из корневого сертификата Центра Сертификации, сертификата
аутентификации сервера и сертификата аутентификации клиента. Данный блок
зашифрован с помощью ключа, созданного на базе одноразового пароля. Таким
образом происходит первичная аутентификация сервера на стороне клиента. После
получения данного блока и сохранения сертификатов в хранилище, одноразовый
пароль уничтожается.
После прохождения процедуры регистрации, пользователь готов для работы в
системе. Перед соединением с сервером пользователь вводит пароль доступа к
секретному ключу. Далее, клиентское приложение формирует блок аутентификации
пользователя, состоящий из собственного сертификата аутентификации и сообщения
Diffie-Hellman. Данный блок подписывается на секретном ключе клиента по алгоритму 
18
ЭЦП ГОСТ Р 34.10-94 и отравляется серверу. После завершения процесса
аутентификации, сервер и клиент согласовывают сессионный ключ в соответствии с RFC
4357 [2]. Шифрование передаваемой информации осуществляется с помощью ГОСТ
28147-89 в режиме OFB. В случае разрыва соединения, процесс аутентификации
пользователя повторяется.
Выбор соответствующих криптографических алгоритмов и алгоритмов ЭЦП
связан с оценкой скорости выполнения криптографических операций на мобильных
устройствах на базе платформы J2ME. Так, процесс генерации ключевой пары ГОСТ Р
34.10-94 занимает в среднем 7-10 секунд, а процесс подписания и проверки подписи в
среднем 3-5 секунд. Соответствующие показатели для ГОСТ Р 34.10-2001 составляют
20 минут и 7-8 минут соответственно.
К особенностям разработанной системы относятся:
1. Поддержка всех мобильных устройств, имеющих профиль MIDP1.0/2.0 с
возможностью создания TCP соединения.
2. Функционирование в стандартных сетях связи.
3. Независимость от оператора сотовой связи.
4. Интегрируемость в существующие J2EE бизнес системы.
5. Поддержка динамически подгружаемых модулей и наличие API для
расширения функционала системы.
Таким образом, данная платформа может быть интегрирована в существующие
корпоративные информационные системы (КИС) для обеспечения защищенного
информационного обмена с мобильными пользователями, а также быть основой для
построения новых КИС.
Библиографический список
1. Dierks T., Allen C. «The TLS Protocol Version 1.0». – IETF, RFC 2246, January
1999.
http://www.ietf.org/rfc/rfc2246.txt
Popov V., Kurepkin I., Leontiev S. «Additional Cryptographic Algorithms for Use with GOST
28147-89, GOST R 34.10-94, GOST R 34.10-2001, and GOST R 34.11-94 Algorithms». –
IETF, RFC 4357, January 2006, http://www.ietf.org/rfc/rfc4357.txt
УДК 004.056
С.В. Запечников
ОБЕСПЕЧЕНИЕ ВЫСОКОЙ ДОСТУПНОСТИ КЛЮЧЕВОГО МАТЕРИАЛА
КРИПТОСИСТЕМ В УСЛОВИЯХ ВОЗДЕЙСТВИЯ ДЕСТАБИЛИЗИРУЮЩИХ
ФАКТОРОВ
Представлен подход к обеспечению высокой доступности ключевого материала
криптосистем на основе его пространственного и временного распределения. Введены
вероятностные показатели доступности ключевого материала и предложены методы
управления ключами, позволяющие достигать заданных количественных показателей
доступности.
Решение проблемы обеспечения стойкости средств криптографической защиты
информации (СКЗИ) в условиях частичного разрушения ключевой системы (КС) требует
создания адекватной модели КС СКЗИ. Такая модель разработана автором в ходе ранее
проведенного исследования. Основные ее положения представлены в работах [1–3]. Под
ключевым материалом СКЗИ будем понимать совокупность всех криптографических
ключей участников криптосистемы и информацию, сопровождающую их применение в
СКЗИ. Модель оперирует понятиями объекта ключевой системы (ОКС) – минимальной 
19
совокупности взаимосвязанного ключевого материала – и компонента ОКС –
минимальной логически неделимой единицы ключевого материала в составе ОКС. В
качестве наиболее существенного структурного свойства КС выделяется вычислимость
одних компонентов ОКС из других компонентов. На основе него определяются понятия
функциональной зависимости и временной функциональной зависимости между
компонентами ОКС, строятся графы функциональной зависимости для ОКС. Похожим
образом в терминах теории сложности и теории графов могут быть описаны более
крупные элементы: взаимосвязи между ОКС в любой подсистеме КС и КС в целом.
Второе необходимое условие решения обозначенной проблемы – создание
инструментально-методической базы для проведения количественных оценок
безопасности ключевого материала СКЗИ. Для этого необходимо учесть три основных
аспекта безопасности ключевого материала: доступность, аутентичность,
конфиденциальность, и сформировать интегральный показатель безопасности. Автором
доклада ранее был предложен подход к построению таких оценок, основные положения
которого также представлены в работе [3]. Все три аспекта безопасности ключевого
материала характеризуются количественными показателями, построенными на основе
единой модели противника, которая учитывает большинство возможностей нарушения
безопасности ключевого материала. Система показателей безопасности естественным
образом расширяется для ОКС и для подсистем КС. Разработанный методический аппарат
позволяет исследовать весьма широкий класс ключевых систем СКЗИ, которые реализуют
симметричные, асимметричные и комбинированные криптосистемы, включая
криптосистемы с ИОК, идентификационные и бессертификатные криптосистемы.
Одной из трех составляющих безопасности ключевого материала СКЗИ является его
доступность для авторизованных участников криптосистемы. Задача обеспечения
доступности информации имеет ряд особенностей, когда рассматривается применительно
к ключевому материалу криптосистем. С одной стороны, здесь необходим учет
возможностей авторизованных субъектов криптосистемы пользоваться альтернативными
способами доступа к объектам КС. С другой стороны, требуется принять во внимание все
возможности противника осуществить НСД к ключам. При этом должны учитываться как
зависимости между ключевым материалом, присутствующим в криптосистеме
одновременно, так и зависимости между разновременными значениями ключей.
Составной частью решаемой проблемы является поиск конкретных механизмов,
позволяющих добиться повышения безопасности ключевого материала в условиях
действия на СКЗИ многообразных дестабилизирующих факторов различной природы. Как
показано автором работы, в основе всех таких механизмов лежит один из двух методов:
1) «пространственное» распределение ключевого материала: при этом повышение
стойкости достигается за счет добавления избыточных экземпляров ОКС и введения
аналитических зависимостей между одновременно существующими компонентами ОКС;
2) «временнóе» распределение ключевого материала: в этом случае повышение
стойкости достигается за счет введения аналитических зависимостей между значениями
компонентов ОКС, которые они принимают на непересекающихся временных интервалах.
Элементы КС, основанные на принципах пространственного и временного
распределения ключей, обобщаются понятием схемы управления ключевым материалом
(СУКМ). Под СУКМ будем понимать совокупность однородных в функциональном
отношении криптографических протоколов и функций, предназначенных для
организованного управления ОКС (компонентом ОКС) на протяжении его жизненного
цикла. Введем следующее формальное определение. СУКМ – это совокупность четырех
алгоритмов или протоколов, выполнимых за полиномиальное время:
KMMS={Par_Gen, KM_Gen_Distr, KM_Regen_Redistr, KM_Del}.
В нее входят следующие алгоритмы и (или) протоколы.
1. Алгоритм генерации начальных параметров схемы Par_Gen – детерминированный
или вероятностный алгоритм, исходными данными для которого служат политика 
20
управления ключами и (или) политика безопасности КС. Алгоритм возвращает
выбранные им значения параметров криптосистемы, необходимые для применения
СУКМ.
2. Алгоритм (протокол) генерации и раcпределения ключевого материала
KM_Gen_Distr – вероятностный алгоритм, на вход которого подаются выработанные
алгоритмом Par_Gen параметры криптосистемы. Он возвращает выбранные в
соответствии с этими параметрами значения множества компонентов ОКС,
задействованных в СУКМ.
3. Алгоритм (протокол) регенерации и перераспределения ключевого материала
KM_Regen_Redistr – детерминированный либо вероятностный алгоритм, на вход которого
подаются параметры криптосистемы, выработанные алгоритмом Par_Gen, значения
компонентов ОКС, выработанные при вызове алгоритма KM_Gen_Distr либо при
предыдущих вызовах алгоритма KM_Regen_Redistr. Алгоритм возвращает выбранные им
новые значения множества компонентов ОКС, задействованных в СУКМ.
4. Алгоритм уничтожения ключевого материала KM_Del – детерминированный
алгоритм, на вход которого подаются параметры, выработанные алгоритмом Par_Gen.
Алгоритм присваивает всем компонентам ОКС, задействованным в СУКМ, пустые
значения.
Пусть Λ=<λ1, λ2, ... , λm> – последовательность временных интервалов, составляющих
жизненный цикл СКЗИ, на каждом из которых ключевой материал неизменен. Алгоритм
Par_Gen выполняется однажды перед началом работы СУКМ, KM_Gen_Distr выполняется
перед началом интервала λ1, KM_Regen_Redistr выполняется каждый раз перед началом
интервалов λ2, ... , λm, KM_Del выполняется после окончания интервала λm.
В ходе исследования проанализировано несколько СУКМ: 1) простое резервирование
ключевого материала; 2) пороговая схема разделения секрета (СРС); 3) СРС с
произвольной структурой доступа; 4) СРС, функционирующая в модели «активной
безопасности»; 5) схема дистанционного управления ключами; 6) схема эволюции
ключей, обеспечивающая совершенную опережающую безопасность (perfect forward
security); 7) схема эволюции ключей с изоляцией ключа (key-insulated cryptosystem); 8)
схема эволюции ключей с базой, устойчивая к вторжению (intrusion-resilient cryptosystem).
Формализованные определения каждой из них даны на основе обобщения
многочисленных примеров криптосхем, взятых из зарубежной литературы.
Показатели доступности – объективно фиксируемые величины. Анализ показателей
доступности для всех СУКМ имеет целью получение выражений для вероятности
α(k
СУКМ,Λ) события, заключающегося в том, что подвергнутый преобразованию ключевой
материал недоступен в СКЗИ, и сопоставление их с величинами, характеризующими
доступность ключевого материала без применения СУКМ. Изменение показателей
доступности компонентов ОКС при применении к ним СУКМ характеризуется величиной
– коэффициентом, выражающим отношение вероятностей того, что один и тот же
ключевой материал недоступен на временных интервалах одинаковой длины в условиях
применения к нему СУКМ и без таковой:
 
 




,
,
k
k
Q
СУКМ
СУКМ


.
Приведем примеры полученных результатов.
При n-кратном резервировании компонента ОКС k утрата его доступности наступает,
когда утрачены все n экземпляров ОКС, содержащих копию k, поэтому для СУКМ
«Резервирование ключевого материала» показатель доступности выражается формулой
 
    

 
n
l
l
Г
Backup k K k
1
 , 1 , ,
где KГ(k
(l)
, λ) – коэффициент готовности l-го экземпляра ОКС на интервале λ.
21
Если все n экземпляров ОКС характеризуются равными и постоянными
интенсивностями μ атак противника, приводящих к утрате доступности, а суммарная
интенсивность атак до и после применения СУКМ не изменяется, получаем:
 
 
n
n
Backup
e
e
Q








 

1
1
.
Для резервированных невосстанавливаемых ОКС дополнительно можно получить
выражение, показывающее увеличение среднего времени до наступления утраты
доступности компонента k:


 
n
l
Backup c
T l
T
T
1
1
.
Оно показывает, что с ростом кратности резервирования ОКС среднее время до утраты
доступности компонента k возрастает относительно медленно.
Для СУКМ «(m,n)-пороговая СРС» показатель доступности есть вероятность того, что
компонент ОКС k
TSS, к которому применена пороговая СРС, не будет доступен СКЗИ в
произвольный момент времени, приходящийся на временной интервал λ, на котором КС
является невосстанавливаемой:
        



  
n m
l
n l
Г
l
Г
l
n
TSS k C K s K s
0
 , 1 1 , , ,
где KГ(s,λ) – коэффициент готовности каждой из долей секрета.
Коэффициент, выражающий отношение показателей доступности ключевого материала
на временном интервале λ при примененной к нему СРС и без таковой, при тех же
предположениях и интенсивности атак μ равен:
 
 
   
n
n m
l
n l
l
l
n
TSS
e
C e e
Q



  







 


1
1 1
0
.
Найденные показатели доступности СУКМ характеризуют их способность повышать
показатели доступности ключевого материала. Однако при реализации в СКЗИ некоторых
СУКМ могут быть реализованы дополнительные возможности восстановления ключей
текущего периода при условии архивирования ключей предыдущих периодов. Тогда
достигаемый на практике показатель доступности может быть выше расчетного. Однако
архивирование секретных ключей увеличивает вероятность их компрометации, т.е.
повышение показателей доступности отрицательно влияет на показатели секретности.
Анализ показателей доступности элементов КС, реализующих СУКМ, может быть
проведен при более сильном предположении о восстанавливаемости элементов КС на
каждом временном интервале из последовательности Λ. В таком случае достижимы более
высокие коэффициенты доступности для каждого компонента ОКС и, как следствие, для
КС в целом. Однако анализ доступности восстанавливаемых элементов КС – значительно
более трудная задача, чем для невосстанавливаемых элементов. В большинстве
практических случаев расчет надежности сложных восстанавливаемых систем с помощью
точных аналитических методов невозможен в связи с большой размерностью систем
уравнений, сложной структурной схемой и большими погрешностями.
С целью экспериментальной проверки полученных результатов автором
разрабатывается протокольное обеспечение многофункциональной СКЗИ, сохраняющей
криптографическую стойкость в условиях частичного разрушения КС.
Таким образом, основные результаты проведенного исследования заключаются в
следующем. Впервые предложен подход к оценке количественных показателей
безопасности ключевого материала СКЗИ. В составе системы количественных
показателей безопасности ключевого материала определены показатели и критерии его
доступности на одном временном интервале и на непрерывной последовательности 
22
интервалов. Критерии доступности определяют необходимые условия достижения
доступности компонента ОКС с заданной вероятностью. Введено новое понятие схемы
управления ключевым материалом и исследованы показатели доступности ряда схем
управления ключевым материалом, а также относительное изменение этого показателя по
сравнению с ключевым материалом до применения к нему данных схем. Соотношение
показателей доступности для схем управления ключевым материалом зависит от
множества факторов и может быть определено по полученным в работе аналитическим
зависимостям либо численными методами.
Библиографический список
1. Запечников, С.В. Живучесть систем защиты информации как фактор обеспечения
информационной и функциональной безопасности распределенных компьютерных систем
/ С.В. Запечников // Безопасность информационных технологий. 2005. № 4. С. 8–17.
2. Запечников, С.В. Модель ключевой системы многопользовательских средств защиты
информации / С.В. Запечников // Управление защитой информации: Материалы X
международной научно-практической конференции: сб. науч. тр. Минск, «Амалфея»,
2006. С. 199–201.
3. Запечников, С.В. Принципы обеспечения стойкости криптосистем к компрометации
ключей / С.В. Запечников // Безопасность информационных технологий. 2008. № 1. 7 с.
УДК 004.042
Е. В. Игоничкина
ИССЛЕДОВАНИЕ СТАТИСТИЧЕСКИХ СВОЙСТВ КАНДИДАТОВ КОНКУРСА
ESTREAM (ПРОФИЛЬ 1)
В статье приведена методика НИСТ тестирования ГПСП. Приведены результаты
исследования статистических свойств поточных шифров, представленных на конкурс
eStream по профилю 1.
Качественный генератор псевдослучайных последовательностей (ГПСП),
ориентированный на использование в системах поточного шифрования, должен быть
криптографически стойким и обладать хорошими статистическими свойствами. Такой
генератор должен быть непредсказуем вправо, т.е. у криптоаналитика не должно быть
возможности предсказать следующий бит последовательности на основании известных
предыдущих. Также он должен быть непредсказуем влево, т.е. у криптоаналитика не
должно быть возможности на основе анализа фрагмента последовательности определить
начальное заполнение генератора. Другими словами генератор гаммы должен
производить псевдослучайную последовательность неотличимую от истинно случайной.
Для анализа ГПСП используют множество различных тестов, например набор
статистических тестов национального института стандартов и технологий (НИСТ)
содержит 16 тестов. Эти тесты сосредоточены на множестве различных типов
неслучайности, которые могут существовать в тестируемой последовательности.
Основным принципом тестирования является проверка нулевой гипотезы H0: тестируемая
последовательность случайна. Альтернативной гипотезой Ha является гипотеза о том, что
последовательность неслучайна. По результатам каждого теста нулевая гипотеза либо
принимается, либо отвергается.
Для анализа прохождения псевдослучайными последовательностями статистического
теста используются различные подходы. Пусть дана двоичная последовательность s.
Необходимо установить проходит данная последовательность статистический тест или
нет. Возможны следующие подходы [1]:
1. Пороговый уровень.
23
Этот подход заключается в вычислении для последовательности s тестовой статистики
c(s) и сравнение ее с пороговым уровнем. Правило принятия решения в данном случае
формулируется следующим образом: двоичная последовательность s не проходит
статистический тест всякий раз, когда вычисленное значение тестовой статистики c(s)
оказывается ниже порогового значения.
2. Доверительный интервал.
В данном подходе для последовательности s также вычисляется тестовая статистика
c(s), но при этом правило принятия решения формулируется следующим образом:
двоичная последовательность s не проходит статистический тест, если вычисленное
значение тестовой статистики c(s) оказывается вне пределов доверительного интервала,
вычисленного для заданного уровня значимости . Уровень значимости определяет
степень недостоверности исхода эксперимента.
3. Значение вероятности.
Этот подход заключается в вычислении для последовательности s тестовой статистики
c(s) и соответствующего ей значения вероятности (P-value). Здесь тестовая статистика
рассматривается как реализация случайной величины, которая подчиняется известному
закону распределения. Обычно статистические тесты строятся таким образом, чтобы
большие значения тестовой статистики указывали на неслучайность тестируемой
последовательности. P-value – вероятность того, что полученная тестовая статистика
будет больше, чем аналогичная тестовая статистика для случайной последовательности.
Следовательно, маленькие значения P-value рассматриваются как доказательство того, что
тестируемая последовательность неслучайна. Правило принятия решения в данном случае
формулируется следующим образом: для фиксированного уровня значимости  двоичная
последовательность s не проходит статистический тест, если P-value < .
Подход, основанный на использовании порогового уровня, является не достаточно
строгим. Подход, основанный на использовании доверительного интервала, является
более надежным по сравнению с первым. Однако, необходимо помнить о том, что
различным уровням значимости соответствуют различные доверительные интервалы.
Третий подход, основанный на использовании значения вероятности P-value, имеет
дополнительное преимущество по сравнению с предыдущим – не требуется
конкретизации уровня значимости . То есть однажды вычисленное значение вероятности
P-value может сравниваться с любым уровнем значимости  без дополнительных
расчетов.
В статистическом наборе тестов НИСТ используется третий подход.
В руководстве НИСТ [2] предлагается следующий порядок тестирования отдельной
двоичной последовательности:
1. Выдвигается нулевая гипотеза H0, т.е. предполагается, что последовательность
случайна.
2. Для данной последовательности вычисляется тестовая статистика.
3. Вычисляется значение вероятности P-value.
4. Вычисленное значение P-value сравнивается с уровнем значимости . Если P-value 
, то гипотеза H0 принимается, в противном случае гипотеза H0 отвергается.
На практике существует много различных стратегий, используемых для
статистического анализа генераторов ПСП. В руководстве НИСТ предлагается следующая
стратегия:
1. Выбирается генератор, который будет тестироваться. Генератор должен производить
двоичную последовательность нулей и единиц длиной n.
2. Для выбранного на предыдущем шаге генератора конструируется набор, состоящий
из m двоичных последовательностей каждая длиной n бит.
3. Выполняется набор статистических тестов. Каждый статистический тест оценивает
каждую n-битную последовательность и вырабатывает одно или более значений P-value. 
24
На основе этих значений P-value может быть сделано заключение, касающееся качества
тестируемой последовательности.
4. Для каждого статистического теста производится набор значений P-value,
соответствующий набору из m последовательностей. Для фиксированного уровня
значимости ожидается, что определенный процент значений P-value будет указывать на
то, что последовательность не проходит тестирование. Например, для уровня значимости
 = 0,01 ожидается, что около 1% последовательностей провалит тестирование.
Последовательности проходят статистические тесты всякий раз, когда P-value  , и не
проходят во всех остальных случаях.
В руководстве НИСТ [2] предлагается два способа интерпретации результатов:
1. Изучение доли последовательностей, прошедших каждый статистический тест.
Сначала определяется доля последовательностей, проходящих конкретный тест, т.е. те
для которых P-value  . Диапазон приемлемых значений этой доли определяется с
использованием доверительного интервала, границы которого определяются как
   
 
m
p
 

 
   
1
max min 1 3 .
Если доля выходит за пределы этого интервала, то тестируемые данные считаются
неслучайными.
2. Анализируется число появлений значений P-value.
Полученные значения P-value должны подчиняться равномерному закону
распределения. Для проверки этого предположения для каждого статистического теста
подсчитывается число попаданий Fi значений P-value в каждый из 10 равных
подинтервалов, на которые разбивается интервал [0,1]. Подсчитанные значения Fi могут
быть наглядно представлены в графическом виде с помощью гистограммы.
Однородность распределения значений P-value также может быть определена через
применение теста 
2
. Для этого вычисляется статистика









10
1
2
2
10
10
i
i
m
m
F
 .
Затем для вычисленной статистики 
2
вычисляется значение вероятности P-valueT:








 
2
,
2
9
2

P value igamc T
.
Если вычисленное значение P-valueT  0,01, то можно считать, что последовательности
распределены равномерно.
Таким образом, считается, что генератор успешно прошел тестирование, если доля
последовательностей, прошедших каждый из тестов, лежит в интервале [pmin; pmax], и для
каждого из тестов P-valueT  0,01.
Набор статистических тестов НИСТ был использован для тестирования поточных
шифров представленных на конкурс eStream в профиле 1, шифры ориентированные на
программную реализацию. На победу в этом профиле претендует 8 шифров: CryptMT,
Dragon, HC, LEX, NLS, Rabbit, Salsa20, SOSEMANUK.
Для каждого из перечисленных шифров было сгенерировано по m = 100
последовательностей, 106
бит каждая. Уровень значимости был принят равным  = 0,01.
Для выбранных параметров m и  были рассчитаны значения границ доверительного
интервала: [96,016; 101,99]. То есть считается, что шифр прошел тест, если для более чем
96,016% тестируемых последовательностей P-value  0,01.
Статистические тесты из набора НИСТ генерируют различное количество значений Pvalue, так, например, частотный тест генерирует одно значение P-value для каждой 
25
последовательности длиной n бит, а тест серий по два значения P-value для каждой такой
последовательности. В итоге для всех 16 тестов генерируется 188 значений.
Полученные значения P-value могут быть наглядно представлены на графике.
Например, на рисунке 1 приведены результаты тестирования шифра CryptMT.
0 20 40 60 80 100 120 140 160 180
0.94
0.95
0.96
0.97
0.98
0.99
1
1.01
.
Номер теста
Доля
Рисунок 1 – Доля последовательностей, прошедших каждый статистический тест
Также эти данные можно более кратко представить в табличном виде. В таблице 1
приведены данные по количеству тестов, которые прошло более 96,016%
последовательностей, и более строгий случай: количество тестов, которые прошло не
менее 99% последовательностей, для каждого из шифров.
Таблица 1
pmin, % CryptMT Dragon HC LEX NLS Rabbit Salsa20 SOSEMANUK
99 133(70,7%) 135(71,8%) 132(70,2%) 139(73,9%) 142(75,5%) 137(72,9%) 134(71,3%) 135(71,8%)
96,016 186(98,9%) 187(99,5%) 184(97,9%) 182(96,8%) 187(99,5%) 184(97,9%) 183(97,3%) 187(99,5%)
Ни один из тестируемых шифров не прошел абсолютно все тесты. Лучший результат
показал шифр NLS, причем при обоих критериях прохождения 99% и 96,016%. При
использовании доверительного интервала с нижней границей pmin = 96,016% худшие
результаты показали шифры LEX и Salsa20, а при pmin = 99% – HC и CryptMT.
Для второго способа интерпретации также можно использовать графическое
представление. На рисунке 2 приведены результаты тестирования 100
последовательностей, сгенерированных поточным шифром CryptMT, частотным
(монобитным) тестом.
0 20 40 60 80 100
0
0.17
0.33
0.5
0.67
0.83
1
.
0 0.2 0.4 0.6 0.8 1
0
2.5
5
7.5
10
12.5
15
.
a) б)
Fi
P-value
Рисунок 2 – (а) результаты тестирования шифра CryptMT частотным тестом;
(б) гистограмма распределения значений P-value для частотного теста
Для всех шифров были рассчитаны значения вероятности P-valueT. В таблице 2
приведены данные о количестве значений P-valueT, не превышающих уровень значимости
0,01.
Таблица 2
CryptMT Dragon HC LEX NLS Rabbit Salsa20 SOSEMANUK
5 1 2 3 1 1 2 2
26
Исходя из полученных результатов (таблица 2), можно сделать вывод, что лучшими
свойствами однородности обладают последовательности, сгенерированные шифрами
Dragon, NLS и Rabbit. Худшими по этому показателю оказались шифры CryptMT и LEX.
В заключении можно сказать, что лучший результат показал шифр NLS, а худший
шифры CryptMT и LEX. В целом все рассмотренные поточные шифры прошли
тестирование довольно успешно и, соответственно, обладают хорошими статистическими
свойствами.
Библиографический список
1. J. Soto Statistical Testing of Random Number Generators // http://csrc.nist.gov/rng/nisscpaper.pdf
2. A Statistical Test Suite for the Validation of Random Number Generators and Pseudo Random
Number Generators for Cryptographic Applications. NIST Special Publication 800-22. May 15,
2001
УДК 004.738.5-004.722
Д. Н. Пичулин
ВИРТУАЛЬНАЯ ЛОКАЛЬНАЯ СЕТЬ В СЕТИ ИНТЕРНЕТ
Рассматриваются модели и методы реализации виртуальной локальной сети в сети
интернет, которая будет прозрачно обеспечивать защиту передаваемой информации,
поддерживать любую степень масштабируемости, стабильность состояния при
разрывах и обеспечивать интерфейс для наращивания функциональности.
Использование сети Интернет в качестве основного средства коммуникации становится
единственным адекватным решением в мире современных технологий. Создание
собственных сетей не потеряло свою актуальность разве что в решениях внутреннего
локального использования в рамках организации или комплекса зданий. Но и такие сети
рано или поздно перестают быть замкнутыми в силу необходимости удаленного доступа
для мобильных пользователей или филиалов, и какой-то контур такой сети практически
неизбежно будет использовать сеть Интернет. Это ставит ряд задач с передачей
информации представляющей ценность. Более того, не только сама информация
становится объектом защиты; источник информации, маршрут следования, размер блока
данных, частота передачи фрагментов — всё это в совокупности должно быть защищено
от анализа, то есть должен быть комплексный подход к защите информации. Очевидно,
что Интернет является транспортом данных и не создан защищать их, но с другой стороны
доступность и глобальность сети Интернет является огромным преимуществом по
сравнению с любыми другими средствами коммуникации. Итак, мы вплотную подошли к
самой формулировке проблемы. С одной стороны у нас есть доступное и выгодное
средство — сеть Интернет, с другой стороны обеспечение защиты информации в
очерченном комплексном смысле является нерешенной задачей. Более того, сама
коммуникация двух удаленных узлов вряд ли возможна без помощи специализированных
приложений или третьей стороны предоставляющей подходящий сервис, которых
становится все больше.
На сегодняшний день многие компании предлагают свои решения по созданию
виртуальных частных сетей, VPN. По сути, речь идет об оверлейных сетях, то есть сетях
внутри сетей. Кроме VPN сетей, с топологией серверов-шлюзов и подключенных к ним
пользователей, существуют одноранговые сети, в которых участники являются клиентами
и серверами одновременно, и гибридные сети, сочетающие положительные свойства
обеих. Но все существующие решения не универсальны. Создание с их помощью
нестандартных сетей с большим количеством серверов и при этом обладающих высокой 
27
стабильностью требует огромных затрат на реализацию и поддержание. Кроме того,
актуальные на сегодняшний день задачи с обеспечением анонимности и выбора
маршрута доставки в них не решены совсем. И если речь идет о прозрачном создании
виртуальных локальных сетей, то существующие решения ограничивают максимальное
количество пользователей в сегментах.
Первоначально была сформулирована задача создания простой в использовании
виртуальной сети, целью которой было прямое соединение любых двух узлов в Интернет
в не зависимости от способа их подключения. При этом само соединение между ними
будет защищено, а виртуальная часть будет выглядеть как локальная сеть, то есть для
конечного пользователя это будет выглядеть как если бы узел, с которым он хочет
связаться, находится в прямом доступе, без шлюзов и посредников. Анализ моделей такой
сети показал, что для гарантированной работы, участников в ней должно быть как
минимум трое. И как минимум один из участников должен иметь прямой IP-адрес в
Интернет. Модель такой сети следующая. Двое участников подключаются к третьему,
имеющему прямой IP-адрес. Устанавливается сервисное соединение. Создается ядро,
представляющее виртуальную сетевую карту и соответствующую ей сеть, в этой
внутренней сети назначаются собственные IP-адреса. Пакеты внутри возникшей сети
являются открытыми, но реально они шифруются и инкапсулируются, используя
транспортный протокол UDP в Интернет. Сервисное соединение также использует UDP
транспорт. Третий участник может не иметь IP-адреса во внутренней сети, только
предоставляя сервис по поддержке обеспечения ядра у других участников. Таким образом,
решая первоначальную задачу, можно определить несколько сущностей, каждая из
которых представляет собой категорию, или уровень. Уровень ядра. — Представляет
собой формирование виртуального стека пакетов из входящих данных и инкапсуляцию
виртуальных пакетов в UDP. Имеет набор соответствий виртуальных и реальных IPадресов и набор состояний всех соединений. В ядре происходит обработка пакетов в
соответствии с текущим состоянием и набором ключей. Уровень ядра недоступен для
прямого вмешательства и является прозрачным слоем, обеспечивающим виртуальность и
комплексную криптографическую защиту передаваемых данных, работает постоянно на
уровне драйверов операционной системы. Уровень сервисов. — Сервисы являются
дополнительными к ядру службами, которые не решают критичных задач, находясь на
более низком уровне по приоритету. Сформированное ядро, само по себе, является уже
работающим решением, в то время как сервисы помогают обеспечить формирование и
сбор данных для конкретного ядра. В рассмотренной выше постановке задачи, сервисом
будет являться возможность обращения к участнику с прямым IP-адресом, с целью
установки прямого соединения с другим участником, что в конечном виде будет
представлять собой наполнение ядра данными о соответствии реальных и виртуальных
адресов.
Основной принцип архитектуры неограниченно масштабируемой сети это наличие
возможности прямого соединения между любыми двумя узлами. Если такой возможности
нет, то существует какое-то конечное число максимального количества поддерживаемых
пользователей. Балансировка нагрузки между многочисленными серверами единственный
возможный способ обеспечения растущих потребностей. В рассматриваемой нами
архитектуре сети, возможна поддержка как двух, так и двух миллионов и более
пользователей. Это достигается за счет возможности прямого соединения абонентов, без
нагрузки на других участников. И это возможно благодаря протоколу UDP, выбранного в
качестве транспорта данных для рассматриваемой сети. Во-первых, UDP — один из самых
простых протоколов транспортного уровня, имеет заголовок всего в 4 байта и широко
используется в сети Интернет, что означает его поддержку всеми существующими
аппаратными средствами. Во-вторых, этот протокол является наиболее подходящим
средством для прямого соединения узлов, имеющих реальный IP-адрес. В общем случае,
возможны несколько вариантов передачи информации между узлами «А» и «Б», не 
28
имеющих прямых IP-адресов, с помощью протокола UDP [1]. Будем считать, что
существует узел «В», имеющий прямой IP-адрес. Самый простой и надежный способ
соединения — это ретрансляция, однако наименее эффективный. Трафик между «А» и
«Б» просто ретранслируется через узел «В». Существует метод STUN [2] обхода NATсерверов. «А» и «Б» имеют активное соединение с «В». При инициализации соединения
один из участников просит помощи у «В», и тот посылает узлам «А» и «Б» информацию
об их видимых адресах и портах в сети Интернет. Суть метода основана на логике работы
серверов NAT, так как оба участника имеют соединение с «В», то связка IP-адрес порт у
них является ключевой. «А» и «Б» начинают посылать UDP пакеты с соответствующими
IP-адресами и портами. На серверах NAT в этот момент открываются связки с обратными
путями до соответствующих узлов. Таким образом, устанавливается прямое соединение
между «А» и «Б». По данным из [1], 82% всех NAT-серверов поддерживают этот метод, а
наиболее популярные серверные решения поддерживают этот метод в 100% случаях.
Таким образом, мы имеем протокол, отвечающий всем нашим требованиям, и который
будем использовать для транспорта наших данных в сети Интернет.
Архитектура сети предполагает изначальное равноправие участников. Конкретные
пользователи имеют возможность выбора, какие сервисы они будут поддерживать. Таким
образом, разделение на клиентов и серверов в привычных понятиях не существует. Любой
пользователь, выполняя и поддерживая некоторые условия, например, имея реальный IPадрес и поддерживающий сервис помощи организации каналов через NAT-шлюзы или
сервис ретрансляции, вполне может считаться сервером. Получается, что должны
существовать политики безопасности, от выбора которых и будет зависеть поведение узла
в сети. Политики безопасности сейчас проходят стадию формулировки. Однозначно
сформулирована обязательная политика обмена ключами. Любой участник сети должен
поддерживать протокол первоначального рукопожатия, основанный на общем секрете и
алгоритме Диффи — Хеллмана, для выработки симметричных ключей и аутентификации
абонентов, и протокол инкапсуляции, использующий эти ключи. В качестве последнего
предполагается использовать опыт реализаций протоколов IPSEC ESP [3] для конечных
узлов и вложенную инкапсуляцию маршрутов следования для корректной маршрутизации
при ретрансляции пакетов.
Исследование моделей и методов реализации рассматриваемой сети имеет огромное
значение. Ни одно из существующих решений, на данный момент не использует
накопленный опыт и постоянно возникающие новые идеи. Данный проект использует весь
современный опыт организации сетей и защиты информации, по сути, представляя собой
хорошую основу для реализации любых решений. Идеи об anycast-адресах [4], по
которым происходит поиск необходимого сервиса, идеи о системе поиска информации
Chord [5], идеи об onion routing [6], частично реализованные в сетях tor, всё это очень
хорошо вписывается в рассматриваемую сеть. На данный момент, существует
единственный аналог виртуальной локальной сети, сеть Hamachi. Однако, эта сеть
строится по принципу клиент-серверной модели с возможность прямых соединений типа
клиент-клиент, и количество клиентов в сети строго ограничено. В проектируемой сети
количество пользователей является теоретически неограниченным. Детальная проработка
всех понятий и сущностей позволит создать сеть, которая будет простым и
универсальным решением для огромного количества задач.
Следует выделить ключевые моменты. У данного проекта огромные перспективы. На
текущий момент у него не существует аналогов, которые могли бы стать единым базисом для
реализации самых разнообразных сервисов. Это самая главная особенность и в этом
заключается её уникальность, проектируемая сеть — это основа для любых уже
существующих сервисов, она выводит их на совершенно новый уровень защиты
информации и не требует никакой дополнительной адаптации. Если существующие
проекты умеют решать специализированные задачи, то рассматриваемая сеть способна
решить их все. Функционирующая виртуальная локальная сеть ничем не отличается от 
29
обычной сети для конечных приложений, работать в ней будет просто и доступно. Также
данная сеть поддерживает следующие свойства. Возможность децентрализованного
анонимного распространения информации любой ценности, с использованием идей Chord и
собственной топологией сети. Прямое соединение с аутентификацией, для передачи данных
между двумя конкретными узлами. Стабильность состояния, обеспечивающаяся, прежде
всего, количеством пользователей; теоретически такая сеть может существовать при разрывах
между сегментами любой сложности, так как информация хранится и накапливается не в
узлах, а на конечных пользователях. Для решения трудоемких задач предусмотрено создание
специализированных сервисов, которые могут поддерживать любые пользователи. И все это в
условиях прозрачной криптографической защиты реальных данных. Развитие сети позволит
решить многие актуальные задачи коммуникации и защиты информации простым и
надежным образом.
Библиографический список
1. Ford B. Peer-to-Peer Communication Across Network Address Translators,
http://www.bford.info/pub/net/p2pnat/, 2005.
2. Rosenberg J. STUN - Simple Traversal of User Datagram Protocol (UDP) Through
Network Address Translators (NATs). http://tools.ietf.org/html/rfc3489, 2003.
3. Kent S. IP Encapsulating Security Payload (ESP). http://www.faqs.org/rfcs/rfc4303.html,
2005.
4. Jtk. Anycast Addressing on the Internet. http://aharp.ittns.northwestern.edu/papers/k5-
anycast/index.html, 2004.
5. Stoica I. Chord: A Scalable Peer-to-peer Lookup Service for Internet Applications.
http://pdos.csail.mit.edu/papers/chord:sigcomm01/, 2001.
6. Dingledine R. Tor: The Second-Generation Onion Router. http://www.onionrouter.net/Publications/tor-design.pdf, 2004.
УДК 621.396
В. Х. Ханов, А. В. Шахматов, А.С. Шаранок
РЕАЛИЗАЦИЯ АЛГОРИТМОВ ШИФРОВАНИЯ НА ЭЛЕМЕНТНОЙ БАЗЕ ПЛИС
Рассматриваются основные результаты аппаратной реализации алгоритмов
шифрования на элементной базе ПЛИС. Представлена модульная структура проекта
создания цифровых устройств с помощью программно-аппаратной системы отладки
В последние годы произошел резкий прорыв как в технологии изготовления
программируемых логических интегральных схем (ПЛИС), так и в разработке
инструментальных средств для проектирования и выпуска цифровых устройств на их
основе.
Технологический прорыв характеризуется резким увеличением числа эквивалентных
логических вентилей, размещаемых на одном кристалле (до 10 млн. вентилей),
повышением рабочей частоты (до 400 МГц) с резким одновременным снижением
стоимости. Это позволяет применять ПЛИС для разработки аппаратных систем
шифрования данных.
Представляемый проект аппаратной шифрации/дешифрации информации выполнен в
системе MAX II PLUS, предназначенной для проектирования ПЛИС фирмы Altera, на
языке описания цифровых устройств VHDL. В этой среде последовательно выполнены все
стадии разработки, начиная с описаний, моделирования, функциональной верификации и
заканчивая получением физического прототипа [1].
В качестве метода криптографической защиты информации выбран алгоритм
криптографического преобразования согласно ГОСТ 28147-89 «Системы обработки 
30
информации. Защита криптографическая. Алгоритм криптографического
преобразования». Реализованы все его режимы.
Проверка работоспособности разработанных алгоритмов была выполнена в
программно-аппаратной системе отладки цифровых систем на базе ПЛИС [2].
Отличительной стороной данной системы является наличие постоянного управляющего
интерфейса (использован USB интерфейс) со стороны персонального компьютера (ПК),
позволяющего технологически просто создавать и отлаживать сложные функциональные
блоки (IP-ядра) в модельном режиме времени. Под управлением ПК производятся такие
операции как подготовка и запись в ПЛИС файла конфигурации, подготовка исходных
данных и запись их в ОЗУ системы, чтение результирующих данных из ОЗУ системы
после обработки и ряд других. Приведенную последовательность операций можно
производить многократно, постепенно наращивая реализацию проекта, что позволят
получить на какой-то конечной i-ой итерации готовый IP-блок. После создания IP-ядра в
модельном времени система позволяет его протестировать в реальном времени с
использованием стандартных интерфейсов передачи данных, также выполненных как IPблоки и «погруженные» в ПЛИС, например RS 232.
Система отладки предназначена для проектирования устройств ЦОС на ПЛИС типа
FPGA семейства FLEX фирмы Altera. Основные критерии отбора при выборе данного
семейства ПЛИС для реализации проекта были: высокое быстродействие; логическая
емкость, достаточная для реализации алгоритмов шифрования; низкая стоимость
микросхем; опыт работы с данными ПЛИС.
Обобщенная структурная схема проекта с управляющими сигналами изображена на
рисунке 1. Проект выполнен из двух модулей interface.vhd и user_code.vhd.
Рассматриваемая структура обеспечивает доступ к содержимому ОЗУ через два порта:
– первый порт выведен непосредственно на микроконтроллер, управляющего работой
системы отладки, и состоит из физических линий: oe, we, ce, addr(8) и data(8);
– второй порт создан для использования со стороны тестируемого IP модуля и состоит
из сигналов: dataRAMin(16), dataRAMout(16), addrRAM(16), oef, wef;
Это обеспечивает независимое тестирование IP модуля пользователя.
Файл interface.vhd содержит процессы, которые синхронизируют запросы и
определяют очередь доступа к ОЗУ. Данный файл не должен изменяться со стороны
пользователя.
Файл user_code.vhd предназначен для изменения со стороны пользователя.
Непосредственно в нем находится тестируемый IP модуль криптопреобразований со
своим интерфейсом и дополнительные процессы, которые позволяют осуществить связь
между IP модулем и памятью ОЗУ. Так, например, необходим процесс, которые будет
формировать текущий адрес для чтения и записи в ОЗУ.
31
Рис. 1. Модульная структура проекта
Модульная структура задет строгий набор правил взаимодействия между основными
частями проекта, что позволяет ускорить процесс разработки алгоритмов
функционирования новых цифровых устройств, реализуемых на элементной базе ПЛИС.
С учетом модульной структуры системы отладки был переорганизован проект,
установлены связи с контроллером ОЗУ и шинами устройства, выполнены этапы
компиляции, моделирования, верификации, синтеза и выбора технологии создания
системы шифрования. Получен файл прошивки ПЛИС, который использует примерно
90% от всего количества программируемых логических блоков ПЛИС EPF10K30.
Выполнена модернизация программного обеспечения системы отладки, которое
позволяет в модельном времени тестировать алгоритмы шифрации, реализованные для
ПЛИС фирмы Altera. Разработаны тестовые варианты. В качестве внешних тестов
использованы, специально разработанные для этого случая, тестовые варианты алгоритма
ГОСТ 28147-89 на языке С.
Тестирование показало полную работоспособность разработанных алгоритмов,
производящих шифрование-дешифрирование данных с использованием рассмотренной
системы отладки цифровых устройств без потерь и внесения избыточности данных,
обрабатываемых на тактовой частотой до 6,5 МГц.
Дальнейшее развитие проекта направлено на создание потокового
криптопреобразования в реальном времени и установление реальной производительности
аппаратной реализации криптоалгоритма ГОСТ 28147-89 на элементной базе ПЛИС.
Библиографический список
Микроконтроллер
clk
start
stop
dec
ce
oe
we
\8
\8
addr
data
Генератор
ОЗУ 1Мбит
oev
wev
cev
addr
\
data
16
\16
Interface.vhdl
dataRAMin
dataRAMo
addrRAM
oef
we
stopf
start
dec
clk
User_code.vh
IP
ПЛИС
32
1. Шаранок А.С. Реализация алгоритма шифрования ГОСТ 28147-89 на языке VHDL.
Решетневсние чтения – 2007; Сиб. гос. аэрокосмич. ун-т. Красноярск, 2007 – С. 318.
2. Ханов В.Х. Система отладки устройств цифровой обработки сигналов / Ханов В.Х.,
Овчинников Е.В., Кищик П.В., Шахматов А.В. Современные проблемы
радиоэлектроники: Сб. научн. ст./ ред.: А.И. Громыко, А.В. Сарафанов: – Красноярск:
Сибирский федеральный ун-т; Политехнический институт, 2007. – С. 552-554.
33
УДК 004.056
А. М. Попов, В. В. Золотарев, А.М. Кукарцев, И. А. Лубкин
МЕТОДИКА СТАТИСТИЧЕСКОГО РАСПОЗНАВАНИЯ ИСПОЛНИМОГО КОДА
ПРОГРАММ1
В статье рассматривается использование статистических методов анализа для
распознавания содержимого нераспознанных участков программ.
Введение
В настоящее время анализ программного кода используется для решения таких задач,
как обнаружение программных закладок, вирусов, а также добавления в программы
«навесных» систем защиты, которые устанавливаются на уже откомпилированную
программу. Такие системы защиты могут быть распределёны по программному коду
(например, см. [1]). Для установки такой системы защиты требуется исчерпывающий
анализ, «разборка» и «сборка» исходной программы. Вследствие несовершенства
анализаторов исполнимого кода не всегда возможно корректно произвести эти операции.
Например, существуют такие участки секции кода, для которых нельзя однозначно
определить, является ли их содержимое кодом или данными. Существующие средства
анализа – дизассемблеры, в частности, наиболее популярный — «IDA», как правило,
используют сигнатурный метод анализа. Но для некоторых участков программы
(например, написанных вручную, содержащих неспецифичные сигнатуры, использующих
неявные переходы и т. д.) они не дают корректного распознавания. В настоящей работе
предлагается альтернативная методика анализа, которая в ряде случаев даёт корректное
распознавание кода.
Рабочая гипотеза методики
Основной рабочей гипотезой методики является предположение о том, что конкретный
компилятор в процессе компиляции программы использует конечный ряд методик
преобразований исходного текста в образ программы. Набор таких методик и порядок их
применения специфичны для каждого конкретного компилятора. В случае, если
программный код создаётся на языках низкого уровня (ассемблерах), работу по
реализации алгоритма в виде последовательностей инструкций, преобразуемых почти
напрямую в исполнимый код, берет на себя программист. В такой ситуации человек также
пользуется ограниченно меняющимся набором методов работы (если не стоит задача
оптимизации исполнимого кода). Таким образом, в результате работы как конкретного
компилятора, так и человека созданная программа обладает некой спецификой,
своеобразными «отпечатками пальцев». Далее, для краткости, под компилятором также
подразумевается человек, пишущий программу на языке низкого уровня. Предположим,
что эта специфика отражается в частотах появления различных символов в исходном
образе программы. Таким образом, функции частот появления символов двух программ,
созданных одним и тем же компилятором должны коррелировать. В качестве
статистического аппарата предполагается использовать метод множественной линейной
корреляции.
Формализуем условия и требования к методике анализа:
1.) Анализ ведётся для двух секций – исполнимого кода и инициализированных
данных (в нотации Microsoft обозначаются как «.text» и «.data» соответственно);
2.) Исходными данными анализа являются программы (EXE-файлы) и результаты
первичного анализа — файлы, содержащие информацию о расположении исполнимого
кода и данных в теле программ (IBS-файлы);

1
Работа поддержана грантом Президента молодым кандидатам наук МК-3625.2007.9
34
3.) Определено четыре типа исследуемых данных: Код в секции кода (Code),
Данные в секции кода (CodeInData), Данные в секции данных (Data), Нераспознанные
участки программы (Unknown);
4.) Определено три типа результата анализа: Код (Code), Данные в секции кода
(CodeInData), Смесь (CodeAndData);
5.) Функции частот символов для разных компиляторов не обязательно
коррелируют, так как методы компиляции различны;
6.) Совокупная статистика исполнимого кода или данных стремится к унификации
для всех компиляторов (при большом объёме выборки), так как любой компилятор
обладает методами оптимизации и результат его работы – машинные команды;
7.) Существует минимальная граница объёма исследуемых данных, при которой
возможна идентификация типа исследуемых данных, так как выборка должна быть
репрезентативной;
8.) Увеличение мощности алфавита (декартово произведение) поляризует
статистику, так как вероятность появления одинаковых слов (биграмм, триграмм,
тетраграмм и т. д.) падает для исполнимого кода/данных с увеличением показателя
произведения алфавита;
9.) Точность анализа должна составлять 100%, так как в итоге необходима
корректная обработка программы;
10.) Необходимо вести анализ расширений слов (с перекрытием вхождений, их
символов), т. к. границы (адреса) фрагментов не выровнены по какому-либо значению;
11.) Необходима автоматизированная коррекция БД известных статистических
данных (для разных компиляторов) и интерфейс эксперта, так как, по сути, анализ
является вероятностным, но необходимо гарантировать точность 100%.
Общая модель методики.
Схема анализа образа программы приведена на Рисунке 1. Исходный образ программы
проходит первичный анализ. Первичный анализ выполняется внешним приложением.
Данное приложение не использует сигнатуры структур данных и в ограниченном объеме
использует сигнатуры исполняемого кода (например, обработчиков исключений в
программах, созданных посредством компиляторов производства Borland).
Результатом первичного анализа являются файлы, содержащие IBS-блоки. IBS-блок
состоит из: двух адресов и типа содержащихся данных. Адреса определяют начало и
конец блока в файле образа программы. Тип определяет то, какие данные находятся в
Исходный образ
программы
Первичный анализ
IBS блоки распознанных
участков
Идентификатор
компилятора
Генератор
статистики
Регрессионный
анализатор
IBS блоки
нераспознанных участков
БД статистики различных
компиляторов
Статистика данных типа
Code, DataInCode, Data
Статистика данных
типа Unknown
Типы распознанных
блоков Unknown:
Data, Code, CodeInData,
CodeAndData
Эксперт
Рисунок 1 – Схема анализа программы
35
блоке: Код в секции кода (Code), Данные в секции кода (CodeInData), Данные в секции
данных (Data), Нераспознанный участок (Unknown). Эти сведения и собственно участки
файла образа программы передаются в генератор статистики. Результатом работы
генератора статистики являются ряды частот появления символов с указанием символов.
Генератор статистики может работать в нескольких режимах. В нём настраивается длина
символа (кратное байту), тип анализируемых элементов – символы или их расширения и,
в случае расширений символов, длина расширений. Также в генераторе предусмотрены
некоторые режимы фильтрации исследуемых данных.
Генератор статистики анализирует все входящие данные. Статистика IBS-блоков, тип
данных которых получен при первичном анализе используется для коррекции опорной БД
статистики различных компиляторов.
Регрессионный анализ предназначен для расчёта коэффициентов корреляции
статистики IBS-блоков неопределённого типа с данными опорной БД и IBS-блоками
определённого типа. Результатом регрессионного анализа будет являться дисперсионный
анализ и коэффициенты корреляции, по которым можно судить о типе содержимого
нераспознанного блока. Такими типами являются: Код (Code), Данные в секции кода
(CodeInData), Смесь (CodeAndData). Если тип определён как смесь, то по коэффициентам
линейной связи можно оценить процентное соотношение код/данные и появляется
возможность разделения блока на части для последующего анализа подблоков.
Весь оборот данных может быть выполнен в автономном и автоматизированном
режиме, то есть с участием эксперта. Особенно это важно при разделении смесей
код/данные в IBS-блоках и при подтверждении определённого типа данных блоков. Также
опорная БД статистики различных компиляторов должна пополняться и корректироваться
при проведении каждого нового анализа.
Генератор статистики, его режимы и структуры хранения данных
При расчёте статистических данных встаёт следующий ряд задач:
1.) Выбор объекта анализа: анализ символов или их расширений;
2.) Выбор алфавита из которого выбираются символы;
3.) Выбор длины слова в случае анализа расширений символов;
4.) Необходимо обеспечить хранение результатов и скорость обращения к ним.
Рассмотрим сначала первые три задачи. Первое, что определяется при формировании
статистики – мощность алфавита статистики. Если принять за основу алфавит мощность
256 значений, то можно определить степень (индекс) его прямого декартова произведения
самого на себя. Предполагается, что повышение мощности алфавита поляризует
статистику, то есть изменит частоты так, что ряд символов исчезнет, а остальные начнут
выравниваться по частотам. Формализованный вид индекса алфавита приведён в (1).
IndexABC IndexABC
IndexABC
IndexABC A A A A A

    
8 8
2 , , 2 (1)
Второе, что необходимо определить, будут ли анализироваться символы или слова
(расширения символов). Рассмотрим на примере, пусть есть последовательность символов
«abadeb». Такую последовательность можно рассмотреть различными способами, ряд из
них приведён в Таблице 1.
Таблица 1 – Способы получения статистики и их статистика
Способ Статистика (символ – абсолютная частота)
Символы, IndexABC = 1 a-2, b-2, d-1, e-1
Слова, IndexABC = 1, длина = 2 ab-1, ba-1, ad-1, de-1, eb-1
Слова, IndexABC = 1, длина = 3 aba-1, bad-1, ade-1, deb-1
Символы, IndexABC = 2 ab-1, ad-1, eb-1
Слова, IndexABC = 2, длина = 2 abad-1, adeb-1
Слова, IndexABC = 2, длина = 3 abadeb-1
Символы, IndexABC = 3 aba-1, deb-1
36
Сопоставим два способа. Анализ символов предполагает, что они появляются
независимо друг от друга, хотя общая статистика по всему объёму выборки косвенно
указывает на взаимную связь. Если в качестве исследуемой строки выступает машинная
команда, то последнее утверждение не совсем верно. Таким образом, необходимо
учитывать взаимопоявления символов, то есть анализировать слова. При этом статистика
будет поляризоваться с учётом связи. Длина слова и индекс используемого алфавита
напрямую зависит от длины машинной команды. Важно помнить, что машинные команды
(их порядок) определяются не только способом компиляции, но и логикой исходного
алгоритма, который реализует программа. Поэтому, нельзя однозначно утверждать, что
для произвольно взятой программы можно точно определить способ формирования
статистики. Требуются предварительные дополнительные исследования.
Вторая крупная проблема, которая возникает при анализе статистики – хранение
результатов. Так, например, при индексе алфавита 4 не хватит места в ОЗУ (для 32x
разрядной шины). Проведённые исследования показали (см. Таблица 2), что частота
большой части символов алфавита (99% и нелинейно растёт с увеличением индекса
алфавита) в рассматриваемом классе задач равна нулю.
Таблица 2 – Количества слов ненулевой частоты для некоторых программ (код)
Программа Длина 1 Длина 2 Длина 3 Длина 4
Число % Число % Число % Число %
Omicron.exe(Borland Delphi) 256 100 1026 1.56555 628 0.00374 463 0.00001
procmon.exe (Microsoft VС) 256 100 5653 8.62579 5106 0.03043 3285 0.00008
Наиболее оптимально (по объёму) хранить результаты в форме списка. Но в этом
случае приходится также хранить сам символ. Более того, поиск в такой структуре не
оптимален.
В качестве структуры данных используется бинарное дерево. Причём каждый узел
хранит байт – часть символа (слова). В листах дерева находятся значения частот. В
каждом узле хранятся два указателя: первый – указатель на болёё глубокий уровень
дерева, второй – указатель на этот же уровень дерева, но на другой байт символа (слова).
В итоге, если пройти дерево от вершины до листа, то получится символ (слово), а в листе
будут находиться частоты. Исходя из структуры дерева, можно построить всевозможные
символы алфавита (маршруты дерева). В ширь дерево можно строить уже с
упорядоченными узлами. Навигация в таком дереве осуществляется быстро за счёт того,
что требуется находить узел в ширь, спускаться на один уровень вниз и повторять
операцию поиска. Обходя дерево слева на право, будем получать упорядоченные символы
и их частоты.
Если частоты некоторых символов очень малы (абсолютная частота не превышает 5 –
10), то они могут быть отброшены. Такой режим предварительной обработки данных
будем называть режим фильтрации частот.
Математический аппарат методики
Полученные частоты символов можно анализировать регрессионными методами.
Задача математического аппарата – анализ регрессионной связи между частотами
исследуемых данных и заданных эталонных частот (из опорной БД статистики различных
компиляторов). Формализуем аппарат регрессии. Определим функции w a i
– функции
частоты символа (слова) от самого символа (слова). Тогда будем искать регрессионную
связь между (в общем случае для n + 1 количества функций) ya w a  0 и набором
функций x a w a i  n i i  ,  1, и 1 x0  . Откуда искомое уравнение множественной
линейной регрессии (2)[2]. Знак символа можно опустить как общий аргумент.
37
           
   
n
i
n n n n i i
y x a x a b x a b x a y x x b x
0
0 0 0 0
,  , , (2)
Метод наименьших квадратов даёт выражения для расчёта коэффициентов линейной
связи i
b . В матричном виде (3)[3]. Столбцы матриц X, Y содержат частоты появления
символов для конкретного набора данных. Важно, чтобы для двух строк с одним номером
из этих матриц соответствовали частоты одного и того же символа (слова). Первый
столбец матрицы X состоит из одних единиц для поиска свободного члена 0
b (фиктивная
переменная). Если для всех рядов данных символ (слово) ни разу не встречаются, то такие
частоты не берутся в расчёт. Если же хотя бы в одном ряду есть символ (слово) с
ненулевой частотой, то он переносится в свой столбец, а в другие переносятся нули.
B X X  X Y
b
b
b
b
B
y
y
y
Y
x x x
x x x
x x x
x x x
X
T T
n n
m m
n n mn n m
m
m
m
    





















































1
1
2
1
0
1
2
1
1 2
12 22 2
11 21 1
10 20 0
, ,



  



(3)
Анализ адекватности найденных коэффициентов уравнения регрессии (2) можно
производить при помощи критериев Стьюдента. Для этого необходимо сформировать
матрицу SI (4):
n n nn n n
n
n
T
SI SI SI
SI SI SI
SI SI SI
SI X X
















  

  


0 1
10 11 1
00 01 0
1
( ) (4)
тогда критерий Стьюдента можно определить как (5):
m n
S
SI
b
t
jj
j
j

 (5)
то есть (5) учитывает только элементы матрицы, находящиеся на главной диагонали
матрицы SI. S – случайная дисперсия (или Dy
).
Зная значения критерия Стьюдента можно определить достоверность по Стьюденту (6):
p styudent(t , m n)  j  (6)
Фактически, достоверность по Стьюденту показывает на сколько велика линейная
связь между параметрами. Если значение p < 0.95, то данный коэффициент линейной
связи не несёт вклада в общее уравнение регрессии и его соответствующий аргумент не
надо учитывать.
Анализ адекватности всего уравнения начинается с расчёта случайной дисперсии. Её
можно рассчитать через матричное соотношение:
Y  Y  X  B (7)
Где (7) матрица отклонений, дисперсия по этому столбцу данных и есть случайная
дисперсия.
Тогда Дисперсия регрессии можно определить как (8):
DR  Dy  Dy
(8)
Тогда дисперсионный анализ уравнения можно свести в Таблицу 3.
38
Таблица 3 – Дисперсионный анализ уравнения регрессии
Источник вариации Степени свободы Средняя дисперсия
Регрессия DR
1 v1  n 
1
1 v
D
n
D
D
r r
R 


~
Остаток
(случайная) Dy v  m  n 2
2
v
D
m n
D
D
y y
y
 
 


~
Общая Dy 1 v3  m  ---
Дисперсионный анализ показывает распределение всей дисперсии функции между
случайной составляющей (отклонение от идеальных значений) и регрессионной.
На основе данных дисперсий и степеней свободы рассчитываются пять остальных
параметров (см. Таблица 4). Эти параметры позволяют оценить адекватность всего
уравнения регрессии.
Таблица 4 – Параметры адекватности
Параметр Соотношение
Коэффициент детерминации
y
r
D
D
R 
2
Коэффициент множественной корреляции
y
r
D
D
R 
Скорректированный коэффициент детерминации  
2
2
2 3
1 1 R
v
v
R    
~
Скорректированный коэффициент множественной корреляции  
2
2
3
1 1 R
v
v
R    
~
Критерий Фишера
y
r
D
D
F

 ~
~
Для оценки уравнения регрессии можно применять параметр Скорректированный
коэффициент множественной корреляции R
~
. Данный параметр изменяется от 0 до 1.
Коэффициент корреляции фактически показывает насколько уравнение регрессии
адекватно заданным параметрам. В качестве границы адекватности выберем 0,95 [2].
Применительно к поставленным задачам схема применения регрессионного анализа
следующая. Рассчитываем статистику для нераспознанных данных и строим уравнение
регрессии на распознанные опорные данные БД.
В качестве аргументов выступают столбец фиктивных переменных, столбец кода и
столбец данных. Тогда достоверности Стьюдента для каждого аргумента покажут влияние
рассмотренных факторов на исследуемые значения. Выбрасывание незначащих
аргументов повышает коэффициент корреляции всего уравнения. Если значащие все
аргументы (фиктивным аргументом всегда можно пренебречь), то блок данных содержит
смесь данных и кода. Тогда отношение коэффициентов линейной связи в долях даст
соотношение кода к данным. В случае обнаружения Смеси блок необходимо разделить и
провести анализ заново для каждой части отдельно. Эти операции должны проходить под
контролем эксперта, так как аппарат статистики может производить некорректный захват
данных. Например, захват лишнего байта окажет незначительное влияние на статистику,
но если это часть машинной команды, то программа в целом будет не работоспособна.
39
Некоторые экспериментальные данные
Для разработанной методики получены экспериментальные данные. Рассмотрим
некоторые из них. Для анализа была взята статистика монограмм, то есть символов
алфавита с индексом 1. Результаты в Таблице 5.
Таблица 5 – Некоторые результаты (коэффициенты взаимной корреляции) экспериментов Omicron.exe (Code) Omicron.exe (Data) procmon.exe (Code) procmon.exe (Data) procexp.exe (Code) procexp.exe (Data)
Omicron.exe (Code) - - - - - -
Omicron.exe (Data) 0,5791 - - - - -
procmon.exe (Code) 0,8512 0,7141 - - - -
procmon.exe (Data) 0,1607 0,1853 0,4236 - - -
procexp.exe (Code) 0,8281 0,8205 0,9465 0,2231 - -
procexp.exe (Data) 0,5029 0,5093 0,7625 0,8679 0,6210 -
Светло-серым показаны результаты анализа для одного и того же компилятора. Тёмносерым значения одной и той же программы (на разные типы данных). Абсолютное
значение границы фильтрации низких частот равна 5.
Показанные результаты лишь частично соответствуют действительности. В частности,
для одного и того же компилятора результаты достоверны, если в качестве границы
принять значение 0,85. Увеличение индекса алфавита позволит поляризовать статистику и
сделает результаты более достоверными.
Также проведён анализ слов длины 2 для индекса алфавита 1. Его достоверность
наблюдается, если из общей статистики исключить символ «ffff». В ходе исследований
установлено, что статистика этого слова перераспределяет полную дисперсию. То есть
полная дисперсия меняется незначительно, а её составляющие – которые определяют
коэффициент корреляции – меняются так, что коэффициент корреляции изменяется с 0,98
до 0,32.
Выводы
Несмотря на положительные результаты применения методики, требуется её
коррекция. Механизмы поляризации статистики отработаны. Но результаты поляризации
статистики спорны. Детальное исследование слов длины 2 показало, что слово «ffff»
имеет высокую частоту. Но это слово часто повторяется вместе с самим собой. Поэтому,
если учесть количество информации (в понятии энтропии информации) передающее этим
словом, то при исключении слова исключается небольшое количество информации. Таким
образом, если корректировать частоты появления символов (слов) на количество их
последовательного дублирования, то результаты анализа должны быть достоверны. Для
этого требуются дополнительные исследования.
Результаты проделанной работы:
1. Получена первичная статистика;
2. Разработана методика статистического анализа;
3. Определены функции статистических частот и их метод их корреляции;
4. Получены результаты, подтверждающие рабочую гипотезу методики;
5. Разработаны экспериментальные программные решения.
Перспективы и проблемы:
1. Коррекция частот появления оценками энтропии (или избыточности) должна
повысить качество результатов анализа;
40
2. Вопрос о минимальном объёме репрезентативности выборки открыт.
Библиографический список
1. Кукарцев А. М., Лубкин И. А. Методика защиты программного кода от
несанкционированной модификации и исследования посредством его хеширования //
Вестник Сибирского государственного аэрокосмического университета им. академика М.
Ф. Решетнева : сб. науч. тр. / Сиб. гос. аэрокосмич. ун-т. Вып. 1. Красноярск, 2008.
2. Поллард Дж. Справочник по вычислительным методам статистики / Пер. с англ. В.
С. Западворова; Под ред. и с предисл. Е. М. Четыркина. – М.: Финансы и сатистика, 1982.
– 344 с., ил.
3. Боревич З. И. Определители и матрицы: учеб. пособие для ВУЗов – 3-е изд. – М.:
Наука. Гл. ред. физ. мат. лит., 1988. – 184 с.
УДК 539.3
Н.И. Мартынов, И.О. Федоров
О МЕТОДОЛОГИИ Н.И.МУСХЕЛИШВИЛИ В ТЕОРИИ УПРУГОСТИ
НЕОДНОРОДНОЙ СРЕДЫ
Многие задачи естествознания исследуются на модельных уравнениях статики
линейно-упругого неоднородного анизотропного тела. Среди разнообразия
существующих в этой области методов, нет единого универсального подхода, каким
является метод Н.И. Мусхелишвили (и его модификаций) для решения краевых задач
однородной анизотропной упругой среды.
Вместе с тем, хорошо известно, что теория обобщенного аналитического вектора
есть теория решения общих эллиптических систем первого порядка на плоскости. Она
достаточно полно разработана, но не нашла достаточно широкого применения в теории
упругости неоднородных сред.
В работах [1-4] основные краевые задачи статики неоднородной анизотропной
упругой среды приведены к краевым задачам обобщенного аналитического вектора.
Такой подход позволяет обобщить методологию Н.И.Мусхелишвили на неоднородные
среды, ослабить требования на гладкость упругих параметров, записать общее решение и
многое другое. Для решения конкретных задач применим метод граничных интегральных
уравнений (МГИУ). В настоящем работе в сжатом виде излагаются результаты
исследований [1-4] и обсуждается идейная сторона такого подхода.
В декартовой системе координат 1 2
0x x в поле массовых сил   1 2
f  f , f

,
рассмотрим равновесие анизотропного неоднородного линейно-упругого тела,
занимающего область D с границей Г. Уравнения равновесия и закон Гука имеют
следующий вид:




  
  
0
0
21,1 22,2 2
11,1 12.2 1
f
f
 
 
 , (1)
   



    
       
2 ,
; ;
12 1,2 2,1 16 11 26 22 66 12
11 1,1 11 11 12 22 16 12 22 2,2 12 11 22 22 26 12
      
             
u u
u u
 (2)
где  , 1,2  i, j
i j  - компоненты тензора напряжений,   1 2
u  u ,u

- вектор
перемещений,  , ,
1 2
x x  ij   ij i , j  1, 2 , 6 - приведенные упругие «постоянные»,
зависящие от координат 1 2
x , x . Они связаны с упругими модулями соотношениями[5]:
41
 , , 1,2,6
33
3 3
  i j 
a
a a
a
i j
 ij ij , (2а)
а компонента тензора напряжений  33 определяется как:
 33 13 11 23 22 36 12 33   (a   a   a  ) / a (2б)
 Введем «след» от объемных сил:
    
 
 
1 2
0 0
1 1 1 2 1 2 2 1 2 2
, , ,
x x
 f x x dx  f x x dx (3)
и функцию напряжений   1 2 U x , x :
11 22 1 22 11 2 12 12   U,  ,   U,  ,   U, (4)
Тогда система уравнений (1) удовлетворяется автоматически. Перейдем к комплексным
переменным с помощью соотношений:
 1 2 1 2
z  x  ix , z  s  x  ix , 































1 2 2 1 2
1
,
2
1
x
i
x s x
i
z x
, (5)
где i - мнимая единица ( 1
2
i   ). Введем комплексное перемещение W , среднее
напряжение  , и комплексное сдвиговое напряжение  :

 
  




  
   
22 11 12
1 2 11 22
2
2
1
,
   
  
i
W u iu
 (6)
В новых переменных уравнения равновесия в напряжениях (1) и закон Гука примут
вид:
 0
2 4 ,
0
1
,
0
2  





  






Z S
F F
 
, (7)
 , ,
1 U F1 W bU dU cU F W bU dU c Z   ZZ  SS  ZS  S   SS  ZZ  ZS 
   WZ WS = 0
cUZZ  cUSS  4aUZS  F , (8)
где
     1 2
0
1 2 2
0
1
4
1
,
4
1
F    F    , ( 2 ),
2
1
  11   22   12 a
 ( 2 ), ( ) ( ),
2
1
 11   22  12   66   22  11  16   26 b c i
 ( 2 ) ( ), ( ) ( ) ,
2
1
 11   22  12   66   26  16 F0  11  12 1   22  12  2
d i (8а)
 {(( ) ) (( ) ) },
2
1
1 12 11 16 1  22 12  26  2 F    i    i
Исключая из (8) перемещения, получим уравнение совместности деформаций в
«терминах» функции напряжений:
   
    SS ZZ ZS ZZ ZS SS ZZ
ZZ SS ZS ZS ZZ SS ZS SS
bU dU cU F F F
cU cU aU bU dU cU
0 1 1
4
     
     
 (9)
Исключая из (8) функцию напряжений, получим уравнение равновесия в
перемещениях:
 ( ( ) ) ( ( ) ) 0
*
12 13 14 2
* 11 WZ WS 12WS 12WZ  F1 S   WZ WS  WS  WZ  F Z  , (10)
где
 (| | )/ , ( )/ , (4 ) / , (| | 4 )/ ,
2
14
2
12 13
2 2 11  d b    cb  dc    ad  c    c  ab 
42
, , 2 (| | 2 ) 4 | | ( )
2 2 2 2
12 0 13 1 14 1
*
11 0 12 1 12 1 2
*
1 F  F  F  F F  F  F  F   b c  ab  a d  dc  dc (10а)
Таким образом, если рассматривается задача в напряжениях, то используется уравнение
совместности деформаций (9), если - в перемещениях, то уравнение равновесия (10).
Cоотношения (8), как нетрудно видеть, являются интегралами уравнений (9), (10)[2].
Поэтому (8) представляет собой систему уравнений первого порядка относительно
W W US UZ
, , , , с дополнительным условием USZ UZS .
Систему уравнений (8) приведем к каноническому (по И.Г. Петровскому) виду.
Сначала рассмотрим неоднородное изотропное тело. Тогда:
,
4
( )
,
2( )
( )
,
2( )
1
,
(1 )
,
1
,
1
0,
2 1
1
1 2
0
12
2
16 26 66 11 22

 
 
 
 
 


 

  








 

       
F F
a
E E
c d b
 (11)
где ν – коэффициент Пуассона, Е – модуль Юнга, λ,μ – параметры Ламе. С помощью
замены переменных [1]:

    




   
   
u v
m
u v U
m
U
W A u B v W A u B v
S z
2
,
2
,
0 0 0 0
, (12)
где
 
 

 2

 , m   ,
2
0
m
B  ,
   
 
2 2
1
0
m
A , (12а)
систему уравнений (8) приведем к виду:
 S Q z A B F*
    
        (13)

     
    
   













 
 
  
       
         
  










 







 








 
   



  
 

, ln , ln
( )( 2 )
2
,
0, , 2 2 , ,
1 , 0, 1 ,
, , , , 1,2 ,
1 0
0 0
, ,
0 0
2
0
*2
1
0
*1
0
22
0 0
21
0
11 12
0 0
12 21
0 0
11 22
*2
*1
*
a b
F
F F F
b b a b b a b a
a a a b a a a b
Q A a B b i j
F
F
F
v
u
S S S z
S S z z
ij ij

 (13а)
То есть система уравнений (8) свелась к системе эллиптических уравнений для
обобщенного аналитического вектора [7-11]. Для несжимаемого материала  1,
   .
Краевая задача Римана-Гильберта для обобщенного аналитического вектора (в
упрощенной постановке) формулируется следующим образом: определить обобщенный
аналитический вектор, непрерывный в смысле Гельдера в D  Г и удовлетворяющий
граничному условию
 ReG  t gt , (14)
где Gt - заданная и непрерывная по Гельдеру на Г матрица detGt  0 и gt -
заданный непрерывный по Гельдеру, действительный вектор. (Условия на Gt, gt -
можно ослабить).
Для первой краевой задачи теории упругости (на Г заданы усилия) согласно (12) -
(14) имеем:
43
 





 





  












m
U
g
m
U
G i g
i i
G
S S
, det 2 , Re , Im
1 1
1 1 1 2
 (14а)
Для второй краевой задачи (на Г заданы перемещения):
 G iA B g W g W
iA iB
A B
G , det 2 0; Re , Im
,
,
2 0 0 1 2
0 0
0 0
2    











 (14б)
Для третьей (смешанной) краевой задачи матрица G3
, принимает, соответственно,
значения G1 или G2 и терпит разрыв на множестве меры нуль [1].
Таким образом, решение основных краевых задач плоской теории упругости
изотропного неоднородного тела сводится к краевой задаче Римана-Гильберта для
обобщенно-аналитического вектора. В случае постоянных упругих параметров из (12)-
(13а) следует представление общего решения через две аналитические функции КолосоваМусхелишвили [1].
Рассмотрим трансверсально-изотропное неоднородное тело. Тогда в главных осях
анизотропии имеем [5]:
, 2 (1 ),
4
( )
,
4
( )
,
1 2
, ( ), 1
,
1
0,
2 1
1
1 2
0
|
|2
|
|2
| 12
|2
16 26 66 11 22
 

   
   


 

  
 






            
F E
a
F
E E
a
E E E E
c d b
(15)
где |
 , - соответствующие коэффициенты Пуассона, а | E, E - модули Юнга. Если
сравнить (15) с (11), то нетрудно заметить, что соотношения (11) переходят в (15), если
заменить 1
( )

   на 2а. Поэтому в соотношениях (12)-(14б) для трасверсальноизотропного тела необходимо заменить 1
( )

   на 2а. Физически это означает, что
трансверсально-изотропное тело при плоской деформации ведет себя как изотропное тело,
что является хорошо известным фактом [5].
Теперь рассмотрим общий случай (d  0). Соотношения (8) можно представить в
виде:
 q g S Z
  
    , (16)
где













L
W
L
W

 ,





















0
0
1
1
1 1
F
d
cF
d
F
F
d
b
F
g

,  , , 1 4, L  UZ ,L  US,q  qij i j  
 
( )/ , / , (4 )/ , 1/ .
0, 1, 1, / , / ,
23
2
22 33 32
2
14
11 21 41 43 44 31 42 12 34 13 24
q b dd d q q c d q ad c d q d
q q q q q q q q q bc cd d q q b d
        
              
 (16а)
Рассмотрим характеристическое уравнение q  E  0 .Оно имеет вид:
 0
2 2(2 ) 2
( )
4 3 2
  

  
d
d
d
c
d
a b
d
c
e      (17)
Структура корней уравнения (17) в общем случае следующая:
 ( , ,1/ ,1/ , 1, 1) 1 2 1 2 1  2 
44
Для ортотропного тела: 1  2
, для плоскости упругой симметрии: 1  2
.
Корни характеристического уравнения (17) всегда простые, и они симметричны
относительно единичной окружности. Они легко вычисляются в радикалах способом
Феррари [2]. Заметим, что для изотропного и трансверсально-изотропных тел корни
соответствующих характеристических уравнений в действительных переменных
двукратные и чисто мнимые ± i.
Пусть система координат |
2
|
1 Ox x получается поворотом системы координат 1 2 Ox x
на угол φ. Используя результаты [5] (формулы (6.1,с.42) и соотношения (8а), нетрудно
получить выражения приведенных упругих «постоянных» в новой системе координат
через старые:
       
  
( )sin4
4
1
, , , ( ) , 0.5( )sin4 26 16
| | | 2 | 4 4
d d
i
a a b b c ce d d e e
i i i
          

(18)
Для трансверсально-изотропного тела, как это следует из (18), a  a
|
, b  b
|
, 0
| |
c  d  .
Тогда в любой системе координат корни двукратные и равны ±i. Для ортотропного тела в
главных осях анизотропии Im(d)=Im(c)=0. Тогда a  a
|
, b  b
|
. Нетрудно показать, что
корни характеристических уравнений в системах координат |
2
|
1 Ox x и 1 2 Ox x связаны
соотношением:
 , ,
| 2 |
   

 
 i
e (19)
т.е. их структура сохраняется в любой системе координат. Для плоскости упругой
симметрии изменяются как модули, так и направления собственных значений, но
структура их сохраняется.
Таким образом, при плоской деформации в любой системе координат имеет место
следующая структура корней:
 изотропное тело ( , , 2 2 )  1,2  3,4   11   66  12 i i
 трансверсально-изотропное тело ( , ) 1,2 3,4    i   i
 ортотропное тело ( 1, 1, 0)  1  2  3  4  13  24 
 плоскость упругой симметрии ( ,1/ , ,1/ , 1, 1)  1 1 2 2 1  2  (20)
Т.е. на лицо изоморфизм между структурой корней и упругой симметрией.
Следовательно, структура корней однозначно отражает внутреннюю симметрию
анизотропного упругого материала. Это утверждение весьма полезно при обработке
экспериментальных упругих параметров, которое позволяет достаточно просто
установить вид анизотропии упругого тела.
Введем матрицы q q ,T, S
~,
~
1 2
:

, , , , ,
1
0
0
1
~,
0
0 ~
23 24
13 14
2
21 22
11 12
1
2 1
1 1 2
2 1
1 2
2
1
2
2
1
1 





 





 





  


















 







S S
S S
S
S S
S S
S
S S
S S
S T
T T
T T
q q T




 (21)
где
,
( ) ( )
,
( ) ( )
,
( )
( )
,
1 ( )
1 ( )
2
2
1
1
2
2 1 2
1
1 2 1
2
2
2
2
1
2
1
2
2 2
1
1 1
1
2
1 2
2
1
1 1
1
2
2 2
2 1
1















 

















 














 
 






 
    
 
   

 


 

 
 
T T S S
( ) 2( ( ) ( )),
( ) , ( ) , ( ) 2( ( ) ( )),
2 2
2
2 2 2 1 2 2
2 1
2
1 1 1 1 1 1
2
2
2
1
      
              


     
           
de
b c d d c b de
 (22)
45
и сделаем замену переменных:
 





 





 
2
1
, ,
y
y
y
y
y
Y T Y
  
 (23)
Тогда система уравнений (16) приводится к виду:
 ( )
~
1 1 1 1 1 2 2
y q y A y B y T f T f
S  Z     (24а)
 ( )
~
2 2 2 2 1 1 2
y q y A y B y T f T f
S  Z     , (24б)
где
,
~ ,
~
) ,
~ ) (
~ ) , (
~ ) (
~ (
2 2 1 2 2 1
1 1 1 1 1 2 1 2 2 1 1 1 1 2 2 1 2 1
A q B B q A
A T S q T Z S T S q T Z S B T S q T Z S T S q T Z S
   
       
 (25)
Уравнение, комплексно-сопряженное к (24б) есть уравнение (24а)[2]. Заметим, что
, 0 1 2  , т.к.корни характеристического уравнения простые.
Для первой краевой задачи имеем:






 





  
 
 





 
 

m
U
g
m
U
g
i
G
i S S i S S
S S S S
G
S S
(1 ) 0, Re , Im
2
,det
( ) ( )
1 2 1 2
1 2
1 2
1
21 23 21 24
21 23 22 24
1  
 
(26)
Для второй краевой задачи:
g W g W
i
G
i S S i S S
S S S S
G
Re , Im
( ( ) ( ) ( ) ( )) 0,
2
, det
( ) ( )
1 2
1 2 2 2 2 1 1 1 1 2
1 2
2
11 13 12 14
11 13 12 14
2
 
 
 
 





 
 
          
 (27)
Таким образом, как для ортотропного тела, так и для плоскости упругой симметрии
краевые задачи статики сводятся к задаче Римана-Гильберта для обобщенного
аналитического вектора [2].
В случае постоянных приведенных упругих параметров и отсутствия массовых сил,
с учетом (22)-(25), получаем представление общего решения типа С.Г. Лехницкого:
 2Re( ( ) ( )) U  1 1  2 2
 1 2 1 1 2 1 2 2 2 2 2
1
1 1
( ) (1/ ) (1/ )
( )
             

 
W , (28)
где ( ), ( ) 1 1 2 2
- аналитические функции комплексных аргументов:
  s  z,  (1/ )s  z 1 1 2 2
 (28а)
Система уравнений (8) приводится к каноническому виду и в переменных
дивергенция-вихрь(предварительно упругий потенциал записывается в главных осях), а
соответствующие краевые задачи также сводятся к задаче Римана-Гильберта. Такое
представление очень важно для задач механики сплошной среды.
Подобный подход переносится и на задачи о чистом кручении и изгибе
призматического неоднородного анизотропного бруса. Рассмотрим, например, задачу о
чистом кручении [3], которая описывается системой уравнений:
  13x  23 y  0 (29)

( ),
( ),
44 23 45 13
45 23 55 13
a a x
a a y
y
x
  
  
   
   
 (30)
где 13 23  , -компоненты тензора напряжений, a  a (x, y),(i, j  4,5) ij ij -упругие параметры
(коэффициенты деформации),   (x, y)- функция кручения,   const - относительный
угол закручивания. При этом предполагается, что один конец бруса закреплен, а на
другом, свободном, действуют усилия, приводящие к скручивающему моменту М. Кроме
того, в каждой точке имеется плоскость упругой симметрии, нормальная к образующей
бруса. Плоскость свободного торца принимается за плоскость Оху, а ось Оz направлена
параллельно образующей [6].
46
Для простоты будем рассматривать односвязную область сечения D c границей Г.
Введем функцию напряжений:
 13   y  23  x
, (31)
Тогда (29) удовлетворяется автоматически, а (30) принимает вид:

a a y
a a x
x x y
y x y
  
   
  
  
45 55
44 45 ,
 (32)
Обычно задачу о чистом кручении решают либо в напряжениях, либо в перемещениях. В
первом случае исключают функцию кручения  :
 ( ) ( ) 2, a44 x  a45 y x  a55 y  a45 x y  (33)
во втором – функцию напряжений  :
  ( ) ( )  ( ) ( ) 0 45   55   44   45  
y
y x x
y x A  x A  y A  x A  y (34)
Здесь A (i, j  4,5) ij - модули упругости, связанные с коэффициентами деформации
соотношениями:
 , , , 0
2
44 55 45
44
55
45
45
55
44    



 

 a a a
a
A
a
A
a
A
К уравнениям (33) или (34) добавляют соответствующие граничные условия и
необходимые соотношения для определения остальных неизвестных параметров [6].
Обратимся теперь к соотношениям (32). Они выражают закон Гука, записанный
через функции напряжений и кручения. Нетрудно видеть, что (32) представляют собой
полные интегралы уравнений (33) и (34). Действительно, если  - решение (33), то общее
решение (33) есть (32), и наоборот. То же самое справедливо и для уравнения (34).
Поэтому решение краевых задач о кручении эквивалентно решению системы (32) -
эллиптических уравнений первого порядка относительно  , с соответствующими
краевыми условиями. Вводя комплексную переменную:
 W   i,
систему уравнений (32) запишем в виде:
 ( p 1)W ( p 1)W q(W W ) z,  S   S  Z  Z  (35)
где
      44 55 55 44 45 2
2
1
,
2
1
p  a a q   a  a  ia (35а)
Рассмотрим общий случай – плоскость упругой симметрии. Пусть q  0 при
z  D,D  D  . Рассмотрим уравнение (35) и его комплексно сопряженное уравнение.
Из этой системы уравнений определим WS WS
, :
 C F,
S Z
  
    (36)
где
         
    qz  p s
q
qz p s f
q
f
p q
q
p q C
q
p q C
q
C
f
f
F
C C
C C
C
W
W
1
2
1
1 ,
2
1
1 ,
2
1
1 ,
2
1
1 ,
2
1
, ,
1 2
2 2
22
2 2
12
2 2
11
2
1
12 22
11 12
      
         








 








 






 

 (36а)
Характеристическое уравнение, соответствующее матрицы С имеет
вид C  E  0 , где Е – единичная матрица. Или в развернутой форме:
47
 0
2 2
  
q
q
q
p
  (37)
Его корни:
 
  
 
  
p
q
p
q

  
1
,
1 2
 (38)
То есть 1 2  , симметричны относительно единичной окружности, при этом   1.
Обозначая через Т, C
~
- матрицы:
 1 , ,
0
0
~
,
1















 









b a
a b
C T
b a
a b
T


 (39)
где    
4 4 4 4
2
1
,
2
1
         
 
a ch b sh , (39а)
и сделав замену переменных:
 





 
u
u
U T U
 

 , , (40)
систему уравнений (36) приведем к виду:
     1 2
u u u af bf S   Z  Z S   (40а)
   2 1
1 1
u u u af bf S Z Z S   





   
 
 (40б)
Уравнение, комплексно-сопряженное к (40б) есть уравнение (40а). На границе Г области
D граничное условие для уравнения (40а) запишется в виде :
 Re   0
4
u  a  b    (40в)
Таким образом, задача о кручении анизотропного неоднородного призматического
бруса свелась к задаче Римана-Гильберта (40а), (40в) для обобщенного аналитического
вектора.
В случае постоянных упругих параметров, с учетом (38)-(40а), получаем
представление общего решения типа С.Г.Лехницкого [6]:
 , Im ( ) ,
4
( )
Re ( )
2
2
       

 
  
p
 где
()- аналитическая функция аргумента   s  z. В силу (40в), на границе области
известна действительная часть аналитической функции (). Тогда решение задачи о
кручении можно записать в замкнутом виде, используя интеграл Шварца [10].
Структура корней характеристического уравнения при повороте системы
координат не изменяется [3]. Решения задач о кручении призматического бруса с
различным видом анизотропии подробно рассмотрены в [3] и часто могут быть получены
в замкнутом виде.
Для того, чтобы не накладывать дополнительных условий на гладкость упругих
параметров, уравнение (35) исследуют непосредственно. Коэффициенты  , 4,5 ai, j
i j 
предполагаются ограниченными измеримыми функциями, удовлетворяющими условию
эллиптичности. Для реальных упругих неоднородных анизотропных сред эти условия
выполняются автоматически. Исключая из уравнения (35) и его комплексно сопряженного
уравнения WZ
, получим уравнение:

 

 
  
p z qs WS
q WZ
q WS
1
1 2
, (41)
где  
 
, 1
1
,
2
1 ,
2 1 2 0
55 44 45
44 55 1   

 


 
      
 

q q q q
a a ia
a a q .
48
Аппарат решений уравнения (41) при различных граничных условиях достаточно
полно разработан и осуществляется с помощью интегральных уравнений по области (см.
[7-11] и там же библиографию по этому вопросу).
Аналогичный подход переносится и на задачи о чистом изгибе. Более того, он
может быть применен для решения задачи Сомильяна [5] о совместном действии плоской
деформации, кручении и изгибе призматического неоднородного бруса с общим видом
анизотропии.
Таким образом краевые задачи плоской неоднородной теории упругости сводятся к
краевым задачам Римана-Гильберта обобщенного аналитического вектора. При
определенных условиях [9,10] задача Римана-Гильберта эквивалентна задаче сопряжения,
поэтому вся методология Н.И.Мусхелишвили для решения краевых задач однородных
сред переносится на неоднородные среды с соответствующими модификациями.
При решении конкретных задач необходимо воспользоваться результатами теории
обобщенного аналитического вектора. С помощью основного гомеоморфизма строится
фундаментальное решение системы (16)(для изотропного тела оно записывается в явном
виде), затем общее решение [9]. Теорема существования и единственности следует из
общих результатов теории обобщенного аналитического вектора, а для решения
конкретных задач применим метод ГИУ. В случае аналитических коэффициентов система
уравнений (8) сводится к системе интегро-дифференциальных уравнений, или к
интегральным уравнениям Фредгольма в зависимости от вида анизотропии.
Чтобы не накладывать дополнительных условий на «гладкость» упругих
параметров, систему уравнений (8) необходимо исследовать непосредственно, сведя ее к
системе интегральных уравнений с помощью интегральных операторов по области [9].
Это существенно расширяет класс обобщенных решений и позволяет унифицировать
класс контактных задач из составных материалов.
Изложенный в настоящей статье метод переносится непосредственно на
криволинейную анизотропию, с изменяющейся по области анизотропией,и по всей
видимости, сыграет важную роль в построении моментной теории оболочек с помощью
теории обобщенного аналитического вектора.
Библиографический список
1. Н.И.Мартынов. Применение теории обобщенного аналитического вектора к решению
статических задач неоднородной изотропной среды. Международная научная
конференция «Суверенный Казахстан: 15-летний путь развития космической
деятельности», посвященный 70-летию академика У.М.Султангазина.2006,с.62-65.
2. Н.И.Мартынов. Приведение двумерных статических краевых задач упругой среды к
краевым задачам обобщенного аналитического вектора. //Известия НАН РК, серия
физико-математическая.2007.№1(251), с.52-59.
3. Н.И.Мартынов, И.О.Федоров. Краевые задачи обобщенного аналитического вектора в
теории кручения неоднородных анизотропных тел. //Известия НАН РК, сер. физмат.,2007,№3,с.48-53.
4. Н.И.Мартынов. Приведение краевых задач теории упругости к краевым задачам
обобщенного аналитического вектора//Тезисы докладов межд.конф.
«Дифференциальные уравнения, теория функций и приложения», посвященная 100-
летию со дня рождения академика И.Н.Векуа, Н.,28 мая-2 июня 2007г., с.518-519.
5. С.Г.Лехницкий. Теория упругости анизотропного тела. М.Наука,1977,415с.
6. С.Г.Лехницкий. Кручение анизотропных и неоднородных стержней. М., Наука, 1971,
240с
7. И.Н. Векуа. Обобщенные аналитические функции.М., Наука, 1988 г.,509 с.
8. И.Н.Векуа. Новые методы решения эллиптических уравнений. Гостехиздат,МЛ,1948,296с
49
9. Б.В. Боярский. Теория обобщенного аналитического вектора. Annales Polonici
Mathematicy, 1966, v. 17, p. 281-320.
10. Гахов Ф.Д. Краевые задачи. М.Наука,1977,640с.
11. Положий Г.Н. Теория и применение р-аналитических и (p,q) аналитических функций.
К,1973,423с.
УДК 004.056:003.26
С.С. Барильник, Н.Е. Герасимов, И.В. Минин, О.В. Минин
НОВЫЕ ПОДХОДЫ К ПРОГРАММНО-ТЕХНИЧЕСКОЙ ЗАЩИТЕ СЕТЕВЫХ
ПУБЛИКАЦИЙ
Рассматриваются методы программно-технической защиты сетевых публикаций от
копирования и нелегального использования средствами новых стелсографических
алгоритмов защиты авторского права.
Согласно [1], «мультимедийный» web-документ, строго говоря, представляет собой
совокупность различных работ, защищаемых законом об авторском праве. Кроме того,
web-документ, содержащий базу данных, может подпадать под другие законы. В то же
время существует ряд технических особенностей сети, которые существенно осложняют
защиту авторских и смежных прав. Например, легкость создания копий в неограниченном
количестве, и также легкость записи на жесткий диск персонального компьютера частей
Интернет - сайта (что является нарушением права на воспроизведение) делает каждого
пользователя сети потенциальным нарушителем законодательства.
Вопрос о том, какие из исключительных прав владельца защищенной авторским
правом работы могут быть нарушены в результате распространения работ через сеть
Интернет, был предметом теоретических споров. Совершенно очевидно, что нарушается
право копирования, поскольку распространение подразумевает, что:
 для того чтобы появиться на сайте, работа представляется на языке разметки
гипертекста (HTML) (что может рассматриваться как «воспроизведение в материальной
форме» либо как нарушение права автора на адаптацию или перевод);
 работа хранится в виде компьютерной программы на главном сервере (в
Великобритании, например, определение копирования включает в себя «хранение в
электронной форме на любом виде носителей»;
 работа воспроизводится на компьютерах всех «посетителей» web-сайта. Надо
заметить, что в данном случае «разрешение» на нарушение, данное третьей стороне,
является первичной формой нарушения, - таким образом, человек, который предоставляет
третьим сторонам доступ к работе, может считаться санкционирующим копирование,
которое, в техническом смысле, происходит каждый раз, когда посетители web-сайта
достигают соответствующей страницы.
Начальник бюро специальных технических мероприятий (БСТМ) МВД России Борис
Мирошников недавно заявил, что в России «достаточно... оригинальным считается
преступление, которому быстро нашелся специальный термин — «фишинг» (уже давно
используется мошенниками по всему миру). Это размещение в Интернете сайтовблизнецов известных компаний и банков с целью «выуживания» информации о счетах и
платежных реквизитах» [2]. В этой связи проблема «распознавания» поддельных страниц
сайтов приобретает весьма актуальный характер. «Мы рекомендуем службам
информационной безопасности ежедневно вести активный поиск в Интернете подобных
двойников, их организации и уведомлять нас о подобных находках», — подчеркнул
руководитель БСТМ.
Для доказательства авторства спорной работы используется несколько механизмов. К
основным способам защиты сетевых публикаций можно отнести [3]:
50
 публикацию статьи на бумажном носителе (самый простой и надежный вариант
при условии, конечно, что дата публикации - более ранняя, чем дата появления
контрафактного экземпляра);
 засвидетельствование у нотариуса даты создания статьи (этот способ защиты
осуществляется путем нотариального заверения распечатки подготовленной статьи с
указанием даты и автора произведения);
 иной способ удостоверения факта существования статьи на определенную дату
(например, можно отправить самому себе обычное письмо, почтовый штемпель на
конверте и будет подтверждением);
 программно-техническую защиту (подразумевается использование программы,
предназначенной для защиты в сети прав и законных интересов авторов электронных
публикаций, путем отображения публикаций способом, исключающим их копирование
и/или иное несанкционированное размножение, модификацию).
В вопросе защиты контента (содержимое) сайта от копирования существует несколько
отличных друг от друга программно-технических подходов [4]. Применение специальных
стелсографических технологий, позволяющих размещать согласно ч.4 ГК РФ внутри webдокумента «невидимых» для постороннего сообщений позволит частично решить эту
проблему.
Нами была разработана новая стелсографическая технология размещения скрытых от
постороннего взгляда сообщений произвольной длины и содержания в HTML-кодах, не
изменяющих внешний вид, содержание и дизайн собственно этой страницы [5,6,7]. В
принципе, данную технологию можно рассматривать как аналог цифровых водяных
знаков.
Данный способ передачи скрытой информации относится к нестандартным способам
передачи информации по легальным каналам (т.н. потайные каналы - subliminal channels).
Данные каналы используют тогда, когда имеется легальный коммуникационный канал, но
политика безопасности запрещает передавать по нему определенную информацию; иными
словами, информацию передавать можно, но она не должна выглядеть подозрительно (в
соответствии с некими, обычно не очень четкими критериями). Алгоритм работы
реализованной программы следующий. Скрытие сообщения:
1. Чтение исходного HTML файла и сообщения
2. Кодирование сообщения
3. Оптимизация исходного HTML файла и подсчет количества мест для вставки
закодированного сообщения
4. Разбиение закодированного сообщения на части
5. Выделение памяти для HTML файла со скрытым сообщением
6. Вставка частей закодированного сообщения в HTML файл
7. Запись результатов в файл
Извлечение сообщения:
1. Чтение HTML файла со скрытым сообщением
2. Поиск, извлечение и декодирование сообщения
Анализ основных свойств разработанного алгоритма сводится к следующему:
 стегоканал не обнаруживается визуально и его можно определить только при
сравнении объема контейнера V0, свободного от скрываемой информации, с объемом
заполненного контейнера V1 (так как V1>Vo), если заранее известен V0; Таким образом,
если Vo не известен, то система обладает стегостойкостью.
 сжатие методами стандартного архивирования (RAR, ZIP и.т.д.) заполненного
контейнера не приводит к искажению скрываемой информации;
 ограничений по использованию типа встраиваемого сообщения нет (в качестве
такого были использованы текстовый файл, звуковой файл формата MP3, видеосигнал
формата MPEG4, графическое изображение, сжатое алгоритмом сжатия JPEG);
51
 в отличие от известных алгоритмов стеганографии на основе методов
преобразования текста, позволяющих скрывать сообщения в HTML файлах (например,
реализованный в программе Steganos for Window), в описанном методе передачи скрытых
сообщений нет ограничений на объем контейнера в зависимости от объема скрываемого
сообщения.
 в отличие от известных алгоритмов стеганографии на основе методов
преобразования текста, в описанном методе передачи скрытых сообщений нет
ограничений и на содержание контейнера;
 передача сообщений осуществляется анонимно, т.е. получатель сообщения может
находиться в любом, заранее не известном месте, достаточно иметь доступ к
закодированной странице;
 скрытие информации в HTML-коде может проводиться многократно, т.е. поверх
одного сообщения скрываться другое, при этом все свойства алгоритма остаются
неизменными;
 разработанные меры и реализация алгоритма дополнительно позволяют снизить
вероятность визуального обнаружения факта наличия скрытого сообщения.
Следует отметить, что разработанная методика позволяет в принципе скрывать в HTML
контейнере сообщения произвольного размера. Более того, как уже указывалось, вопрос
защиты контента (содержимое) сайта от копирования может быть основан на
использование возможностей языка JavaScript. Однако и сами программы на этом языке
нуждаются в защите. Предлагаемая технология защиты авторских прав работоспособна и
для скриптов, написанных на JavaScript.
Для непосредственного скрытия информации в Web - странице можно использовать
один из стеганографических алгоритмов, адаптированных для HTML:
1. Биты скрываемой информации представляются в виде непечатаемых символов.
Такими символами являются «Пробел» и «Горизонтальная табуляция». Таким образом,
можно представить биты в виде символов: «1» – «Пробел», «0» – «Горизонтальная
табуляция». Каждый байт скрываемой информации преобразуется в последовательность
таких символов, где каждому символу соответствует бит скрываемого байта. Например,
скрываемый байт – 0х43 = 0100 0011 => « | | | | | | | |», где | | –
«Пробел», | | – «Горизонтальная табуляция». Далее полученная последовательность
помещается в конец строки и становится «невидима». По такому принципу можно скрыть
один байт информации в одной строке [5].
2. В Windows для перевода строки используется два символа: 0х0D, 0x0A. В
современных Unix операционных системах для этого достаточно одного символа: 0х0А.
Большинство текстовых редакторов понимают и правильно отображают оба формата
перевода строк. Пользуясь этой особенностью, можно «прятать» биты скрываемой
информации: «0» – 0х0А, «1» – 0х0D 0x0A, т.е. наличие 0x0D является «1». По такому
принципу можно скрыть один бит информации в одной строке [5].
В случае защиты Web-документа контейнером является HTML файл. Для увеличения
стегостойкости информации будем вставлять полученные последовательности не в конец
каждой строки, а только в конце строк, заканчивающихся на тэг
(<html>,</titled>,</body>,<br>,<td> и т.д.). Это позволяет не отображать скрытых
пробелов и горизонтальных табуляторов на странице при работе с первым алгоритмом.
Второй алгоритм имеет свои особенности. Если злоумышленник будет знать, что
данные передаются, и догадается, что они скрываются таким образом (наличие 0x0D в
конце строки, так как в конце разных строк будут разные окончания), то, с целью
маскировки спрятанных бит информации от их визуального анализа в Hex – редакторе,
можно записать в конец каждой строки текста разные окончания (случайным образом), а
считывать только необходимые окончания (в данном случаи, только строки,
заканчивающиеся на тэг). Поэтому прочитать такие биты, не зная маски, невозможно, что 
52
увеличивает стойкость к одной из самых распространенных атак – DOS-атак – анализ
статистических данных, путем анализа всего документа.
В статье [5] также приведен сравнительный анализ предложенных алгоритмов, который
показал, что второй алгоритм обладает большей стегостойкостью, но его пропускная
способность гораздо меньше первого, так как он более требователен к размеру контейнера
(больше 100 Кб).
Следует отметить, что описанные алгоритмы и их практическая реализация внедрены
на официальном сайте фирмы, занимающейся разработкой программного обеспечения
ООО «Графические программные системы», в качестве защиты авторского права на
проект «МирКибер» в июне прошлого года.
Таким образом, в работе предложена и исследована новая стелсографическая
технология скрытой передачи информации произвольного содержания в HTML-файлах.
Разработана демонстрационная версия программы. Определены основные свойства
алгоритма, при этом если заранее не известен размер файла-контейнера, то алгоритм
обладает стегостойкостью. Предлагается использовать данный механизм скрытой
передачи данных для защиты авторских прав в web-документах и контроля их
целостности. Дальнейшие работы в этом направлении будут направлены на оптимизацию
предложенного алгоритма и улучшения его свойств.
Перспективными областями применения данного механизма передачи скрытой
информации, по мнению авторов, являются:
 Скрытая аннотация документов (в т.ч. мультимедийные базы данных),
 «Цифровой сертификат», скрытый в HTML-коде страницы,
 Контроль целостности документов,
 Скрытая связь (особенно включая случаи, когда криптографические методы
использовать нельзя),
 Аутентификация (электронная коммерция, электронная почта, электронное
конфиденциальное делопроизводство),
 Защита от копирования,
 Деловой документооборот с конфиденциальной информацией, включая «ноу-хау»
и т.п.
Библиографический список
1. Информационные технологии в бизнесе / Под ред. М.Желены. – СПб: Питер, 2002.
2. It-курьер, №5, 2007
3. Антон Серго. «Некоторые вопросы защиты авторского права в Интернете (теория и
практика)», Режим доступа http://www.internet-law.ru/articles/ap-is.htm, свободно
4. Вячеслав Белов. «Защита контента», Режим доступа
http://kis.pcweek.ru/Year2004/N5/CP1251/TematicReviews/chapt1.htm, свободно
5. Барильник С. С., Минин И. В., Минин О. В. «Адаптация алгоритмов текстовой
стеганографии для HTML» // 8 международная сибирская школа-семинар по электронным
приборам и материалам EDM'2007, 2007, Novosibirsk, NSTU, p.225-228.
6. Барильник С.С., Минин И.В., Минин О.В., Щетинин Ю.В. «Текстовая
стеганография в HTML: реализация скрытых каналов передачи данных» // Вторая
международная научно-практическая конференция ВИРТУАЛЬНЫЕ И
ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ 2007 «Ползуновский Альманах», 2007, Барнаул,
АГТУ, стр. 28-29.
7. Минин И.В., Минин О.В., Герасимов Н.Е. СТЕЛСОГРАФИЧЕСКАЯ ЗАЩИТА
ИНТЕЛЛЕКТУАЛЬНОЙ СОБСТВЕННОСТИ НА ДОКУМЕНТЫ В WWW. // Восьмой
международной симпозиум ТЕХНОМАТ 2007 «Материалы, Методы и Технологии»,
Болгария, 28 май - 1 июнь.
53
УДК 004.056.5
Э.Р. Бейбутов
АНАЛИЗ ЗАЩИЩЕННОСТИ КОРПОРАТИВНЫХ СИСТЕМ НА ОСНОВЕ
ВЕРОЯТНОСТНЫХ СЕТЕЙ ПЕТРИ
В статье рассматриваются основные элементы защиты корпоративных систем от
внешних и внутренних угроз. Приводится несколько форм проявлений злоумышленников, а
также определяются конкретные цели атак. Поднимаются вопросы о необходимости
оценить существующую корпоративную систему на возможность реализации угроз и
вычислить уровень доверия к ней. Для решения поставленной задачи предлагается метод
с моделированием источников угроз и механизмов защиты. Результатом служит ранг
системы (уровень доверия), вычисленный с помощью математических аппаратов.
Получить количественную оценку защищенности и определить уровень доверия можно
с помощью моделирования критических событий, используя вероятностные сети Петри.
Метод, изложенный в статье, предполагает:
1) выделение и моделирование отдельных механизмов защиты от конкретных типов
угроз;
2) вычисление вероятности реализации выбранных типов угроз;
3) определение общей вероятности нарушения безопасности объектов КС;
4) вывод уровня доверия к защищенной КС, исходя из рангов защищаемых объектов
и вероятностей проявления угроз.
Полученные результаты можно использовать, как при оценке проектов, так и для
контроля существующих КС. Анализ промежуточных значений поможет выявить слабые
места и уязвимости в рассматриваемых корпоративных системах.[1]
Действия по достижению целей атак
Для успешной реализации угрозы злоумышленник предпринимает конкретные
действия, список которых не бесконечен. Можно разбить по группам известные
активности в зависимости от их принадлежности к конкретным целям атак (таблица 1).
Конечно, в общем случае стоило бы рассматривать всевозможные сочетания действий
и целей, но надо учитывать реальные условия эксплуатации КС. Тем более, что,
рассматривая только технические аспекты проблемы защищенности корпоративной
системы, не стоит забывать об обязательных организационно-правовых режимах,
установленных на объекте информатизации, в контролируемой зоне которого она
функционирует.
Развитие инфраструктуры вычислительных сетей даёт много возможностей для
автоматизированной обработки информации, ускоряет обмен документов и снижает долю
рутинных операций в системе. Огромное количество достоинств делает корпоративную
сеть с установленными программно-аппаратными системами автоматизации процессов
незаменимой при выполнении повседневных задач и ведении бизнеса. Но неизбежно
появляются информационные риски, снижение которых достигается установкой
защитных комплексов. Вопрос о составе и стоимости необходимых программноаппаратных систем защиты является основным при создании преград действиям
злоумышленников. Это индивидуальная задача проектирования, решение которой
выходит за пределы статьи.[2]
54
Таблица 1
Действия злоумышленника
Серверы
демилитаризованной
зоны
Серверы
корпоративной
сети
ЭВМ и
серверы
внутренней
локальной
сети
ЭВМ и
серверы
внешних
подразделений
корпорации
Соответствующие
системы защиты
(сокращения
раскрыты в
тексте)
Mailbombing X X Антиспам
Атаки (D)DoS X X X МЭ
Подбор пароля X X X X IDPS
Rootkits, дыры в ПО X X X X Скан., IDPS
Инъекция(SQL,PHP) X X X Скан.
Вирусы, трояны, черви X X X X Антивир., МЭ
Сетевая разведка X X X МЭ, IDPS
Man-in-the-Middle X X Крипт.
Сниффинг пакетов X X X X VPN, Крипт.
IP-спуфинг X X X Крипт.
Построение вероятностной сети Петри для анализа средств защиты КС
На рисунке 1 представлена типовая ВСП, которая строится для решения поставленной
задачи. Естественно, что при анализе конкретных корпоративных систем, сеть будет
меняться, а её параметры перерассчитываться.[3]
Рассмотрим подробнее сеть Петри, изображенную на рисунке 1. Начальная позиция P0
отражает совокупность угроз вирусов, червей и троянских коней. Срабатывание одного из
трех переходов (T0,T1,T2) определяет конкретный тип атаки. Позиция P6 с маркером
отвечает за безопасное функционирование антивирусной системы. Если срабатывает
переход T3, то маркер перемещается в P4, P5, что говорит о появлении новых эпидемий в
сети, против которых антивирус может оказаться бессильным. В свою очередь, активация
одного из переходов {T5, T6, T7} является следствием не удачной работы эвристического
метода, а активация T8 – сигнатурного метода. При успешной реализации угрозы маркер
перемещается в позицию P8.
Рисунок 1 – сеть Петри работы антивируса
Аналогичными способами взаимодействия строятся сети Петри других систем защиты
КС. Для получения вероятностной сети Петри необходимо заполнить матрицу P(r),
которая связана с достижимыми разметками, изучаемой сети.
Вероятности смены разметок определяются следующими значениями: P01(t0)=q01;
P02(t1)=q02; P03(t2)=q03; P14(t3)=q14; P25(t3)=q25; P36(t3)=q36; P47(t5)=q47; P57(t6)=q57;
P67(t7)=q67; P78(t4)=q78; P79(t8)=q79.
Параметры вероятностных сетей Петри межсетевого экрана и других средств защиты
КС находятся аналогичным способом.
55
Решение задачи о нахождении вероятности реализации угрозы
На этом этапе предполагается, что смоделирована работа всех средств защиты и
найдены вероятности смены разметок в соответствующих ВСП. Следующим шагом
является вычисление вероятности успешной реализации атаки, т.е. возможности перехода
сети Петри из начальной разметки в разметку, соответствующую успешной реализации
угрозы.
Вернёмся к вероятностной сети Петри, изображенной на рисунке 1. Для ответа на
поставленный вопрос необходимо вычислить вероятность перехода из начальной
разметки M 0  ,0,0,0,0,0,1,0,0 к разметке M ' x, x, x, x, x, x, x, x,1 , которая
соответствует проникновению вирусной атаки в корпоративную систему.
Очевидно, что M’ соответствует элементу M9 множества R(N). Начальное состояние M0
и состояние M9 соединяют неколько путей.
Так как переход от разметки M’ к M’’ не зависит от того, как появилась разметка M’, а
зависит лишь от данного состояния системы, то переходы от одной разметки к другой
можно представить цепью Маркова, для которой вероятность перехода от состояния Si к
состоянию Sj есть произведение вероятностей перехода к промежуточным между Si и Sj
состояниям. Следует, что вероятность ( ) P M 0  M

определяется формулой (1)

  
k
j
j j P M M P j r
1
0 1
( ) , ( ). 
(1)
Очевидно, величина 0 P M M ( )  определяется по формуле (2):
( ) ( ),
1
0  0

  
l
i
i
P M M P M M
 
(2)
где l – число путей.[4]
Определение уровня доверия к защищенной корпоративной системе
Вернёмся к таблице 1. Предполагается, что уже найдены все вероятности реализации
угроз Pij . Для определения степени критичности целей атак необходимо ввести понятие
коэффициента важности объекта i. Перечислим конкретные значения коэффициентов
некоторой корпоративной системы (∑i =1):серверы демилитаризованной зоны – 0,25;
серверы корпоративной сети – 0,35; ЭВМ пользователей и серверы внутренней локальной
сети – 0,1; ЭВМ пользователей и серверы внешних подразделений корпорации – 0,3.
Для каждого объекта по формуле (3) вычислим среднее значение вероятности
реализации угроз.
,
1
i
Ri
j
ij
Ср
i
R
P
P

 (3)
где Ri - общее количество реализуемых атак.
Далее определим уровень доверия к защищенной КС как сумму произведений
соответствующих коэффициентов и средних значений вероятности успешной работы
средств защиты:
(1 ), [0;1].
4
1
    

Q P Q
i
Ср i i
Вывод
Разработанный метод позволяет дать количественную оценку информационной
безопасности корпоративной системы. Поэтапные действия, исходящие из логичного 
56
структурирования объектов, средств защиты и угроз КС, основываются на известных
математических аппаратах сетей Петри, цепей Маркова и теории вероятностей.
1. Моделирование различных механизмов защиты от конкретных типов угроз является
гибкой процедурой. Это говорит о том, что степень приближения модели к реальной
системе зависит только от наличия соответствующей информации и требований
менеджмента ИБ к детальности проводимого анализа.
2. Вычисление вероятности реализации выбранных типов угроз происходит по
апробированным расчетам на основе математического аппарата вероятностных сетей
Петри, являющего развитием теории конечных автоматов.
3. Определяемая общая вероятность нарушения безопасности объекта КС служит
важным промежуточным показателем защищенности. Анализ этого значения важен при
идентификации рисков, так как помогает оценить уровень угроз интересующего объекта,
а не системы в целом.
4. Вывод уровня доверия к КС учитывает коэффициент важности защищаемых
объектов, что говорит о его адекватности. Итоговый количественный показатель может
использоваться при точном сравнении нескольких корпоративных систем, а также
незаменим при выборе наилучших вариантов при проектировании комплексных систем
безопасности.
Библиографический список
1. А. Астаханов, «Анализ защищенности корпоративных систем», Открытые системы,
№07-08 2002.
2. С. Вихорев, Р. Кобцев, «Как определить источники угроз», Открытые системы, №07-
08 2002.
3. Ю.Н. Фролов, «Анализ классических моделей защиты информации в АСОД»,
МИФИ(ТУ) 2001.
4. В.М. Захаров, «Вероятностные автоматы и их приложения», — Казань: Изд-во
Казанского ун-та, 1986.
УДК 681.51
А.А.Бойчук, А.Е. Бердиев, В.С. Дорофеев
ОРГАНИЗАЦИЯ ЛАБОРАТОРИИ КОНТРОЛЛЕРОВ КТ-51
Автоматизированная система управления технологическими процессами (АСУ ТП) -
совокупность аппаратно - программных средств, осуществляющих контроль и
управление производственными и технологическими процессами; поддерживающих
обратную связь и активно воздействующих на ход процесса при отклонении его от
заданных параметров; обеспечивающих регулирование и оптимизацию управляемого
процесса.
Не существует отрасли промышленности, в которой не было бы потребности
применения автоматизации технологических процессов. Одними из главных преимуществ
АСУ ТП является снижение, вплоть до полного исключения, влияния так называемого
человеческого фактора на управляемый процесс, сокращение персонала, минимизация
расходов сырья, повышение качества исходного продукта, и в конечном итоге
существенное повышение эффективности производства. Основные функции,
выполняемые подобными системами, включают в себя контроль и управление, обмен
данными, обработку, накопление и хранение информации, формирование сигналов тревог,
построение графиков и отчетов.[1] Наиболее важным элементом в
автоматизированных системах является контроллер. 
57
Контроллеры КТ-51 как одно из аппаратных решений задач безопасности
Основные цели и задачи информационной безопасности, решение которых
обеспечивает контроллер КТ-51:
1) Секретность информации. Когда информация обрабатывается на компьютерах и
передается по открытым каналам связи, административные методы оказываются
бессильны и на помощь приходят методы информационной безопасности. Задача
обеспечения секретности, фактически, сводится к тому, чтобы сделать возможным
хранение и передачу данных в таком виде, чтобы противник, даже получив доступ к
носителю или среде передачи, не смог получить сами защищенные данные.
2) Целостность информации. В процессе обработки и передачи по каналам связи
данные могут быть искажены, как случайно, так и преднамеренно. Также информация
может быть изменена прямо на носителе, где она хранится. Проверка целостности просто
необходима в ситуациях, когда интерпретация неправильных данных может привести к
очень серьезным последствиям. Обеспечение целостности (контроль целостности)
заключается в том, чтобы позволить либо утверждать, что данные не были
модифицированы при хранении и передаче, либо определить факт искажения данных. То
есть никакое изменение данных не должно пройти незамеченным.
3) Идентификация и аутентификация. Идентификация необходима для того, чтобы
отождествить пользователя с некоторым уникальным идентификатором. После этого
ответственность за все действия, при выполнении которых предъявлялся данный
идентификатор, возлагается на пользователя, за которым этот идентификатор закреплен. В
автоматизированных системах управления технологическими процессами вся
ответственность ложится на диспетчера.
Аутентификация является необходимым дополнением к идентификации и
предназначена для подтверждения истинности (аутентичности) пользователя,
предъявившего идентификатор. [2]
Все эти задачи можно отразить в следующих аспектах:
– защита от несанкционированного доступа с целью получения информации,
составляющей коммерческую тайну предприятия.
– защита от несанкционированного доступа и вредительских действий персонала,
имеющего доступ к оборудованию, с целью разрушения ПО, а также взлома
программного кода и его изучения.
– защита от несанкционированных действий оперативно-диспетчерского персонала.
Лабораторные работы, выполняемые на контроллере КТ-51
Комплект оборудования для проведения лабораторных работ включает в себя
компоновочный шкаф модулей, пульт-иммитатор, персональный компьютер. Внешний
вид комплекта изображён на рисунке 1.
Рисунок 1 – Комплект для выполнения лабораторных работ
58
Модули, входящие в состав контроллера, выполняют следующие функции:
 модуль МП-03 выполняет функции центрального процессорного устройства в
составе контроллера, обеспечивает информационный обмен между модулями вводавывода контроллера и другими интеллектуальными устройствами, обработку и передачу
данных на верхний уровень управления, а также дистанционное и автоматическое
управление модулями и технологическими объектами;
 модуль УСО-01 обеспечивает сбор данных с датчиков ТС/ТИИ, ТИТ и
интеллектуальных устройств, подключенных по интерфейсу RS-485, а также осуществляет
управление технологическими объектами по каналам ТУ;
 модуль ТИТ-01 обеспечивает измерение унифицированных сигналов постоянного
тока, поступающих на измерительные каналы ТИТ; обработку измеренных значений с
учетом заданных алгоритмов обработки, контроль пересечения измеряемыми сигналами
заданных порогов; сбор, обработку и передачу данных от интеллектуальных устройств,
подключенных по интерфейсу RS-485;
 модуль ТС-01 выполняет функции телесигнализации дискретного состояния
двухпозиционных объектов и обеспечивает контроль состояния объектов по состоянию
дискретных датчиков; подавление "дребезга" контактов, определение нестабильного
состояния каналов ТС; сбор, обработку и передачу данных от интеллектуальных
устройств, подключенных по интерфейсу RS-485;
 модуль ТУ-01 выполняет функции телеуправления двухпозиционными объектами,
а так же контроля включения промежуточных реле и контроля наличия оперативного
напряжения в цепях управления;
Первый курс работ состоит из пяти лабораторных по одной на каждый модуль. К
каждому модулю имеется возможность подключения пульта-иммитатора, содержащего
различный набор датчиков.
Перед студентами ставится задача изучения аппаратных возможностей модулей, а
также подключить датчики, описать работу модулей в автономном режиме.
Второй курс лабораторных работ предназначен для изучения технологии
программирования модулей на языке С++. Функции модулей выполняет программа,
записанная во FLASH-памяти процессора. В программе задаются параметры для
обработки сигналов и задан алгоритм обработки данных каналов ввода-вывода. При
задании различных параметров предоставляется возможность протестировать систему.
Лабораторный комплекс и его структура
Контроллер КТ-51 предназначен для применения в составе распределенных и
централизованных комплексов и систем телемеханики, сбора данных, технологического
управления на объектах электроэнергетики, нефтедобычи, промышленных предприятиях
и других отраслей промышленности. Контроллер представляет собой набор
интеллектуальных функциональных модулей, объединенных промышленной шиной
интерфейса CAN. Функционально контроллер можно разделить на процессорный модуль,
модули ввода-вывода, клеммные поля и блоки коммутации [3]. Структурная схема
контроллера приведена на рисунке 2.
59
CAN-1
CAN
CAN
CAN
CAN
CAN-2
RS-485-1
RS-485
RS-485
RS-485
RS-485-2
Рисунок 2 - Структурная схема контроллера
Набор функциональных модулей включает:
 Модули МП-02 и МП-03, процессорные модули;
 Модуль УСО-01, интеллектуальный модуль ввода-вывода аналоговых, дискретных
и цифровых сигналов;
 Модуль ТС-01, интеллектуальный модуль ввода дискретных сигналов;
 Модуль ТИТ-01, интеллектуальный модуль ввода аналоговых сигналов;
 модуль ТУ-01, интеллектуальный модуль ввода-вывода дискретных сигналов;
 Поля клеммные, промежуточные блоки для присоединения внешних цепей к
соответствующим модулям;
 Блок коммутации БК-02, промежуточный мощный релейный повторитель каналов
дискретного вывода;
 Соединитель интерфейсный для удобного подключения цепей питания и
интерфейса CAN между модулями контроллера;
Функциональные блоки контроллера, могут применяться в составе систем и
комплексов как вместе, так и отдельно и независимо друг от друга. Контроллер в
автоматическом режиме обеспечивает выполнение функций телемеханики, сбора данных
с интеллектуальных устройств и функций управления. После включения питания
контроллера процессорный модуль проверяет наличие и достоверность хранящихся в
энергонезависимой памяти программных установок и, при необходимости, запрашивает
их из центра сбора информации. В программных установок содержатся параметры,
например:
 информационная емкость контроллера;
 наличие и типы подключенных интеллектуальных устройств;
 временные параметры каналов ввода-вывода;
 алгоритмы обработки входных данных;
 максимальные и минимальные значения измеряемых параметров.
Для конфигурирования контроллера используется программа конфигуратор КТ-51,
которая позволяет полностью конфигурировать параметры работы модулей. Перед 
60
началом работы программа конфигуратор КТ-51 автоматически определяет состав
подключенных модулей и их параметры.
Модули контроллера работают под управлением встроенного ПО модулей. Встроенное
ПО обеспечивает выполнение следующих функций:
 обеспечение обмена данными по интерфейсам;
 первичная обработка каналов ввода-вывода (измерение параметров, буферизация
данных, предварительная фильтрация);
 алгоритмы обработки данных каналов ТС/ТИИ, ТИТ, команд ТУ;
 сервисные функции: индикация, ввод-вывод данных в сервисный интерфейс, ввод
установок, параметров модуля и команд по сервисному интерфейсу, самодиагностика и
контроль состояния модуля.
Замена встроенного ПО обеспечивается с помощью специализированного ПО
модулей: программа PC Writer 16LX предназначена для программирования FLASHпамяти микроконтроллера модулей.
В процессе работы контроллера функциональные модули непрерывно производят
обработку каналов ввода-вывода в соответствии с заданными алгоритмами, выявляя
изменения контролируемых параметров. При изменении контролируемых параметров
(превышение заданных порогов ТИТ, срабатывание датчиков ТС, невыполнение команд
ТУ и др.) контроллер формирует события с привязкой ко времени совершения события и
по запросу данных от сервера сбора информации или по своей инициативе доставляет
события в центр сбора информации. В случае возникновения аварийных ситуаций и сбоев
электропитания в контроллере обеспечивается сохранность информации за счет хранения
всех событий, не доставленных на сервер сбора данных, в энергонезависимой памяти.
Вывод
Изучение аппаратных возможностей комплекса и освоение технологии
программирования модулей позволит повысить качество подготовки студентов.
Библиографический список
1. http://business.rin.ru/; Латыев А., Автоматизированная система управления
технологическими процессами
2. http://www.des-crypto.ru/itsecur/quest/; Задачи информационной безопасности
3. Надыкто Е.А., Таширов О.Г. Контроллер КТ-51. Руководство по эксплуатации –
Омск: НПО Мир, 62 с.
УДК 004.056
Е. Н. Горошкин, В. Г. Жуков
ПРИМЕНЕНИЕ САМООРГАНИЗУЮЩИХСЯ КАРТ КОХОНЕНА ДЛЯ АНАЛИЗА
ИНЦИДЕНТОВ ИБ2
Рассматривается применение самоорганизующихся карт Кохонена для анализа
сетевых аномалий на основе сведений о сетевой активности, фиксируемой proxyсерверами
3
в служебных журналах (лог-файлах). Рассмотрен анализ аномалий с
использованием авторской разработки – программного продукта «Фигура Про».

2
Работа поддержана грантом Президента молодым кандидатам наук МК-4294.2008.9
3 Анализ лог-файлов proxy-серверов интересен тем, что proxy-сервер пропускает через себя всю
информацию, фиксируя сетевую активность каждого компьютера в сети.
61
В настоящее время в различных сферах деятельности человека значительную роль
играет анализ данных. Для проведения эффективного анализа необходимы специальные
инструменты.
Целью данной работы является рассмотрение авторской разработки, позволяющей
проводить анализ сетевой активности с использованием алгоритма самоорганизующихся
карт Кохонена.
Теоретические сведения
Самоорганизующаяся карта Кохонена (англ. Self-organizing map - SOM) -
соревновательная нейронная сеть с обучением без учителя, выполняющая задачу
кластеризации. Является методом проецирования многомерного пространства в
пространство с более низкой размерностью.
Важным отличием алгоритма SOM является то, что в нем все нейроны упорядочены в
некоторую структуру (обычно двумерную сетку). При этом в ходе обучения
модифицируется не только нейрон-победитель, но и его соседи, попавшие в радиус
обучения, но в меньшей степени. Именно за счет этого SOM можно считать одним из
методов проецирования многомерного пространства в пространство с более низкой
размерностью. При использовании этого алгоритма вектора, схожие в исходном
пространстве, оказываются рядом и на полученной карте [1].
Под сетевыми аномалиями в данной работе понимается отклонение на указанную
величину по тем или иным параметрам от среднего значения для конкретного компьютера
сети. В качестве параметров могут выступать объем входящего и исходящего трафика,
количество DNS-запросов, количество IP-пакетов и др.
На рынке программного обеспечения представлены как продукты, реализующие анализ
лог-файлов proxy-серверов, так и реализующие алгоритм самоорганизующихся карт.
Целью разработки авторского программного продукта являлось совмещение преимуществ
упомянутых выше продуктов применительно к анализу сетевых аномалий и привнесение
нового средства – автоматического обнаружения аномалий (отклонений) на основе
задания правила обнаружения аномалий.
Алгоритм самоорганизующихся карт выбран не случайно. Именно он имеет
наибольшую пригодность для решения поставленной задачи ввиду следующих
преимуществ:
 обучение нейросети происходит без учителя на основе только входных данных, т.е.
для проведения анализа данных не нужно быть специалистом в области искусственного
интеллекта;
 наглядное представление результатов в виде цветных двумерных карт, на которых
схожие в исходном пространстве вектора (компьютеры сети) оказываются радом;
 использование методов искусственного интеллекта (нейросетевых алгоритмов)
позволяет выявлять скрытые закономерности в данных, которые могут остаться без
внимания при использовании только статистических методов.
Описание разработанного программного обеспечения
Программный продукт «Фигура Про» разрабатывался для оперативного выявления
аномалий, когда нет необходимости знать подробности, а нужно по возможности быстро
определить «аномальный» компьютер, имеющий существенные отклонения по тем или
иным параметрам. Это позволяет не тратить время на подробный анализ всех
компьютеров сети, а проводить его только для «аномальных».
В качестве исходных данных используется текстовый файл в табличной форме,
который содержит те параметры сетевой активности, которые необходимо
проанализировать. Этот файл формируется из данных, полученных из лог-файлов
специальным модулем-анализатором лог-файлов. С помощью данного модуля
производится выбор только тех данных из лог-файлов, которые необходимо 
62
анализировать, и сохранение их в табличном виде. Таким образом, единый табличный
формат исходных данных делает процедуру анализа независимой от структуры логфайлов серверов. Роль преобразования в табличный формат возложена на модульанализатор, который можно легко модифицировать (доработать) при необходимости
анализа данных из лог-файлов ранее не известного или видоизмененного формата.
Процедура анализа данных с выявлением аномалий при использовании «Фигура Про»
представлена на рисунке 1.
Рисунок 1. Общая схема анализа данных с использованием «Фигура Про»
Импорт данных, настройка параметров нейросети и задание правила автоматического
обнаружения аномалий позволяет осуществить интуитивно понятный «Мастер импорта
данных».
Среди параметров обучения можно выделить два способа обучения нейросети:
1. Обучение завершается при прохождении указанного количества эпох
обучения.
2. Обучение завершается, когда максимальная ошибка (отклонение между
весовыми коэффициентами нейрона-победителя и всеми векторами исходных
данных) на текущей эпохе обучения меньше указанного пользователем значения.
Правило автоматического обнаружения аномалий включает в себя два параметра:
 величина превышения среднего значения для данного параметра: во сколько
раз или на сколько процентов;
 количество карт, в которых одновременно встречается превышение среднего
на указанную величину.
Особенностью проводимого анализа с использованием самоорганизующихся карт
является возможность видеть общую картину сетевой активности. Это достигается за счет 
63
того, что в поле зрения попадают сразу несколько карт, причем маркер «активной
ячейки» (черная точка на рисунке 2) устанавливается сразу для всех карт, облегчая тем
самым сравнение величин анализируемых параметров, отображенных на разных картах.
Каждая ячейка карт соответствует определенному IP-адресу компьютера или группе IPадресов (нескольким компьютерам). Каждая карта представляет один из анализируемых
параметров. Внешний вид карт показан на рисунке 2.
Рисунок 2. Внешний вид двумерных карт. Треугольниками, согласно правилу автоматического
обнаружения аномалий, отмечены ячейки с аномальными значениями параметров.
Двумерные карты позволяют представлять результаты анализа в удобной для
понимания форме. Положение ячеек определяется результатами обучения нейросети,
раскраска ячеек – величиной исходных данных (по выбору пользователя отображается
максимальное или среднее значение).
Алгоритм самоорганизующихся карт осуществляет кластеризацию (группировку)
«похожих» элементов. Результат кластеризации отображается на служебной карте,
называемой «Карта попаданий». Данная карта показывает количество компьютеров,
попавших в ту или иную ячейку (узел) карт. Ячейки, в которые не попал ни один вектор
исходных данных, на карте попаданий не отображаются.
Помимо визуальной отметки аномальных ячеек треугольниками на картах, в
программном продукте имеется таблица «Аналитическая информация». Данная таблица
содержит информацию об IP-адресах компьютеров с аномальными параметрами, а также
значения аномальных параметров. Внешний вид таблицы представлен на рисунке 3.
64
Рисунок 3. Таблица «Аналитическая информация», режим отображения всех (не только
аномальных) параметров. Красными маркерами отмечены аномальные параметры, синими –
превышающие среднее значение для данного параметра («следует обратить внимание»).
На рисунке 3 можно видеть, что для компьютера с IP-адресом 214.101.174.124
выявлены три аномальных параметра: количество уникальных URL, количество IPпакетов и объем внешнего трафика. Справа от таблицы находится диаграмма,
показывающая соотношение текущей и средней величин параметров.
Рассмотренный в данной работе программный продукт «Фигура Про» сочетает в себе
легкость использования и эффективность оперативного анализа сетевой активности,
основанного на использовании самоорганизующихся карт Кохонена. При этом
пользователю не нужно быть специалистом в области анализа данных и искусственного
интеллекта.
Отличительной особенностью данного продукта является наличие в нем системы
автоматического выявления аномалий на основе правила обнаружения аномалий. Чтобы
обратить внимание пользователя на аномальные параметры, они отмечаются на картах.
Также автоматически формируется таблица аналитической информации, содержащая
информацию об «аномальных» компьютерах. Данные из этой таблицы можно
экспортировать в отдельный файл-отчет в формате HTML. По результатам анализа в
случае выявления аномальной активности может быть проведено служебное
расследование администратором сети.
Программный продукт «Фигура Про» можно использовать для анализа не только
сетевых аномалий, но также любых других числовых данных, представленных в
табличной форме.
Библиографический список
1. А. Стариков. Самоорганизующиеся карты - математический аппарат [Электронный
ресурс]. Режим доступа: http://www.basegroup.ru/neural/som.htm
65
УДК 669.713.7
В. В. Золотарев, Т.А. Лемешонок
КОНЦЕПЦИЯ ЯДРА СТАБИЛЬНОСТИ ИНФОРМАЦИОННО-УПРАВЛЯЮЩЕЙ
СИСТЕМЫ4
Рассмотрена теоретическая основа подхода к обеспечению надежности
распределенной информационно-управляющей системы. Приведены базовые направления
разработки концепции. Определены структурные элементы и этапы работы.
1. Различные виды информационно-управляющих систем требуют, как правило,
разных подходов к обеспечению надежности. Обычно для конкретизации применяемых
способов выделяют следующие уровни обеспечения их функционирования:
- техническое;
- программное;
- информационное;
- математическое;
- организационное.
В рамках данной работы задача ставится следующим образом. Исследуется
возможность формализации оптимального выбора мер повышения надежности
информационно-управляющей системы. Применяемые средства должны реализовывать
меры, направленные на информационное обеспечение, поскольку тестовой системой
будет являться универсальная кроссплатформенная система управления базами данных.
Это следует, например, из источника [1]: «…информационное обеспечение есть
совокупность баз данных с системами управления, файловых структур с каталогами и
системами управления…».
Кроме того, предлагается конкретизировать и математические методы исследования. В
источнике [2] в их качестве предлагаются три основных способа описания:
- структурная схема;
- граф состояний;
- система дифференциальных или алгебраических уравнений.
Соглашаясь с предложенным кругом математических методов, в данной работе
предлагается использовать граф состояний (или его аналитическую запись в виде матрицы
весов или матрицы инциденций).
2. Направления разработки концепции, основанные на предложениях пункта 1,
должны использовать следующие понятия:
- понятия теории надежности, стандартизированные либо соответствующие
источникам [1, 2];
- понятие ядра стабильности информационно-управляющей системы.
Понятие ядра стабильности должно определяться таким образом:
Меры обеспечения надежности, представляющие собой взаимоувязанный комплекс
средств, методов и методик резервирования и (или) реконфигурации структуры
информационно-управляющей системы, конкретизированной в работе до уровня
универсальной кроссплатформенной системы управления базами данных, на основе
экспериментальных данных связываются с конкретными видами отказов. Эта зависимость
отображается в виде двух матриц весов, представляющих собой аналитическую запись
графа состояний системы.
Матрица отказов заполняется классами отказов, определяемыми как основные для
информационных систем в теории надежности, и выглядит следующим образом:

4
Работа поддержана грантом Президента молодым кандидатам наук МК-3625.2007.9
66
F0=
















(1) ( )
( )
2
(1)
2
( )
1
(1)
1
...
...
... ...
...
...
n
m m
n
n
f f
f f
f f
,
Здесь n – количество итераций каждого класса отказов, или количество отказов одного
класса, но с разным уровнем ущерба, m – количество выделяемых классов отказов,
которое характеризует уровень декомпозиции информационно-управляющей системы, f –
вероятность проявления каждого класса отказов.
Матрица мер обеспечения надежности имеет вид:
R0=
















(1) ( )
( )
2
(1)
2
( )
1
(1)
1
...
...
... ...
...
...
n
m m
n
n
r r
r r
r r
,
Здесь n – количество итераций каждой меры обеспечения надежности, m – количество
выделяемых классов отказов. Правила заполнения матрицы таковы:
- в матрице R0 не должно быть нулевых (пустых) строк;
- меры обеспечения надежности должны гарантировать снижение вероятности хотя бы
одного класса отказов.
Исходя из вышеуказанных положений, ядром стабильности назовем такой набор мер
обеспечения надежности в виде матрицы R0, изменение которого приводит к снижению
интегрального показателя надежности системы (в рамках работы возможно уточнение
определения, что может потребоваться, к примеру, при введении в круг используемых
математических методов теории игр, в том числе рефлексивной).
Итак, оптимальные наборы мер обеспечения надежности предлагается выбирать среди
ядер стабильности информационно-управляющей системы.
3. Данный подход основан на реализации следующих этапов:
- декомпозиция информационно-управляющей системы, причем основанная на
особенностях конкретного направления, в данном случае – универсальной системы
управления базами данных;
- разработка новых или модифицированных методов моделирования процесса
устранения ошибок, тестирования надежности элементов системы, оценки оптимальности
принимаемых мер повышения надежности или ее компонентов.
- разработка практических рекомендаций по реализации формирования ядер
стабильности и апробация их на реальной задаче.
Выводы
Применение предложенного подхода позволяет реализовать требования к надежности
элементов информационно-управляющей системы с четкими ограничениями,
соответствующими ее характеристикам. Кроме того, расчет компонентов ядра
стабильности позволяет оптимизировать предлагаемые меры повышения надежности.
Библиография
1. Половко А.М., Гуров С.В. Основы теории надежности. – 2-е изд., перераб. и доп. –
СПб.: БХВ-Петербург, 2006. – 704 с.
2. Черкесов Г.Н. Надежность аппаратно-программных комплексов. – уч. пособие. –
СПб.: Питер, 2004. – 480 с.
67
УДК 004.056
А. А. Маковецкий, Е. В. Филькин
ВЕКТОРНЫЙ АНАЛИЗ ПРОБЛЕМ ИНФОРМАЦИОННОЙ БЕЗОПАСНОСТИ
В статье рассматривается методика проведения аудита информационной
безопасности с использованием векторов-характеристик, позволяющих детализировать
картину ИБ организации до необходимого уровня. Также оцениваются перспективы ее
применения.
Для того чтобы гарантировать эффективную защиту от угроз информационной
безопасности организациям необходимо иметь объективную оценку текущего уровня
безопасности организации. Именно для этих целей и применяется аудит информационной
безопасности.[1]
В настоящее время существует довольно много методик проведения аудита, но в
большинстве из них по мнению авторов существует одна проблема – результатом оценки
рисков ИБ являются скалярные величины, как, например, в системе анализа и управления
информационными рисками «Гриф» компании Digital Security или экспертной системе
управления информационной безопасностью «Авангард» разработки ИСА РАН, где
результатом оценки рисков является вероятность угрозы или ущерб при ее реализации. По
сути, подобного рода результаты лишь показывают наличие или отсутствие проблем ИБ в
организации и сами по себе малоинформативны.[2,3]
Предлагаемая методика позволяет не только получить коэффициенты «на пробой
системы», но и подробную детализацию проблем ИБ с последующей разработкой
рекомендаций по разработке/доработке системы защиты на основе этой детализации.
Данная методика является качественной методикой первичного аудита на соответствие
российским стандартам информационной безопасности. Ядро методики составляет
обобщенная таблица требований стандартов. На основе данной таблицы требований
составлены вопросные листы. Для каждого требования информационной безопасности
рассчитаны весовые коэффициенты, которые являются показателями влияния каждого
требования на общую картину ИБ в организации. Коэффициенты рассчитываются на
основе собственного шаблона аналитического исследования, которое специально
разработано под данную методику и проводится ежегодно.
Структура таблицы требований построена по иерархической схеме, а сама таблица
состоит из трех колонок: «Меры ИБ», «Разделы мер», «Пункты разделов». Данная
структура таблицы «от общего к частному» необходима для систематизированного
распределения весовых коэффициентов и баллов (на основе данных коэффициентов) по
требованиям стандартов. Коэффициенты ежегодно пересчитываются после проведения
аналитических исследований. Схема распределения коэффициентов и баллов показана на
рисунке 1.
В данной методике применяются следующие методы сбора данных:
─ Заполнение вопросных листов;
─ Интервьюирование сотрудников организации-заказчика;
─ Независимое дообследование системы.
Вопросные листы составляются на основе ядра методики – таблицы требований. В
процессе распределения весовых коэффициентов и баллов, происходит распределение
баллов по вопросам и вариантам ответов на вопрос, что в последующем, при обработке
вопросных листов позволяет получить предварительные результаты по аудиту.
68
Рисунок 1 – Схема распределения родительских коэффициентов и баллов
После первичного сбора информации, а именно заполнения вопросных листов,
производится интервьюирование сотрудников организации-заказчика и независимое
дообследование системы. Данные мероприятия проводятся в следующих целях:
1. Выявление уязвимостей ИБ, которые не были учтены в вопросных листах;
2. Проверка полученных ответов на вопросы на соответствие реальной картине ИБ в
организации.
При интервьюировании опрашиваются сотрудники различных должностей в
соответствии с таблицей требований. В зависимости от должности конкретного
сотрудника ему задаются вопросы из той части таблицы требований, на которые он может
дать ответы. Необходимо отметить, что не опрашиваются сотрудники, которые входят в
рабочую группу по проведению аудита ИБ. Для оценки рисков в дальнейшем, полученная
в ходе интервью информация помечается.
В ходе дообследования анализируется предоставленная документация на выполнение
требований стандартов, более детально анализируется все ПО и средства защиты
информации, проверяется устранены ли в них общеизвестные уязвимости.
В ходе такого дообследования используются экспертно-инструментальные методы,
предусматривающих использование специализированных программных средств, которые
позволяют получить необходимую информацию о составе и настройках программноаппаратного обеспечения автоматизированной системы заказчика. Полученные
результаты регистрируются.
После этапа сбора информации о системе защиты организации посредством
вопросных листов, интервьюирования и независимого дообследования проводится этап
оценки рисков информационной безопасности.
Ответы на вопросы из вопросных листов обрабатываются в соответствии со второй
частью таблицы распределения весовых коэффициентов и баллов, в которой указано
распределение баллов по вариантам ответов вопросов. Далее происходит суммирование
баллов по схеме, которая представлена на рисунке 2.
69
Рисунок 2 – Схема суммирования баллов
Сначала суммируются набранные баллы за варианты ответов на вопросы пункта
таблицы требований, далее складываются набранные баллы пунктов в пределах раздела,
итогом будет сумма набранных баллов за раздел меры. Далее суммируются набранные
баллы разделов в пределах текущей меры и затем суммируются набранные баллы за меры.
Полученные результаты являются предварительными, так как они получены только по
итогам обработки вопросных листов. Далее обрабатываются данные интервьюирования и
независимого дообследования.
Снимаемые/начисляемые баллы, полученные по результатам обработки данных
интервьюирования и независимого дообследования, равномерно распределяются по
разделу/пункту а также по вопросам из вопросных листов, с целью сохранения пропорций
в векторах-характеристиках (см. ниже), что необходимо для проведения анализа проблем
ИБ. Накладываются 2 ограничения: при снятии баллов, общий балл не может быть
отрицательным; при начислении баллов, общий балл не может превышать максимальный
балл за раздел или пункт.
После данной корректировки выполняется перевод набранных баллов в уровни
информационной безопасности. Перевод осуществляется по следующей схеме: набранная
сумма баллов за раздел/меру/все меры ИБ делится на максимальное количество баллов за
раздел/меру/все меры ИБ и умножается на 100%. В итоге получится уровень
информационной безопасности организации в разрезе разделов/мер и организации в
целом.
Для понимания сути полученных уровней информационной безопасности в разрезах
раздела, меры и организации в целом вводится шкала зон информационной безопасности.
Эта шкала разделена на четыре зоны: красная [0-40%), оранжевая [40-65%), желтая [65-
85%), зеленая [85-100%] (рисунок 3).
Если полученный уровень попадает в красную зону информационной безопасности,
это означает практически полное невыполнение требований стандартов, несоответствие
системы защиты информации тем задачам, которые на нее возложены. Оранжевая зона ИБ
говорит о частичном выполнении требований стандартов (до 65%), система защиты
информации не эффективно выполняет свои функции, данный уровень указывает на 
70
существенные проблемы в этой области. Желтая зона информационной безопасности
говорит о приемлемом уровне выполнения требований стандартов, об
удовлетворительном уровне функционирования системы защиты, но все таки проблемы
существуют. Попадание уровня ИБ в зеленую зону указывает на хорошее (а если процент
больше 93% - даже отличное) выполнение требований стандартов, система защиты
функционирует корректно и довольно эффективно, существенных проблем нет, но если
уровень ИБ не достиг показателя 98-100% рекомендуется произвести анализ тех участков
таблицы требований стандартов, где были потеряны баллы.
0%
10%
20%
30%
40%
50%
60%
70%
80%
90%
100%
Шкала зон информационной безопасности
Зеленая зона
Желтая зона
Оранжевая зона
Красная зона
Рисунок 3 – Шкала зон информационной безопасности
Полученные уровни информационной безопасности организации и являются той
самой скалярной величиной, которая лишь показывает наличие (или отсутствие) проблем
информационной безопасности в организации как и результаты многих других методик.
Для подробной детализации проблем ИБ авторы предлагают ввести так называемые
вектора-характеристики. Они представляют собой совокупность уровней
информационной безопасности, а каждый параметр вышестоящего векторахарактеристики является самостоятельным вектором на нижестоящем уровне (за
исключением вектора нижнего уровня). Предлагается три вида векторов-характеристик:
─ Главный вектор-характеристика методики;
─ Вектор-характеристика меры;
─ Вектор-характеристика раздела.
Главный вектор-характеристика представляет собой совокупность уровней ИБ
организации в разрезе мер в процентном виде. Для разработанной таблицы требований
стандартов он выглядит следующим образом:
(X, Y, Z, W)
где X, Y, Z, W – уровни ИБ организации в разрезе организационных, правовых,
технических и физических мер соответственно в процентном виде.
Таким образом, главный вектор-характеристика наглядно показывает ситуацию с
информационной безопасностью по мерам ИБ. Из него видно, каким из этих мер
необходимо уделить особое внимание при доработке системы защиты, в случае 
71
необходимости. Для дальнейшей детализации проблемы предлагается использовать
вектора-характеристики мер и разделов.
Вектор-характеристика меры строится аналогично главному вектору-характеристике,
но только по уровням ИБ организации в разрезе разделов в пределах меры. Количество
уровней, которые в него включаются, зависит от меры, точнее того, сколько разделов в
ней содержится. Выглядит он следующим образом:
(X, [Y], [Z], [W]…)
где X, [Y], [Z], [W] – уровни ИБ организации в разрезе разделов меры ИБ
процентном виде, […] – указывают на зависимость количества включаемых в
вектор параметров от меры ИБ.
Вектор-характеристика раздела аналогичен первым двум векторам и строится по
уровням ИБ пунктов. Количество параметров этого вектора также зависит от количества
пунктов в конкретном разделе. Обобщенная формула аналогична формуле векторахарактеристики меры, но только X, [Y], [Z], [W] – уровни ИБ пунктов в пределах раздела.
Параметры векторов-характеристик для большей наглядности окрашиваются в
соответствии со шкалой зон информационной безопасности.
Общее количество составляемых векторов-характеристик (Nv) по результатам
проведения аудита по данной методике равно следующему выражение:
Nv = Nr + Nm + 1,
где Nr и Nm – количество разделов и мер соответственно в таблице требований
стандартов.
Для разработанной таблицы требований количество векторов-характеристик равно 29.
При анализе проблем ИБ с помощью векторов-характеристик раздела, учитывается,
корректировались ли набранные баллы за раздел или нет. В случае корректировки после
анализа вектора-характеристики раздела учитываются те проблемы ИБ, из-за которых он
был подвержен корректировке, а также учитывается, насколько он был ей подвержен.
Пример: анализ проблем ИБ с использованием векторов-характеристик. Предположим,
что по результатам аудита получились следующие вектора-характеристики (выборочно):
1. (70, 32, 47, 87) – главный вектор-характеристика;
2. (98, 53, 46, 38, 77, 30, 58, 15, 0, 55) – вектор-характеристика технических мер ИБ;
3. (17, 48) – вектор-характеристика четвертого раздела технических мер:
Резервирование и восстановление информации.(не корр.)
Пример анализа (частичного). Из главного вектора характеристики видно, что в
организационных мерах ИБ существуют некритичные проблемы, требования стандартов в
части правовых мер практически полностью не выполняются, в технических мерах ИБ
существуют серьезные проблемы, физические меры в хорошей степени соответствуют
требованиям стандартов.
Для детализации проблем ИБ в части технических мер используется векторхарактеристика технических мер ИБ. Из него наглядно видно, какие разделы дали
наибольшую потерю баллов в ходе проведения аудита ИБ, а именно четвертый, шестой,
восьмой и девятый разделы технических мер ИБ.
Разберем проблемы ИБ в четвертом разделе – Резервирование и восстановление
информации. Для этого используется вектор-характеристика четвертого раздела
технических мер, из которого видно, что первый пункт, который называется «Виды
резервирования», дал наиболее ощутимую потерю баллов.
Далее выполняется анализ ответов на вопросы этого пункта, из которого видно, что на
84-ый вопрос, который звучит следующим образом: «Какие виды резервирования
применяются в ИС Вашей организации?», был выбран один вариант ответа, а именно
вариант «б» - резервирование группы элементов системы. Для того, чтобы набрать
максимальный балл за этот вопрос необходимо было выбрать варианты «а» - полное 
72
резервирование всех элементов системы и «в» - резервирование данных ИС. Векторхарактеристика четвертого раздела не корректировался, значит что дополнительный
анализ вектора не требуется. Это означает, что руководству организации (или лицам,
ответственным за обеспечение режима ИБ) необходимо уделить особое внимание
вопросам резервирования информации и системы в целом.
Подобного рода анализ должен проводится для всех проблемных участков в вектораххарактеристиках, а именно для тех параметров, которые не попали в зеленую зону
информационной безопасности, а иногда и для параметров зеленой зоны ИБ по
обстоятельствам.
Полученная таким образом детальная картина проблем информационной безопасности
организации служит основой для разработки рекомендаций по повышению общего уровня
информационной безопасности организации.
Необходимо отметить, что по результатам других методик также возможна разработка
подобного рода рекомендаций, но здесь есть два важных отличия между предлагаемой
методикой и остальными:
1. Главной целью многих методик проведения аудита ИБ является оценка текущего
уровня защищенности организации или ее автоматизированной системы от угроз
ИБ, а разработка рекомендаций по улучшению системы защиты являются
вторичной целью. Механизм оценки рисков предлагаемой методики направлен
именно на получение картины проблем ИБ организации с последующей
разработкой рекомендаций, в чем и заключается главная цель методики.
2. На основе результатов многих методик возможно составить лишь довольно общую
картину проблем ИБ, соответственно и рекомендации по улучшению системы
защиты также будут являться довольно общими. Использование векторовхарактеристик в данной методике позволяет получить детальную картину проблем
ИБ, причем с заданным уровнем детализации, будь то на уровне мер ИБ или
пунктов разделов таблицы требований. Соответственно и рекомендации по
повышению уровня защиты могут разрабатываться с заданной степенью
детализации, вплоть до конкретных шагов.
В заключение статьи хотелось бы обозначить основные достоинства предлагаемой
методики и оценить перспективы ее применения. Основными достоинствами являются:
1. Методика разработана на основе основополагающих российских стандартов в
области информационной безопасности, количество стандартов – 9;
2. Легкая модернизация ядра методики – таблицы требований, а также вопросных
листов;
3. Расчет весовых коэффициентов производится каждый год на основе собственного
аналитического исследования, что позволяет постоянно поддерживать
актуальность этих коэффициентов;
4. Возможно применение шаблонов распределения весовых коэффициентов в
зависимости от сферы деятельности организации-заказчика;
5. Применение различных методов сбора исходной информации, а именно экспертноаналитического и экспертно-инструментального метода;
6. Многошаговый механизм оценки рисков с использованием векторного анализа;
7. Получение картины проблем ИБ организации на основе векторов-характеристик;
8. Акцентирование целей и задач проведения аудита ИБ на разработке рекомендаций
по повышению уровня информационной безопасности на основе детальной
картины ИБ организации, а не на оценке ее текущего уровня защищенности;
9. Составление подробного отчета по результатам аудита;
10. Возможность приобретения заказчиком различного набора услуг по проведению
аудита ИБ данной методике.
По мнению авторов, услуги по проведению аудита информационной безопасности по
данной методике могут быть широко востребованы на рынке аудиторских услуг, 
73
благодаря вышеперечисленным достоинствам. Сегодня уже не достаточно просто
заполнить вопросные листы или провести интервьюирование с последующим
определением коэффициентов «на пробой», по стандартным шаблонам распределения
весовых коэффициентов. Ведь характер угроз меняется каждый год, и это необходимо
учитывать. Еще недавно наиболее опасными угрозами ИБ считались внешние (хакеры и
вирусы), по данным аналитики 2007 года сегодня – это инсайдерские угрозы. Если это не
учесть при проведении аудита, его результаты скорее всего будут некорректными. Также
не достаточно просто знать, насколько уязвима система перед угрозами ИБ, важно знать,
что нужно сделать, чтобы минимизировать риски по данным угрозам. Именно на это и
ориентирована предлагаемая методика проведения аудита информационной безопасности.
Таким образом, вектора-характеристики являются мощным и эффективным
инструментом анализа результатов аудита ИБ и оценки рисков по данной методике. Также
необходимо подчеркнуть, что их использование сильно облегчает выбор направления
развития системы защиты информации и разработку/доработку политики безопасности
организации.
Библиографический список
1. Сердюк В. Аудит информационной безопасности – основа эффективной защиты
предприятия. [Электронный ресурс]. – Режим доступа: http://www.antimalware.ru/index.phtml?part=survey&surid=audit#part2
2. Система анализа и управления информационными рисками. [Электронный ресурс]. –
Режим доступа: http://www.dsec.ru/products/grif/fulldesc/risk_analysis/#model_u
3. Симонов С. Технологии и инструментарий для управления рисками // JetInfo Online. –
2003. – №2. [Электронный ресурс]. – Режим доступа:
http://www.jetinfo.ru/2003/2/1/article1.2.20031103.html
УДК 004.056
Н.С. Меньшагина
АЛГОРИТМИЗАЦИЯ ФОРМИРОВАНИЯ АВТОМАТИЗИРОВАННЫХ СРЕДСТВ
АНАЛИЗА ИНФОРМАЦИОННЫХ РИСКОВ
Представлены результаты, позволяющие последовательно описать процесс
формирования автоматизированных средств анализа информационных рисков с
использованием опросных листов, средневзвешенных оценок и согласования мнений
экспертов.
В статье рассмотрены несколько этапов процесса формирования автоматизированного
средства. Рассмотрены следующие аспекты:
- формирование общей диаграммы потоков данных;
- алгоритм решения задачи в общем виде (блок-схема процесса);
- определение целей и порядка применения программного продукта;
- методика расчета рисков невыполнения требований;
- некоторые рекомендации по согласованию экспертных оценок.
Диаграмма потоков данных
В разработанной диаграмме потоков данных (Data flow diagram) отражается
обобщенная структура автоматизированного средства. Предлагаемая диаграмма
изображена на рис. 1.
74
Рис. 1 – Диаграмма последовательности этапов анализа информационных рисков
Первым этапом организации работ по формирования автоматизированного средства
является подготовка и анализ руководящей документации, из которой формулируется
требования к работе сотрудников и информационной системе и вытекающие
рекомендации. На этом этапе формируются: опросное пространство, порядок перехода
между вопросами, определение критичности признака для системы, составление
квалификационных показателей.
Для подготовки данной информации были определены 11 ключевых элементов,
которые имеют отношение к безопасности всей организации в различных условиях:
политика безопасности, организация информационной безопасности, безопасность
людских ресурсов, физическая безопасность и безопасность окружающей среды,
управление коммуникациями и операциями, контроль доступа, приобретение, разработка
и сопровождение информационной систем.
После формирования «опросников» проводится тестирование респондентов или
сотрудников, работающих в анализируемой информационной системе.
Параллельно с процессом формирования «опросников» формируется шкала уровней
риск. При этом решаются следующие вопросы: численное значение уровня риска,
мероприятия необходимые для уменьшения величины значения риска.
Следующим этапом работы является определение организации и методики обработки
данных опроса. На данном этапе необходимо определить процедуры и алгоритмы
обработки полученных данных.
Последним этапом работ является оформление результатов работы. На этом этапе
производится анализ результатов экспертного оценивания; составление отчета;
представление итогов работы на утверждение; ознакомление с результатами должностных
лиц.
Определение целей использования
На рис. 2 изображена UML – диаграмма, позволяющая наглядно представить
возможные варианты использования разрабатываемого автоматизированного средства.
75
Рис. 2 Диаграмма вариантов использования средства анализа информационных рисков
Алгоритм решения задачи в общем виде
Алгоритм решения задачи в общем виде представлен в виде блок-схемы рис. 1.
Предлагаемая блок-схема программного продукта «Автоматизированное средство
базового экспертного анализа информационных рисков»:
- определяет слабые места в политике безопасности информационной системы;
- анализирует риск невыполнения каждого положения политики безопасности и
ранжирует их по степени критичности;
- позволяет управлять рисками, возникающими в связи с невыполнением положений
политики безопасности.
76
Рис. 1 – Блок-схема решения задачи в общем виде
Методика расчета рисков невыполнения требований.
Каждое требование стандартов имеет определенный вес.
Вес требования (T) – степень влияния требования на защищенность информационной
системы компании, указывается в значениях от 0 до 1. Вес требования, имеющий значение
1, показывает, что данное требование оказывает сильное влияние на обеспечение
информационной безопасности компании.
Сумма весов всех требований (Tmax) – максимальный риск невыполнения требований
стандартов, т.е. не выполнены все положения стандартов.


n
i
T Ti
1
max
где Tmax – сумма весов всех требований;
T – вес требования;
77
n – всего требований;
Отношение суммы весов невыполненных в компании требований к сумме всех
требований стандарта – риск невыполнения требований в компании (R).
max
1
,
T
Tневып i
R
n
i
 
где R – риск невыполнения требований
Tневып – вес невыполненного требования
n – количество невыполненных требований
Риск (R) невыполнения требований показывает, насколько значимы для
информационной системы компании невыполненные требования. Риск зависит от
количества невыполненных требований и их весов.
Для снижения риска несоответствия информационной системы стандартам советуется
выполнить максимальное количество требований. Особенно важно выполнение
требований, имеющих высокие веса, т.е. тех требований, чье влияние на уровень
защищенности информационной системы компании значительно.
Задача определения ценностей требований по информационной безопасности,
выделенных из стандартов, решилась путем применения сопоставления и ранжирования
личностных и групповых мнений.
Согласование экспертных оценок
Поэтому для решения поставленной проблемы был использован алгоритм согласования
экспертных оценок методом средневзвешенных коэффициентов (методом
непосредственной оценки). Коротко применяемый алгоритм:
Пусть m экспертов произвели оценку n вопросов по l требованиям. Результаты оценки
представлены в виде величин h
ij x , где j – номер эксперта, i - номер вопроса, h – номер
показателя (требования) сравнения, то величины h
ij x представляют собой числа из
некоторого отрезка числовой оси, или баллы (доли).
Для получения групповой оценки объектов в этом случае можно (воспользоваться
средним значением оценки для каждого объекта
( 1,2,..., )
1 1
x q x k i n j
l
h
m
j
h
i   h ij 
 
где h
q - коэффициенты весов требований сравнения признаков, j
k - коэффициенты
компетентности экспертов. Коэффициенты весов требований и компетентности экспертов
являются нормированными величинами
   
 
l
h
m
j
h j
q k
1 1
1; 1
Коэффициенты весов показателей могут быть определены экспертным путем. Если qhj
- коэффициент веса h-го требования, даваемый j-м экспертом, то средний коэффициент
веса h-го показателя по всем экспертам равен:
( 1,2,..., )
1
q q k h l
m
j
h  hj j 

Получение групповой экспертной оценки путем суммирования индивидуальных оценок
с весами компетентности и важности показателей при измерении свойств объектов в
кардинальных шкалах основывается на предположении о выполнении аксиом теории
полезности фон Неймана-Моргенштерна как для индивидуальных, так и для групповой
оценки и условий неразличимости объектов в групповом отношении, если они
неразличимы во всех индивидуальных оценках (частичный принцип Парето). В реальных 
78
задачах эти условия, как правило, выполняются, поэтому получение групповой оценки
объектов путем суммирования с весами индивидуальных оценок экспертов широко
применяется на практике.
Коэффициенты компетентности экспертов можно вычислить по апостериорным
данным, т. е. по результатам оценки требований. Основной идеей этого вычисления
является предположение о том, что компетентность экспертов должна оцениваться по
степени согласованности их оценок с групповой оценкой объектов.
Вывод
Результатом работы является обобщенный алгоритм процесса проектирования
программного средства или частично автоматизированной методики, предназначенных
для анализа информационных рисков с учетом требований нормативных документов.
УДК 004.056.5
В. М. Нечунаев
КЛАССИФИКАЦИЯ УГРОЗ
КОРПОРАТИВНОЙ ИНФОРМАЦИОННОЙ СИСТЕМЫ
Рассматривается классификация угроз информационной безопасности, связанных с
этапом эксплуатации жизненного цикла корпоративной информационной системы.
Корпоративная информационная система (КИС) – это система, состоящая из персонала,
информации и комплекса средств автоматизации, реализующая информационную
технологию установленных функций.
Процессно-ориентированный подход к управлению рассматривает КИС как актив
(средство) для поддержки функционирования бизнес-процессов организации. В
дальнейшем под понятием «актив» будем понимать КИС или отдельные элементы общей
структуры КИС.
На процесс функционирования активов оказывают влияние различные угрозы. Угрозы
являются потенциальной причиной инцидентов информационной безопасности, которые
способны наносить ущерб активам и, следовательно, влиять на процесс
функционирования организации в целом [1].
Ущерб активам может быть нанесен только при наличии уязвимостей. Уязвимость
определяется как слабость актива, которая может быть использована угрозой [1].
Уязвимость сама по себе не причиняет ущерб, но является условием, позволяющей угрозе
воздействовать на актив.
Для обеспечения защиты активов от угроз информационной безопасности и устранения
уязвимостей используется система управления информационной безопасностью. Система
управления информационной безопасности (СУИБ) – это та часть общей системы
управления безопасностью организации, в основе которой лежит принцип управления
рисками информационной безопасности.
С учетом вышеизложенного возникает необходимость в такой классификации угроз,
которая бы позволяла:
1. Идентифицировать угрозы, воздействующие на КИС;
2. Использовать данную классификацию в процедурах управления рисками
информационной безопасности.
Модель «угроза-актив»
Классификация угроз, воздействующих на КИС, производится с использованием
модели «угроза-актив». Данная модель дает четкое представление о механизме
воздействия угрозы. Модель «угроза – актив» и составляющие данной модели показаны
на рис. 1. В настоящей модели можно выделить следующие компоненты:
79
 Источник угрозы – сущность, который воздействует на активы;
 Актив – то, на что воздействует угроза, КИС / элементы КИС;
 Сценарии – типовые наборы действий, которые источник угрозы прикладывает к
активу для нанесения ущерба;
 Ущерб – отрицательный количественный или качественный результат выполнения
определенного сценария угрозы.
Рис.1.
Существует целый ряд подходов к классификации угроз [2]. При разработке данной
модели выбрана классификация угроз, в качестве определяющего критерия которой
выбран тип источника угрозы [3].
Источники угроз
Источники угрозы характеризуются следующими свойствами:
 Тип источника угрозы;
 Мотив источника угрозы.
 Ресурсы источника угрозы.
Выделяют следующие типы источников угроз:
 Люди
o Непреднамеренные действия;
o Преднамеренные действия;
 Природные явления;
 Технические явления.
В качестве непреднамеренного источника угроз для активов выступают сотрудники,
невнимательно выполняющие свои обязанности. Типовой сценарий – ошибки персонала
при вводе данных.
Преднамеренными источниками угроз являются отдельные люди или организованные
группы людей, заинтересованные в нанесении ущерба организации. Это могут быть
сотрудники, уволенные сотрудники, организации-конкуренты, криминальные
группировки и т.п.
Источниками угроз природного характера являются природные явления,
затрагивающие процесс функционирования активов: наводнения, землетрясения и т.п.
Особенностью такого источника угроз является масштабность и, как правило, влияние на
всю КИС организации. Для источников угроз природного характера не определены
свойства «ресурсы угрозы», «мотив».
Источниками угроз технического характера являются сбои коммуникаций, сбои
программного обеспечения, технических средств и т.п. Для источников угроз
техногенного характера не определены свойства «ресурсы угрозы», «мотив».
80
Мотивы источника угрозы – это причины, по которой преднамеренный источник
угрозы предпринимает враждебные действия. Классификация мотивов выглядит
следующим образом:
 Материальная прибыль;
 Принуждение;
 Месть (моральное удовлетворение);
 Политические амбиции.
В качестве понятия «ресурс источника угрозы» понимаются любые средства, которые
могут применяться для нанесения ущерба. Классификация ресурсов источников угрозы
выглядит следующим образом:
 Информация о КИС;
 Доступ к КИС;
 Профессиональные навыки;
 Вычислительные ресурсы;
 Финансовые ресурсы;
 Игнорирование правовых норм.
Характеристика активов
В качестве активов в настоящей модели рассматривается КИС как совокупность
четырех уровней элементов:
1. Технические средства;
2. Программное обеспечение;
3. Информационные ресурсы;
4. Организационная структура;
Для каждого вида / типа активов задаются свойства, определяющие необходимость
решения задач информационной безопасности в отношении этих активов:
конфиденциальность, целостность, доступность.
Определение ущерба
Потенциальный ущерб определяется совокупностью критериев, отражающих важность
защищаемых активов для выполнения миссии организации. Критерии, определяющие
потенциальный ущерб, зависят от направления деятельности организации. Перечислим
некоторые из наиболее распространенных критериев:
 Потери, связанные с восстановлением элементов КИС (нарушение свойства
доступности);
 Потери, связанные с нарушением конфиденциальности;
 Ущерб репутации организации;
 Невозможность выполнения бизнес-процесса;
 Финансовые потери;
 Угроза жизни персонала.
Сценарии атак
Сценарии – это действия, которые источник угрозы применяет к активам для нанесения
ущерба. Как правило, перечень сценариев атак является стандартным для большинства
КИС.
Сценарии угрозы определяются следующими характеристиками модели:
 Свойства актива, на которые воздействует источник угрозы;
 Ресурсы, которыми располагает источник угрозы;
 Мотивация источника угрозы.
81
Примерами стандартных сценариев атак являются: отказ оборудования, внедрение
вредоносного кода, несанкционированный доступ к элементам КИС, ошибки персонала и
т.д.
Оценка компонентов модели
Для свойств компонентов модели задаются количественные или качественные шкалы,
позволяющие категорировать уровень угрозы. Наиболее оптимальным вариантом является
использование количественно-качественных шкал оценки. При таком подходе в первую
очередь задается качественная шкала, выражающая субъективное отношение владельца
КИС к свойствам отдельных элементов КИС, а во вторую очередь, если возможно,
задается количественная шкала, позволяющая производить численные оценки.
В качестве примера можно привести следующий вариант количественно-качественной
шкалы, содержащей пять уровней:
 (О)тсутствует – 0
 (Н)изкий – 0.25
 (С)редний – 0.5
 (В)ысокий – 0.75
 (К)ритический – 1
Выводы
Научной новизной данной классификации является разделения понятия «угроза» на
источник угрозы и сценарии атак. Перечень сценариев атак является стандартным для
большинства КИС. Идентификация источников угроз и доступных для них ресурсов
позволяет определить перечень сценариев атак, с помощью которых возможно нанесение
ущерба КИС. В свою очередь это позволяет задавать защитные меры, которые
необходимо использовать для блокирования определенных сценариев атак.
В настоящей классификации в качестве определяющего критерия используется тип
источника угрозы. Это позволяет выделять основные направления, откуда возможно
появление угроз для КИС, и реализовывать наступательную или упреждающую стратегию
защиты КИС.
Использование количественно-качественных шкал для оценки свойств компонентов
модели «угроза-актив» позволяют в дальнейшем проводить оценку уровней угроз.
Библиографический список
1. ГОСТ Р ИСО/МЭК 13335-1-2006 Информационная технология. Методы и средства
обеспечения безопасности. Часть 1. Концепция и модели менеджмента безопасности
информационных и телекоммуникационных технологий.
2. Малюк А.А. / Информационная безопасность: концептуальные и
методологические основы защиты информации – М.: Горячая линия – Телеком, 2004. –
280 с.
3. Петров В.А., Пискарев А.С., Шеин А.В. / Защита информации от
несанкционированного доступа в автоматизированных системах – М.: МИФИ, 1995
УДК 004.056.53
А.А. Пономарёв
РЕШЕНИЕ ЗАДАЧИ ОЦЕНКИ ВРЕМЕНИ ПРЕОДОЛЕНИЯ СИСТЕМ ЗАЩИТЫ
ИНФОРМАЦИИ
Предлагается модель системы защиты информации (СЗИ), которая позволяет
вычислять среднее время преодоления СЗИ злоумышленником, используя аппарат теории
массового обслуживания (ТМО).
82
Оценка времени преодоления СЗИ является актуальной задачей, т.к. параметр время
преодоления СЗИ является одним из важнейших, с практической точки зрения, для
теории и практики построения СЗИ. Он отражает надёжность существующей или
проектируемой СЗИ. Знание времени преодоления СЗИ позволяет наглядно обосновывать
те или иные механизмы защиты информации для заказчика, более детально анализировать
существующие риски организации. В данной работе предлагается модель надежности
СЗИ на основе теории Марковских цепей.
СЗИ являются сложными системами со множеством недетерминированных факторов и
модель их функционирования может строится только с некоторым уровнем абстракции.
Под надежностью системы защиты будем понимать свойство системы защиты
информации выполнять возложенные на неё функции заданный промежуток времени[1].
Учитывая специфику анализируемой области, а именно рассматривая вопросы защиты
информации различными программными и аппаратными средствами, можно говорить, что
для СЗИ понятие отказ должно трактоваться шире чем при рассмотрении любого другого
технического средства. Так как с отказом связан не только переход СЗИ в состояние
неработоспособности но и обнаружение в СЗИ уязвимостей. Так же следует учитывать,
что поскольку функцией СЗИ является противодействие заданному множеству угроз, то в
модели СЗИ следует учитывать наличие и активность действий злоумышленника.
Осуществление злоумышленником попыток несанкционированного доступа (НСД),
отказы СЗИ и появление уязвимостей в СЗИ можно представить как простейший поток
событий
Тогда СЗИ может рассматриваться как система массового обслуживания с состояниями
полученными изменением трех признаков: u(0,1) – система не уязвима (уязвимости не
известны) или система с известной уязвимостью; v(0,1) – СЗИ работоспособна или отказ;
k(0,1)– есть попытка НСД или нет. В таком случае СЗИ может быть представлена
следующим образом рисунок 1.
Рисунок 1. Упрощенная модель СЗИ
На рисунке 1 S1,S2…S7 состояния системы полученные изменением признаков u,v, k
под действием простых потоков событий параметры простых потоков, которые могут
трактоваться как интенсивности:  - интенсивность попыток НСД ; - интенсивность
отказов СЗИ;  - интенсивность нахождения уязвимостей в СЗИ.
Упрощенная модель СЗИ не отражает деятельности службы защиты информации и не
учитывает факта «старения» попытки НСД в результате появления в организации новой
информации. Усложним модель, добавив потоки событий отражающих проверки
функционирования СЗИ с приведением её в работоспособное состояние с параметром  ,
устранение уязвимостей с параметром  и создание новой информации с параметром  .
Тогда модель надежности СЗИ будет выглядеть следующим образом рисунок 2.
83
Рисунок 2. Модель надежности СЗИ
Анализ модели показанной на рисунке 2 позволяет вычислять следующие
характеристики СЗИ: коэффициент надежности, параметр потока отказов, среднее время
преодоления СЗИ злоумышленником, среднее время восстановления[2].
Вычисли среднее время преодоления СЗИ (в терминах теории надежности – наработка
на отказ). Для этого составим систему линейных алгебраических уравнений относительно
стационарных вероятностей i
p , i  0, 1, 2,,8 :













      
      
      
      
      
      
      
      
( ) 0
( ) 0
( ) 0
( ) 0
( ) 0
( ) 0
( ) 0
( ) 0
7 4 5 6
6 1 3 7
5 2 3 7
4 1 2 7
3 0 5 6
2 0 4 5
1 0 4 6
0 1 2 3
     
     
     
     
     
     
     
     
p p p p
p p p p
p p p p
p p p p
p p p p
p p p p
p p p p
p p p p
Система уравнений является однородной, и должна решаться вместе с условием
нормировки: 1
7
0
 
i
i
p . Воспользуемся для решения системы программным средством
Microsoft Excel.
Рассмотрим СЗИ со следующими характеристиками:
 (интенсивность попыток НСД) = 1 в день;
 (интенсивность отказов СЗИ) = 0,0027 в день;
 (интенсивность нахождения уязвимостей в СЗИ) = 0,0328 в день;
 (интенсивность проверок функционирования СЗИ с приведением её в рабочее
состояние) = 0,0328 в день;
 (интенсивность устранения уязвимостей) = 0,0328 в день;

(интенсивность создания новой информации) = 1
Среднее время преодоления СЗИ с приведенными выше параметрами будет составлять
14 дней. Построим графики изменения времени в зависимости от параметров.
84
Рисунок 1. Зависимость времени преодоления СЗИ от интенсивности попыток НСД
Рисунок 2. Зависимость времени преодоления СЗИ от интенсивности проверок
функционирования СЗИ
Объемы статьи не позволяют построить все графики, поэтому на рисунках 1,2
изображены зависимости времени преодоления СЗИ от интенсивности попыток НСД и от
интенсивности проверок функционирования СЗИ. Из полученных результатов можно
утверждать, что изменение одного из факторов имеет сильное влияние на время
преодоления СЗИ только до определенных значений, затем значения остальных
параметров не дают быстро изменяться времени преодоления СЗИ. Таким образом, 
85
модель позволяет обосновать математически регламенты обслуживания оборудования
отвечающего за защиту информации на предприятии.
Библиографический список
1. Щеглов А.Ю. Защита компьютерной информации от несанкционированного доступа.
Наука и техника, Санкт-Петербург, 2004
2. Половко А. М., Гуров С. В. Основы теории надежности. Практикум. – СПб.: БХВПетербург, 2006.
УДК 004.056
Н.А. Федорова, Ф.А. Косолапов
АТТЕСТАЦИЯ ОБЪЕКТОВ ИНФОРМАТИЗАЦИИ ПО ТРЕБОВАНИЯМ
БЕЗОПАСНОСТИ ИНФОРМАЦИИ: ПЕРЕХОД НА
ГОСТ Р ИСО/МЭК 15408-2002
Рассматриваются общие аспекты процедур аттестации объектов информатизации
по требованиям безопасности информации по ГОСТ Р ИСО/МЭК 15408-2002 и РД ГТК
(ФСТЭК).
После появления стандарта ГОСТ Р ИСО/МЭК 15408-2002 («Общие критерии оценки
безопасности информационных технологий», ОК) в России стало, по сути, две различные
системы оценки защищенности автоматизированных систем: одна основывается на
вышеназванном документе, другая же – на руководящих документах ГТК (ФСТЭК).
В подобной двойственной ситуации коммерческие организации вынуждены выбирать,
какой методологией оценки защищенности своих продуктов и систем ИТ
воспользоваться. При этом, конечно, возникает проблема взаимодействия с партнерами,
как внутри страны, так и с зарубежными. Если, например, одна организация провела
аттестацию своей информационной системы по ОК, то она может поставить под сомнение
безопасность информации, циркулирующей в информационной системе её партнера,
аттестованной по РД ГТК.
Что касается зарубежных партнеров, то для полноценного взаимодействия с ними
необходимо принятие Россией Международного соглашения по признанию сертификатов,
полученных на основе оценок по ОК.
В сфере защиты сведений, составляющих государственную тайну, пока
придерживаются старой методологии, несмотря на то, что ОК предоставляют более
совершенную и гибкую методологию оценки защищенности.
В данной статье будут рассмотрены общие аспекты аттестации объектов
информатизации по ОК и РД ГТК.
Первым подвергнем рассмотрению аспект организационной структуры аттестации.
На сегодняшний день организационная структура системы аттестации объектов
информатизации по требованиям безопасности информации включает в себя четыре
субъекта:
 заявитель;
 орган по аттестации;
 федеральный орган по сертификации средств защиты информации и аттестации
объектов информатизации по требованиям безопасности информации – ФСТЭК
России;
 испытательные центры (лаборатории) по сертификации продукции по
требованиям безопасности информации.[2]
Заявитель, при необходимости проведения аттестации, привлекает орган по аттестации,
предоставляет объект информатизации и обеспечивает все необходимые условия для 
86
осуществления работ по аттестации. Орган по аттестации аттестует предоставленный
объект информатизации, выдает аттестат соответствия и осуществляет контроль.
Федеральный орган по сертификации и аттестации разрабатывает необходимые
нормативно-методические документы, контролирует деятельность органов по аттестации
и осуществляет их аккредитацию. Испытательные центры привлекаются заказчиками по
мере необходимости.
Организационная структура аттестации в соответствии с ГОСТ Р ИСО/МЭК 15408-
2002 несколько другая. В нее входят:
 заявитель;
 разработчик;
 оценщик;
 орган по аттестации (сертификации). [4]
Разработчик здесь – это организация, предоставляющая продукт ИТ для его
сертификации. В случае аттестации, когда оценке подвергается информационная
(автоматизированная) система, заявитель и разработчик будут, в большинстве случаев,
совпадать.
Существенное отличие организационной структуры аттестации ОК от существующей
заключается в разделении ролей оценщика и органа по аттестации. Оценщик решает
задачи, требуемые при проведении оценки и представляет результаты оценки органу по
аттестации. Орган по аттестации принимает окончательно решение о соответствии
объекта оценки установленным требованиям (заданию по безопасности) и выдает
аттестат. Оценщик и орган по аттестации не могут быть одной и той же организацией. [1,
с. 32]
Таким образом, при переходе государственной системы аттестации на ОК необходима
будет модернизация организационной структуры. Что это за собой может повлечь?
Прежде всего, пострадают органы по аттестации. Часть из них будет
переквалифицирована на роль оценщика, часть – на роль собственно органа по
аттестации. При этом, вероятно, будет произведено сокращение штата, потому что ранее
все функции были сосредоточены в одной организации, а после перехода на ОК они будут
разделены между оценщиком и органом по аттестации.
Сокращение штата будет представляться целесообразным для руководителей
организаций еще и потому, что все расходы по переобучению персонала будет нести
организация (оценщик или орган по аттестации). Чем меньше сотрудников, тем меньше
затрат на переквалификацию.
Еще один аспект заключается в следующем. РД ГТК, так же как и ОК рассматривают
лишь защиту автоматизированных систем от несанкционированного доступа. Они не
рассматривают технические каналы утечки информации, в том число ПЭМИН.[3, с.2]
Кроме того, в них не рассматривается такой объект информатизации как выделенное
помещение. В настоящее время этот пробел восполняет документ «Специальные
требования и рекомендации по защите информации, составляющей государственную
тайну, от утечки по техническим каналам» (СТР-97).
Изложенные в СТР-97 требования по защите информации от утечки по техническим
каналам апробированы и достаточно хорошо себя зарекомендовали. Но при переходе с РД
ГТК на ОК возникнет дилемма: попытаться расширить ОК на сферу защиты от утечки по
каналам ПЭМИН и защиты выделенных помещений (которые, нужно будет
рассматривать, в терминологии ОК, как «объект оценки»), либо согласовывать СТР-97 и
ОК.
Таким образом, в случае упразднения РД ГТК и перехода на стандарт ГОСТ Р
ИСО/МЭК 15408-2002, во-первых, можно прогнозировать существенные изменения на
рынке услуг по защите информации; во-вторых, потребуется серьезная доработка и
других нормативно-методических документов, в том числе по защите сведений,
составляющих государственную тайну.
87
Библиографический список
1. Золотарев В. В. Анализ защищенности автоматизированных систем: Учебное
пособие / В. В. Золотарев, Н. А. Федорова; СибГАУ. – Красноярск, 2007. – 93 с.
2. Положение по аттестации объектов информатизации по требованиям безопасности
информации Гостехкомиссии РФ: утв. решением ГТК при Президенте РФ от 25 ноября
1994. [Электронный ресурс]. – Режим доступа: http://www.fstec.ru/ _docs/doc_2_2_012.htm.
3. Руководящий документ. Безопасность информационных технологий – Критерии
оценки безопасности информационных технологий – Часть 1: Введение и общая модель:
утв. приказом ГТК при Президенте Российской Федерации от 19 июня 2002 года. – М.:
Издательство МГУЛ, 2002 г. – 48 с.
4. Руководящий документ. Безопасность информационных технологий – Общая
методология оценки безопасности информационных технологий. [Электронный ресурс]. –
Режим доступа: http://www.fstec.ru/_razd/_info.htm
УДК 004.724
К. Е. Шудрова
АНАЛИЗ ВИДОВ БАЛАНСИРОВКИ НАГРУЗКИ СЕТИ
Целью написания данной статьи является краткий обзор возможных методов
балансировки нагрузки сети, их достоинств и недостатков.
Проблема распределения нагрузки возникает достаточно остро, когда один сервер
перестает справляться с запросами пользователей и время ожидания ответа на запрос
становится критическим. Другими словами сервер либо отказывает в обслуживании, либо
образуется очередь, что нежелательно. В такой ситуации обычно принимается решение
поставить еще несколько серверов. Возникает вопрос, почему просто не использовать
многопроцессорные машины? Ответом будут такие преимущества кластера, как
возможность установки разных операционных систем на сервера, использование машин с
различными характеристиками и повышенная безопасность. Так как вероятность того, что
перестанут работать все сервера одновременно - мала. Даже если используется
архитектура с выделенным центром, и отказало центральное звено, его можно заменить.
Тогда как если использовать один многопроцессорный сервер, то в случае его поломки
придется покупать новый, столь же дорогостоящий.
Вот здесь и возникает проблема. Так как все поступающие запросы необходимо
распределить между машинами и сделать это по возможности оптимально.
Начнем с того, что чаще всего это сложная задача. И для ее упрощения накладываются
условия некоторой унифицированности запросов и их небольшого объема, а также
большого количества пользователей. Именно при таких условиях обращения к серверу
можно достаточно точно спрогнозировать. Потому что, грубо говоря, если у нас всего
лишь 10 пользователей, то очень трудно предугадать их действия, тогда как, если их
достаточно много, можно применить вероятностный аппарат.
Рассмотрим подробнее способы распределения нагрузки сети:
1. распределение пакетов по содержанию. Предоставляя разнородную
информацию, ее можно разделить физически, разместив на разных серверах.
2. распределение по пропускной способности. Здесь можно вводить весовые
коэффициенты, если использовать относительную модель, когда наименьшая
пропускная способность в данном кластере принимается за 1. Либо используют
абсолютные значения пропускной способности, выраженной в бит/с. Следует
учитывать, что номинальная пропускная способность отличается от
фактической.
88
3. распределение запросов поровну между серверами. Данный метод применим,
когда все серверы примерно равнозначны по мощности.
4. процентное распределение. В данном случае каждому серверу будет присвоено
количество обрабатываемых запросов в процентах.
5. распределение с учетом максимального количества соединений.
Устанавливается количество соединений, при превышении которого запросы на
сервер не поступают до тех пор, пока количество соединений не уменьшится.
6. распределение по пользователям. Если пользователей немного и запросы от них
не единичные, то пользователей можно закрепить за серверами на время сеанса.
Допустим, первый сервер принимает запросы от 1, 3, 5,… пользователей
(нумерация в порядке подключения), а второй сервер – от 2, 4, 6,…
Другие алгоритмы можно получить, используя комбинации нескольких алгоритмов.
Например, использовать процентное распределение, но до достижения максимального
числа соединений.
Если говорить о практической реализации алгоритмов, то существует 2 вида
балансировки нагрузки – аппаратная и программная. Каждый из этих видов обладает как
преимуществами, так и недостатками. Программная реализация более интеллектуальна. К
тому же системные утилиты быстрее могут анализировать ситуацию, да и затраты на
железо уменьшатся, так как можно обойтись концентраторами.
С другой стороны аппаратная реализация на основе коммутатора более стабильна, так
как установка на сервер какой бы то ни было дополнительной программы нежелательна.
Также возникает проблема с привязкой к конкретной операционной системе. Плюсом же
программной балансировки нагрузки можно назвать возможность простого обновления, в
случае если производитель предоставит такую возможность.
Программное распределение нагрузки может быть реализовано на основе
централизованного или распределенного алгоритма. Безусловно, распределенный
алгоритм предпочтительнее с точки зрения безопасности. Но в таком случае серверам
придется постоянно обмениваться служебными сообщениями, с целью узнать – какие
сервера свободны на данный момент. Это будет очень сильно замедлять работу. И здесь
необходимо определить: что важнее в нашем конкретном случае – повышенная
безопасность или быстродействие. К тому же, если серверов не так много, то
распределенный алгоритм предпочтительнее, так как обмен сообщениями между ними не
займет много времени, а выделение центрального узла, предназначенного только для
распределения нагрузки, экономически нецелесообразно.
Решение с выделенным центром реализуется на основе топологии «звезда», в центре
будет находиться сервер балансировки нагрузки с установленной на него программой,
которая и будет принимать решения о том, куда направить запросы. Данное решение
будет базироваться либо на весовых коэффициентах серверов, либо, исходя из их
загруженности (если возможно одновременное исполнение нескольких задач), либо
запросы будут распределяться строго по очереди – первое обращение на первый сервер,
второе – на второй и т.д.
Рассмотрим в качестве примера продукт компании Microsoft – технологию Windows
Network Load-Balancing. Служба балансировки нагрузки сети, основанная на данной
технологии «использует полностью распределенную программную архитектуру. На всех
узлах кластера параллельно выполняются одинаковые драйверы службы БНС. Эти
драйверы объединяют все узлы в единую сеть для обработки входящего потока данных,
поступающих на основной IP-адрес кластера (и на дополнительные IP-адреса
многосетевых узлов)»[1].
Проведем анализ данного программного решения. В данном случае используется
широковещательная доставка пакетов. В результате мы получаем выигрыш в скорости, но
проигрыш в безопасности. Так как может сложиться такая ситуация, когда благодаря
действиям злоумышленников, пакет доставится не тому узлу, которому он 
89
предназначался. А это может быть критичным для конфиденциальной информации.
Также не исключена возможность лавинной маршрутизации. Эта проблема решается
использованием коммутатора исходящих данных по протоколу третьего уровня. С другой
стороны, если для поддержки программы необходим коммутатор, так ли это
экономически выгодно? Ведь можно обойтись одним коммутатором. Но аппаратная
реализация распределения нагрузки будет рассмотрена ниже.
Еще одним плюсом Windows Network Load-Balancing является рост
производительности пропорционально росту скорости сервера; «таким образом,
устраняется зависимость от производительности аппаратных решений для распределения
нагрузки на основе маршрутизации»[2]. Также в связи с одновременной доставкой
входящих данных на каждый сервер повышается нагрузка на концентратор или
коммутатор. Отдельно можно сказать, что из-за невозможности коммутаторов работать с
одинаковыми мак адресами используется маскировка адреса. Эта функция является
опциональной и может быть отключена.
Рассмотрев программное распределение нагрузки, перейдем к аппаратному. Оно может
быть реализовано как на основе дорогостоящего распределения нагрузки, так и на основе
коммутатора. «Некоторые интегрированные аппаратные средства распределения нагрузки
представляют собой ни что иное, как выделенные центральные процессоры общего
назначения» [3].
Преимуществом распределителя является то, что «Администрирование выполняется
только на самом распределителе и никак не влияет на сами серверные машины» [4].
Система анализирует параметры активности сети, такие, как скорость, количество
соединений в данный момент и другие. Администратор на основе этих сведений
принимает решение о том, какой алгоритм применять. Недостаток распределителя состоит
в его высокой стоимости, которая превышает стоимость нескольких серверов.
«Технология load balancing основывается на третьем и четвертом уровнях модели OSI
— базовой процедурой являлось оперирование информацией, полученной из заголовков
пакетов этих уровней (номер порта TCP, IP-отправитель/получатель и т.д.). Такой метод
распределения трафика назвали session switching (сеансовое коммутирование), а
устройство, реализующее ее, — сеансовым коммутатором»[5]. Коммутатору
присваивается виртуальный IP-адрес. Решение о том, куда направить запрос, он
принимает, исходя из двух параметров – загруженности серверов и максимального
количества соединений. Коммутатор может использовать все рассмотренные ранее
алгоритмы кроме распределения по содержанию. Так как он функционирует только на 3 и
4 уровне OSI.
«Следующим шагом в развитии технологии «load balancing» стало появление
коммутаторов, функционирующих на седьмом уровне модели OSI — на уровне
приложения. То есть сейчас коммутатор знает не только информацию о номере порта,
получателе/отправителе пакета, но и видит содержимое пакета» [6].
Коммутаторы, поддерживающие функцию распределения нагрузки, выпускаются
такими компаниями, как Cisco, RadWare и другими.
Выбор конкретного алгоритма зависит от конфигурации машин и кривой
распределения пользовательских запросов. Так, если все машины обладают примерно
одинаковой пропускной способностью, то нет смысла вводить весовые коэффициенты.
В заключение можно сказать, что универсальных решений в проблеме распределения
нагрузки нет, однако, учитывая достаточно большое число факторов конкретной задачи,
можно найти оптимальное для нее решение. Оно может быть как программным, так и
аппаратным.
Решение будет приниматься исходя из следующих факторов:
1. количества серверов;
2. количества запросов;
3. требований к надежности;
90
4. требований к быстродействию;
5. выделенных средств.
Причем это неполный список. Также необходимо подробнее рассмотреть параметр –
«количество запросов».
Оно будет характеризоваться как средним значением, так и максимальным. Рассмотрим
пример. Допустим, большую часть времени количество запросов достаточно низкое, но в
определенные промежутки времени оно значительно возрастает и достигает пиковых
значений. В таком случае необходимо решить, целесообразны ли затраты на покупку
дополнительных серверов, которые будут нужны лишь небольшие промежутки времени.
Или же допустимо, что клиенты будут ждать ответы на свои запросы дольше обычного.
Данная работа не преследует своей целью поиск идеального метода балансировки
нагрузки сети, а представляет своеобразную методику по поиску оптимального алгоритма
в условиях конкретной ситуации. Перед тем как выбрать метод, необходимо провести
предварительную работу по сбору статистики активности данной сети.
91
РЕШЕНИЕ КОНФЕРЕНЦИИ
Оргкомитет выражает благодарность всем участникам, предоставившим свои доклады
для публикации.
Участники конференции, представляющие Россию и ближнее зарубежье, показали
достаточно высокий уровень работ в предметной области. Оргкомитет выражает надежду
на дальнейшее сотрудничество и напоминает, что конференция «Актуальные проблемы
безопасности информационных технологий», призванная стать одним из центров
научного сотрудничества в Сибири, будет проводиться регулярно, в сентябре-октябре,
причем возможно как очное, так и заочное участие студентов, аспирантов, сотрудников и
специалистов организаций России и других государств в работе конференции.
Результаты, полученные в научных и научно-практических исследованиях,
опубликованные в сборнике, представляют особый интерес, поскольку дают возможность
связать науку, в том числе и студенческую, с реальными практическими задачами.
Оргкомитет
92
ИНФОРМАЦИЯ ОБ УЧАСТНИКАХ КОНФЕРЕНЦИИ
Секция 1. «Криптографические методы и средства защиты информации»
М.М. Глухов
О ПРИМЕНЕНИЯХ КВАЗИГРУПП В КРИПТОГРАФИИ
Академия криптографии РФ
Россия, г. Москва
glukhovmm@rambler.ru
Е. А. Глущенко, И. В. Юрин
ОЦЕНКА УЯЗВИМОСТИ АУТЕНТИФИКАЦИИ С ИСПОЛЬЗОВАНИЕМ МАС –
АДРЕСОВ В БЕСПРОВОДНЫХ СЕТЯХ СТАНДАРТА 802.11
Санкт-Петербургский государственный университет водных коммуникаций
Россия, Санкт-Петербург
krutibutilkin@mail.ru
П.О. Джунковский, М.В. Дубовицкая
ПЛАТФОРМА ЗАЩИЩЕННОГО ИНФОРМАЦИОННОГО ОБМЕНА С МОБИЛЬНЫМИ
КЛИЕНТАМИ НА БАЗЕ ТЕХНОЛОГИЙ JAVA
Московский инженерно-физический институт (государственный университет)
Россия, г. Москва
djunkovsky.p@gmail.com
С.В. Запечников
ОБЕСПЕЧЕНИЕ ВЫСОКОЙ ДОСТУПНОСТИ КЛЮЧЕВОГО МАТЕРИАЛА
КРИПТОСИСТЕМ В УСЛОВИЯХ ВОЗДЕЙСТВИЯ ДЕСТАБИЛИЗИРУЮЩИХ
ФАКТОРОВ
Московский инженерно-физический институт (государственный университет)
Россия, г. Москва
SVZapechnikov@mephi.ru
Е. В. Игоничкина
ИССЛЕДОВАНИЕ СТАТИСТИЧЕСКИХ СВОЙСТВ КАНДИДАТОВ КОНКУРСА
ESTREAM (ПРОФИЛЬ 1)
Томский государственный университет систем управления и радиоэлектроники
Россия, г. Томск
iev109@mail.ru
Д. Н. Пичулин
ВИРТУАЛЬНАЯ ЛОКАЛЬНАЯ СЕТЬ В СЕТИ ИНТЕРНЕТ
Московский инженерно-физический институт (государственный университет)
Россия, г. Москва
deemitri@gmail.com
В. Х. Ханов, А. В. Шахматов, А.С. Шаранок
РЕАЛИЗАЦИЯ АЛГОРИТМОВ ШИФРОВАНИЯ НА ЭЛЕМЕНТНОЙ БАЗЕ ПЛИС
Сибирский государственный аэрокосмический университет
Россия, Красноярск
khvkh@mail.ru
93
Секция 2. «Оптимизация, моделирование и разработка систем защиты информации.
Подготовка специалистов в области безопасности информационных технологий.
Информационные технологии: теоретические и прикладные аспекты»
А. М. Попов, В. В. Золотарев, А.М. Кукарцев, И. А. Лубкин
МЕТОДИКА СТАТИСТИЧЕСКОГО РАСПОЗНАВАНИЯ ИСПОЛНИМОГО КОДА
ПРОГРАММ
Сибирский государственный аэрокосмический университет
Россия, Красноярск
amida@land.ru
Н.И. Мартынов, И.О. Федоров
О МЕТОДОЛОГИИ Н.И.МУСХЕЛИШВИЛИ В ТЕОРИИ УПРУГОСТИ
НЕОДНОРОДНОЙ СРЕДЫ
Институт космических исследований
Казахстан, Алматы
nikmar50@mail.ru, fio.1980@mail.ru
С.С. Барильник, Н.Е. Герасимов, И.В. Минин, О.В. Минин
НОВЫЕ ПОДХОДЫ К ПРОГРАММНО-ТЕХНИЧЕСКОЙ ЗАЩИТЕ СЕТЕВЫХ
ПУБЛИКАЦИЙ
Новосибирский государственный технический университет
krutoystas@mail.ru
Э.Р. Бейбутов
АНАЛИЗ ЗАЩИЩЕННОСТИ КОРПОРАТИВНЫХ СИСТЕМ НА ОСНОВЕ
ВЕРОЯТНОСТНЫХ СЕТЕЙ ПЕТРИ
Уфимский государственный авиационный технический университет
Россия, Уфа
flash-best@mail.ru
А.А.Бойчук, А.Е. Бердиев, В.С. Дорофеев
ОРГАНИЗАЦИЯ ЛАБОРАТОРИИ КОНТРОЛЛЕРОВ КТ-51
Омский государственный университет путей сообщения
Россия, Омск
aaboichuk@yandex.ru
Е. Н. Горошкин, В. Г. Жуков
ПРИМЕНЕНИЕ САМООРГАНИЗУЮЩИХСЯ КАРТ КОХОНЕНА ДЛЯ АНАЛИЗА
ИНЦИДЕНТОВ ИБ
Сибирский государственный аэрокосмический университет
Россия, Красноярск
vadimzhukov@mail.ru
В. В. Золотарев, Т.А. Лемешонок
КОНЦЕПЦИЯ ЯДРА СТАБИЛЬНОСТИ ИНФОРМАЦИОННО-УПРАВЛЯЮЩЕЙ
СИСТЕМЫ
Сибирский государственный аэрокосмический университет | Сибирский федеральный
университет
Россия, Красноярск | Ачинск
amida@land.ru
94
А. А. Маковецкий, Е. В. Филькин
ВЕКТОРНЫЙ АНАЛИЗ ПРОБЛЕМ ИНФОРМАЦИОННОЙ БЕЗОПАСНОСТИ
Центр правительственной связи и информации ФСО РФ по Красноярскому краю | Сибирский
государственный аэрокосмический университет
Россия, Красноярск
jeka_krsk@mail.ru
Н.С. Меньшагина
АЛГОРИТМИЗАЦИЯ ФОРМИРОВАНИЯ АВТОМАТИЗИРОВАННЫХ СРЕДСТВ
АНАЛИЗА ИНФОРМАЦИОННЫХ РИСКОВ
Сибирский федеральный университет
Россия, Красноярск
nadusha-angel@yandex.ru
В. М. Нечунаев
КЛАССИФИКАЦИЯ УГРОЗ КОРПОРАТИВНОЙ ИНФОРМАЦИОННОЙ СИСТЕМЫ
Ижевский государственный технический университет
Россия, Ижевск
nevam@mail.ru
А.А. Пономарёв
РЕШЕНИЕ ЗАДАЧИ ОЦЕНКИ ВРЕМЕНИ ПРЕОДОЛЕНИЯ СИСТЕМ ЗАЩИТЫ
ИНФОРМАЦИИ
Удмуртский государственный университет
Россия, Ижевск
ponart@mail.ru
Н.А. Федорова, Ф.А. Косолапов
АТТЕСТАЦИЯ ОБЪЕКТОВ ИНФОРМАТИЗАЦИИ ПО ТРЕБОВАНИЯМ
БЕЗОПАСНОСТИ ИНФОРМАЦИИ: ПЕРЕХОД НА ГОСТ Р ИСО/МЭК 15408-2002
ОАО «Российский сельскохозяйственный банк» | Сибирский государственный
аэрокосмический университет
Россия, Железногорск | Красноярск
theodor85@mail.ru
К. Е. Шудрова
АНАЛИЗ ВИДОВ БАЛАНСИРОВКИ НАГРУЗКИ СЕТИ
Сибирский государственный аэрокосмический университет
Россия, Красноярск
shudrova87@mail.ru
95
Федеральное агентство по образованию Российской Федерации
Сибирский государственный аэрокосмический университет
ИНФОРМАЦИОННОЕ ПИСЬМО
III научно-техническая конференция
«Актуальные проблемы безопасности информационных технологий»
(АПроБИТ-2009)
9-11 сентября 2009 г.
ПРЕДПОЛАГАЕМАЯ ПРОГРАММА КОНФЕРЕНЦИИ
Секция 1. Криптографические методы и средства защиты информации
(председатель секции О.Н. Жданов)
Секция 2. Оптимизация, моделирование и разработка систем защиты
информации (председатель секции В.В. Золотарев)
Секция 3. Подготовка специалистов в области безопасности информационных
технологий. Информационные технологии: теоретические и прикладные аспекты
(председатель секции В.Х. Ханов)
ОРГАНИЗАЦИОННЫЙ КОМИТЕТ КОНФЕРЕНЦИИ
Ковалев И.В. – д.т.н., проф., проректор по научной работе Сибирского государственного
аэрокосмического университета (председатель)
Маковецкий А.А. – зам. начальника Центра специальной связи и информации
Федеральной службы охраны РФ по Красноярскому краю (зам. председателя) – по
согласованию
Семенкин Е.С. – д.т.н., проф. Сибирского государственного аэрокосмического
университета (зам. председателя)
Золотарев В.В. – к.т.н., доцент Сибирского государственного аэрокосмического
университета (ответственный секретарь конференции)
Ханов В.Х. – к.т.н., доцент, зав. каф. безопасности информационных технологий
Сибирского государственного аэрокосмического университета
Жданов О.Н. – к.ф.-м.н., доцент Сибирского государственного аэрокосмического
университета
Жуков В.Г. – к.т.н., ст. преподаватель Сибирского государственного аэрокосмического
университета
Лубкин И.А. – инженер каф. безопасности информационных технологий Сибирского
государственного аэрокосмического университета
Чалкин Т.А. – инженер каф. безопасности информационных технологий Сибирского
государственного аэрокосмического университета
ОБЩАЯ ИНФОРМАЦИЯ
Работа конференции будет организована в форме пленарных и проблемнотематических заседаний. В качестве пленарных будут заслушаны заказные доклады по
основным направлениям работы конференции.
Рабочие языки конференции – русский и английский. При подаче материалов на
английском языке порядок публикации согласуется с оргкомитетом по электронной почте. 
96
Статьи рецензируются. По результатам закрытого рецензирования (результаты не
обсуждаются и не высылаются авторам) будут разосланы приглашения и реквизиты для
оплаты оргвзноса. При отклонении доклада из-за несоответствия тематике, нарушения
сроков или требований оформления доклады не публикуются.
Заявкой для участия в конференции являются: заполненная регистрационная форма
(прилагается ниже), текст доклада и экспертное заключение о возможности опубликования
в открытой печати. Регистрационная форма и доклады высылаются в адрес оргкомитета в
электронном виде по электронной почте; экспертное заключение высылается обязательно в
печатном виде на почтовый адрес оргкомитета.
Объем докладов не более 4 страниц в формате Microsoft Word. Доклады объемом
более 4 страниц представляются по согласованию с оргкомитетом.
Материалы должны быть отправлены по электронной почте до 4 мая 2009 года по
адресу: Золотареву В.В., amida@land.ru; продублировать по адресу: Жданову О.Н.,
ONZhdanov@mail.ru. Экспертные заключения в печатном виде должны поступить не
позднее 20 мая 2009 г.
Сборник трудов конференции будет издан к началу работы конференции и вручен
при регистрации. При заочном участии сборник высылается почтой.
ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ
В рамках конференции для участников возможно проведение экскурсии по одному
из красивейших мест России – заповеднику «Столбы». Решение о проведении экскурсии
принимается оргкомитетом исходя из количества поданных заявок. Экскурсионная
программа оплачивается отдельно, стоимость будет сообщена всем очным участникам
после прохождения рецензирования и составления программы конференции
(ориентировочно апрель-май 2009 года).
КОНТРОЛЬНЫЕ ДАТЫ
4 мая 2009 г. заканчивается прием материалов от участников конференции;
7 мая 2009 г. заканчивается предварительная экспертиза и высылаются по
электронной почте ее результаты;
15 мая 2009 г. заканчивается прием платежей от получивших положительные
рецензии участников конференции;
С 9 по 11 сентября 2009 г. работа конференции.
Адрес оргкомитета конференции:
660014, Красноярск, пр. им. газ. «Красноярский рабочий», 31, СибГАУ, ФИСУ,
кафедра безопасности информационных технологий.
Официальный сайт конференции: www.fisu.ru/aprobit
Контактные телефоны и электронная почта:
Тел. (3912) 621-847 – Секретарь Оргкомитета Золотарев Вячеслав Владимирович,
amida@land.ru
Тел. (3912) 621-847 – Жданов Олег Николаевич, ONZhdanov@mail.ru
Тел. (3912) 645-517 – Ханов Владислав Ханифович, khvkh@mail.ru
ОРГАНИЗАЦИОННЫЙ ВЗНОС
Организационный взнос за очное участие и публикацию составляет 1150 рублей. За
каждый следующий доклад тех же авторов взнос не увеличивается. Организационный взнос
оплачивается только после получения положительной рецензии на текст доклада. Сумма 
97
организационного взноса включает оплату рассылки информационных материалов,
рецензирование, оплату участия во всех мероприятиях конференции (за исключением
банкета): работа секций, кофе-брейки, оплату сборника докладов конференции, НДС.
Проживание оплачивается отдельно.
Организационный взнос за заочное участие и публикацию составляет 150 рублей за
1 страницу доклада. За каждый следующий доклад тех же авторов взнос платится в полном
размере. Организационный взнос оплачивается только после получения положительной
рецензии на текст доклада. Сумма организационного взноса включает оплату рассылки
информационных материалов, рецензирование, оплату сборника докладов конференции,
НДС.
Приложения
РЕГИСТРАЦИОННАЯ ФОРМА*
на участие в III научно-технической конференции
«Актуальные проблемы безопасности информационных технологий»
(АПроБИТ-2009)
1. Фамилия, имя, отчество
2. Организация
3. Должность (с указанием ученой степени, звания)
4. Город, страна, индекс
5. Почтовый адрес (домашний, для рассылки сборника трудов)
6. E-mail
*) Регистрационная форма высылается в адрес секретаря оргкомитета Конференции только
по электронной почте.
ТРЕБОВАНИЯ К ОФОРМЛЕНИЮ ДОКЛАДОВ
Общие требования. Тексты представляются в электронном виде.
Количество авторов одной статьи не более 5-ти. Автор имеет право публиковаться в
сборнике один раз, второй в соавторстве.
Индекс УДК предшествует названию статьи, соответствует заявленной теме и
проставляется в верхнем левом углу листа.
Текст доклада набирается в программе Microsoft Word.
Содержание. В тексте необходимо сформулировать проблемы, отразить объект
исследования, достигнутый уровень процесса исследования, новизну результатов, область их
применения, перспективы.
Доклад должен заканчиваться выводом. Текст вывода набирается отдельным абзацем
(абзацами), акцентируется новизна результатов, эффективность использования и др.
Объем текста доклада: не более 4 страниц (включая рисунки, таблицы и
библиографический список).
Параметры страницы. Формат А4 (210х297). Поля: правое и левое - 2 см., верхнее и
нижнее - 2,5 см.
Текст. Шрифт - Times New Roman, размер 12 пт. По центру набираются инициалы,
фамилия автора(ов). Ниже по центру шрифтом 12 пт печатается название статьи и через
строку (курсивом) - резюме.
Не допускается (!) набирать тексты прописными (заглавными) буквами и
жирным шрифтом, а также размещать все указанные элементы в рамках и
имитировать оформления набора, выполняемого в журнале.
98
Основной текстстатьи размещается через пробел от резюме. Межстрочный интервал
- одинарный, межбуквенный и междусловный интервал - нормальный, перенос слов не
допускается. Заголовки глав должны быть центрированы.
Абзацный отступ равен 0,5 см.
Ссылки на литературные или иные источники оформляются числами,
заключенными в квадратные скобки, например [1]. Ссылки должны быть последовательно
пронумерованы.
Примечания: 1. Смысловые пояснения основного текста или дополнения к нему
оформляются в виде внутритекстовых примечаний среди строк основного текста
специальной рубрикой, выделенной светлым курсивом: Примечание: (одно примечание),
Примечания: (несколько примечаний). Отделяются от текста точкой (если стоят в
единственном числе в подбор к тексту примечания).
Примечания должны быть последовательно пронумерованы.
При наличии гранта ссылка на грант помещается внизу полосы под строками
основного текста (подстрочное примечание).
Формулы. Простые внутристрочные и однострочные формулы должны быть набраны
без использования специальных редакторов - символами (шрифт Symbol). Специальные
сложные символы, а также многострочные формулы, которые не могут быть набраны
обычным образом, должны быть набраны в редакторе формул Microsoft Equation 3.0. Набор
математических формул в пределах всего текста должен быть единообразен:
- русские и греческие символы - прямым шрифтом,
- латинские - курсивом.
Размер обычного символа - 12 пт, крупный индекс - 10 пт, мелкий индекс - 9 пт,
крупный символ - 11 пт, мелкий символ - 10 пт.
Формулы, набранные отдельными строками, располагают по центру.
Не допускается (!) набор в основном тексте статьи простых латинских, греческих
или специальных символов в редакторе формул.
Таблицы должны быть последовательно пронумерованы. Слово «таблица»
набирается светлым курсивом с выравниванием вправо, шрифтом 11, например, Таблица 1
ниже - заглавие таблицы (набирается жирным шрифтом по центру). Если таблица имеет
большой объем, она может быть помещена на отдельной странице, а в том случае, когда она
имеет значительную ширину - на странице с альбомной ориентацией.
Иллюстрации оформляются в редакторе MS Word (за исключением схем, графиков и
диаграмм, которые невозможно интегрировать в текстовый файл. В этом случае
иллюстрации оформляются отдельным файлом в формате JPEG). Последовательно
пронумеровываются обычным шрифтом без кавычек с выравниванием по центру,
например, Рис. 1. Могут содержать подрисуночную подпись, шрифтом 11 пт. Иллюстрации
могут быть отсканированы с оригинала (в градациях серого с разрешением 300 dpi) или
выполнены средствами компьютерной графики.
Библиографический список составляется в соответствии с действующими
требованиями к библиографическому описанию и помещается после основного текста.
Текст на английском языке приводится в конце статьи и содержит в себе перевод
заглавия статьи, фамилию автора, название организации и резюме.
ПРИМЕР ОФОРМЛЕНИЯ СТАТЬИ
УДК 621.396.96.001(07)
И. А. Иванов
ДЕЦЕНТРАЛИЗОВАННЫЕ АЛГОРИТМЫ ОБРАБОТКИ ИНФОРМАЦИИ
В ДВУХКАНАЛЬНЫХ ИЗМЕРИТЕЛЬНЫХ СИСТЕМАХ1
Рассматривается децентрализованная обработка информации в двухканальных
измерительных системах при косвенном измерении для различных алгоритмов 
99
фильтрации оценки вектора состояния в измерительных пунктах и пункте обработки
информации.
Задача обеспечения высокой точности оценивания координат и параметров
траектории движения объекта может быть решена за счет применения многоканальных
измерительных систем с оптимальной централизованной обработкой.
(Продолжение текста публикуемого материала)
1
Работа выполнена при финансовой поддержке Российского фонда
фундаментальных исследований (код проекта 00 - 01 - 00912).
Библиографический список
1. Гришин, Б. П. Динамические системы, устойчивые к отказам / Б. П. Гришин, Ю.
М. Казаринов. М.: Радио и связь, 1985. – 76 с.
2. Медведев, А. В. О моделировании организационных процессов / А. В. Медведев //
Вестник Сибирской аэрокосмической академии имени академика М. Ф. Решетнева : сб.
науч. тр. / САА. Вып. 1. Красноярск, 2000. с. 173-191.
I. A. Ivanov
DECENTRALIZED ALGORITHMS OF INFORMATION PROCESSING IN TWOCHANNEL MEASURE SYSTEMS
It is covered a decentralized algorithms of information processing in two-channel measure
systems in case of an indirect measuring for different filtration algorithms of a condition vector
estimation at the reception measure station and the station of information processing.
Comparative analysis is carried out with a help of imitation modeling of synthesized algorithms.
100
Научное издание
АКТУАЛЬНЫЕ ПРОБЛЕМЫ БЕЗОПАСНОСТИ
ИНФОРМАЦИОННЫХ ТЕХНОЛОГИЙ
Материалы II Международной научно-практической конференции
(9-12 сентября 2008, г. Красноярск)
Печатается
Компьютерная верстка
Подп. в печать . .2007. Формат 70×108/8. Бумага офсетная.
Печать плоская. Усл. печ. л. . Уч.-изд. л. .
Тираж 100 экз. Заказ . С 38/7.
Редакционно-издательский отдел Сиб. гос. аэрокосмич. ун-та.
Отпечатано в отделе копировально-множительной техники
Сиб. гос. аэрокосмич. ун-та.
660014, г. Красноярск, просп. им. газ. «Красноярский рабочий», 31