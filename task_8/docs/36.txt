С. А. Нестеров
ИНФОРМАЦИОННАЯ
БЕЗОПАСНОСТЬ
УЧЕБНИК И ПРАКТИКУМ ДЛЯ СПО
Рекомендовано Учебно-методическим отделом среднего профессионального
образования в качестве учебника и практикума для студентов
образовательных учреждений среднего профессионального образования
Москва  Юрайт  2018
Книга доступна в электронной библиотечной системе
biblio-online.ru
2019
ISBN 978-5-534-07979-1
© Нестеров С. А., 2014
© Издательство Санкт-Петербургского
политехнического университета
Петра Великого, 2014
© ООО «Издательство 2018
Все права защищены. Никакая часть данной книги не может быть воспроизведена
в какой бы то ни было форме без письменного разрешения владельцев авторских прав.
Правовую поддержку издательства обеспечивает юридическая компания «Дельфи».
УДК 004.056(075.32)
ББК 32.81я723
Н56
Автор:
Нестеров Сергей Александрович — кандидат технических наук, доцент
кафедры системного анализа и управления Института компьютерных наук и тех-
нологий Санкт-Петербургского политехнического университета Петра Великого.
Рецензент:
Ефремов А. А. — кандидат физико-математических наук, доцент Санкт-
Петербургского политехнического университета Петра Великого.
Н56
Нестеров, С. А.
Информационная безопасность : учебник и практикум для СПО / С. А. Несте-
ров. — М. : Издательство Юрайт, 2018. — 321 с. — (Серия : Профессио нальное
образование).
ISBN 978-5-534-07979-1
В учебнике «Информационная безопасность» автора Нестерова С. А. хорошо
представлены защиты информации, основы криптографии, рассмотрены соот-
ветствующие описательные примеры, представлены методы расчета и статисти-
ческие данные.
На данный момент ряд данных (ГОСТы) информационной безопасности,
приводимый в учебнике, устарел. Однако это существенно не влияет на процесс
обучения анализа и управления рисками в сфере информационной безопасности,
и произошедшие изменения при необходимости могут быть учтены преподавате-
лями.
Соответствует актуальным требованиям Федерального государственного
образовательного стандарта среднего профессио нального образования и про-
фессио нальным требованиям.
Для студентов среднего профессио нального образования, а также может
быть полезно широкому кругу специалистов в области информационных техно-
логий.
УДК 004.056(075.32)
ББК 32.81я723
Книга издана в рамках совместного проекта Издательства «Юрайт» и Издатель-
ства Санкт-Петербургского политехнического университета Петра Великого.
Оригинал-макет предоставлен Издательством Санкт-Петербургского политех-
нического университета Петра Великого.
2019.
Юрайт», 2019
3
ОГЛАВЛЕНИЕ
Список принятых сокращений ........................................................................... 6
Введение ............................................................................................................... 8
1. Теоретические основы информационной безопасности ........................... 10
1.1. Базовые понятия ................................................................................... 10
1.2. Общая схема процесса обеспечения безопасности .......................... 14
1.3. Идентификация, аутентификация, управление доступом.
Защита от несанкционированного доступа .................................................... 15
1.4. Модели безопасности .......................................................................... 20
1.4.1. Модель Харрисона–Рузо–Ульмана ........................................... 22
1.4.2. Модель Белла–ЛаПадула ............................................................ 26
1.4.3. Ролевая модель безопасности .................................................... 30
1.5. Процесс построения и оценки системы обеспечения
безопасности. Стандарт ISO/IEC 15408 .......................................................... 32
2. Основы криптографии .................................................................................. 35
2.1. Основные понятия. Классификация шифров .................................... 35
2.2. Симметричные шифры ........................................................................ 43
2.2.1. Схема Фейстеля ........................................................................... 43
2.2.2. Шифр DES ................................................................................... 45
2.2.3. Шифр ГОСТ 28147-89 ................................................................ 54
2.2.4. Шифр Blowfish ............................................................................ 57
2.3. Управление криптографическими ключами для
симметричных шифров ..................................................................................... 59
2.4. Асимметричные шифры ...................................................................... 67
2.4.1. Основные понятия ...................................................................... 67
2.4.2. Распределение ключей по схеме Диффи–Хеллмана ............... 71
2.4.3. Криптографическая система RSA ............................................. 73
2.4.4. Криптографическая система Эль–Гамаля ................................ 76
2.4.5. Совместное использование симметричных и
асимметричных шифров ................................................................................... 79
2.5. Хэш-функции ........................................................................................ 79
2.5.1. Хэш-функции без ключа ............................................................ 80
2.5.2. Алгоритм SHA-1 ......................................................................... 82
4
2.5.3. Хэш-функции с ключом ............................................................. 83
2.6. Инфраструктура открытых ключей. Цифровые сертификаты ....... 85
3. Защита информации в IP-сетях .................................................................... 93
3.1. Протокол защиты электронной почты S/MIME................................ 94
3.2. Протоколы SSL и TLS ......................................................................... 96
3.3. Протоколы IPSec и распределение ключей ..................................... 100
3.3.1. Протокол AH ............................................................................. 103
3.3.2. Протокол ESP ............................................................................ 105
3.3.3. Протокол SKIP .......................................................................... 107
3.3.4. Протоколы ISAKMP и IKE ...................................................... 110
3.3.5. Протоколы IPSec и трансляция сетевых адресов .................. 115
3.4. Межсетевые экраны ........................................................................... 117
4. Анализ и управление рисками в сфере информационной
безопасности .................................................................................................... 121
4.1. Введение в проблему ......................................................................... 121
4.2. Управление рисками. Модель безопасности с полным
перекрытием .................................................................................................... 125
4.3. Управление информационной безопасностью. Стандарты
ISO/IEC 17799/27002 и 27001 ......................................................................... 129
4.3.1. ГОСТ Р ИСО/МЭК 17799:2005 «Информационная
технология. Практические правила управления информационной
безопасностью» ............................................................................................... 130
4.3.2. ГОСТ Р ИСО/МЭК 27001-2006 «Информационная
технология. Методы и средства обеспечения безопасности.
Системы менеджмента информационной безопасности.
Требования» ..................................................................................................... 141
4.4. Методики построения систем защиты информации ..................... 145
4.4.1. Модель Lifecycle Security ......................................................... 145
4.4.2. Модель многоуровневой защиты ............................................ 149
4.4.3. Методика управления рисками, предлагаемая
Майкрософт ..................................................................................................... 152
4.5. Методики и программные продукты для оценки рисков .............. 158
4.5.1. Методика CRAMM ................................................................... 158
4.5.2. Методика FRAP ......................................................................... 164
4.5.3. Методика OCTAVE .................................................................. 168
5
4.5.4. Методика RiskWatch ................................................................. 172
4.5.5. Проведение оценки рисков в соответствии с методикой
Майкрософт ..................................................................................................... 177
4.5.6. Анализ существующих подходов ............................................ 190
4.6. Выбор проекта системы обеспечения информационной
безопасности. Игровая модель конфликта «защитник-нарушитель» ........ 192
5. Практикум по информационной безопасности ........................................ 195
5.1. Управление доступом к файлам на NTFS ....................................... 195
5.2. Управление доступом в СУБД SQL SERVER................................. 202
5.3. Выявление уязвимостей с помощью Microsoft Baseline
Security analyzer ............................................................................................... 211
5.4. Использование сканеров безопасности для получения
информации о хостах в сети ........................................................................... 217
5.5. Встроенный межсетевой экран (Firewall) Windows Server
2008 ................................................................................................................... 219
5.6. Использование цифровых сертификатов ......................................... 224
5.7. Создание центра сертификации (удостоверяющего центра) в
Windows Server 2008 ....................................................................................... 229
5.8. Шифрование данных при хранении – файловая система EFS ...... 237
5.9. Использование Microsoft Security Assessment Tool ........................ 243
5.10. Лабораторный практикум «Kaspersky Security Center» ............... 247
5.10.1. Установка Kaspersky Security Center ..................................... 250
5.10.2. Развертывание антивирусной защиты: установка
агентов администрирования, проверка совместимости .............................. 263
5.10.3. Развертывание антивирусной защиты и управление
лицензионными ключами ............................................................................... 278
5.10.4. Конфигурирование сервера администрирования ................ 284
5.10.5. Работа с вирусными инцидентами ........................................ 299
5.11. Настройка протокола IPSec в Windows Server 2008 ..................... 309
Библиографический список............................................................................ 319
6
СПИСОК ПРИНЯТЫХ СОКРАЩЕНИЙ
АС — автоматизированная система (обработки информации);
БД — база данных;
ИБ — информационная безопасность;
ИС — информационная система;
ИТ — информационные технологии;
ЛК — Лаборатория Касперского;
МЭ — межсетевой экран;
НСД — несанкционированный доступ;
ОО — объект оценки;
ОС — операционная система;
ПО — программное обеспечение;
СЗИ — средство защиты информации;
СМИБ — система менеджмента информационной безопасности;
СФБ — стойкость функции безопасности;
ЦС — центр сертификации;
ЭЦП — электронная цифровая подпись;
ACL (Access Control List) — список управления доступом;
AH (Authentication Header) — протокол аутентифицирующего заго-
ловка;
CA (Certification Authority) — центр сертификации или удостоверяю-
щий центр;
CBC (Cipher Block Chaining) — сцепление блоков шифра (режим ра-
боты шифра DES);
CFB (Cipher FeedBack) — обратная связь по шифртексту (режим ра-
боты шифра DES);
CRL (Certificate Revocation List) — список отозванных сертификатов;
ECB (Electronic Code Book) — электронная кодовая книга (режим ра-
боты шифра DES);
ESP (Encapsulating Security Payload) — протокол инкапсулирующей
защиты данных;
7
ICV (Integrity Check Value) — значение контроля целостности;
MAC (Message Authentication Code) — код аутентификации сообще-
ний, имитовставка;
OFB (Output FeedBack) — обратная связь по выходу (режим работы
шифра DES);
PKI (Public Key Infrastructure) — инфраструктура открытых ключей;
SA (Security Association) — контекст защиты или ассоциация без-
опасности;
SPI (Security Parameter Index) — индекс параметров защиты.
8
ВВЕДЕНИЕ
Современный специалист в области информационных техноло-
гий должен обладать знаниями и навыками обеспечения информаци-
онной безопасности. Связано это с тем, что в информационных си-
стемах предприятий и организаций хранится и обрабатывается крити-
чески важная информация, нарушение конфиденциальности, целост-
ности или доступности которой может привести к нежелательным по-
следствиям. Поэтому вопросам обеспечения информационной без-
опасности должно уделяться внимание на всех этапах разработки и
эксплуатации информационных систем.
В данном пособии изложен материал учебной дисциплины «Ос-
новы информационной безопасности», в ходе изучения которой слу-
шатели получают базовые знания о теории защиты информации, ме-
тодах и средствах обеспечения информационной безопасности, а так-
же практические навыки организации защиты информационных си-
стем. Пособие включает в себя пять разделов.
В разделе 1 «Теоретические основы защиты информации» вво-
дятся базовые понятия, связанные с обеспечением информационной
безопасности, рассматриваются основные угрозы безопасности и ме-
ры противодействия им. Также делается обзор формальных моделей
безопасности и современных стандартов в этой области.
Раздел 2 «Основы криптографии» включает описание основных
понятий криптографии. Также изучаются наиболее распространенные
алгоритмы симметричного и асимметричного шифрования, формиро-
вания дайджестов сообщений с помощью хэш-функций, процесс со-
здания инфраструктуры открытых ключей (PKI).
В разделе 3 «Защита информации в IP-сетях» рассматриваются
протоколы криптографической защиты данных, передаваемых по те-
лекоммуникационным сетям, использующим стек протоколов TCP/IP,
использование межсетевых экранов для защиты сетей.
9
В разделе 4 рассматриваются современные методики анализа и
управления рисками, связанными с информационной безопасностью.
В разделе 5 приведены описания лабораторных работ.
В результате изучения дисциплины студенты должны освоить:
трудовые действия
• владения навыками работы с системами защиты конфиденци-
альной информации;
• методами защиты информационных систем системами крип-
тографии данных;
• навыками использования защит для отражения хакерских
атак;
необходимые знания
• различных каналов утечки информации;
• применения технических методов поиска, обнаружения
и ликвидации каналов утечки информации;
необходимые умения
• применять программные средства защиты объектов про-
граммного обеспечения;
• бороться с пиратством;
• определять подходы к выбору средств защиты;
• пользоваться программной защитой интеллектуальной соб-
ственности и конфиденциальной информации;
• использовать системы защиты конфиденциальной информа-
ции.
Пособие может использоваться в системах повышения квалифи-
кации в рамках образовательной программы дополнительного про-
фессионального образования «Информатика и вычислительная техни-
ка». Также оно может быть полезно широкому кругу специалистов в
области информационных технологий.
10
1. ТЕОРЕТИЧЕСКИЕ ОСНОВЫ ИНФОРМАЦИОННОЙ
БЕЗОПАСНОСТИ
1.1. БАЗОВЫЕ ПОНЯТИЯ
Начнем изучение дисциплины с определения ряда базовых по-
нятий.
Информация — это сведения о лицах, предметах, фактах, собы-
тиях, явлениях и процессах независимо от формы их представления.
Информация может существовать в различных формах в виде сово-
купностей некоторых знаков (символов, сигналов и т. д.) на носителях
различных типов. Она может представлять ценность для отдельных
лиц или организаций.
Защищаемая информация — информация, являющаяся предме-
том собственности и подлежащая защите в соответствии с требовани-
ями правовых документов или требованиями, устанавливаемыми соб-
ственниками информации. Собственниками информации могут быть
государство, юридическое лицо, группа физических лиц, отдельное
физическое лицо [1].
В последнее время все большие объемы информации, в том чис-
ле и критически важной для отдельных людей, организаций или госу-
дарств, хранятся, обрабатываются и передаются с использованием ав-
томатизированных систем (АС) обработки информации. Система об-
работки информации — совокупность технических средств и про-
граммного обеспечения, а также методов обработки информации и
действий персонала, необходимых для выполнения автоматизирован-
ной обработки информации [2]. Объект информатизации — сово-
купность информационных ресурсов, средств и систем обработки ин-
формации, используемых в соответствии с заданной информационной
технологией, а также средств их обеспечения, помещений или объек-
тов (зданий, сооружений, технических средств), в которых эти сред-
ства и системы установлены, или помещений и объектов, предназна-
ченных для ведения конфиденциальных переговоров.
11
В зависимости от конкретных условий может решаться задача
обеспечения комплексной безопасности объекта информатизации или
защиты отдельных ресурсов — информационных, программных и
т. д.
Информационные ресурсы (активы) — отдельные документы и
отдельные массивы документов, документы и массивы документов,
содержащиеся в информационных системах (библиотеках, архивах,
фондах, банках данных, информационных системах других видов).
Рассматривая вопросы безопасности АС, можно говорить о
наличии некоторых «желательных» состояний системы, через кото-
рые и описывается ее «защищенность» или «безопасность». Безопас-
ность является таким же свойством системы, как надежность или
производительность, и в последнее время ей уделяется все большее
внимание. Чтобы указать на причины выхода системы из безопасного
состояния, вводятся понятия «угроза» и «уязвимость».
Угроза (безопасности информации) — совокупность условий и
факторов, создающих потенциальную или реально существующую
опасность нарушения безопасности информации.
Источник угрозы безопасности информации — субъект (физи-
ческое лицо, материальный объект или физическое явление), являю-
щийся непосредственной причиной возникновения угрозы безопасно-
сти информации. По типу источника угрозы делят на связанные и не-
связанные с деятельностью человека. Примерами могут служить, со-
ответственно, удаление пользователем файла с важной информацией
и пожар в здании. Угрозы, связанные с деятельностью человека, раз-
деляют на угрозы случайного и преднамеренного характера. В по-
следнем случае источник угрозы называют нарушителем или зло-
умышленником.
Уязвимость (информационной системы) — свойство информа-
ционной системы, обуславливающее возможность реализации угроз
безопасности обрабатываемой в ней информации. Например, угроза
потери информации из-за сбоя в сети электропитания реализуется, ес-
12
ли в АС не применяются источники бесперебойного питания или
средства резервного электроснабжения (это является уязвимостью).
Если говорить об информационных ресурсах, то реализация
угрозы может привести к таким последствиям, как получение инфор-
мации людьми, которым она не предназначена, уничтожение или из-
менение информации, недоступность ресурсов для пользователей. Та-
ким образом, мы подошли к определению трех основных угроз без-
опасности.
Угроза конфиденциальности (угроза раскрытия) — это угроза,
в результате реализации которой конфиденциальная или секретная
информация становится доступной лицу, группе лиц или какой-либо
организации, которой она не предназначалась. Здесь надо пояснить
разницу между секретной и конфиденциальной информацией. В оте-
чественной литературе «секретной» обычно называют информацию,
относящуюся к разряду государственной тайны, а «конфиденциаль-
ной» — персональные данные, коммерческую тайну и т. п.
Угроза целостности — угроза, в результате реализации которой
информация становится измененной или уничтоженной. Необходимо
отметить, что и в нормальном режиме работы АС данные могут изме-
няться и удаляться. Являются ли эти действия легальными или нет,
должно определяться политикой безопасности. Политика безопасно-
сти — совокупность документированных правил, процедур, практи-
ческих приемов или руководящих принципов в области безопасности
информации, которыми руководствуется организация в своей дея-
тельности.
Угроза отказа в обслуживании (угроза доступности) — угроза,
реализация которой приведет к отказу в обслуживании клиентов АС,
несанкционированному использованию ресурсов злоумышленниками
по своему усмотрению.
Ряд авторов [3] дополняют приведенную классификацию, вводя
угрозу раскрытия параметров АС, включающей в себя подсистему
защиты. Угроза считается реализованной, если злоумышленником в
13
ходе нелегального исследования системы определены все ее уязвимо-
сти. Данную угрозу относят к разряду опосредованных: последствия
ее реализации не причиняют какой-либо ущерб обрабатываемой ин-
формации, но дают возможность для реализации первичных (непо-
средственных) угроз.
Таким образом, безопасность информации — это состояние за-
щищенности информации, при котором обеспечены ее конфиденци-
альность, доступность и целостность. Защита информации может
быть определена как деятельность, направленная на предотвращение
утечки защищаемой информации, несанкционированных и непредна-
меренных воздействий на защищаемую информацию. Выделяются
следующие направления защиты информации:
- правовая защита информации — защита информации право-
выми методами, включающая в себя разработку законодательных и
нормативных правовых документов (актов), регулирующих отноше-
ния субъектов по защите информации, применение этих документов
(актов), а также надзор и контроль за их исполнением;
- техническая защита информации — защита информации, за-
ключающаяся в обеспечении некриптографическими методами без-
опасности информации (данных), подлежащей (подлежащих) защите
в соответствии с действующим законодательством, с применением
технических, программных и программно-технических средств;
- криптографическая защита информации — защита информа-
ции с помощью ее криптографического преобразования1;
- физическая защита информации — защита информации путем
применения организационных мероприятий и совокупности средств,
создающих препятствия для проникновения или доступа неуполно-
моченных физических лиц к объекту защиты.
Защита информации осуществляется с использованием способов
и средств защиты. Способ защиты информации — порядок и правила
1
Вопросы, связанные с криптографической защитой информации, будут
более подробно рассмотрены в разделе 2.
14
применения определенных принципов и средств защиты информации.
Средство защиты информации — техническое, программное, про-
граммно-техническое средство, вещество и (или) материал, предна-
значенные или используемые для защиты информации. Отдельно вы-
деляют:
- средства контроля эффективности защиты информации;
- средства физической защиты информации;
- криптографические средства защиты информации.
1.2. ОБЩАЯ СХЕМА ПРОЦЕССА ОБЕСПЕЧЕНИЯ
БЕЗОПАСНОСТИ
Рассмотрим теперь взаимосвязь основных субъектов и объектов
обеспечения безопасности, как это предлагается в международном
стандарте ISO/IEC-15408 (в России он принят как ГОСТ Р ИСО/МЭК
15408-2002 [4]).
Безопасность связана с защитой активов от угроз. Разработчики
стандарта отмечают, что следует рассматривать все разновидности
угроз, но в сфере безопасности наибольшее внимание уделяется тем
из них, которые связаны с действиями человека. Рис. 1.1 иллюстриру-
ет взаимосвязь между высокоуровневыми понятиями безопасности.
За сохранность активов отвечают их владельцы, для которых
они имеют ценность. Существующие или предполагаемые нарушите-
ли также могут придавать значение этим активам и стремиться ис-
пользовать их вопреки интересам их владельца. Действия нарушите-
лей приводят к появлению угроз. Как уже отмечалось выше, угрозы
реализуются через имеющиеся в системе уязвимости.
Владельцы активов анализируют возможные угрозы, чтобы
определить, какие из них могут быть реализованы в отношении рас-
сматриваемой системы. В результате анализа определяются риски
(т. е. события или ситуации, которые предполагают возможность
ущерба) и проводится их анализ.
15
Рис. 1.1. Понятия безопасности и их взаимосвязь
Владельцы актива предпринимают контрмеры для уменьшения
уязвимостей и выполнения политики безопасности. Но и после введе-
ния этих контрмер могут сохраняться остаточные уязвимости и соот-
ветственно — остаточный риск.
1.3. ИДЕНТИФИКАЦИЯ, АУТЕНТИФИКАЦИЯ,
УПРАВЛЕНИЕ ДОСТУПОМ. ЗАЩИТА ОТ
НЕСАНКЦИОНИРОВАННОГО ДОСТУПА
В этом разделе будут рассмотрены вопросы, связанные с защи-
той информации от несанкционированного доступа (НСД).
Защита информации от несанкционированного доступа — за-
щита информации, направленная на предотвращение получения за-
щищаемой информации заинтересованными субъектами с нарушени-
ем установленных нормативными и правовыми документами (актами)
оценивают
хотят минимизировать
предпринимают чтобы уменьшить
которые
которые могут направлены на
быть уменьшены
могут знать
ведущие к
которые используют
которые для
повышают
порождают
для
хотят злоупотребить и/или могут нанести ущерб
ВЛАДЕЛЬЦЫ
КОНТРМЕРЫ
УЯЗВИМОСТИ
РИСК
ИСТОЧНИКИ УГРОЗ АКТИВЫ
(НАРУШИТЕЛИ)
УГРОЗЫ
16
или обладателями информации прав или правил разграничения до-
ступа к защищаемой информации.
Для защиты от НСД, как правило, используется идентификация,
аутентификация и управление доступом. В дополнение к перечислен-
ным, могут применяться и другие методы.
Идентификация — присвоение пользователям идентификаторов
(уникальных имен или меток) под которыми система «знает» пользо-
вателя. Кроме идентификации пользователей, может проводиться
идентификация групп пользователей, ресурсов АС и т. д. Идентифи-
кация нужна и для других системных задач, например, для ведения
журналов событий. В большинстве случаев идентификация сопро-
вождается аутентификацией. Аутентификация — установление под-
линности — проверка принадлежности пользователю предъявленного
им идентификатора. Например, в начале сеанса работы в АС пользо-
ватель вводит имя и пароль. На основании этих данных система про-
водит идентификацию (по имени пользователя) и аутентификацию
(сопоставляя имя пользователя и введенный пароль).
Управление доступом — метод защиты информации путем ре-
гулирования использования всех ресурсов системы.
Система идентификации и аутентификации является одним из
ключевых элементов инфраструктуры защиты от НСД любой инфор-
мационной системы. Обычно выделяют 3 группы методов аутентифи-
кации.
1. Аутентификация по наличию у пользователя уникального
объекта заданного типа. Иногда этот класс методов аутентификации
называют по-английски “I have” («у меня есть»). В качестве примера
можно привести аутентификацию с помощью смарт-карт или элек-
тронных USB-ключей.
2. Аутентификация, основанная на том, что пользователю из-
вестна некоторая конфиденциальная информация — “I know” («я
знаю»). Например, аутентификация по паролю. Более подробно па-
рольные системы рассматриваются далее в этом разделе.
17
3. Аутентификация пользователя по его собственным уникаль-
ным характеристикам — “I am” («я есть»). Эти методы также назы-
ваются биометрическими. Биометрические методы аутентификации
делят на статические и динамические.
Примеры аутентификации по статическим признакам — это
проверка отпечатка пальца, рисунка радужной оболочки глаз, геомет-
рии кисти руки, сравнение с фотографией и т. д. Достоинством этих
методов является достаточно высокая точность. Но надо отметить,
что подобные методы, как правило, требуют наличия специализиро-
ванного оборудования (например, специальных сканеров) и имеют
ограниченную область применения (например, при аутентификации
по отпечатку пальца из-за грязи на руке человек может не пройти
аутентификацию, т. е. подобные методы неприменимы на стройках и
на многих производствах).
Примеры динамической аутентификации — аутентификация по
голосу (при произнесении заранее определенной фразы или произ-
вольного текста), аутентификация по «клавиатурному почерку» (про-
веряются особенности работы пользователя на клавиатуре, такие как
время задержки при нажатии клавиш в различных сочетаниях) и т. д.
Нередко используются комбинированные схемы аутентифика-
ции, объединяющие методы разных классов. Например, двухфактор-
ная аутентификация — пользователь предъявляет системе смарт-
карту и вводит пин-код для ее активации.
Аутентификация может быть односторонней, когда одна сторо-
на аутентифицирует другую (например, сервер проверяет подлин-
ность клиентов), и двусторонней, когда стороны проводят взаимную
проверку подлинности.
Также аутентификация может быть непосредственной, когда в
процедуре аутентификации участвуют только две стороны, или с уча-
стием доверенной стороны. В последнем случае в процессе аутенти-
фикации участвуют не только стороны, проверяющие подлинность
друг друга, но и другая или другие, вспомогательные. Эту третью
18
сторону иногда называют сервером аутентификации
(англ. «authentication server») или арбитром (англ. «arbitrator»).
Парольные системы аутентификации
Наиболее распространенными на данный момент являются па-
рольные системы аутентификации. Определим ряд понятий, исполь-
зующихся при описании подобных систем.
Идентификатор пользователя — уникальная информация, поз-
воляющая различить отдельных пользователей парольной системы
(провести идентификацию). Это может быть имя учетной записи
пользователя в системе или специально генерируемые уникальные
числовые идентификаторы.
Пароль пользователя — секретная информация, известная толь-
ко пользователю (и возможно — системе), которая используется для
прохождения аутентификации. В зависимости от реализации системы,
пароль может быть одноразовым или многоразовым. При прочих рав-
ных условиях системы с одноразовыми паролями являются более
надежными. В них исключаются некоторые риски, связанные с пере-
хватом паролей — пароль действителен только на одну сессию и, ес-
ли легальный пользователь его уже задействовал, нарушитель не
сможет такой пароль повторно использовать. Но системы с многора-
зовыми паролями (в них пароль может быть использован многократ-
но) проще реализовать и дешевле поддерживать, поэтому они более
распространены.
Учетная запись пользователя — совокупность идентификатора,
пароля и, возможно, дополнительной информации, служащей для
описания пользователя. Учетные записи хранятся в базе данных па-
рольной системы.
Парольная система — это программный или программно-
аппаратный комплекс, реализующий функции идентификации и
аутентификации пользователей компьютерной системы путем про-
верки паролей. В отдельных случаях подобная система может выпол-
нять дополнительные функции, такие как генерация и распределение
19
криптографических ключей и т. д. Как правило, парольная система
включает в себя интерфейс пользователя, интерфейс администратора,
базу учетных записей, модули сопряжения с другими компонентами
подсистемы безопасности (подсистемой разграничения доступа, реги-
страции событий и т. д.).
Рассмотрим некоторые рекомендации по администрированию
парольной системы, использующей многоразовые пароли.
1. Задание минимальной длины используемых в системе паро-
лей. Это усложняет атаку путем подбора паролей. Как правило, реко-
мендуют устанавливать минимальную длину в 6–8 символов.
2. Установка требования использовать в пароле разные группы
символов — большие и маленькие буквы, цифры, специальные сим-
волы. Это также усложняет подбор.
3. Периодическая проверка администраторами безопасности ка-
чества используемых паролей путем имитации атак1, таких как под-
бор паролей «по словарю» (т. е. проверка на использование в качестве
пароля слов естественного языка и простых комбинаций символов,
таких как «1234»).
4. Установление максимального и минимального сроков жизни
пароля, использование механизма принудительной смены старых па-
ролей. При внедрении данной меры надо учитывать, что при невысо-
кой квалификации пользователей от администратора потребуются до-
полнительные усилия по разъяснению пользователям того, что «от
них требует система».
5. Ограничение числа неудачных попыток ввода пароля (блоки-
рование учетной записи после заданного числа неудачных попыток
войти в систему). Данная мера позволяет защититься от атак путем
подбора паролей. Но при необдуманном внедрении также может при-
вести к дополнительным проблемам — легальные пользователи из-за
1 Компьютерная атака — целенаправленное несанкционированное воз-
действие на информацию, на ресурс автоматизированной информационной
системы или получение несанкционированного доступа к ним с примене-
нием программных или программно-аппаратных средств.
20
ошибок ввода паролей по невнимательности могут блокировать свои
учетные записи, что потребует от администратора дополнительных
усилий.
6. Ведение журнала истории паролей, чтобы пользователи после
принудительной смены пароля не могли вновь выбрать себе старый,
возможно скомпрометированный пароль.
1.4. МОДЕЛИ БЕЗОПАСНОСТИ
Как уже отмечалось в разделе 1.1, важным этапом процесса
обеспечения безопасности АС является разработка политики безопас-
ности. Если отсутствует политика безопасности, невозможно даже
четко провести разграничение между санкционированным (легаль-
ным) доступом к информации и НСД.
Политика безопасности может быть описана формальным или
неформальным образом. Формальное описание политики безопасно-
сти производится в рамках модели безопасности. С этой точки зрения,
модель безопасности можно определить как абстрактное описание
поведения целого класса систем, без рассмотрения конкретных дета-
лей их реализации.
Большинство моделей безопасности оперируют терминами
«сущность», «субъект», «объект».
Сущность — любая именованная составляющая защищаемой
АС.
Субъект — активная сущность, которая может инициировать
запросы ресурсов и использовать их для выполнения каких-либо вы-
числительных операций. В качестве субъекта может выступать вы-
полняющаяся в системе программа или «пользователь» (не реальный
человек, а сущность АС).
Объект — пассивная сущность, используемая для хранения или
получения информации. В качестве объекта может рассматриваться,
например, файл с данными.
Обычно предполагается, что существует безошибочный способ
различения объектов и субъектов.
21
Доступ — взаимодействие между субъектом и объектом, в ре-
зультате которого производится перенос информации между ними.
Два фундаментальных типа доступа: чтение — операция, результа-
том которой является перенос информации от объекта к субъекту; за-
пись — операция, результатом которой является перенос информации
от субъекта к объекту.
Также предполагается существование монитора безопасности
объектов, т. е. такого субъекта, который будет активизироваться при
любом обращении к объектам, может различать (на базе определен-
ных правил) легальные и несанкционированные обращения и разре-
шать только легальный доступ.
В литературе выделяются три основных класса моделей полити-
ки безопасности: дискреционные, мандатные и ролевые.
Основу дискреционной (избирательной) политики безопасности
составляет дискреционное управление доступом, которое характери-
зуется следующими свойствами [3]:
- все субъекты и объекты должны быть идентифицированы;
- права доступа субъекта к объекту системы определяются на
основании некоторого внешнего по отношению к системе правила.
Правила дискреционного управления доступом часто задаются
матрицей доступов. В подобной матрице строки соответствуют субъ-
ектам системы, столбцы — объектам, элементы матрицы описывают
права доступа для соответствующей пары «субъект – объект».
Одной из наиболее известных дискреционных моделей является
модель Харрисона–Рузо–Ульмана, часто называемая матричной мо-
делью. Она будет подробно описана ниже.
Этот тип управления доступом наиболее часто используется в
операционных системах в связи с относительной простотой реализа-
ции. В этом случае правила управления доступом часто описываются
через списки управления доступом (англ. «Access Control List», сокр.
ACL). Список связан с защищаемым объектом и хранит перечень
субъектов и их разрешений на данный объект. В качестве примера
22
можно привести использование ACL для описания прав доступа поль-
зователей и групп к файлу в файловой системе NTFS в операционных
системах семейства Windows NT.
Основу мандатной политики безопасности составляет мандат-
ное управление доступом, которое подразумевает, что:
- все субъекты и объекты должны быть идентифицированы;
- задан линейно упорядоченный набор меток секретности;
- каждому объекту системы присвоена метка секретности, опре-
деляющая ценность содержащейся в нем информации — его уровень
секретности;
- каждому субъекту системы присвоена метка секретности,
определяющая уровень доверия к нему — его уровень доступа;
- решение о разрешении доступа субъекта к объекту принимает-
ся исходя из типа доступа и сравнения метки субъекта и объекта.
Чаще всего мандатную политику безопасности описывают в
терминах модели Белла–ЛаПадула, которая будет рассмотрена ниже в
данном разделе.
Управление доступом, основанное на ролях, оперирует в терми-
нах «роль», «пользователь», «операция». Вся информация рассматри-
вается как принадлежащая организации (а не пользователю, ее со-
здавшему). Решения о разрешении или отказе в доступе принимаются
на основе информации о той функции (роли), которую пользователь
выполняет в организации. Роль можно понимать как множество дей-
ствий, которые разрешены пользователю для выполнения его долж-
ностных обязанностей. Администратор описывает роли и авторизует
пользователей на выполнение данной роли. Таким образом, ролевые
модели содержат как признаки мандатных, так и признаки избира-
тельных моделей.
1.4.1. Модель Харрисона–Рузо–Ульмана
Модель Харрисона–Рузо–Ульмана (матричная модель) исполь-
зуется для анализа системы защиты, реализующей дискреционную
политику безопасности. При этом система представляется конечным
23
автоматом, функционирующим согласно определенным правилам пе-
рехода.
При использовании матричной модели доступа должны быть
определены множества субъектов S, объектов O и прав доступа R. В
качестве субъектов системы рассматриваются в первую очередь вы-
полняющиеся программы, поэтому предполагается, что SO. Усло-
вия доступа субъекта sS к объекту oO определяются матрицей до-
ступа. Пусть, например, множество прав доступа состоит из прав на
чтение (r), запись (w), выполнение (e). Запрет будет соответствовать
пустому множеству прав доступа (). Тогда матрица доступа может
быть такой, как представлено в табл. 1.1.
Т а б л и ц а 1 . 1
Пример матрицы доступа
o1 o2 o3 o4
s1 rwe  rw rw
s2 e rwe r 
Здесь мы предполагаем, что объекты o1, o2 — это исполняемые
файлы, которые после запуска становятся субъектами s1 и s2.
Могут определяться и другие наборы прав, например, {чтение,
запись, владение}.
При описании систем с большим числом объектов и субъектов
размерность матрицы доступа может получиться весьма значитель-
ной. Для ее снижения одинаковые по имеющимся правам субъекты и
сходные по значимости объекты можно организовать в группы и да-
вать разрешения группе субъектов на группу объектов.
Функционирование системы рассматривается с точки зрения
изменений в матрице доступа. Модель определяет 6 примитивных
операций: «создать»/«уничтожить» объект и субъект, «вне-
сти»/«удалить» право доступа субъекта к объекту. Их описание при-
ведено в табл. 1.2.
24
Т а б л и ц а 1 . 2
Элементарные операции модели Харрисона–Рузо–Ульмана
Операция Результат операции
«создать» субъект s’,
где s’S
S’=S{s’}; O’=O{s’};
M’[s,o]= M[s,o] для всех sS, oO;
M’[s’,o]=  для всех oO’, M’[s,s’]=  для
всех sS’
«создать» объект o’,
где o’O
S’=S; O’=O{o’};
M’[s,o]= M[s,o] для всех sS, oO;
M’[s,o’]=  для всех sS’
«уничтожить» субъект s’,
где s’S
S’=S\{s’}; O’=O\{s’};
M’[s,o]= M[s,o] для всех sS’, oO’;
«уничтожить» объект o’,
где o’O
S’=S; O’=O\{o’};
M’[s,o]= M[s,o] для всех sS’, oO’;
«внести» право r’R в
M[s’,o’], где s’S, o’O
S’=S; O’=O; M’[s,o]=M[s,o] для ss’,sS’,
oo’, oO’;
M’[s’,o’]=M[s’,o’] {r’}
«удалить» право r’R из
M[s’,o’], где s’S, o’O
S’=S; O’=O; M’[s,o]=M[s,o] для ss’,sS’,
oo’, oO’;
M’[s’,o’]=M[s’,o’]\ {r’}
Начальное состояние системы описывается множеством прав
доступа R, множеством субъектов S, множеством объектов O (SO,
мощности указанных множеств |S| = i, |O| = j, i  j), матрицей доступа
Mij (элемент матрицы, соответствующий субъекту s и объекту o обо-
значается M[s,o] и является подмножеством множества прав доступа).
Конечное состояние (после выполнения операции) — S’, O’, M’, R
(множество прав доступа не изменяется).
Из примитивных операторов могут составляться команды. Ко-
манда состоит из двух частей: условия, при котором она выполняется,
и последовательности операторов.
Общий вид команды [3]:
25
command С (x1, …, xk):
if r1 M[xs1,xo1] and … and rm M[xsm,xom] then
α1;
…
αn;
end,
где r1, …, rm R — права доступа, α1, …, αn — последовательность
примитивных операторов. При выполнении команды система перехо-
дит из состояния Q в новое состояние Q’. При этом, если хотя бы од-
но из условий команды не выполнено, Q = Q’. Для примера рассмот-
рим команду создания субъектом s файла f. Множество прав доступа
— чтение (read), запись (write), владение (own). Cчитаем, что для со-
здания файла не требуется выполнения каких-либо дополнительных
условий.
command «создать файл» (s, f)
«создать» объект f;
«внести» право владения own в M[s,f];
«внести» право на чтение read в M[s,f];
«внести» право на запись write в M[s,f];
end.
Как показали результаты анализа данной модели безопасности,
задача построения алгоритма проверки безопасности систем, реали-
зующих дискреционную политику безопасности, не может быть ре-
шена в общем случае.
Введем ряд определений.
Будем считать, что возможна утечка права r  R в результате
выполнения команды c, если при переходе системы в конечное состо-
яние Q’ выполняется примитивный оператор, вносящий r в элемент
матрицы доступов M, до этого r не содержавший.
Начальное состояние Q0 называется безопасным по отношению
к некоторому праву r, если невозможен переход системы в такое со-
стояние Q, в котором может возникнуть утечка права r.
26
Система называется монооперационной, если каждая команда
содержит только один примитивный оператор.
Для модели Харрисона–Рузо–Ульмана были доказаны следую-
щие утверждения:
1. Существует алгоритм, который проверяет, является ли исход-
ное состояние монооперационной системы безопасным для данного
права r.
2. Задача проверки безопасности произвольных систем алгорит-
мически неразрешима.
Таким образом, с одной стороны, общая модель Харрисона–
Рузо–Ульмана может выражать большое разнообразие политик дис-
креционного доступа, но при этом не существует алгоритма проверки
их безопасности. С другой стороны, можно предпочесть моноопера-
ционную систему, для которой алгоритм проверки безопасности су-
ществует, но данный класс систем является слишком узким. Напри-
мер, монооперационные системы не могут выразить политику, даю-
щую субъектам права на созданные ими объекты, т. к. не существует
одной операции, которая и создает объект, и одновременно помечает
его как принадлежащий создающему субъекту.
1.4.2. Модель Белла–ЛаПадула
Классической мандатной моделью безопасности является мо-
дель Белла–ЛаПадула. В ней для описания системы используются:
S — множество субъектов (например, множество пользователей
и программ);
O — множество объектов (например, множество файлов);
L — линейно упорядоченное множество уровней безопасности
(например, «общий доступ», «для служебного пользования», «секрет-
но», «совершенно секретно»);
F: S  O  L — функция, определяющая уровень безопасности
субъекта или объекта в данном состоянии;
V — множество состояний — множество упорядоченных пар
(F, M), где M — матрица доступа субъектов к объектам (матрица,
27
строки которой соответствуют субъектам системы, столбцы — объек-
там, элемент матрицы Mso, далее обозначаемый как M[s, o], описывает
права на доступ субъекта s к объекту o).
Система описывается начальным состоянием v0V, множеством
запросов R и функцией переходов T: (V  R)  V, описывающей пе-
реход системы из состояния в состояние под действием запроса.
В модели Белла–ЛаПадула вводится определение двух свойств
безопасности системы: безопасность по чтению и безопасность по за-
писи.
Состояние (F, M) безопасно по чтению тогда и только тогда, ко-
гда для  s  S,  o  O выполняется требование:
чтение  M[s, o]  F(s)  F(o),
т. е. субъект s может прочитать информацию из объекта o, только ес-
ли уровень секретности o меньше или равен уровню доступа s. Дан-
ное свойство безопасности также называется правилом запрета чте-
ния с верхнего уровня.
Состояние (F, M) безопасно по записи тогда и только тогда, ко-
гда для  s  S,  o  O выполняется требование:
запись  M[s, o]  F(o)  F(s),
т. е. субъект s может записать информацию в объект o, только если
уровень секретности o выше или равен уровню доступа s. Данное
свойство безопасности также называется правилом запрета записи на
нижний уровень.
Состояние системы vV безопасно тогда и только тогда, когда
оно безопасно и по чтению, и по записи.
Система (v0, R, T) безопасна тогда и только тогда, когда ее
начальное состояние v0 безопасно и любое состояние, достижимое из
v0 после выполнения конечной последовательности запросов из R,
также безопасно.
Большим достоинством модели Белла–ЛаПадула является то,
что для нее доказана основная теорема безопасности. В общем случае,
данная теорема формулируется следующим образом: если начальное
28
состояние системы безопасно, и все переходы из состояния в состоя-
ние не нарушают ограничений, сформулированных политикой без-
опасности, то любое состояние системы, достижимое за конечное
число переходов будет безопасным. В случае модели Белла–ЛаПадула
ограничения не позволяют нарушить безопасность по чтению и запи-
си.
Основная теорема безопасности для модели Белла–ЛаПадула
Система (v0, R, T) (т. е. система с начальным состоянием v0,
множеством запросов R, функцией переходов T) безопасна тогда и
только тогда, когда состояние v0 безопасно, и функция переходов T
такова, что для  vV, достижимого из состояния v0 после выполне-
ния конечной последовательности запросов из R (таких что
T(v, r) = v*, где v = (F, M) — исходное состояние, v* = (F*, M*) — со-
стояние после перехода), для  s  S,  o  O выполняются следую-
щие условия:
- если чтениеM*[s,o] и чтениеM[s,o], то F*(s)F*(o);
- если чтениеM[s,o] и F*(s)<F*(o), то чтение M*[s, o];
- если запись  M*[s, o] и запись  M[s, o], то F*(o)  F*(s);
- если запись  M[s, o] и F*(o) < F*(s), то запись  M*[s, o].
Кратко рассмотрим доказательство теоремы.
Необходимость. Если система безопасна, то начальное состоя-
ние v0 безопасно по определению. Пусть существует некоторое состо-
яние v*, достижимое из v0 путем выполнения конечного числа запро-
сов из R и полученное в результате перехода из безопасного состоя-
ния v: T(v, r) = v*. Тогда, если при таком переходе нарушено хотя бы
одно из первых двух ограничений, накладываемых теоремой на
функцию T, то состояние v* не будет безопасным по чтению. Если
функция T нарушает одно из двух последних условий теоремы, то со-
стояние v* не будет безопасным по записи. Таким образом, при нару-
шении условий теоремы система становится небезопасной. Необхо-
димость доказана.
29
Достаточность. Используем метод доказательства от против-
ного. Пусть система небезопасна. В этом случае либо начальное со-
стояние v0 небезопасно, что противоречит условиям теоремы, либо
должно существовать небезопасное состояние v*, достижимое из без-
опасного начального состояния v0 путем выполнения конечного числа
запросов из R. В этом случае обязательно будет иметь место переход
T(v, r) = v*, при котором состояние v — безопасно, а v* — нет. Однако
четыре условия теоремы делают такой переход невозможным.
Несмотря на достоинства модели Белла–ЛаПадула, при ее стро-
гой реализации в реальных АС возникает ряд проблем.
1. Завышение уровня секретности, связанное с одноуровневой
природой объектов и правилом безопасности по записи. Если субъект
с высоким уровнем доступа хочет записать что-то в объект с низким
уровнем секретности, то сначала приходится повысить уровень сек-
ретности объекта, а потом осуществлять запись. Таким образом, даже
один параграф, добавленный в большой документ субъектом с высо-
ким уровнем доступа, повышает уровень секретности всего этого до-
кумента. Если по ходу работы изменения в документ вносят субъекты
со все более высоким уровнем доступа, уровень секретности доку-
мента также постоянно растет.
2. Запись вслепую. Эта проблема возникает, когда субъект про-
изводит операцию записи в объект с более высоким уровнем безопас-
ности, чем его собственный. В этом случае после завершения опера-
ции записи субъект не сможет проверить правильность выполнения
записи при помощи контрольного чтения, так как ему это запрещено в
соответствии с правилом безопасности по чтению.
3. Проблема удаленного чтения-записи. В распределенных си-
стемах при удаленном чтении файла создаются два потока: от субъек-
та к объекту (запросы на чтение, подтверждения, прочая служебная
информация) и от объекта к субъекту (сами запрашиваемые данные).
При этом, например, если F(s) > F(o), то первый поток будет противо-
речить свойству безопасности по записи. На практике для решения
30
этой проблемы надо разделять служебные потоки (запросы, подтвер-
ждения) и собственно передачу информации.
4. Доверенные субъекты. Модель Белла–ЛаПадула не учитыва-
ет, что в реальной системе, как правило, существуют субъекты, дей-
ствующие в интересах администратора, а также системные процессы,
например, драйверы. Жесткое соблюдение правил запрета чтения с
верхнего уровня и запрета записи на нижний уровень в ряде случаев
делает невозможной работу подобных процессов. Соответственно, их
также приходится выделять.
1.4.3. Ролевая модель безопасности
Ролевая модель безопасности появилась как результат развития
дискреционной модели. Однако она обладает новыми по отношению
к исходной модели свойствами: управление доступом в ней осу-
ществляется как на основе определения прав доступа для ролей, так и
путем сопоставления ролей пользователям и установки правил, ре-
гламентирующих использование ролей во время сеансов.
В ролевой модели понятие «субъект» замещается понятиями
«пользователь» и «роль» [5]. Пользователь — человек, работающий с
системой и выполняющий определенные служебные обязанности.
Роль — это активно действующая в системе абстрактная сущность, с
которой связан набор полномочий, необходимых для выполнения
определенной деятельности. Подобное разделение хорошо отражает
особенности деятельности различных организаций, что привело к
распространению ролевых политик безопасности. При этом как один
пользователь может быть авторизован администратором на выполне-
ние одной или нескольких ролей, так и одна роль может быть сопо-
ставлена одному или нескольким пользователям.
При использовании ролевой политики управление доступом
осуществляется в две стадии:
- для каждой роли указывается набор полномочий (разрешений на
доступ к различным объектам системы);
31
- каждому пользователю сопоставляется список доступных ему
ролей.
При определении ролевой политики безопасности используются
следующие множества:
U — множество пользователей;
R — множество ролей;
P — множество полномочий (разрешений) на доступ к объек-
там системы;
S — множество сеансов работы пользователя с системой.
Как уже отмечалось выше, ролям сопоставляются полномочия, а
пользователям — роли. Это задается путем определения следующих
множеств:
PA P R — определяет множество полномочий, установлен-
ных ролям (для наглядности условно может быть представлено в виде
матрицы доступа);
UAU  R — устанавливает соответствие между пользовате-
лями и доступными им ролями.
Рассмотрим процесс определения прав доступа для пользовате-
ля, открывшего сеанс работы с системой (в рамках одного сеанса ра-
ботает только один пользователь). Правила управления доступом за-
даются с помощью следующих функций:
user : S U — для каждого сеанса sS эта функция определя-
ет пользователя, который осуществляет этот сеанс работы с системой:
user(s)  u | uU ;
roles — для каждого сеанса sS данная функция определяет
подмножество ролей, которые могут быть одновременно доступны
пользователю в ходе этого сеанса: roles(s) {r | (user(s), r ) UA} i i   ;
permissions : S P — для каждого сеанса sS эта функция за-
дает набор доступных в нем полномочий, который определяется пу-
тем объединения полномочий всех ролей, задействованных в этом се-
ансе:  ( ) ( ) { | ( , ) } r roles s i i permissions s p p r PA    .
32
В качестве критерия безопасности ролевой модели используется
следующее правило: система считается безопасной, если любой поль-
зователь системы, работающий в сеансе sS , может осуществлять
действия, требующие полномочия pP, только в том случае, если
p permissions(s) .
Существует несколько разновидностей ролевых моделей управ-
ления доступом, различающихся видом функций user, roles и
permissions, а также ограничениями, накладываемыми на множества
PAи UA.
В частности, может определяться иерархическая организация
ролей, при которой роли организуются в иерархии, и каждая роль
наследует полномочия всех подчиненных ей ролей.
Могут быть определены взаимоисключающие роли (т. е. такие
роли, которые не могут быть одновременно назначены одному поль-
зователю). Также может вводиться ограничение на одновременное
использование ролей в рамках одной сессии, количественные ограни-
чения при назначении ролей и полномочий, может производиться
группировка ролей и полномочий.
1.5. ПРОЦЕСС ПОСТРОЕНИЯ И ОЦЕНКИ СИСТЕМЫ
ОБЕСПЕЧЕНИЯ БЕЗОПАСНОСТИ. СТАНДАРТ ISO/IEC 15408
Одним из наиболее распространенных современных стандартов
в области информационной безопасности является международный
стандарт ISO/IEC 15408. Он был разработан на основе стандарта
«Общие критерии безопасности информационных технологий»
вер. 2.1. В 2002 году этот стандарт был принят в России как ГОСТ Р
ИСО/МЭК 15408-2002 «Информационная технология. Методы обес-
печения безопасности. Критерии оценки безопасности информацион-
ных технологий» [4], часто называемый в литературе «Общие крите-
рии».
Стандарт разработан таким образом, чтобы удовлетворить по-
требности трех групп специалистов: разработчиков, экспертов по сер-